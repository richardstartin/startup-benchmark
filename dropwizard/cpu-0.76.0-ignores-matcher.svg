<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1462" onload="init(evt)" viewBox="0 0 1200 1462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1445"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1445"> </text>
<g id="frames">
<g>
<title>all (1,736 samples, 100.00%)</title><rect x="10.0" y="1411.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1422.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (3 samples, 0.17%)</title><rect x="10.0" y="1395.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1406.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.12%)</title><rect x="10.0" y="1379.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1390.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.12%)</title><rect x="10.0" y="1363.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1374.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.12%)</title><rect x="10.0" y="1347.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="11.4" y="1379.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.4" y="1390.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="11.4" y="1363.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.4" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.06%)</title><rect x="11.4" y="1347.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.4" y="1358.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.06%)</title><rect x="11.4" y="1331.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.4" y="1342.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) [clone .part.191] (1 samples, 0.06%)</title><rect x="11.4" y="1315.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.4" y="1326.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="12.0" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.0" y="1406.0"></text>
</g>
<g>
<title>[no_Java_frame] (4 samples, 0.23%)</title><rect x="12.7" y="1395.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="15.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="15.4" y="1395.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="18.4" y="1406.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.06%)</title><rect x="15.4" y="1379.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="18.4" y="1390.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.52%)</title><rect x="16.1" y="1395.0" width="6.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="19.1" y="1406.0"></text>
</g>
<g>
<title>Interpreter (6 samples, 0.35%)</title><rect x="16.1" y="1379.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="19.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="20.2" y="1379.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.2" y="1390.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.12%)</title><rect x="20.2" y="1363.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="23.2" y="1374.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.12%)</title><rect x="20.2" y="1347.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="23.2" y="1358.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.12%)</title><rect x="20.2" y="1331.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="23.2" y="1342.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.06%)</title><rect x="21.6" y="1379.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="24.6" y="1390.0"></text>
</g>
<g>
<title>__GI__IO_default_xsputn (1 samples, 0.06%)</title><rect x="22.2" y="1395.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="25.2" y="1406.0"></text>
</g>
<g>
<title>__mempcpy_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="22.9" y="1395.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="25.9" y="1406.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.06%)</title><rect x="23.6" y="1395.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="26.6" y="1406.0"></text>
</g>
<g>
<title>__strchrnul_avx2 (1 samples, 0.06%)</title><rect x="23.6" y="1379.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="26.6" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="24.3" y="1395.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.3" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="24.3" y="1379.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.3" y="1390.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="24.3" y="1363.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="27.3" y="1374.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="24.3" y="1347.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="27.3" y="1358.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="24.3" y="1331.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="27.3" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/benchmark/LoadClasses.main (664 samples, 38.25%)</title><rect x="25.0" y="1395.0" width="451.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.0" y="1406.0">datadog/trace/benchmark/LoadClasses.main</text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="26.3" y="1379.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="29.3" y="1390.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="26.3" y="1363.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="29.3" y="1374.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="26.3" y="1347.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.3" y="1358.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="26.3" y="1331.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.forName (659 samples, 37.96%)</title><rect x="27.0" y="1379.0" width="447.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="1390.0">java/lang/Class.forName</text>
</g>
<g>
<title>java/lang/Class.forName0 (659 samples, 37.96%)</title><rect x="27.0" y="1363.0" width="447.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.0" y="1374.0">java/lang/Class.forName0</text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (10 samples, 0.58%)</title><rect x="27.0" y="1347.0" width="6.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="30.0" y="1358.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="27.0" y="1331.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.0" y="1342.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (9 samples, 0.52%)</title><rect x="27.7" y="1331.0" width="6.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="30.7" y="1342.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (2 samples, 0.12%)</title><rect x="27.7" y="1315.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.7" y="1326.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(int, unsigned char*, int, unsigned int, bool, Thread*) (1 samples, 0.06%)</title><rect x="27.7" y="1299.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="30.7" y="1310.0"></text>
</g>
<g>
<title>BasicHashtable&lt;(MemoryType)9&gt;::new_entry(unsigned int) (1 samples, 0.06%)</title><rect x="27.7" y="1283.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="30.7" y="1294.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="28.4" y="1299.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.4" y="1310.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="29.0" y="1315.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.0" y="1326.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (6 samples, 0.35%)</title><rect x="29.7" y="1315.0" width="4.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="32.7" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (6 samples, 0.35%)</title><rect x="29.7" y="1299.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.7" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (6 samples, 0.35%)</title><rect x="29.7" y="1283.0" width="4.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.7" y="1294.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (2 samples, 0.12%)</title><rect x="29.7" y="1267.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.7" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (4 samples, 0.23%)</title><rect x="31.1" y="1267.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="34.1" y="1278.0"></text>
</g>
<g>
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Handle, Thread*) (3 samples, 0.17%)</title><rect x="31.1" y="1251.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.1" y="1262.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="31.1" y="1235.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.1" y="1246.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="31.1" y="1219.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="34.1" y="1230.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="31.1" y="1203.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.1" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="31.1" y="1187.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="34.1" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="31.1" y="1171.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="34.1" y="1182.0"></text>
</g>
<g>
<title>Method::can_be_statically_bound() const (1 samples, 0.06%)</title><rect x="31.8" y="1235.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="34.8" y="1246.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="32.4" y="1235.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="35.4" y="1246.0"></text>
</g>
<g>
<title>java_lang_String::char_converter(Handle, unsigned short, unsigned short, Thread*) (1 samples, 0.06%)</title><rect x="33.1" y="1251.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="36.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (649 samples, 37.38%)</title><rect x="33.8" y="1347.0" width="441.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.8" y="1358.0">java/lang/ClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (649 samples, 37.38%)</title><rect x="33.8" y="1331.0" width="441.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.8" y="1342.0">jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (649 samples, 37.38%)</title><rect x="33.8" y="1315.0" width="441.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.8" y="1326.0">jdk/internal/loader/BuiltinClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (649 samples, 37.38%)</title><rect x="33.8" y="1299.0" width="441.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.8" y="1310.0">jdk/internal/loader/BuiltinClassLoader.loadClassOrNull</text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (4 samples, 0.23%)</title><rect x="33.8" y="1283.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkName (1 samples, 0.06%)</title><rect x="33.8" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="33.8" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="33.8" y="1235.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (3 samples, 0.17%)</title><rect x="34.5" y="1267.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.5" y="1278.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass (3 samples, 0.17%)</title><rect x="34.5" y="1251.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="37.5" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::query_lock_ownership(JavaThread*, Handle) (1 samples, 0.06%)</title><rect x="34.5" y="1235.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="37.5" y="1246.0"></text>
</g>
<g>
<title>java_lang_String::as_utf8_string(oopDesc*) (1 samples, 0.06%)</title><rect x="35.1" y="1235.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.1" y="1246.0"></text>
</g>
<g>
<title>char* UNICODE::as_utf8&lt;signed char&gt;(signed char*, int&amp;) (1 samples, 0.06%)</title><rect x="35.1" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="38.1" y="1230.0"></text>
</g>
<g>
<title>java_lang_String::char_converter(Handle, unsigned short, unsigned short, Thread*) (1 samples, 0.06%)</title><rect x="35.8" y="1235.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="38.8" y="1246.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="35.8" y="1219.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.8" y="1230.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="35.8" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.8" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="35.8" y="1187.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="38.8" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="35.8" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (4 samples, 0.23%)</title><rect x="36.5" y="1283.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (4 samples, 0.23%)</title><rect x="36.5" y="1267.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (4 samples, 0.23%)</title><rect x="36.5" y="1251.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (2 samples, 0.12%)</title><rect x="37.9" y="1235.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (2 samples, 0.12%)</title><rect x="37.9" y="1219.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.casTabAt (1 samples, 0.06%)</title><rect x="38.5" y="1203.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (635 samples, 36.58%)</title><rect x="39.2" y="1283.0" width="431.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.2" y="1294.0">jdk/internal/loader/BuiltinClassLoader.findClassOnClassPath..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (625 samples, 36.00%)</title><rect x="39.2" y="1267.0" width="424.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.2" y="1278.0">jdk/internal/loader/BuiltinClassLoader.defineClass</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (583 samples, 33.58%)</title><rect x="39.2" y="1251.0" width="396.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.2" y="1262.0">java/security/SecureClassLoader.defineClass</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (581 samples, 33.47%)</title><rect x="39.2" y="1235.0" width="394.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.2" y="1246.0">java/lang/ClassLoader.defineClass</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (572 samples, 32.95%)</title><rect x="39.2" y="1219.0" width="388.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.2" y="1230.0">java/lang/ClassLoader.defineClass1</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (83 samples, 4.78%)</title><rect x="39.2" y="1203.0" width="56.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="42.2" y="1214.0">Java_j..</text>
</g>
<g>
<title>JVM_DefineClassWithSource (81 samples, 4.67%)</title><rect x="39.9" y="1187.0" width="55.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="42.9" y="1198.0">JVM_D..</text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (81 samples, 4.67%)</title><rect x="39.9" y="1171.0" width="55.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="42.9" y="1182.0">jvm_d..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="40.6" y="1155.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="43.6" y="1166.0"></text>
</g>
<g>
<title>PerfClassTraceTime::~PerfClassTraceTime() (1 samples, 0.06%)</title><rect x="41.3" y="1155.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="44.3" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (78 samples, 4.49%)</title><rect x="41.9" y="1155.0" width="53.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="44.9" y="1166.0">Syste..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (76 samples, 4.38%)</title><rect x="41.9" y="1139.0" width="51.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="44.9" y="1150.0">Klass..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (55 samples, 3.17%)</title><rect x="41.9" y="1123.0" width="37.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="44.9" y="1134.0">Cla..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="41.9" y="1107.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="44.9" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (54 samples, 3.11%)</title><rect x="42.6" y="1107.0" width="36.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="45.6" y="1118.0">Cla..</text>
</g>
<g>
<title>ClassFileParser::parse_classfile_attributes(ClassFileStream const*, ConstantPool*, ClassFileParser::ClassAnnotationCollector*, Thread*) (2 samples, 0.12%)</title><rect x="42.6" y="1091.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="45.6" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_inner_classes_attribute(ClassFileStream const*, ConstantPool const*, unsigned char const*, bool, unsigned short, unsigned short, Thread*) (2 samples, 0.12%)</title><rect x="42.6" y="1075.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="45.6" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_modifiers(int, Thread*) const (1 samples, 0.06%)</title><rect x="42.6" y="1059.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="45.6" y="1070.0"></text>
</g>
<g>
<title>ConstantPool::klass_name_at(int) const (1 samples, 0.06%)</title><rect x="43.3" y="1059.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="46.3" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (9 samples, 0.52%)</title><rect x="44.0" y="1091.0" width="6.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="47.0" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (2 samples, 0.12%)</title><rect x="44.7" y="1075.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="47.7" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="46.0" y="1075.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="49.0" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (4 samples, 0.23%)</title><rect x="46.7" y="1075.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="49.7" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (2 samples, 0.12%)</title><rect x="47.4" y="1059.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="50.4" y="1070.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.06%)</title><rect x="48.7" y="1059.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="51.7" y="1070.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.06%)</title><rect x="49.4" y="1075.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="52.4" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (25 samples, 1.44%)</title><rect x="50.1" y="1091.0" width="17.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="53.1" y="1102.0"></text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (3 samples, 0.17%)</title><rect x="50.8" y="1075.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="53.8" y="1086.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (3 samples, 0.17%)</title><rect x="50.8" y="1059.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="53.8" y="1070.0"></text>
</g>
<g>
<title>Symbol::Symbol(unsigned char const*, int, int) (2 samples, 0.12%)</title><rect x="51.5" y="1043.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="54.5" y="1054.0"></text>
</g>
<g>
<title>os::random() (1 samples, 0.06%)</title><rect x="52.1" y="1027.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="55.1" y="1038.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (18 samples, 1.04%)</title><rect x="52.8" y="1075.0" width="12.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="55.8" y="1086.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (3 samples, 0.17%)</title><rect x="65.1" y="1075.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="68.1" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (15 samples, 0.86%)</title><rect x="67.1" y="1091.0" width="10.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="70.1" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (15 samples, 0.86%)</title><rect x="67.1" y="1075.0" width="10.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="70.1" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::copy_localvariable_table(ConstMethod const*, int, unsigned short*, void const**, int, unsigned short*, void const**, Thread*) (1 samples, 0.06%)</title><rect x="70.5" y="1059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="73.5" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.06%)</title><rect x="71.2" y="1059.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="74.2" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.06%)</title><rect x="71.9" y="1059.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="74.9" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (3 samples, 0.17%)</title><rect x="72.5" y="1059.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="75.5" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (2 samples, 0.12%)</title><rect x="72.5" y="1043.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="75.5" y="1054.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.06%)</title><rect x="73.9" y="1043.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="76.9" y="1054.0"></text>
</g>
<g>
<title>ConstMethod::copy_stackmap_data(ClassLoaderData*, unsigned char*, int, Thread*) (1 samples, 0.06%)</title><rect x="74.6" y="1059.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="77.6" y="1070.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.06%)</title><rect x="74.6" y="1043.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="77.6" y="1054.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.06%)</title><rect x="74.6" y="1027.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="77.6" y="1038.0"></text>
</g>
<g>
<title>MetaspaceUtils::inc_used(Metaspace::MetadataType, unsigned long) (1 samples, 0.06%)</title><rect x="74.6" y="1011.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="77.6" y="1022.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (2 samples, 0.12%)</title><rect x="75.3" y="1059.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="78.3" y="1070.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (2 samples, 0.12%)</title><rect x="75.3" y="1043.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="78.3" y="1054.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="75.9" y="1027.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.9" y="1038.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.06%)</title><rect x="76.6" y="1059.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="79.6" y="1070.0"></text>
</g>
<g>
<title>ConstantPool::allocate(ClassLoaderData*, int, Thread*) (1 samples, 0.06%)</title><rect x="77.3" y="1091.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="80.3" y="1102.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.06%)</title><rect x="77.3" y="1075.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="80.3" y="1086.0"></text>
</g>
<g>
<title>MetaspaceUtils::inc_used(Metaspace::MetadataType, unsigned long) (1 samples, 0.06%)</title><rect x="77.3" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="80.3" y="1070.0"></text>
</g>
<g>
<title>ConstantPool::klass_name_at(int) const (1 samples, 0.06%)</title><rect x="78.0" y="1091.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="81.0" y="1102.0"></text>
</g>
<g>
<title>ConstantPool::signature_ref_index_at(int) (1 samples, 0.06%)</title><rect x="78.7" y="1091.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="81.7" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (7 samples, 0.40%)</title><rect x="79.3" y="1123.0" width="4.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="82.3" y="1134.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (6 samples, 0.35%)</title><rect x="79.3" y="1107.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="82.3" y="1118.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (5 samples, 0.29%)</title><rect x="79.3" y="1091.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="82.3" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="81.4" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="84.4" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="82.1" y="1075.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="85.1" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="82.1" y="1059.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="85.1" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="82.7" y="1091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="85.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="82.7" y="1075.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="85.7" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::copy_method_ordering(GrowableArray&lt;int&gt; const*, Thread*) (1 samples, 0.06%)</title><rect x="83.4" y="1107.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="86.4" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (4 samples, 0.23%)</title><rect x="84.1" y="1123.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="87.1" y="1134.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, bool) (1 samples, 0.06%)</title><rect x="84.1" y="1107.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="87.1" y="1118.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;false, Method*, int (*)(Method*, Method*)&gt;(Method**, unsigned long, int (*)(Method*, Method*)) (1 samples, 0.06%)</title><rect x="84.1" y="1091.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="87.1" y="1102.0"></text>
</g>
<g>
<title>klassItable::compute_itable_size(Array&lt;Klass*&gt;*) (1 samples, 0.06%)</title><rect x="84.8" y="1107.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="87.8" y="1118.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;Klass*&gt;*, Thread*) (2 samples, 0.12%)</title><rect x="85.4" y="1107.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="88.4" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="85.4" y="1091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="88.4" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="85.4" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="88.4" y="1086.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.06%)</title><rect x="85.4" y="1059.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="88.4" y="1070.0"></text>
</g>
<g>
<title>klassVtable::add_new_mirandas_to_lists(GrowableArray&lt;Method*&gt;*, GrowableArray&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.06%)</title><rect x="86.1" y="1091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="89.1" y="1102.0"></text>
</g>
<g>
<title>klassVtable::is_miranda(Method*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) [clone .part.29] (1 samples, 0.06%)</title><rect x="86.1" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.1" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::deallocate_interfaces(ClassLoaderData*, Klass const*, Array&lt;Klass*&gt;*, Array&lt;Klass*&gt;*) (1 samples, 0.06%)</title><rect x="86.8" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.8" y="1134.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (9 samples, 0.52%)</title><rect x="87.5" y="1123.0" width="6.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="90.5" y="1134.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (9 samples, 0.52%)</title><rect x="87.5" y="1107.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="90.5" y="1118.0"></text>
</g>
<g>
<title>JvmtiJavaThreadEventTransition::JvmtiJavaThreadEventTransition(JavaThread*) (1 samples, 0.06%)</title><rect x="87.5" y="1091.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="90.5" y="1102.0"></text>
</g>
<g>
<title>JvmtiJavaThreadEventTransition::~JvmtiJavaThreadEventTransition() (1 samples, 0.06%)</title><rect x="88.2" y="1091.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="91.2" y="1102.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (7 samples, 0.40%)</title><rect x="88.8" y="1091.0" width="4.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="91.8" y="1102.0"></text>
</g>
<g>
<title>transformClassFile (7 samples, 0.40%)</title><rect x="88.8" y="1075.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="91.8" y="1086.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="88.8" y="1059.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="91.8" y="1070.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (1 samples, 0.06%)</title><rect x="89.5" y="1059.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="92.5" y="1070.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.06%)</title><rect x="90.2" y="1059.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="93.2" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="90.2" y="1043.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="93.2" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="90.2" y="1027.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="93.2" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="90.2" y="1011.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="93.2" y="1022.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="90.2" y="995.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="93.2" y="1006.0"></text>
</g>
<g>
<title>jni_NewStringUTF (1 samples, 0.06%)</title><rect x="90.9" y="1059.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="93.9" y="1070.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_str(char const*, Thread*) (1 samples, 0.06%)</title><rect x="90.9" y="1043.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="93.9" y="1054.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) [clone .part.102] (1 samples, 0.06%)</title><rect x="90.9" y="1027.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="93.9" y="1038.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="90.9" y="1011.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="93.9" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="90.9" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="93.9" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="90.9" y="979.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="93.9" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="90.9" y="963.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="93.9" y="974.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="90.9" y="947.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="93.9" y="958.0"></text>
</g>
<g>
<title>jvmti_GetNamedModule (2 samples, 0.12%)</title><rect x="91.6" y="1059.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="94.6" y="1070.0"></text>
</g>
<g>
<title>JvmtiEnv::GetNamedModule(_jobject*, char const*, _jobject**) (1 samples, 0.06%)</title><rect x="92.2" y="1043.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="95.2" y="1054.0"></text>
</g>
<g>
<title>Modules::get_named_module(Handle, char const*, Thread*) (1 samples, 0.06%)</title><rect x="92.2" y="1027.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="95.2" y="1038.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="92.2" y="1011.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="95.2" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="92.2" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="95.2" y="1006.0"></text>
</g>
<g>
<title>tryToAcquireReentrancyToken (1 samples, 0.06%)</title><rect x="92.9" y="1059.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="95.9" y="1070.0"></text>
</g>
<g>
<title>confirmingTLSSet (1 samples, 0.06%)</title><rect x="92.9" y="1043.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="95.9" y="1054.0"></text>
</g>
<g>
<title>jvmti_SetThreadLocalStorage (1 samples, 0.06%)</title><rect x="92.9" y="1027.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="95.9" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="92.9" y="1011.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="95.9" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (2 samples, 0.12%)</title><rect x="93.6" y="1139.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="96.6" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (2 samples, 0.12%)</title><rect x="93.6" y="1123.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="96.6" y="1134.0"></text>
</g>
<g>
<title>BiasedLocking::enabled() (1 samples, 0.06%)</title><rect x="93.6" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="96.6" y="1118.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="94.3" y="1107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="97.3" y="1118.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="94.3" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="97.3" y="1102.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="95.0" y="1187.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="98.0" y="1198.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.12%)</title><rect x="95.6" y="1203.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="98.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.addClass (2 samples, 0.12%)</title><rect x="97.0" y="1203.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.0" y="1214.0"></text>
</g>
<g>
<title>java/util/Vector.addElement (1 samples, 0.06%)</title><rect x="97.7" y="1187.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.7" y="1198.0"></text>
</g>
<g>
<title>java/util/Vector.add (1 samples, 0.06%)</title><rect x="97.7" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (62 samples, 3.57%)</title><rect x="98.4" y="1203.0" width="42.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.4" y="1214.0">java..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (62 samples, 3.57%)</title><rect x="98.4" y="1187.0" width="42.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.4" y="1198.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (62 samples, 3.57%)</title><rect x="98.4" y="1171.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.4" y="1182.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (62 samples, 3.57%)</title><rect x="98.4" y="1155.0" width="42.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.4" y="1166.0">jdk/..</text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 0.06%)</title><rect x="98.4" y="1139.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="98.4" y="1123.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.06%)</title><rect x="98.4" y="1107.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (59 samples, 3.40%)</title><rect x="99.0" y="1139.0" width="40.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.0" y="1150.0">jdk..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (59 samples, 3.40%)</title><rect x="99.0" y="1123.0" width="40.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.0" y="1134.0">jdk..</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (55 samples, 3.17%)</title><rect x="99.0" y="1107.0" width="37.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.0" y="1118.0">jav..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (55 samples, 3.17%)</title><rect x="99.0" y="1091.0" width="37.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.0" y="1102.0">jav..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (52 samples, 3.00%)</title><rect x="99.0" y="1075.0" width="35.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.0" y="1086.0">jav..</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (16 samples, 0.92%)</title><rect x="99.0" y="1059.0" width="10.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="102.0" y="1070.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (15 samples, 0.86%)</title><rect x="99.0" y="1043.0" width="10.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="102.0" y="1054.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (15 samples, 0.86%)</title><rect x="99.0" y="1027.0" width="10.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="102.0" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (15 samples, 0.86%)</title><rect x="99.0" y="1011.0" width="10.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="102.0" y="1022.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (15 samples, 0.86%)</title><rect x="99.0" y="995.0" width="10.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.0" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (12 samples, 0.69%)</title><rect x="99.0" y="979.0" width="8.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="102.0" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (12 samples, 0.69%)</title><rect x="99.0" y="963.0" width="8.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="102.0" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_attributes(ClassFileStream const*, ConstantPool*, ClassFileParser::ClassAnnotationCollector*, Thread*) (1 samples, 0.06%)</title><rect x="99.0" y="947.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="102.0" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="99.7" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.7" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="99.7" y="931.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="102.7" y="942.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.06%)</title><rect x="99.7" y="915.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="102.7" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (6 samples, 0.35%)</title><rect x="100.4" y="947.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="103.4" y="958.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (3 samples, 0.17%)</title><rect x="101.8" y="931.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="104.8" y="942.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.06%)</title><rect x="103.8" y="931.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="106.8" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (3 samples, 0.17%)</title><rect x="104.5" y="947.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.5" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (3 samples, 0.17%)</title><rect x="104.5" y="931.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="107.5" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (2 samples, 0.12%)</title><rect x="104.5" y="915.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="107.5" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.06%)</title><rect x="105.2" y="899.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="108.2" y="910.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="105.8" y="915.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="108.8" y="926.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="105.8" y="899.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="108.8" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="106.5" y="947.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.5" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="107.2" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="110.2" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="107.2" y="963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.2" y="974.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.06%)</title><rect x="107.2" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="110.2" y="958.0"></text>
</g>
<g>
<title>metaspace::SmallBlocks::total_size() const (1 samples, 0.06%)</title><rect x="107.2" y="931.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="110.2" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="107.9" y="979.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.9" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="107.9" y="963.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="110.9" y="974.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_remove(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Thread*) (1 samples, 0.06%)</title><rect x="107.9" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="110.9" y="958.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.06%)</title><rect x="108.6" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="111.6" y="990.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.06%)</title><rect x="108.6" y="963.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="111.6" y="974.0"></text>
</g>
<g>
<title>JvmtiJavaThreadEventTransition::~JvmtiJavaThreadEventTransition() (1 samples, 0.06%)</title><rect x="108.6" y="947.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="111.6" y="958.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.06%)</title><rect x="109.2" y="1043.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="112.2" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.06%)</title><rect x="109.2" y="1027.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="112.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (11 samples, 0.63%)</title><rect x="109.9" y="1059.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (11 samples, 0.63%)</title><rect x="109.9" y="1043.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (11 samples, 0.63%)</title><rect x="109.9" y="1027.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (11 samples, 0.63%)</title><rect x="109.9" y="1011.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (11 samples, 0.63%)</title><rect x="109.9" y="995.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (11 samples, 0.63%)</title><rect x="109.9" y="979.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.9" y="990.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (11 samples, 0.63%)</title><rect x="109.9" y="963.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.9" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (11 samples, 0.63%)</title><rect x="109.9" y="947.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.9" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (11 samples, 0.63%)</title><rect x="109.9" y="931.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.9" y="942.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="109.9" y="915.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="112.9" y="926.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="109.9" y="899.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="112.9" y="910.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="883.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="112.9" y="894.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="867.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="112.9" y="878.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="851.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="112.9" y="862.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="835.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="112.9" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="109.9" y="819.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="112.9" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="803.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="112.9" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="112.9" y="798.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="771.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="112.9" y="782.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="109.9" y="755.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="112.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (5 samples, 0.29%)</title><rect x="110.6" y="915.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (5 samples, 0.29%)</title><rect x="110.6" y="899.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (5 samples, 0.29%)</title><rect x="110.6" y="883.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (5 samples, 0.29%)</title><rect x="110.6" y="867.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (5 samples, 0.29%)</title><rect x="110.6" y="851.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (4 samples, 0.23%)</title><rect x="110.6" y="835.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.6" y="846.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (4 samples, 0.23%)</title><rect x="110.6" y="819.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.6" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (4 samples, 0.23%)</title><rect x="110.6" y="803.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.6" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (4 samples, 0.23%)</title><rect x="110.6" y="787.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.6" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="110.6" y="771.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="113.6" y="782.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="110.6" y="755.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="113.6" y="766.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="110.6" y="739.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="113.6" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="110.6" y="723.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.6" y="734.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="110.6" y="707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.6" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="110.6" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="113.6" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="110.6" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.6" y="686.0"></text>
</g>
<g>
<title>ConstantPool::allocate(ClassLoaderData*, int, Thread*) (1 samples, 0.06%)</title><rect x="110.6" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.6" y="670.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.06%)</title><rect x="110.6" y="643.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.6" y="654.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.06%)</title><rect x="110.6" y="627.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.6" y="638.0"></text>
</g>
<g>
<title>metaspace::BlockFreelist::get_block(unsigned long) (1 samples, 0.06%)</title><rect x="110.6" y="611.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="113.6" y="622.0"></text>
</g>
<g>
<title>metaspace::BlockFreelist::return_block(MetaWord*, unsigned long) (1 samples, 0.06%)</title><rect x="110.6" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="113.6" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="111.3" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="111.3" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="111.3" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="111.3" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="111.3" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="111.3" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.3" y="702.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="111.3" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.3" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="111.3" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="114.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="111.3" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="111.3" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="111.3" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="111.3" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="111.3" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="111.3" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="111.3" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.3" y="558.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="111.3" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.3" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="111.3" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="111.3" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.3" y="510.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="111.3" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.3" y="494.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="111.3" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.3" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="111.3" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.3" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="111.3" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.3" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="111.3" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.3" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="111.3" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.3" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="111.3" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.3" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="111.3" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.3" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="111.3" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.3" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="111.3" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.3" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="111.3" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.3" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.forRedefinition (1 samples, 0.06%)</title><rect x="111.3" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.3" y="318.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="112.0" y="771.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.0" y="782.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="112.0" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="112.0" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="112.0" y="723.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.0" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="112.0" y="707.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="112.0" y="691.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="112.0" y="675.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="112.0" y="659.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="112.0" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="112.0" y="627.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onIgnored (1 samples, 0.06%)</title><rect x="112.0" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.06%)</title><rect x="112.0" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="112.6" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="112.6" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="112.6" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="112.6" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.6" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="112.6" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.6" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="112.6" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.6" y="542.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="112.6" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.6" y="526.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.06%)</title><rect x="112.6" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.06%)</title><rect x="112.6" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="112.6" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getType (1 samples, 0.06%)</title><rect x="112.6" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="112.6" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.06%)</title><rect x="112.6" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="113.3" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="113.3" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.06%)</title><rect x="113.3" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.3" y="814.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="113.3" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.3" y="798.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="113.3" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="113.3" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.3" y="766.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (5 samples, 0.29%)</title><rect x="114.0" y="915.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.0" y="926.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (5 samples, 0.29%)</title><rect x="114.0" y="899.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (5 samples, 0.29%)</title><rect x="114.0" y="883.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (5 samples, 0.29%)</title><rect x="114.0" y="867.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.0" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.29%)</title><rect x="114.0" y="851.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (5 samples, 0.29%)</title><rect x="114.0" y="835.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (5 samples, 0.29%)</title><rect x="114.0" y="819.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (5 samples, 0.29%)</title><rect x="114.0" y="803.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (5 samples, 0.29%)</title><rect x="114.0" y="787.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (5 samples, 0.29%)</title><rect x="114.0" y="771.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.06%)</title><rect x="114.0" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.resolve (1 samples, 0.06%)</title><rect x="114.0" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="114.0" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.&lt;init&gt; (1 samples, 0.06%)</title><rect x="114.0" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="114.0" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="114.0" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (4 samples, 0.23%)</title><rect x="114.7" y="755.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (4 samples, 0.23%)</title><rect x="114.7" y="739.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (4 samples, 0.23%)</title><rect x="114.7" y="723.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.7" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (3 samples, 0.17%)</title><rect x="114.7" y="707.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.7" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="114.7" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.7" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="114.7" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.7" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="114.7" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.7" y="670.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="114.7" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.7" y="654.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="114.7" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.7" y="638.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.newLookupKey (1 samples, 0.06%)</title><rect x="114.7" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.7" y="622.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="114.7" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.12%)</title><rect x="115.4" y="691.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.4" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="675.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.4" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="659.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.4" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.4" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="627.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.12%)</title><rect x="115.4" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="595.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="563.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="115.4" y="547.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.4" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.12%)</title><rect x="115.4" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.4" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.get (1 samples, 0.06%)</title><rect x="115.4" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.4" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.get (1 samples, 0.06%)</title><rect x="115.4" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="116.0" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.0" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="116.0" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.0" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="116.0" y="483.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.0" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="116.0" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.0" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="116.0" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.0" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="116.0" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.0" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="116.0" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.0" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="116.0" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.0" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (1 samples, 0.06%)</title><rect x="116.0" y="387.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="116.0" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="116.0" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.0" y="366.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="116.7" y="707.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="119.7" y="718.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (25 samples, 1.44%)</title><rect x="117.4" y="1059.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.4" y="1070.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (25 samples, 1.44%)</title><rect x="117.4" y="1043.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (25 samples, 1.44%)</title><rect x="117.4" y="1027.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (25 samples, 1.44%)</title><rect x="117.4" y="1011.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.4" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 1.38%)</title><rect x="117.4" y="995.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (24 samples, 1.38%)</title><rect x="117.4" y="979.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (24 samples, 1.38%)</title><rect x="117.4" y="963.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (24 samples, 1.38%)</title><rect x="117.4" y="947.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (24 samples, 1.38%)</title><rect x="117.4" y="931.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (24 samples, 1.38%)</title><rect x="117.4" y="915.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (15 samples, 0.86%)</title><rect x="117.4" y="899.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.4" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (2 samples, 0.12%)</title><rect x="117.4" y="883.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.4" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (2 samples, 0.12%)</title><rect x="117.4" y="867.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (2 samples, 0.12%)</title><rect x="117.4" y="851.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.12%)</title><rect x="117.4" y="835.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.4" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.12%)</title><rect x="117.4" y="819.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.4" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (2 samples, 0.12%)</title><rect x="117.4" y="803.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.4" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (2 samples, 0.12%)</title><rect x="117.4" y="787.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.4" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.12%)</title><rect x="117.4" y="771.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.4" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.12%)</title><rect x="117.4" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.traverseHierarchy (2 samples, 0.12%)</title><rect x="117.4" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.4" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findMethodsForType (2 samples, 0.12%)</title><rect x="117.4" y="723.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (2 samples, 0.12%)</title><rect x="117.4" y="707.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getDescriptor (2 samples, 0.12%)</title><rect x="117.4" y="691.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (2 samples, 0.12%)</title><rect x="117.4" y="675.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="117.4" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="117.4" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="117.4" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.appendDescriptor (1 samples, 0.06%)</title><rect x="118.1" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.06%)</title><rect x="118.1" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.1" y="654.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.06%)</title><rect x="118.1" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="121.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (13 samples, 0.75%)</title><rect x="118.8" y="883.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (13 samples, 0.75%)</title><rect x="118.8" y="867.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.8" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="118.8" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.8" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="118.8" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="118.8" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.8" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="118.8" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="118.8" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="118.8" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.8" y="782.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.equals (1 samples, 0.06%)</title><rect x="118.8" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.8" y="766.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$InternalReference.referenceEquals (1 samples, 0.06%)</title><rect x="118.8" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.8" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (9 samples, 0.52%)</title><rect x="119.4" y="851.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="119.4" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.4" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="119.4" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.4" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="119.4" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.4" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="119.4" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.4" y="798.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="119.4" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.4" y="782.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.newLookupKey (1 samples, 0.06%)</title><rect x="119.4" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.4" y="766.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="119.4" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.4" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.06%)</title><rect x="120.1" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.06%)</title><rect x="120.1" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="120.1" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.1" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.matches (2 samples, 0.12%)</title><rect x="120.8" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (3 samples, 0.17%)</title><rect x="122.2" y="835.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.2" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (3 samples, 0.17%)</title><rect x="122.2" y="819.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.2" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (3 samples, 0.17%)</title><rect x="122.2" y="803.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.2" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.2" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="771.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.12%)</title><rect x="122.2" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="739.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="707.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="691.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="675.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="122.2" y="659.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedConstructor.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="122.2" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="122.8" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.8" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="123.5" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.5" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="123.5" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.5" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="123.5" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.5" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="123.5" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.size (1 samples, 0.06%)</title><rect x="123.5" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.12%)</title><rect x="124.2" y="835.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.2" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="124.2" y="819.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.2" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="124.2" y="803.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.12%)</title><rect x="124.2" y="787.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.2" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="124.2" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.2" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="124.2" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="124.2" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="124.2" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="124.2" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="124.2" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.2" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="124.9" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="124.9" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.9" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="124.9" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.9" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="124.9" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.9" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="124.9" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.9" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="124.9" y="691.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="127.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (3 samples, 0.17%)</title><rect x="125.6" y="851.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (3 samples, 0.17%)</title><rect x="125.6" y="835.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (3 samples, 0.17%)</title><rect x="125.6" y="819.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="125.6" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.6" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="125.6" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.6" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="125.6" y="771.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="128.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="126.2" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.2" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="126.2" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.2" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.2" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.2" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.2" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="126.2" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="126.2" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="126.2" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="126.2" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="126.2" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="126.2" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="126.2" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.2" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="126.2" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.2" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="126.2" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="126.2" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.2" y="606.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="126.2" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.2" y="590.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="126.2" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.2" y="574.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (1 samples, 0.06%)</title><rect x="126.2" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.2" y="558.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.2" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.2" y="542.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.2" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.2" y="526.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.parseSpecs (1 samples, 0.06%)</title><rect x="126.2" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.2" y="510.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.2" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.2" y="494.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.2" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.2" y="478.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="126.2" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.2" y="462.0"></text>
</g>
<g>
<title>java/net/URL.isValidProtocol (1 samples, 0.06%)</title><rect x="126.2" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.2" y="446.0"></text>
</g>
<g>
<title>java/lang/Character.isLetterOrDigit (1 samples, 0.06%)</title><rect x="126.2" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.isLetterOrDigit (1 samples, 0.06%)</title><rect x="126.2" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.getType (1 samples, 0.06%)</title><rect x="126.2" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.2" y="398.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="126.9" y="803.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="129.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (3 samples, 0.17%)</title><rect x="127.6" y="899.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (3 samples, 0.17%)</title><rect x="127.6" y="883.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (3 samples, 0.17%)</title><rect x="127.6" y="867.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$SkipClassLoaderMatcher.matches (1 samples, 0.06%)</title><rect x="127.6" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$SkipClassLoaderMatcher.matches (1 samples, 0.06%)</title><rect x="127.6" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="127.6" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.6" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="127.6" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.6" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="127.6" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.6" y="798.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (1 samples, 0.06%)</title><rect x="127.6" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.6" y="782.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (1 samples, 0.06%)</title><rect x="127.6" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (1 samples, 0.06%)</title><rect x="127.6" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.6" y="750.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.06%)</title><rect x="127.6" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.6" y="734.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.06%)</title><rect x="127.6" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.6" y="718.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.&lt;init&gt; (1 samples, 0.06%)</title><rect x="127.6" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.6" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (1 samples, 0.06%)</title><rect x="128.3" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (1 samples, 0.06%)</title><rect x="128.3" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="128.3" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="129.0" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (6 samples, 0.35%)</title><rect x="129.6" y="899.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (4 samples, 0.23%)</title><rect x="129.6" y="883.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (3 samples, 0.17%)</title><rect x="129.6" y="867.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (3 samples, 0.17%)</title><rect x="129.6" y="851.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.06%)</title><rect x="129.6" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (1 samples, 0.06%)</title><rect x="129.6" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="129.6" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="129.6" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getType (1 samples, 0.06%)</title><rect x="129.6" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.06%)</title><rect x="129.6" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="129.6" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="129.6" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="129.6" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="129.6" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="129.6" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="129.6" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.6" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="129.6" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.6" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="129.6" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.6" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="129.6" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.6" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="129.6" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.6" y="606.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="129.6" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.6" y="590.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="129.6" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.6" y="574.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.06%)</title><rect x="129.6" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.6" y="558.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.06%)</title><rect x="129.6" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.06%)</title><rect x="129.6" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="129.6" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.06%)</title><rect x="129.6" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.12%)</title><rect x="130.3" y="835.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (2 samples, 0.12%)</title><rect x="130.3" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (2 samples, 0.12%)</title><rect x="130.3" y="803.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.12%)</title><rect x="130.3" y="787.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (2 samples, 0.12%)</title><rect x="130.3" y="771.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (2 samples, 0.12%)</title><rect x="130.3" y="755.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.12%)</title><rect x="130.3" y="739.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.inject (1 samples, 0.06%)</title><rect x="130.3" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.3" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="130.3" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putMapEntries (1 samples, 0.06%)</title><rect x="130.3" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.3" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="130.3" y="675.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="133.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="131.0" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="131.0" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="131.0" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="131.0" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="131.0" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="131.0" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="131.0" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.06%)</title><rect x="131.0" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.06%)</title><rect x="131.0" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying$1.onNonGenericType (1 samples, 0.06%)</title><rect x="131.0" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying.onNonGenericType (1 samples, 0.06%)</title><rect x="131.0" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.06%)</title><rect x="131.0" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaringType (1 samples, 0.06%)</title><rect x="131.0" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="131.7" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="131.7" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="131.7" y="835.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="131.7" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="131.7" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.06%)</title><rect x="131.7" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.06%)</title><rect x="131.7" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="131.7" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.7" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="131.7" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.7" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="131.7" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="131.7" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="131.7" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="131.7" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.7" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="131.7" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.7" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="131.7" y="467.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.7" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="131.7" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.7" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="131.7" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.7" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.06%)</title><rect x="131.7" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.7" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.06%)</title><rect x="131.7" y="403.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.7" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (1 samples, 0.06%)</title><rect x="131.7" y="387.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.7" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.06%)</title><rect x="131.7" y="371.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.7" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.06%)</title><rect x="131.7" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.7" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.12%)</title><rect x="132.4" y="883.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (2 samples, 0.12%)</title><rect x="132.4" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default$1.resolve (1 samples, 0.06%)</title><rect x="132.4" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="132.4" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="132.4" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="132.4" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.4" y="814.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbab00000)@0x00007f136c8be580 (1 samples, 0.06%)</title><rect x="132.4" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="133.0" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="133.0" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="133.0" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.06%)</title><rect x="133.0" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (1 samples, 0.06%)</title><rect x="133.0" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.06%)</title><rect x="133.0" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.06%)</title><rect x="133.0" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.06%)</title><rect x="133.0" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.06%)</title><rect x="133.0" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="133.0" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="133.0" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="133.0" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitEnd (1 samples, 0.06%)</title><rect x="133.0" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitEnd (1 samples, 0.06%)</title><rect x="133.0" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound.onEnd (1 samples, 0.06%)</title><rect x="133.0" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.0" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/ExceptionHandlers$1.apply (1 samples, 0.06%)</title><rect x="133.0" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="133.0" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.06%)</title><rect x="133.0" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.toString (1 samples, 0.06%)</title><rect x="133.0" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.06%)</title><rect x="133.0" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.06%)</title><rect x="133.0" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Default.release (1 samples, 0.06%)</title><rect x="133.7" y="995.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.06%)</title><rect x="133.7" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.7" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (3 samples, 0.17%)</title><rect x="134.4" y="1075.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (3 samples, 0.17%)</title><rect x="134.4" y="1059.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="134.4" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.06%)</title><rect x="134.4" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.4" y="1038.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.06%)</title><rect x="134.4" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="137.4" y="1022.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.06%)</title><rect x="134.4" y="995.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="137.4" y="1006.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.06%)</title><rect x="134.4" y="979.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="137.4" y="990.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="134.4" y="963.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="137.4" y="974.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.06%)</title><rect x="134.4" y="947.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="137.4" y="958.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="134.4" y="931.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="137.4" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="134.4" y="915.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="137.4" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="134.4" y="899.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="137.4" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="134.4" y="883.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="137.4" y="894.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="134.4" y="867.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="137.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.intern (2 samples, 0.12%)</title><rect x="135.1" y="1043.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.1" y="1054.0"></text>
</g>
<g>
<title>JVM_InternString (2 samples, 0.12%)</title><rect x="135.1" y="1027.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="138.1" y="1038.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (2 samples, 0.12%)</title><rect x="135.1" y="1011.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="138.1" y="1022.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (2 samples, 0.12%)</title><rect x="135.1" y="995.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="138.1" y="1006.0"></text>
</g>
<g>
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (1 samples, 0.06%)</title><rect x="135.7" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="138.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (1 samples, 0.06%)</title><rect x="136.4" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (1 samples, 0.06%)</title><rect x="136.4" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (1 samples, 0.06%)</title><rect x="136.4" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.4" y="1086.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.06%)</title><rect x="136.4" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.4" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="136.4" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.4" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="136.4" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.4" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="136.4" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.4" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="136.4" y="995.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (3 samples, 0.17%)</title><rect x="137.1" y="1107.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.1" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (3 samples, 0.17%)</title><rect x="137.1" y="1091.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.1" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.12%)</title><rect x="137.1" y="1075.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.1" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.12%)</title><rect x="137.1" y="1059.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="137.1" y="1043.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="140.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="137.1" y="1027.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="140.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="137.1" y="1011.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="140.1" y="1022.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="137.1" y="995.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="140.1" y="1006.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="137.8" y="1043.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="140.8" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="138.5" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.5" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="138.5" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.5" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (1 samples, 0.06%)</title><rect x="138.5" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.5" y="1054.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek (1 samples, 0.06%)</title><rect x="138.5" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.5" y="1038.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek0 (1 samples, 0.06%)</title><rect x="138.5" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.5" y="1022.0"></text>
</g>
<g>
<title>__lseek (1 samples, 0.06%)</title><rect x="138.5" y="995.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="141.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="139.1" y="1139.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="139.1" y="1123.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="139.1" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="139.1" y="1091.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="139.1" y="1075.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="139.1" y="1059.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.1" y="1070.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="139.1" y="1043.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="142.1" y="1054.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="139.1" y="1027.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="142.1" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="139.1" y="1011.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="142.1" y="1022.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_remove(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Thread*) (1 samples, 0.06%)</title><rect x="139.1" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="142.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="139.8" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="139.8" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="139.8" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="139.8" y="1091.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.8" y="1102.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="139.8" y="1075.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="142.8" y="1086.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="139.8" y="1059.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="142.8" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="139.8" y="1043.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="142.8" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="139.8" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="142.8" y="1038.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="139.8" y="1011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="142.8" y="1022.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="139.8" y="995.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="142.8" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="139.8" y="979.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="142.8" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="139.8" y="963.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="142.8" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="139.8" y="947.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="142.8" y="958.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="139.8" y="931.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.8" y="942.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (423 samples, 24.37%)</title><rect x="140.5" y="1203.0" width="287.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.5" y="1214.0">sun/instrument/InstrumentationImpl.tran..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (423 samples, 24.37%)</title><rect x="140.5" y="1187.0" width="287.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="1198.0">sun/instrument/TransformerManager.trans..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (423 samples, 24.37%)</title><rect x="140.5" y="1171.0" width="287.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.5" y="1182.0">net/bytebuddy/agent/builder/AgentBuilde..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (423 samples, 24.37%)</title><rect x="140.5" y="1155.0" width="287.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.5" y="1166.0">net/bytebuddy/agent/builder/AgentBuilde..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (423 samples, 24.37%)</title><rect x="140.5" y="1139.0" width="287.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.5" y="1150.0">java/security/AccessController.doPrivil..</text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="140.5" y="1123.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="143.5" y="1134.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="140.5" y="1107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="143.5" y="1118.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="140.5" y="1091.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="143.5" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (422 samples, 24.31%)</title><rect x="141.2" y="1123.0" width="286.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.2" y="1134.0">net/bytebuddy/agent/builder/AgentBuild..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (422 samples, 24.31%)</title><rect x="141.2" y="1107.0" width="286.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.2" y="1118.0">net/bytebuddy/agent/builder/AgentBuild..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (420 samples, 24.19%)</title><rect x="141.2" y="1091.0" width="285.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.2" y="1102.0">net/bytebuddy/agent/builder/AgentBuild..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (419 samples, 24.14%)</title><rect x="141.9" y="1075.0" width="284.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.9" y="1086.0">net/bytebuddy/agent/builder/AgentBuild..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default$1.typePool (3 samples, 0.17%)</title><rect x="142.5" y="1059.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.5" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.06%)</title><rect x="143.9" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.9" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.06%)</title><rect x="143.9" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="143.9" y="1011.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (412 samples, 23.73%)</title><rect x="144.6" y="1059.0" width="280.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.6" y="1070.0">net/bytebuddy/agent/builder/AgentBuild..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/HelperInjector.transform (1 samples, 0.06%)</title><rect x="146.6" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.6" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/HelperInjector.getHelperMap (1 samples, 0.06%)</title><rect x="146.6" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="146.6" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="146.6" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.6" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="146.6" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="146.6" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.6" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="146.6" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="146.6" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.6" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="146.6" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.6" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="146.6" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="146.6" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="146.6" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.06%)</title><rect x="147.3" y="1043.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.3" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="147.3" y="1027.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="150.3" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.12%)</title><rect x="148.0" y="1043.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.0" y="1054.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="148.0" y="1027.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="151.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy$Disabled.resolve (2 samples, 0.12%)</title><rect x="149.3" y="1043.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer$Suffixing.withRandomSuffix (2 samples, 0.12%)</title><rect x="149.3" y="1027.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/RandomString.make (2 samples, 0.12%)</title><rect x="149.3" y="1011.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/RandomString.make (2 samples, 0.12%)</title><rect x="149.3" y="995.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/RandomString.nextString (1 samples, 0.06%)</title><rect x="150.0" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.0" y="990.0"></text>
</g>
<g>
<title>java/util/Random.nextInt (1 samples, 0.06%)</title><rect x="150.0" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.0" y="974.0"></text>
</g>
<g>
<title>java/util/Random.next (1 samples, 0.06%)</title><rect x="150.0" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.06%)</title><rect x="150.0" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (2 samples, 0.12%)</title><rect x="150.7" y="1043.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.resolve (2 samples, 0.12%)</title><rect x="150.7" y="1027.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.&lt;init&gt; (2 samples, 0.12%)</title><rect x="150.7" y="1011.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.&lt;init&gt; (2 samples, 0.12%)</title><rect x="150.7" y="995.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType.&lt;init&gt; (2 samples, 0.12%)</title><rect x="150.7" y="979.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.&lt;init&gt; (2 samples, 0.12%)</title><rect x="150.7" y="963.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onIgnored (11 samples, 0.63%)</title><rect x="152.1" y="1043.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.1" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (11 samples, 0.63%)</title><rect x="152.1" y="1027.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onTransformation (1 samples, 0.06%)</title><rect x="159.5" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$ModuleReadEdgeCompleting.onTransformation (1 samples, 0.06%)</title><rect x="159.5" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.isNamed (1 samples, 0.06%)</title><rect x="159.5" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule$Dispatcher$Enabled.isNamed (1 samples, 0.06%)</title><rect x="159.5" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="159.5" y="979.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="159.5" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor7.invoke (1 samples, 0.06%)</title><rect x="159.5" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.5" y="958.0"></text>
</g>
<g>
<title>java/lang/Boolean.valueOf (1 samples, 0.06%)</title><rect x="159.5" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (307 samples, 17.68%)</title><rect x="160.2" y="1043.0" width="208.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.2" y="1054.0">net/bytebuddy/agent/builder..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (3 samples, 0.17%)</title><rect x="160.2" y="1027.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.2" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (2 samples, 0.12%)</title><rect x="160.2" y="1011.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="160.2" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.2" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="160.2" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.2" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="160.2" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.2" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.06%)</title><rect x="160.2" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.2" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.06%)</title><rect x="160.2" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.2" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.06%)</title><rect x="160.2" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="160.2" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="160.2" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="160.2" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="160.2" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.2" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="160.2" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.2" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="160.2" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.2" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="160.2" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.2" y="814.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="160.2" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.2" y="798.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="160.2" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.2" y="782.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="160.2" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.2" y="766.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="160.2" y="739.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.2" y="750.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="160.2" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.2" y="734.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="160.2" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.2" y="718.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="160.2" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.2" y="702.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="160.2" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalize (1 samples, 0.06%)</title><rect x="160.2" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="163.2" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="160.2" y="643.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="163.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="160.2" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="163.2" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="160.2" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="163.2" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="160.2" y="595.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="163.2" y="606.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.06%)</title><rect x="160.2" y="579.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="163.2" y="590.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.06%)</title><rect x="160.2" y="563.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="163.2" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="160.9" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.9" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/jetty70/JettyServerInstrumentation.getInstrumentationMuzzle (1 samples, 0.06%)</title><rect x="161.6" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.6" y="1022.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_ldc(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="161.6" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="164.6" y="1006.0"></text>
</g>
<g>
<title>Bytecode_loadconstant::resolve_constant(Thread*) const (1 samples, 0.06%)</title><rect x="161.6" y="979.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="164.6" y="990.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (1 samples, 0.06%)</title><rect x="161.6" y="963.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="164.6" y="974.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle const&amp;, int, int, Thread*) (1 samples, 0.06%)</title><rect x="161.6" y="947.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="164.6" y="958.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.06%)</title><rect x="161.6" y="931.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="164.6" y="942.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.06%)</title><rect x="161.6" y="915.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="164.6" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1187956ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1187956ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="161.6" y="899.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="164.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (304 samples, 17.51%)</title><rect x="162.3" y="1027.0" width="206.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.3" y="1038.0">net/bytebuddy/agent/builder..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/ShouldInjectFieldsMatcher.matches (1 samples, 0.06%)</title><rect x="162.9" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.9" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/ShouldInjectFieldsMatcher.getInjectionTarget (1 samples, 0.06%)</title><rect x="162.9" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (302 samples, 17.40%)</title><rect x="163.6" y="1011.0" width="205.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.6" y="1022.0">net/bytebuddy/agent/builder..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="164.3" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="164.3" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.3" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="164.3" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.3" y="974.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="164.3" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.3" y="958.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="164.3" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.3" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (137 samples, 7.89%)</title><rect x="165.0" y="995.0" width="93.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.0" y="1006.0">datadog/tra..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (18 samples, 1.04%)</title><rect x="165.0" y="979.0" width="12.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.0" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (18 samples, 1.04%)</title><rect x="165.0" y="963.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.0" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (17 samples, 0.98%)</title><rect x="165.0" y="947.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.0" y="958.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (17 samples, 0.98%)</title><rect x="165.0" y="931.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.0" y="942.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (17 samples, 0.98%)</title><rect x="165.0" y="915.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.0" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (5 samples, 0.29%)</title><rect x="166.3" y="899.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.3" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (5 samples, 0.29%)</title><rect x="166.3" y="883.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (4 samples, 0.23%)</title><rect x="166.3" y="867.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.3" y="878.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (4 samples, 0.23%)</title><rect x="166.3" y="851.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (4 samples, 0.23%)</title><rect x="166.3" y="835.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.offer (4 samples, 0.23%)</title><rect x="166.3" y="819.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.3" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.06%)</title><rect x="166.3" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.3" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.06%)</title><rect x="166.3" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.3" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (1 samples, 0.06%)</title><rect x="166.3" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="169.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.12%)</title><rect x="167.0" y="803.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="167.7" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="167.7" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.06%)</title><rect x="167.7" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="167.7" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.06%)</title><rect x="167.7" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="167.7" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="168.4" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="168.4" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="168.4" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="168.4" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="168.4" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.4" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="168.4" y="723.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="171.4" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="168.4" y="707.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="171.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.tryLock (1 samples, 0.06%)</title><rect x="169.1" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="169.1" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.06%)</title><rect x="169.1" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.1" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.newLookupKey (8 samples, 0.46%)</title><rect x="169.7" y="899.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.7" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.&lt;init&gt; (7 samples, 0.40%)</title><rect x="170.4" y="883.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.12%)</title><rect x="175.2" y="899.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.2" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.equals (1 samples, 0.06%)</title><rect x="175.9" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.9" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$InternalReference.referenceEquals (1 samples, 0.06%)</title><rect x="175.9" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.hasResources (1 samples, 0.06%)</title><rect x="176.5" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.5" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="176.5" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.5" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="176.5" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="176.5" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="176.5" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.5" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="176.5" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="176.5" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="176.5" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.next (1 samples, 0.06%)</title><rect x="176.5" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$Traverser.advance (1 samples, 0.06%)</title><rect x="176.5" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.5" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (6 samples, 0.35%)</title><rect x="177.2" y="979.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.2" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (4 samples, 0.23%)</title><rect x="178.6" y="963.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.6" y="974.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="178.6" y="947.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="181.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.17%)</title><rect x="179.3" y="947.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="182.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="181.3" y="979.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.3" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="181.3" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.06%)</title><rect x="181.3" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="181.3" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="181.3" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="181.3" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.3" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="181.3" y="883.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="184.3" y="894.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.17%)</title><rect x="182.0" y="979.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="185.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (96 samples, 5.53%)</title><rect x="184.0" y="979.0" width="65.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.0" y="990.0">net/byt..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (4 samples, 0.23%)</title><rect x="184.0" y="963.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.0" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (4 samples, 0.23%)</title><rect x="184.0" y="947.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.0" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="184.0" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="184.0" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.0" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.06%)</title><rect x="184.0" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.0" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (2 samples, 0.12%)</title><rect x="184.7" y="931.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (2 samples, 0.12%)</title><rect x="184.7" y="915.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.12%)</title><rect x="184.7" y="899.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.12%)</title><rect x="184.7" y="883.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.12%)</title><rect x="184.7" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.12%)</title><rect x="184.7" y="851.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.12%)</title><rect x="184.7" y="835.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.7" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="184.7" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="184.7" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="184.7" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="184.7" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="184.7" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="184.7" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.7" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="184.7" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="184.7" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="184.7" y="691.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="184.7" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="184.7" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="185.4" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="185.4" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="185.4" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="185.4" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="185.4" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="185.4" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="185.4" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.size (1 samples, 0.06%)</title><rect x="185.4" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.4" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="185.4" y="691.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="188.4" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="186.0" y="931.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="189.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (70 samples, 4.03%)</title><rect x="186.7" y="963.0" width="47.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.7" y="974.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (69 samples, 3.97%)</title><rect x="187.4" y="947.0" width="46.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.4" y="958.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (35 samples, 2.02%)</title><rect x="188.1" y="931.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.1" y="942.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (35 samples, 2.02%)</title><rect x="188.1" y="915.0" width="23.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.1" y="926.0">d..</text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="188.1" y="899.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="191.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (19 samples, 1.09%)</title><rect x="189.4" y="899.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (19 samples, 1.09%)</title><rect x="189.4" y="883.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (19 samples, 1.09%)</title><rect x="189.4" y="867.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (19 samples, 1.09%)</title><rect x="189.4" y="851.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.4" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (13 samples, 0.75%)</title><rect x="189.4" y="835.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.get (1 samples, 0.06%)</title><rect x="189.4" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.get (1 samples, 0.06%)</title><rect x="189.4" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (12 samples, 0.69%)</title><rect x="190.1" y="819.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (12 samples, 0.69%)</title><rect x="190.1" y="803.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (12 samples, 0.69%)</title><rect x="190.1" y="787.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (12 samples, 0.69%)</title><rect x="190.1" y="771.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (10 samples, 0.58%)</title><rect x="191.5" y="755.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (10 samples, 0.58%)</title><rect x="191.5" y="739.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.06%)</title><rect x="192.2" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.2" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="192.8" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="192.8" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="192.8" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.8" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="192.8" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.8" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="192.8" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.12%)</title><rect x="193.5" y="723.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.12%)</title><rect x="193.5" y="707.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getObjectType (1 samples, 0.06%)</title><rect x="194.9" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (4 samples, 0.23%)</title><rect x="195.6" y="723.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (4 samples, 0.23%)</title><rect x="195.6" y="707.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (2 samples, 0.12%)</title><rect x="195.6" y="691.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="196.2" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="196.2" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (2 samples, 0.12%)</title><rect x="196.9" y="691.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="196.9" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="196.9" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.06%)</title><rect x="197.6" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="197.6" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (6 samples, 0.35%)</title><rect x="198.3" y="835.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (6 samples, 0.35%)</title><rect x="198.3" y="819.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="198.3" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.3" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="198.3" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.3" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="198.3" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.3" y="782.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (1 samples, 0.06%)</title><rect x="198.3" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.3" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.06%)</title><rect x="198.3" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.3" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="198.3" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.3" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="198.3" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.3" y="718.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.06%)</title><rect x="198.3" y="691.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="201.3" y="702.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, Thread*) (1 samples, 0.06%)</title><rect x="198.3" y="675.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="201.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="199.0" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="199.0" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.06%)</title><rect x="199.0" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.06%)</title><rect x="199.0" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="199.0" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.0" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.matches (1 samples, 0.06%)</title><rect x="199.0" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.0" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.matches (1 samples, 0.06%)</title><rect x="199.0" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.0" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="199.0" y="691.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="202.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (4 samples, 0.23%)</title><rect x="199.6" y="803.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (4 samples, 0.23%)</title><rect x="199.6" y="787.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$Explicit.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.3" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.3" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.3" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.3" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.3" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.3" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="200.3" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (2 samples, 0.12%)</title><rect x="201.0" y="771.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (2 samples, 0.12%)</title><rect x="201.0" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="201.0" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="201.0" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.06%)</title><rect x="201.0" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="201.0" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="201.0" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.getBinaryName (1 samples, 0.06%)</title><rect x="201.7" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="201.7" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="201.7" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="201.7" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (14 samples, 0.81%)</title><rect x="202.4" y="899.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="202.4" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="202.4" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="202.4" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="202.4" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="202.4" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="202.4" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="202.4" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="202.4" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="202.4" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="202.4" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="202.4" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="202.4" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="202.4" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.4" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="202.4" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.4" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="202.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="202.4" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.4" y="654.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="202.4" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.4" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="202.4" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.4" y="622.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="202.4" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.4" y="606.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="202.4" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.4" y="590.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.06%)</title><rect x="202.4" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.4" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.06%)</title><rect x="202.4" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.4" y="558.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.06%)</title><rect x="202.4" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.4" y="542.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.06%)</title><rect x="202.4" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.4" y="526.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.06%)</title><rect x="202.4" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.4" y="510.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.06%)</title><rect x="202.4" y="483.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="205.4" y="494.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="202.4" y="467.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="205.4" y="478.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="202.4" y="451.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="205.4" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (13 samples, 0.75%)</title><rect x="203.0" y="883.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (13 samples, 0.75%)</title><rect x="203.0" y="867.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (13 samples, 0.75%)</title><rect x="203.0" y="851.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (13 samples, 0.75%)</title><rect x="203.0" y="835.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.0" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (7 samples, 0.40%)</title><rect x="203.0" y="819.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.get (1 samples, 0.06%)</title><rect x="203.0" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.get (1 samples, 0.06%)</title><rect x="203.0" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.0" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.get (1 samples, 0.06%)</title><rect x="203.0" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (6 samples, 0.35%)</title><rect x="203.7" y="803.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (6 samples, 0.35%)</title><rect x="203.7" y="787.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (6 samples, 0.35%)</title><rect x="203.7" y="771.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (6 samples, 0.35%)</title><rect x="203.7" y="755.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (6 samples, 0.35%)</title><rect x="203.7" y="739.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (6 samples, 0.35%)</title><rect x="203.7" y="723.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="203.7" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.7" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="203.7" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.7" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="203.7" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="203.7" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.12%)</title><rect x="204.4" y="707.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="205.1" y="691.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="205.1" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (2 samples, 0.12%)</title><rect x="205.8" y="707.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="205.8" y="691.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (2 samples, 0.12%)</title><rect x="205.8" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.8" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="206.4" y="659.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="209.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="207.1" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="207.1" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="207.1" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="207.1" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.1" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="207.1" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (6 samples, 0.35%)</title><rect x="207.8" y="819.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (6 samples, 0.35%)</title><rect x="207.8" y="803.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.8" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="207.8" y="787.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="210.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedConstructor.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="208.5" y="787.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.5" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="208.5" y="771.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.5" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="208.5" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.5" y="766.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (2 samples, 0.12%)</title><rect x="208.5" y="739.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.5" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.12%)</title><rect x="208.5" y="723.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.5" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="208.5" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.5" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="208.5" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.5" y="702.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="208.5" y="675.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="211.5" y="686.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="209.2" y="707.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="212.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="209.8" y="787.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.8" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="209.8" y="771.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.8" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="209.8" y="755.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.8" y="766.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (2 samples, 0.12%)</title><rect x="209.8" y="739.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.8" y="750.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="209.8" y="723.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="212.8" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.06%)</title><rect x="210.5" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.5" y="734.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="210.5" y="707.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="213.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="211.2" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="211.2" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.2" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (28 samples, 1.61%)</title><rect x="211.9" y="931.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.9" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (3 samples, 0.17%)</title><rect x="211.9" y="915.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (3 samples, 0.17%)</title><rect x="211.9" y="899.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.06%)</title><rect x="211.9" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.06%)</title><rect x="211.9" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="211.9" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.12%)</title><rect x="212.6" y="883.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.12%)</title><rect x="212.6" y="867.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.12%)</title><rect x="212.6" y="851.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="212.6" y="835.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="212.6" y="819.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="212.6" y="803.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="212.6" y="787.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="212.6" y="771.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (2 samples, 0.12%)</title><rect x="212.6" y="755.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (2 samples, 0.12%)</title><rect x="212.6" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (2 samples, 0.12%)</title><rect x="212.6" y="723.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="212.6" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="212.6" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="212.6" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="212.6" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="212.6" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.6" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.isResolved (1 samples, 0.06%)</title><rect x="212.6" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.getBinaryName (1 samples, 0.06%)</title><rect x="213.2" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="213.2" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="213.2" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.2" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="213.2" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.2" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (2 samples, 0.12%)</title><rect x="213.9" y="915.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.9" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.12%)</title><rect x="213.9" y="899.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="213.9" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="213.9" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="213.9" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="213.9" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="213.9" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="213.9" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="214.6" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="214.6" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="214.6" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="214.6" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="214.6" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="214.6" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.6" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="214.6" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.6" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="214.6" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.6" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="214.6" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.6" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.recordRead (1 samples, 0.06%)</title><rect x="214.6" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.06%)</title><rect x="214.6" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="214.6" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.6" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (10 samples, 0.58%)</title><rect x="215.3" y="915.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.3" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="215.3" y="899.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="215.3" y="883.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.06%)</title><rect x="215.3" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.06%)</title><rect x="215.3" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="216.0" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="216.0" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="216.0" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="216.0" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="216.0" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="216.0" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="216.0" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="216.0" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="216.0" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="216.0" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.getBinaryName (1 samples, 0.06%)</title><rect x="216.0" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="216.0" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="216.0" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="216.0" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.0" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.06%)</title><rect x="216.6" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.06%)</title><rect x="216.6" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.06%)</title><rect x="216.6" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="216.6" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="216.6" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="216.6" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="216.6" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.6" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="216.6" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.6" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.06%)</title><rect x="216.6" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.equals (1 samples, 0.06%)</title><rect x="216.6" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="216.6" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.6" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="217.3" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 0.17%)</title><rect x="218.0" y="899.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.0" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="218.0" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.0" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="218.0" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="218.0" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.0" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="218.0" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.06%)</title><rect x="218.0" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.06%)</title><rect x="218.0" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.06%)</title><rect x="218.0" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.06%)</title><rect x="218.0" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.06%)</title><rect x="218.0" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.06%)</title><rect x="218.0" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="218.0" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="218.0" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="218.0" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="218.0" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="218.0" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="218.0" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="218.0" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="218.0" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="218.0" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="218.0" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="218.0" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.0" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.12%)</title><rect x="218.7" y="883.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="218.7" y="867.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.7" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="218.7" y="851.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.12%)</title><rect x="218.7" y="835.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.12%)</title><rect x="218.7" y="819.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.12%)</title><rect x="218.7" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.12%)</title><rect x="218.7" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForRawType.onParameterizedType (1 samples, 0.06%)</title><rect x="218.7" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.06%)</title><rect x="219.4" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.06%)</title><rect x="219.4" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="219.4" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="219.4" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="219.4" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="219.4" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="219.4" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="219.4" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="219.4" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.06%)</title><rect x="219.4" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="219.4" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asGenericType (1 samples, 0.06%)</title><rect x="219.4" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.4" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.17%)</title><rect x="220.0" y="899.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.0" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.17%)</title><rect x="220.0" y="883.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.0" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.17%)</title><rect x="220.0" y="867.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (3 samples, 0.17%)</title><rect x="220.0" y="851.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.12%)</title><rect x="220.0" y="835.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.12%)</title><rect x="220.0" y="819.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.12%)</title><rect x="220.0" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.12%)</title><rect x="220.0" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.12%)</title><rect x="220.0" y="771.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.06%)</title><rect x="220.0" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.06%)</title><rect x="220.0" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.06%)</title><rect x="220.0" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="220.0" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="220.0" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="220.0" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="220.0" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="220.0" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="220.0" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="220.0" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="220.0" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="220.0" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="220.0" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="220.0" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="220.7" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="220.7" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="220.7" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="220.7" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="220.7" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="220.7" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="220.7" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="221.4" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="221.4" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="221.4" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.4" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.06%)</title><rect x="221.4" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.4" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="221.4" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.4" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (13 samples, 0.75%)</title><rect x="222.1" y="915.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (13 samples, 0.75%)</title><rect x="222.1" y="899.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (13 samples, 0.75%)</title><rect x="222.1" y="883.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.1" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="222.1" y="867.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="225.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (12 samples, 0.69%)</title><rect x="222.8" y="867.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (11 samples, 0.63%)</title><rect x="222.8" y="851.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (11 samples, 0.63%)</title><rect x="222.8" y="835.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (11 samples, 0.63%)</title><rect x="222.8" y="819.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (11 samples, 0.63%)</title><rect x="222.8" y="803.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (11 samples, 0.63%)</title><rect x="222.8" y="787.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.8" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (5 samples, 0.29%)</title><rect x="223.4" y="771.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (5 samples, 0.29%)</title><rect x="223.4" y="755.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (5 samples, 0.29%)</title><rect x="223.4" y="739.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (5 samples, 0.29%)</title><rect x="223.4" y="723.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="223.4" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="223.4" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="223.4" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="223.4" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (4 samples, 0.23%)</title><rect x="224.1" y="707.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.named (1 samples, 0.06%)</title><rect x="224.8" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.&lt;init&gt; (1 samples, 0.06%)</title><rect x="224.8" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (1 samples, 0.06%)</title><rect x="225.5" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.06%)</title><rect x="225.5" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.06%)</title><rect x="225.5" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.5" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="225.5" y="643.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="228.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.06%)</title><rect x="226.2" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.06%)</title><rect x="226.2" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="226.2" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (1 samples, 0.06%)</title><rect x="226.8" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="226.8" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="226.8" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="226.8" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.8" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="226.8" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.8" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.&lt;init&gt; (1 samples, 0.06%)</title><rect x="226.8" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="226.8" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="226.8" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (2 samples, 0.12%)</title><rect x="227.5" y="771.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.12%)</title><rect x="227.5" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.12%)</title><rect x="227.5" y="739.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (2 samples, 0.12%)</title><rect x="227.5" y="723.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.12%)</title><rect x="227.5" y="707.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.12%)</title><rect x="227.5" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (2 samples, 0.12%)</title><rect x="227.5" y="675.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.06%)</title><rect x="227.5" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.06%)</title><rect x="227.5" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="228.2" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="228.2" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (2 samples, 0.12%)</title><rect x="228.9" y="771.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.12%)</title><rect x="228.9" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.12%)</title><rect x="228.9" y="739.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.9" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="228.9" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.9" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="228.9" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.9" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="228.9" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.9" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="228.9" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.9" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="228.9" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.9" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="228.9" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.9" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (1 samples, 0.06%)</title><rect x="228.9" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.9" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (1 samples, 0.06%)</title><rect x="228.9" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.9" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.evict (1 samples, 0.06%)</title><rect x="228.9" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.9" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="229.6" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="229.6" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="229.6" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="229.6" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="229.6" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="230.2" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.2" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (1 samples, 0.06%)</title><rect x="230.9" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (1 samples, 0.06%)</title><rect x="230.9" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.06%)</title><rect x="230.9" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getSuperClass (1 samples, 0.06%)</title><rect x="230.9" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.9" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="231.6" y="931.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="234.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (3 samples, 0.17%)</title><rect x="232.3" y="931.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (3 samples, 0.17%)</title><rect x="232.3" y="915.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.getModifiers (3 samples, 0.17%)</title><rect x="232.3" y="899.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (3 samples, 0.17%)</title><rect x="232.3" y="883.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.3" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="232.3" y="867.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="235.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getModifiers (1 samples, 0.06%)</title><rect x="232.9" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getModifiers (1 samples, 0.06%)</title><rect x="232.9" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.9" y="862.0"></text>
</g>
<g>
<title>JVM_GetClassModifiers (1 samples, 0.06%)</title><rect x="232.9" y="835.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="235.9" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.06%)</title><rect x="232.9" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="235.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="233.6" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.06%)</title><rect x="233.6" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="233.6" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.6" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="233.6" y="819.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="236.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (18 samples, 1.04%)</title><rect x="234.3" y="963.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.3" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (12 samples, 0.69%)</title><rect x="235.0" y="947.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.0" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (12 samples, 0.69%)</title><rect x="235.0" y="931.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="235.0" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.0" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="235.0" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.0" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.06%)</title><rect x="235.0" y="883.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.06%)</title><rect x="235.0" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.06%)</title><rect x="235.0" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.0" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (10 samples, 0.58%)</title><rect x="235.7" y="915.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (10 samples, 0.58%)</title><rect x="235.7" y="899.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (10 samples, 0.58%)</title><rect x="235.7" y="883.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (9 samples, 0.52%)</title><rect x="235.7" y="867.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.06%)</title><rect x="235.7" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.7" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="235.7" y="835.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="238.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (8 samples, 0.46%)</title><rect x="236.3" y="851.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (8 samples, 0.46%)</title><rect x="236.3" y="835.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (8 samples, 0.46%)</title><rect x="236.3" y="819.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.3" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.12%)</title><rect x="236.3" y="803.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.12%)</title><rect x="236.3" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.12%)</title><rect x="236.3" y="771.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (2 samples, 0.12%)</title><rect x="236.3" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (2 samples, 0.12%)</title><rect x="236.3" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (2 samples, 0.12%)</title><rect x="236.3" y="723.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.3" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="236.3" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="236.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="236.3" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.06%)</title><rect x="236.3" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.3" y="670.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (1 samples, 0.06%)</title><rect x="236.3" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="237.0" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="237.0" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.0" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="237.0" y="675.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="240.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (1 samples, 0.06%)</title><rect x="237.7" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="237.7" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="237.7" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="237.7" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.7" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="237.7" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.7" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="237.7" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.7" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="237.7" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.7" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.recordRead (1 samples, 0.06%)</title><rect x="237.7" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (4 samples, 0.23%)</title><rect x="238.4" y="803.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (4 samples, 0.23%)</title><rect x="238.4" y="787.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (4 samples, 0.23%)</title><rect x="238.4" y="771.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (4 samples, 0.23%)</title><rect x="238.4" y="755.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (4 samples, 0.23%)</title><rect x="238.4" y="739.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (4 samples, 0.23%)</title><rect x="238.4" y="723.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (3 samples, 0.17%)</title><rect x="239.1" y="707.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (2 samples, 0.12%)</title><rect x="239.1" y="691.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (2 samples, 0.12%)</title><rect x="239.1" y="675.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveTypeVariables (2 samples, 0.12%)</title><rect x="239.1" y="659.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Empty.&lt;init&gt; (2 samples, 0.12%)</title><rect x="239.1" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$Empty.&lt;init&gt; (2 samples, 0.12%)</title><rect x="239.1" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.1" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.12%)</title><rect x="239.1" y="611.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="240.4" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="240.4" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="240.4" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.4" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="240.4" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.4" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="240.4" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="240.4" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.4" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="240.4" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.4" y="606.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="240.4" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.4" y="590.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="240.4" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.4" y="574.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.06%)</title><rect x="240.4" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="558.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.06%)</title><rect x="240.4" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.06%)</title><rect x="240.4" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="240.4" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.06%)</title><rect x="240.4" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.4" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (1 samples, 0.06%)</title><rect x="241.1" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="241.1" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="241.1" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="241.1" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.1" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.&lt;init&gt; (1 samples, 0.06%)</title><rect x="241.1" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="241.1" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="241.1" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.06%)</title><rect x="241.8" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.8" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="242.5" y="915.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="245.5" y="926.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (3 samples, 0.17%)</title><rect x="243.1" y="947.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (3 samples, 0.17%)</title><rect x="243.1" y="931.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.1" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.next (1 samples, 0.06%)</title><rect x="243.1" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.1" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.12%)</title><rect x="243.8" y="915.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="244.5" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="244.5" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="244.5" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="244.5" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="244.5" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="245.2" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.2" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="245.2" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.2" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="245.2" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.2" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="245.2" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.2" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="245.2" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="245.9" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="245.9" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="245.9" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="245.9" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="245.9" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getModifiers (1 samples, 0.06%)</title><rect x="245.9" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (4 samples, 0.23%)</title><rect x="246.5" y="963.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.5" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (2 samples, 0.12%)</title><rect x="246.5" y="947.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.5" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (2 samples, 0.12%)</title><rect x="246.5" y="931.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.5" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="246.5" y="915.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.5" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="246.5" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.5" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="246.5" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.5" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (1 samples, 0.06%)</title><rect x="246.5" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.5" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.put (1 samples, 0.06%)</title><rect x="247.2" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.2" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.put (1 samples, 0.06%)</title><rect x="247.2" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.2" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.06%)</title><rect x="247.2" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.2" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.06%)</title><rect x="247.2" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.2" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterWrite (1 samples, 0.06%)</title><rect x="247.2" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.2" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BaseMpscLinkedArrayQueue.offer (1 samples, 0.06%)</title><rect x="247.2" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (2 samples, 0.12%)</title><rect x="247.9" y="947.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (2 samples, 0.12%)</title><rect x="247.9" y="931.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.12%)</title><rect x="247.9" y="915.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="247.9" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="248.6" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.06%)</title><rect x="248.6" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.6" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="248.6" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (11 samples, 0.63%)</title><rect x="249.3" y="979.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.3" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (4 samples, 0.23%)</title><rect x="249.3" y="963.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.3" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (4 samples, 0.23%)</title><rect x="249.3" y="947.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (4 samples, 0.23%)</title><rect x="249.3" y="931.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.3" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="249.3" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.3" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="249.3" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="249.3" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="249.3" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="249.3" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="249.3" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="249.3" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="249.3" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.06%)</title><rect x="249.3" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="249.3" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="249.3" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.3" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.3" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="249.3" y="723.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="252.3" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.12%)</title><rect x="249.9" y="915.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="249.9" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="249.9" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.06%)</title><rect x="249.9" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.06%)</title><rect x="249.9" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.06%)</title><rect x="249.9" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.06%)</title><rect x="249.9" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.06%)</title><rect x="249.9" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.06%)</title><rect x="249.9" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="249.9" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="249.9" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="249.9" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="249.9" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="249.9" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="249.9" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="249.9" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.06%)</title><rect x="249.9" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.06%)</title><rect x="249.9" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.06%)</title><rect x="249.9" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="249.9" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.9" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="250.6" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="250.6" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.6" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="250.6" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.06%)</title><rect x="250.6" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.06%)</title><rect x="250.6" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.6" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="250.6" y="819.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="253.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="251.3" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.3" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="251.3" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="251.3" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.06%)</title><rect x="251.3" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.06%)</title><rect x="251.3" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.06%)</title><rect x="251.3" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.06%)</title><rect x="251.3" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.06%)</title><rect x="251.3" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.06%)</title><rect x="251.3" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.3" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="251.3" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="251.3" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="251.3" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="251.3" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="251.3" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="251.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="251.3" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="251.3" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.3" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="251.3" y="643.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="254.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (6 samples, 0.35%)</title><rect x="252.0" y="963.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.0" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.29%)</title><rect x="252.0" y="947.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.0" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.29%)</title><rect x="252.0" y="931.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (5 samples, 0.29%)</title><rect x="252.0" y="915.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.0" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="252.0" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.0" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="252.0" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.0" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.matches (1 samples, 0.06%)</title><rect x="252.0" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.0" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.matches (1 samples, 0.06%)</title><rect x="252.0" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.0" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="252.0" y="835.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="255.0" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="252.7" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.7" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="252.7" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="252.7" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.7" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="252.7" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="252.7" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="252.7" y="819.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="252.7" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="252.7" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="252.7" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="252.7" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="252.7" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="252.7" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="252.7" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="252.7" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.7" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.17%)</title><rect x="253.3" y="899.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.17%)</title><rect x="253.3" y="883.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.17%)</title><rect x="253.3" y="867.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.12%)</title><rect x="254.0" y="851.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.12%)</title><rect x="254.0" y="835.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.12%)</title><rect x="254.0" y="819.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.12%)</title><rect x="254.0" y="803.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.12%)</title><rect x="254.0" y="787.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.12%)</title><rect x="254.0" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (1 samples, 0.06%)</title><rect x="254.0" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="254.0" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="254.0" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="254.0" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.0" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="254.0" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.0" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="254.0" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.0" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.06%)</title><rect x="254.0" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="254.7" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="254.7" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="254.7" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="254.7" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="254.7" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="254.7" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="254.7" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="254.7" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="254.7" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="254.7" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="254.7" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="254.7" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.7" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="254.7" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.7" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="254.7" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.7" y="558.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="254.7" y="531.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="257.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="255.4" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="255.4" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="255.4" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="255.4" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.4" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="255.4" y="883.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="258.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="256.1" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.1" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="256.1" y="947.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="256.1" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="256.1" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="256.1" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="256.1" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.06%)</title><rect x="256.1" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.06%)</title><rect x="256.1" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="256.1" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.06%)</title><rect x="256.1" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/EqualityMatcher.matches (1 samples, 0.06%)</title><rect x="256.7" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.equals (1 samples, 0.06%)</title><rect x="256.7" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.asErasure (1 samples, 0.06%)</title><rect x="256.7" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="257.4" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.4" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="257.4" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.4" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="257.4" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.4" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="257.4" y="931.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.4" y="942.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="257.4" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.4" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="257.4" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.4" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.newLookupKey (1 samples, 0.06%)</title><rect x="257.4" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.4" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="257.4" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (162 samples, 9.33%)</title><rect x="258.1" y="995.0" width="110.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.1" y="1006.0">net/bytebuddy..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (133 samples, 7.66%)</title><rect x="258.1" y="979.0" width="90.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.1" y="990.0">datadog/tr..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (133 samples, 7.66%)</title><rect x="258.1" y="963.0" width="90.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.1" y="974.0">datadog/tr..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="258.1" y="947.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="261.1" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="258.1" y="931.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="261.1" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="258.1" y="915.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="261.1" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="258.1" y="899.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="261.1" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="258.1" y="883.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="261.1" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="258.1" y="867.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="261.1" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="258.1" y="851.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="261.1" y="862.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.06%)</title><rect x="258.1" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="261.1" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.06%)</title><rect x="258.1" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="261.1" y="830.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.06%)</title><rect x="258.1" y="803.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="261.1" y="814.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.06%)</title><rect x="258.1" y="787.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="261.1" y="798.0"></text>
</g>
<g>
<title>G1ConcurrentRefine::max_num_threads() (1 samples, 0.06%)</title><rect x="258.1" y="771.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="261.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (13 samples, 0.75%)</title><rect x="258.8" y="947.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.8" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (11 samples, 0.63%)</title><rect x="260.1" y="931.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (6 samples, 0.35%)</title><rect x="260.8" y="915.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (3 samples, 0.17%)</title><rect x="260.8" y="899.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (2 samples, 0.12%)</title><rect x="261.5" y="883.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (3 samples, 0.17%)</title><rect x="262.9" y="899.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (3 samples, 0.17%)</title><rect x="262.9" y="883.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (2 samples, 0.12%)</title><rect x="262.9" y="867.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="263.5" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="263.5" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="263.5" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.5" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="263.5" y="803.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="266.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="264.2" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="264.2" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="264.2" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="264.2" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="264.2" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.06%)</title><rect x="264.9" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (3 samples, 0.17%)</title><rect x="265.6" y="915.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (2 samples, 0.12%)</title><rect x="266.3" y="899.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (2 samples, 0.12%)</title><rect x="266.3" y="883.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (2 samples, 0.12%)</title><rect x="266.3" y="867.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (2 samples, 0.12%)</title><rect x="266.3" y="851.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (2 samples, 0.12%)</title><rect x="266.3" y="835.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="266.3" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="266.9" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="266.9" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="266.9" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.9" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (105 samples, 6.05%)</title><rect x="267.6" y="947.0" width="71.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.6" y="958.0">datadog/..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="267.6" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.6" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="267.6" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="267.6" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="267.6" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="267.6" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.06%)</title><rect x="267.6" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.06%)</title><rect x="268.3" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.06%)</title><rect x="268.3" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.06%)</title><rect x="268.3" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="268.3" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="268.3" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="268.3" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="268.3" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.3" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="268.3" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.3" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="268.3" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.3" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="268.3" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.3" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="268.3" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.3" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="268.3" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.3" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.06%)</title><rect x="268.3" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.3" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.06%)</title><rect x="268.3" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.3" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.applyRead (1 samples, 0.06%)</title><rect x="268.3" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.3" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.moveToBack (1 samples, 0.06%)</title><rect x="268.3" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.3" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.linkLast (1 samples, 0.06%)</title><rect x="268.3" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.3" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (6 samples, 0.35%)</title><rect x="269.0" y="931.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.0" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (2 samples, 0.12%)</title><rect x="269.0" y="915.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.size (2 samples, 0.12%)</title><rect x="269.0" y="899.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.0" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="269.0" y="883.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="272.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$OfLoadedInterfaceTypes.size (1 samples, 0.06%)</title><rect x="269.7" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getInterfaces (1 samples, 0.06%)</title><rect x="269.7" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getInterfaces (1 samples, 0.06%)</title><rect x="269.7" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.7" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (4 samples, 0.23%)</title><rect x="270.3" y="915.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (3 samples, 0.17%)</title><rect x="270.3" y="899.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (3 samples, 0.17%)</title><rect x="270.3" y="883.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (3 samples, 0.17%)</title><rect x="270.3" y="867.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (3 samples, 0.17%)</title><rect x="270.3" y="851.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="270.3" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="270.3" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (2 samples, 0.12%)</title><rect x="271.0" y="835.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.12%)</title><rect x="271.0" y="819.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getType (1 samples, 0.06%)</title><rect x="271.0" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="271.0" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.06%)</title><rect x="271.0" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="271.7" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="271.7" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.7" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="271.7" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.7" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="271.7" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.7" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="271.7" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.7" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.recordRead (1 samples, 0.06%)</title><rect x="271.7" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="272.4" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="272.4" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="272.4" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="272.4" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getType (1 samples, 0.06%)</title><rect x="272.4" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="272.4" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="272.4" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="272.4" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.06%)</title><rect x="272.4" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.4" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (45 samples, 2.59%)</title><rect x="273.1" y="931.0" width="30.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.1" y="942.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="273.1" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="273.1" y="899.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="273.1" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="273.1" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.1" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="273.1" y="851.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="276.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (2 samples, 0.12%)</title><rect x="273.7" y="915.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (2 samples, 0.12%)</title><rect x="273.7" y="899.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (2 samples, 0.12%)</title><rect x="273.7" y="883.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.12%)</title><rect x="273.7" y="867.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.12%)</title><rect x="273.7" y="851.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.12%)</title><rect x="273.7" y="835.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="273.7" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="273.7" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.7" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="274.4" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="274.4" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="274.4" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="274.4" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="274.4" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="275.1" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.1" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="275.1" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="275.1" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="275.1" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="275.1" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="275.1" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="275.1" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="275.1" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="275.1" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="275.1" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="275.1" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.1" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.&lt;init&gt; (1 samples, 0.06%)</title><rect x="275.1" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="275.1" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="275.1" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.1" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (12 samples, 0.69%)</title><rect x="275.8" y="915.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.8" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (6 samples, 0.35%)</title><rect x="275.8" y="899.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.8" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (6 samples, 0.35%)</title><rect x="275.8" y="883.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (6 samples, 0.35%)</title><rect x="275.8" y="867.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.8" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (6 samples, 0.35%)</title><rect x="275.8" y="851.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (6 samples, 0.35%)</title><rect x="275.8" y="835.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (6 samples, 0.35%)</title><rect x="275.8" y="819.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (5 samples, 0.29%)</title><rect x="276.5" y="803.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (5 samples, 0.29%)</title><rect x="276.5" y="787.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (5 samples, 0.29%)</title><rect x="276.5" y="771.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (5 samples, 0.29%)</title><rect x="276.5" y="755.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.5" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.12%)</title><rect x="277.1" y="739.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.12%)</title><rect x="277.1" y="723.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.12%)</title><rect x="277.1" y="707.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (2 samples, 0.12%)</title><rect x="277.1" y="691.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (2 samples, 0.12%)</title><rect x="277.1" y="675.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="277.1" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="277.1" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.06%)</title><rect x="277.8" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.06%)</title><rect x="277.8" y="643.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="277.8" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (2 samples, 0.12%)</title><rect x="278.5" y="739.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.12%)</title><rect x="278.5" y="723.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.12%)</title><rect x="278.5" y="707.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (2 samples, 0.12%)</title><rect x="278.5" y="691.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.12%)</title><rect x="278.5" y="675.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.12%)</title><rect x="278.5" y="659.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (2 samples, 0.12%)</title><rect x="278.5" y="643.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.5" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="278.5" y="627.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="281.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="279.2" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="279.2" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.2" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (6 samples, 0.35%)</title><rect x="279.9" y="899.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (6 samples, 0.35%)</title><rect x="279.9" y="883.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (6 samples, 0.35%)</title><rect x="279.9" y="867.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (6 samples, 0.35%)</title><rect x="279.9" y="851.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (4 samples, 0.23%)</title><rect x="279.9" y="835.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (4 samples, 0.23%)</title><rect x="279.9" y="819.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (4 samples, 0.23%)</title><rect x="279.9" y="803.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (4 samples, 0.23%)</title><rect x="279.9" y="787.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (4 samples, 0.23%)</title><rect x="279.9" y="771.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.9" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="279.9" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="279.9" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="279.9" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="279.9" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="279.9" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.06%)</title><rect x="279.9" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.06%)</title><rect x="279.9" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="279.9" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (1 samples, 0.06%)</title><rect x="280.5" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="280.5" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="280.5" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="280.5" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.5" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="280.5" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.5" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.&lt;init&gt; (1 samples, 0.06%)</title><rect x="280.5" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="280.5" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="280.5" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="281.2" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="281.2" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="281.2" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="281.2" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="281.2" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="281.2" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="281.2" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="281.2" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="281.2" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="281.2" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.2" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="281.2" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (1 samples, 0.06%)</title><rect x="281.9" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (1 samples, 0.06%)</title><rect x="281.9" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="281.9" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="281.9" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.9" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="281.9" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.9" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="281.9" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.9" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="281.9" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.9" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="281.9" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.06%)</title><rect x="281.9" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="282.6" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="282.6" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="282.6" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="282.6" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.6" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="282.6" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (1 samples, 0.06%)</title><rect x="283.2" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="283.2" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="283.2" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="283.2" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="283.2" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="283.2" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="283.2" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.2" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="283.2" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.2" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="283.2" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.2" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="283.2" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.2" y="702.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="283.2" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.2" y="686.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.06%)</title><rect x="283.2" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.2" y="670.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.06%)</title><rect x="283.2" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.2" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.06%)</title><rect x="283.2" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="283.2" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.2" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="283.2" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.2" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="283.2" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.2" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (28 samples, 1.61%)</title><rect x="283.9" y="915.0" width="19.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (28 samples, 1.61%)</title><rect x="283.9" y="899.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (28 samples, 1.61%)</title><rect x="283.9" y="883.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (22 samples, 1.27%)</title><rect x="283.9" y="867.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (10 samples, 0.58%)</title><rect x="283.9" y="851.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (10 samples, 0.58%)</title><rect x="283.9" y="835.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (10 samples, 0.58%)</title><rect x="283.9" y="819.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (10 samples, 0.58%)</title><rect x="283.9" y="803.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (10 samples, 0.58%)</title><rect x="283.9" y="787.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.9" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="283.9" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="283.9" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="283.9" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="283.9" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="283.9" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="283.9" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="283.9" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.06%)</title><rect x="284.6" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.06%)</title><rect x="284.6" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.06%)</title><rect x="284.6" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.6" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="284.6" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="284.6" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="284.6" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="284.6" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="284.6" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (1 samples, 0.06%)</title><rect x="284.6" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.6" y="654.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="284.6" y="627.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="287.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (3 samples, 0.17%)</title><rect x="285.3" y="771.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (3 samples, 0.17%)</title><rect x="285.3" y="755.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (3 samples, 0.17%)</title><rect x="285.3" y="739.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (3 samples, 0.17%)</title><rect x="285.3" y="723.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (3 samples, 0.17%)</title><rect x="285.3" y="707.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (3 samples, 0.17%)</title><rect x="285.3" y="691.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (3 samples, 0.17%)</title><rect x="285.3" y="675.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$Latent.getTypeArguments (1 samples, 0.06%)</title><rect x="285.3" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.&lt;init&gt; (1 samples, 0.06%)</title><rect x="285.3" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="286.0" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="286.0" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="286.0" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.0" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="286.0" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.0" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.&lt;init&gt; (1 samples, 0.06%)</title><rect x="286.0" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="286.6" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="286.6" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="286.6" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="286.6" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getEnclosingSource (1 samples, 0.06%)</title><rect x="286.6" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getEnclosingMethod (1 samples, 0.06%)</title><rect x="286.6" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod.getEnclosingMethod (1 samples, 0.06%)</title><rect x="286.6" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="286.6" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.6" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="286.6" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="286.6" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="286.6" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="286.6" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="286.6" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="286.6" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="286.6" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="286.6" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.6" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="286.6" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.6" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="286.6" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="286.6" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="286.6" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.6" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (4 samples, 0.23%)</title><rect x="287.3" y="771.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (3 samples, 0.17%)</title><rect x="287.3" y="755.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (3 samples, 0.17%)</title><rect x="287.3" y="739.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.17%)</title><rect x="287.3" y="723.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.17%)</title><rect x="287.3" y="707.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.17%)</title><rect x="287.3" y="691.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.12%)</title><rect x="287.3" y="675.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.3" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.12%)</title><rect x="287.3" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.3" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.12%)</title><rect x="287.3" y="643.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="287.3" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.3" y="638.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="287.3" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.3" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="287.3" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.3" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="287.3" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.3" y="590.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="287.3" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.3" y="574.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="287.3" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.3" y="558.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="287.3" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.3" y="542.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="287.3" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.3" y="526.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="287.3" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.3" y="510.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="287.3" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalize (1 samples, 0.06%)</title><rect x="287.3" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalize (1 samples, 0.06%)</title><rect x="287.3" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.3" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="288.0" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.0" y="638.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="288.0" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.0" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/Handler.openConnection (1 samples, 0.06%)</title><rect x="288.0" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.0" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="288.0" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="288.0" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="288.7" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.06%)</title><rect x="288.7" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="288.7" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.extract (1 samples, 0.06%)</title><rect x="288.7" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="288.7" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.7" y="622.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="288.7" y="595.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="291.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="289.4" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="289.4" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="289.4" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="289.4" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="289.4" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType.getTypeArguments (1 samples, 0.06%)</title><rect x="290.0" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="290.0" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (3 samples, 0.17%)</title><rect x="290.7" y="851.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (3 samples, 0.17%)</title><rect x="290.7" y="835.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (3 samples, 0.17%)</title><rect x="290.7" y="819.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.17%)</title><rect x="290.7" y="803.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.17%)</title><rect x="290.7" y="787.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.17%)</title><rect x="290.7" y="771.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.12%)</title><rect x="290.7" y="755.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.7" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.12%)</title><rect x="290.7" y="739.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.7" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.12%)</title><rect x="290.7" y="723.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="290.7" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="290.7" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="290.7" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="290.7" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="290.7" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.7" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="290.7" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="290.7" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="290.7" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="290.7" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="290.7" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="290.7" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="290.7" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferU.get (1 samples, 0.06%)</title><rect x="290.7" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.7" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="290.7" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.7" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="291.4" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.4" y="718.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="291.4" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.4" y="702.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="291.4" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.4" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="291.4" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.4" y="670.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="291.4" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.4" y="654.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="291.4" y="627.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="294.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="292.1" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="292.1" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.1" y="750.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="292.1" y="723.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="295.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (9 samples, 0.52%)</title><rect x="292.8" y="851.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (8 samples, 0.46%)</title><rect x="293.4" y="835.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (8 samples, 0.46%)</title><rect x="293.4" y="819.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.4" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.06%)</title><rect x="293.4" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.4" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="293.4" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.4" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="294.1" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (6 samples, 0.35%)</title><rect x="294.8" y="803.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="297.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (6 samples, 0.35%)</title><rect x="294.8" y="787.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (6 samples, 0.35%)</title><rect x="294.8" y="771.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (4 samples, 0.23%)</title><rect x="294.8" y="755.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.8" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (4 samples, 0.23%)</title><rect x="294.8" y="739.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.8" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (4 samples, 0.23%)</title><rect x="294.8" y="723.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (3 samples, 0.17%)</title><rect x="294.8" y="707.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="297.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="294.8" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="294.8" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="294.8" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.06%)</title><rect x="294.8" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="294.8" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="294.8" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.8" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="294.8" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.8" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="294.8" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="297.8" y="590.0"></text>
</g>
<g>
<title>java/net/URL.openStream (2 samples, 0.12%)</title><rect x="295.5" y="691.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.5" y="702.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (2 samples, 0.12%)</title><rect x="295.5" y="675.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.5" y="686.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.06%)</title><rect x="295.5" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.5" y="670.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="295.5" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.5" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (1 samples, 0.06%)</title><rect x="295.5" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.5" y="638.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.put (1 samples, 0.06%)</title><rect x="295.5" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.5" y="622.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.06%)</title><rect x="295.5" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="295.5" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.5" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.06%)</title><rect x="295.5" y="563.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="298.5" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="295.5" y="547.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="298.5" y="558.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="296.2" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.2" y="670.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="296.2" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.2" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="296.2" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="299.2" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="296.2" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.2" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="296.2" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.2" y="606.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="296.2" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.2" y="590.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="296.2" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.06%)</title><rect x="296.2" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (1 samples, 0.06%)</title><rect x="296.2" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.encode (1 samples, 0.06%)</title><rect x="296.2" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="299.2" y="526.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 0.06%)</title><rect x="296.2" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.2" y="510.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 0.06%)</title><rect x="296.2" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="296.2" y="467.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.2" y="478.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="296.2" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.2" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="296.2" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.2" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="296.8" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="296.8" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="296.8" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="299.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="296.8" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="296.8" y="643.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="296.8" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="296.8" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="296.8" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="296.8" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="296.8" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.06%)</title><rect x="296.8" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.06%)</title><rect x="296.8" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="296.8" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="299.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.12%)</title><rect x="297.5" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="297.5" y="739.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="297.5" y="723.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="297.5" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="298.2" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.06%)</title><rect x="298.2" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.06%)</title><rect x="298.2" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (1 samples, 0.06%)</title><rect x="298.2" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.06%)</title><rect x="298.2" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.06%)</title><rect x="298.2" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.06%)</title><rect x="298.2" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor.visitArrayType (1 samples, 0.06%)</title><rect x="298.2" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="298.2" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeRegistrant$RejectingSignatureVisitor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="298.2" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod$ParameterTypeRegistrant.register (1 samples, 0.06%)</title><rect x="298.2" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (6 samples, 0.35%)</title><rect x="298.9" y="867.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (6 samples, 0.35%)</title><rect x="298.9" y="851.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (6 samples, 0.35%)</title><rect x="298.9" y="835.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (6 samples, 0.35%)</title><rect x="298.9" y="819.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (6 samples, 0.35%)</title><rect x="298.9" y="803.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (6 samples, 0.35%)</title><rect x="298.9" y="787.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (5 samples, 0.29%)</title><rect x="298.9" y="771.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (5 samples, 0.29%)</title><rect x="298.9" y="755.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.9" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (5 samples, 0.29%)</title><rect x="298.9" y="739.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (4 samples, 0.23%)</title><rect x="298.9" y="723.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (3 samples, 0.17%)</title><rect x="298.9" y="707.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="298.9" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="298.9" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="298.9" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.9" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="298.9" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="298.9" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="298.9" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="298.9" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="298.9" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="298.9" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="298.9" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getAttributes (1 samples, 0.06%)</title><rect x="298.9" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.decompress (1 samples, 0.06%)</title><rect x="298.9" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.12%)</title><rect x="299.6" y="691.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="299.6" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.6" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="299.6" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="299.6" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="299.6" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="299.6" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="299.6" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="299.6" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="299.6" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="299.6" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="299.6" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="299.6" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1 samples, 0.06%)</title><rect x="300.2" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="300.2" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.06%)</title><rect x="300.2" y="643.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="300.2" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.2" y="638.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="300.2" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.2" y="622.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="300.2" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.2" y="606.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="300.2" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.2" y="590.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="300.2" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.2" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="300.2" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.2" y="558.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="300.2" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.2" y="542.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="300.9" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.9" y="718.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="300.9" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.9" y="702.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="300.9" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.9" y="686.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="300.9" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.9" y="670.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="300.9" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.9" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="300.9" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.9" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="300.9" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.9" y="622.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="300.9" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.9" y="606.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="300.9" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.06%)</title><rect x="300.9" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.06%)</title><rect x="300.9" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="301.6" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.6" y="734.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="301.6" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.6" y="718.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="301.6" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.6" y="702.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="301.6" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.6" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="301.6" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="301.6" y="643.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="304.6" y="654.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="301.6" y="627.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="304.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="302.3" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="302.3" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="302.3" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="302.3" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (1 samples, 0.06%)</title><rect x="302.3" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="302.3" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="302.3" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="302.3" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="302.3" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="302.3" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="303.0" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="303.0" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="303.0" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.0" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (51 samples, 2.94%)</title><rect x="303.6" y="931.0" width="34.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.6" y="942.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (51 samples, 2.94%)</title><rect x="303.6" y="915.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.6" y="926.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (51 samples, 2.94%)</title><rect x="303.6" y="899.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.6" y="910.0">da..</text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (41 samples, 2.36%)</title><rect x="303.6" y="883.0" width="27.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.6" y="894.0">n..</text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (27 samples, 1.56%)</title><rect x="303.6" y="867.0" width="18.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.6" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="303.6" y="851.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="306.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (25 samples, 1.44%)</title><rect x="304.3" y="851.0" width="17.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (25 samples, 1.44%)</title><rect x="304.3" y="835.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (25 samples, 1.44%)</title><rect x="304.3" y="819.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (25 samples, 1.44%)</title><rect x="304.3" y="803.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.3" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (12 samples, 0.69%)</title><rect x="304.3" y="787.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.3" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="304.3" y="771.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="307.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (11 samples, 0.63%)</title><rect x="305.0" y="771.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (11 samples, 0.63%)</title><rect x="305.0" y="755.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="306.4" y="739.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="309.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (8 samples, 0.46%)</title><rect x="307.0" y="739.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (8 samples, 0.46%)</title><rect x="307.0" y="723.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (4 samples, 0.23%)</title><rect x="307.0" y="707.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.0" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.06%)</title><rect x="307.0" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.size (1 samples, 0.06%)</title><rect x="307.0" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="307.7" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="307.7" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="307.7" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="308.4" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.size (1 samples, 0.06%)</title><rect x="309.1" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (3 samples, 0.17%)</title><rect x="309.8" y="707.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (3 samples, 0.17%)</title><rect x="309.8" y="691.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (3 samples, 0.17%)</title><rect x="309.8" y="675.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.8" y="686.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.17%)</title><rect x="309.8" y="659.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="312.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.06%)</title><rect x="311.8" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.06%)</title><rect x="311.8" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (1 samples, 0.06%)</title><rect x="312.5" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="312.5" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="312.5" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="312.5" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.06%)</title><rect x="312.5" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="312.5" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (8 samples, 0.46%)</title><rect x="313.2" y="787.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (8 samples, 0.46%)</title><rect x="313.2" y="771.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (8 samples, 0.46%)</title><rect x="313.2" y="755.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (8 samples, 0.46%)</title><rect x="313.2" y="739.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (8 samples, 0.46%)</title><rect x="313.2" y="723.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (8 samples, 0.46%)</title><rect x="313.2" y="707.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (8 samples, 0.46%)</title><rect x="313.2" y="691.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.2" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="313.2" y="675.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="316.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (2 samples, 0.12%)</title><rect x="313.8" y="675.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.12%)</title><rect x="313.8" y="659.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.8" y="670.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="313.8" y="643.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="316.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (1 samples, 0.06%)</title><rect x="315.2" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable.getTypeVariableSource (1 samples, 0.06%)</title><rect x="315.2" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="315.9" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="315.9" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="315.9" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="315.9" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="315.9" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.12%)</title><rect x="316.6" y="675.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.12%)</title><rect x="316.6" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (2 samples, 0.12%)</title><rect x="316.6" y="643.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (2 samples, 0.12%)</title><rect x="316.6" y="627.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="316.6" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="316.6" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="316.6" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="317.2" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.2" y="622.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="317.2" y="595.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="320.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="317.9" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.06%)</title><rect x="317.9" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.06%)</title><rect x="317.9" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (4 samples, 0.23%)</title><rect x="318.6" y="787.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (2 samples, 0.12%)</title><rect x="318.6" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.12%)</title><rect x="318.6" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="318.6" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.12%)</title><rect x="318.6" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.12%)</title><rect x="318.6" y="707.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="318.6" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.6" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="318.6" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.6" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="318.6" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="318.6" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.6" y="654.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="318.6" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.6" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="318.6" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="321.6" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="318.6" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.6" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="318.6" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.6" y="590.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="318.6" y="563.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="321.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="319.3" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="319.3" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="319.3" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="319.3" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="319.3" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="319.3" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.12%)</title><rect x="320.0" y="771.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.12%)</title><rect x="320.0" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.0" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="320.0" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.0" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="320.0" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.0" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="320.0" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.0" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="320.0" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.0" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="320.0" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.0" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="320.0" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.0" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.06%)</title><rect x="320.0" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.0" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.06%)</title><rect x="320.0" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.0" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="320.6" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="320.6" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="320.6" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.06%)</title><rect x="321.3" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (6 samples, 0.35%)</title><rect x="322.0" y="867.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (5 samples, 0.29%)</title><rect x="322.7" y="851.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (5 samples, 0.29%)</title><rect x="322.7" y="835.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.29%)</title><rect x="322.7" y="819.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.7" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="322.7" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.7" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="322.7" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.7" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="322.7" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.7" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="322.7" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.7" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="322.7" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="322.7" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="322.7" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.7" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="322.7" y="691.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="325.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.23%)</title><rect x="323.4" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.23%)</title><rect x="323.4" y="787.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.12%)</title><rect x="323.4" y="771.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.4" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.12%)</title><rect x="323.4" y="755.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.12%)</title><rect x="323.4" y="739.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="323.4" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.4" y="734.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="323.4" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.4" y="718.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="323.4" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.4" y="702.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (1 samples, 0.06%)</title><rect x="323.4" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.4" y="686.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="323.4" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.4" y="670.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="323.4" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.4" y="654.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.parseSpecs (1 samples, 0.06%)</title><rect x="323.4" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.4" y="638.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="323.4" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.4" y="622.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="323.4" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.4" y="606.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="323.4" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.4" y="590.0"></text>
</g>
<g>
<title>java/net/URL.getURLStreamHandler (1 samples, 0.06%)</title><rect x="323.4" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.4" y="574.0"></text>
</g>
<g>
<title>java/util/Hashtable.get (1 samples, 0.06%)</title><rect x="323.4" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.4" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="324.0" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.0" y="734.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="324.0" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.0" y="718.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="324.0" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.0" y="702.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="324.0" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.0" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="324.0" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="324.0" y="643.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="327.0" y="654.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="324.0" y="627.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="327.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.12%)</title><rect x="324.7" y="771.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="324.7" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="324.7" y="739.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="324.7" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitAnnotationDefault (1 samples, 0.06%)</title><rect x="324.7" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForArrayType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="324.7" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitSource (1 samples, 0.06%)</title><rect x="325.4" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (8 samples, 0.46%)</title><rect x="326.1" y="867.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (6 samples, 0.35%)</title><rect x="326.1" y="851.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (6 samples, 0.35%)</title><rect x="326.1" y="835.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (6 samples, 0.35%)</title><rect x="326.1" y="819.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.1" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="326.1" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.1" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="326.1" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.1" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="326.1" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.1" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="326.1" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.1" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="326.1" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.1" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="326.1" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.1" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (1 samples, 0.06%)</title><rect x="326.1" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.1" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (1 samples, 0.06%)</title><rect x="326.1" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.29%)</title><rect x="326.8" y="803.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.29%)</title><rect x="326.8" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (3 samples, 0.17%)</title><rect x="326.8" y="771.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.8" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (3 samples, 0.17%)</title><rect x="326.8" y="755.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.8" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (3 samples, 0.17%)</title><rect x="326.8" y="739.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.8" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="326.8" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="326.8" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="326.8" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="326.8" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="326.8" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.8" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="326.8" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="326.8" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="326.8" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="326.8" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="326.8" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="326.8" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="326.8" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.8" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferU.get (1 samples, 0.06%)</title><rect x="326.8" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.8" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.06%)</title><rect x="326.8" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.8" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="327.4" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="327.4" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="327.4" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="327.4" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="327.4" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.4" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="327.4" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="327.4" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="327.4" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="327.4" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="327.4" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="327.4" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="327.4" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.06%)</title><rect x="327.4" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.06%)</title><rect x="327.4" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.06%)</title><rect x="327.4" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (1 samples, 0.06%)</title><rect x="327.4" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.charsFromByteBufferLength (1 samples, 0.06%)</title><rect x="327.4" y="467.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.4" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="328.1" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.1" y="734.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="328.1" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.1" y="718.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="328.1" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.1" y="702.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="328.1" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.1" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="328.1" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.1" y="670.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="328.1" y="643.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="331.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.12%)</title><rect x="328.8" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="328.8" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="328.8" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="328.8" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.06%)</title><rect x="328.8" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ParameterBag.resolve (1 samples, 0.06%)</title><rect x="328.8" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (1 samples, 0.06%)</title><rect x="329.5" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="329.5" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="329.5" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="329.5" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (2 samples, 0.12%)</title><rect x="330.1" y="851.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="330.8" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="330.8" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="330.8" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.8" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="330.8" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.8" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="330.8" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.8" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="330.8" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.8" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="330.8" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (10 samples, 0.58%)</title><rect x="331.5" y="883.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (9 samples, 0.52%)</title><rect x="332.2" y="867.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (9 samples, 0.52%)</title><rect x="332.2" y="851.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (9 samples, 0.52%)</title><rect x="332.2" y="835.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.2" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="332.2" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.2" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="332.2" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.2" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="332.2" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.2" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="332.2" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.2" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="332.2" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.2" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="332.2" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.2" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.06%)</title><rect x="332.2" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.2" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.06%)</title><rect x="332.2" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (8 samples, 0.46%)</title><rect x="332.9" y="819.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (8 samples, 0.46%)</title><rect x="332.9" y="803.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (8 samples, 0.46%)</title><rect x="332.9" y="787.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.9" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (8 samples, 0.46%)</title><rect x="332.9" y="771.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (8 samples, 0.46%)</title><rect x="332.9" y="755.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (3 samples, 0.17%)</title><rect x="332.9" y="739.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="335.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.12%)</title><rect x="332.9" y="723.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="332.9" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="332.9" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="332.9" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.9" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="332.9" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="332.9" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="332.9" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="333.5" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="333.5" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.5" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="333.5" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="333.5" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="333.5" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="333.5" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="333.5" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="333.5" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="333.5" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="333.5" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="333.5" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="333.5" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="333.5" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="333.5" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.5" y="510.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="334.2" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.2" y="734.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="334.2" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.2" y="718.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="334.2" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.2" y="702.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="334.2" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.2" y="686.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="334.2" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.2" y="670.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="334.2" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.2" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="334.2" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.2" y="638.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="334.2" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.2" y="622.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="334.2" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.06%)</title><rect x="334.2" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.2" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (3 samples, 0.17%)</title><rect x="334.9" y="739.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (3 samples, 0.17%)</title><rect x="334.9" y="723.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (3 samples, 0.17%)</title><rect x="334.9" y="707.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (3 samples, 0.17%)</title><rect x="334.9" y="691.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (2 samples, 0.12%)</title><rect x="334.9" y="675.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.9" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="334.9" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.12%)</title><rect x="334.9" y="643.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.12%)</title><rect x="334.9" y="627.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (2 samples, 0.12%)</title><rect x="334.9" y="611.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (2 samples, 0.12%)</title><rect x="334.9" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (2 samples, 0.12%)</title><rect x="334.9" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (2 samples, 0.12%)</title><rect x="334.9" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="335.6" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="335.6" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="335.6" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="336.3" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="336.3" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.3" y="670.0"></text>
</g>
<g>
<title>java/net/URI.toURL (1 samples, 0.06%)</title><rect x="336.3" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.3" y="654.0"></text>
</g>
<g>
<title>java/net/URL.fromURI (1 samples, 0.06%)</title><rect x="336.3" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.3" y="638.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="336.3" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.3" y="622.0"></text>
</g>
<g>
<title>java/net/URL.getURLStreamHandler (1 samples, 0.06%)</title><rect x="336.3" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="339.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.12%)</title><rect x="336.9" y="739.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.9" y="750.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.12%)</title><rect x="336.9" y="723.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.9" y="734.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.12%)</title><rect x="336.9" y="707.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.9" y="718.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.12%)</title><rect x="336.9" y="691.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.9" y="702.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.12%)</title><rect x="336.9" y="675.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="336.9" y="659.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="339.9" y="670.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (2 samples, 0.12%)</title><rect x="336.9" y="643.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="339.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="338.3" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="338.3" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.3" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="338.3" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.3" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.afterNodeInsertion (1 samples, 0.06%)</title><rect x="338.3" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="341.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (5 samples, 0.29%)</title><rect x="339.0" y="947.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (2 samples, 0.12%)</title><rect x="339.0" y="931.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getSuperClass (2 samples, 0.12%)</title><rect x="339.0" y="915.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getSuperClass (2 samples, 0.12%)</title><rect x="339.0" y="899.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveSuperClass (2 samples, 0.12%)</title><rect x="339.0" y="883.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (2 samples, 0.12%)</title><rect x="339.0" y="867.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.12%)</title><rect x="339.0" y="851.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.0" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_static_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="339.0" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="342.0" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="339.0" y="819.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="342.0" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="339.0" y="803.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="342.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="339.7" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="339.7" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.7" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="339.7" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.06%)</title><rect x="339.7" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.06%)</title><rect x="339.7" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.06%)</title><rect x="339.7" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.06%)</title><rect x="339.7" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="339.7" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.06%)</title><rect x="339.7" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (2 samples, 0.12%)</title><rect x="340.3" y="931.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getSuperClass (1 samples, 0.06%)</title><rect x="341.0" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="341.0" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="341.0" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="341.0" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.0" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="341.0" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.0" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="341.0" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.0" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.06%)</title><rect x="341.0" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getSuperClass (1 samples, 0.06%)</title><rect x="341.7" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (1 samples, 0.06%)</title><rect x="341.7" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="341.7" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.7" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolutionForMaybeLoadableType.resolve (1 samples, 0.06%)</title><rect x="341.7" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.7" y="894.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="341.7" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.7" y="878.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="341.7" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.7" y="862.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="341.7" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="341.7" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="341.7" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="341.7" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.7" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="341.7" y="771.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="344.7" y="782.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="341.7" y="755.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="344.7" y="766.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="341.7" y="739.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="344.7" y="750.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="341.7" y="723.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="344.7" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="341.7" y="707.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="344.7" y="718.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.35%)</title><rect x="342.4" y="947.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="345.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.asGenericType (2 samples, 0.12%)</title><rect x="346.5" y="947.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForErasure.&lt;init&gt; (1 samples, 0.06%)</title><rect x="347.1" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="347.8" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="347.8" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="347.8" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (29 samples, 1.67%)</title><rect x="348.5" y="979.0" width="19.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (29 samples, 1.67%)</title><rect x="348.5" y="963.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (29 samples, 1.67%)</title><rect x="348.5" y="947.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (29 samples, 1.67%)</title><rect x="348.5" y="931.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.5" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="349.2" y="915.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="352.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (27 samples, 1.56%)</title><rect x="349.9" y="915.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.06%)</title><rect x="349.9" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="349.9" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.9" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="349.9" y="867.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="352.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (26 samples, 1.50%)</title><rect x="350.5" y="899.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.5" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (3 samples, 0.17%)</title><rect x="350.5" y="883.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="353.5" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (3 samples, 0.17%)</title><rect x="350.5" y="867.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.5" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (3 samples, 0.17%)</title><rect x="350.5" y="851.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.5" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.&lt;init&gt; (1 samples, 0.06%)</title><rect x="350.5" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.5" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (2 samples, 0.12%)</title><rect x="351.2" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.2" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (2 samples, 0.12%)</title><rect x="351.2" y="819.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.2" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (2 samples, 0.12%)</title><rect x="351.2" y="803.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.2" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.06%)</title><rect x="351.2" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.2" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.06%)</title><rect x="351.2" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.06%)</title><rect x="351.2" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="351.2" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.06%)</title><rect x="351.2" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.2" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (1 samples, 0.06%)</title><rect x="351.9" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.9" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (1 samples, 0.06%)</title><rect x="351.9" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.9" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.evict (1 samples, 0.06%)</title><rect x="351.9" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.9" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.poll (1 samples, 0.06%)</title><rect x="351.9" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.9" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.pollFirst (1 samples, 0.06%)</title><rect x="351.9" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.9" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.unlinkFirst (1 samples, 0.06%)</title><rect x="351.9" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="354.9" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.setPrevious (1 samples, 0.06%)</title><rect x="351.9" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.9" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.setPrevious (1 samples, 0.06%)</title><rect x="351.9" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (23 samples, 1.32%)</title><rect x="352.6" y="883.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (23 samples, 1.32%)</title><rect x="352.6" y="867.0" width="15.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="352.6" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Resolution$Explicit.isResolved (1 samples, 0.06%)</title><rect x="352.6" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (22 samples, 1.27%)</title><rect x="353.3" y="851.0" width="14.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (16 samples, 0.92%)</title><rect x="353.3" y="835.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (16 samples, 0.92%)</title><rect x="353.3" y="819.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="353.9" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="353.9" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readClass (2 samples, 0.12%)</title><rect x="354.6" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readStringish (2 samples, 0.12%)</title><rect x="354.6" y="787.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (2 samples, 0.12%)</title><rect x="354.6" y="771.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="355.3" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (2 samples, 0.12%)</title><rect x="356.0" y="803.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (2 samples, 0.12%)</title><rect x="356.0" y="787.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readConst (1 samples, 0.06%)</title><rect x="356.0" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.0" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="356.0" y="755.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="359.0" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="356.0" y="739.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="359.0" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="356.0" y="723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="359.0" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="356.0" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="359.0" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="356.0" y="691.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="359.0" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="356.0" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="359.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.06%)</title><rect x="356.7" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="356.7" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="359.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visitEnum (1 samples, 0.06%)</title><rect x="356.7" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="356.7" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.06%)</title><rect x="356.7" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (2 samples, 0.12%)</title><rect x="357.3" y="803.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (2 samples, 0.12%)</title><rect x="357.3" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.&lt;init&gt; (2 samples, 0.12%)</title><rect x="357.3" y="771.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfField.extract (2 samples, 0.12%)</title><rect x="357.3" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.acceptType (2 samples, 0.12%)</title><rect x="357.3" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (2 samples, 0.12%)</title><rect x="357.3" y="723.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="357.3" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor.visitClassType (1 samples, 0.06%)</title><rect x="358.0" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="361.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$ForTopLevelType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="358.0" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="358.0" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="358.0" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.0" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="358.0" y="643.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="361.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (8 samples, 0.46%)</title><rect x="358.7" y="803.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.06%)</title><rect x="359.4" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visitEnd (1 samples, 0.06%)</title><rect x="359.4" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase.onComplete (1 samples, 0.06%)</title><rect x="359.4" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable.getTokens (1 samples, 0.06%)</title><rect x="359.4" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex.getPathMap (1 samples, 0.06%)</title><rect x="359.4" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="360.1" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="360.1" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="360.1" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="360.7" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="360.7" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.06%)</title><rect x="361.4" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ParameterBag.resolve (1 samples, 0.06%)</title><rect x="361.4" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.4" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="361.4" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitTypeAnnotation (1 samples, 0.06%)</title><rect x="362.1" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (2 samples, 0.12%)</title><rect x="362.8" y="787.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (2 samples, 0.12%)</title><rect x="362.8" y="771.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="363.5" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="363.5" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="364.1" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="364.1" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="364.1" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (3 samples, 0.17%)</title><rect x="364.8" y="835.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (3 samples, 0.17%)</title><rect x="364.8" y="819.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.8" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="364.8" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.extract (2 samples, 0.12%)</title><rect x="365.5" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.06%)</title><rect x="366.2" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.06%)</title><rect x="366.2" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.06%)</title><rect x="366.2" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (2 samples, 0.12%)</title><rect x="366.9" y="835.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="366.9" y="819.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="366.9" y="803.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="366.9" y="787.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readBootstrapMethodsAttribute (1 samples, 0.06%)</title><rect x="367.5" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="367.5" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="368.2" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="368.2" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="368.2" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (14 samples, 0.81%)</title><rect x="368.9" y="1043.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.9" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="375.0" y="1027.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="378.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (4 samples, 0.23%)</title><rect x="375.7" y="1027.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (4 samples, 0.23%)</title><rect x="375.7" y="1011.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.7" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (2 samples, 0.12%)</title><rect x="375.7" y="995.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.7" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (2 samples, 0.12%)</title><rect x="375.7" y="979.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="375.7" y="963.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="375.7" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="376.4" y="963.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="376.4" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="376.4" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.12%)</title><rect x="377.1" y="995.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (12 samples, 0.69%)</title><rect x="378.4" y="1043.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (11 samples, 0.63%)</title><rect x="379.1" y="1027.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (11 samples, 0.63%)</title><rect x="379.1" y="1011.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (11 samples, 0.63%)</title><rect x="379.1" y="995.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (2 samples, 0.12%)</title><rect x="379.1" y="979.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (2 samples, 0.12%)</title><rect x="379.1" y="963.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (2 samples, 0.12%)</title><rect x="379.1" y="947.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (2 samples, 0.12%)</title><rect x="379.1" y="931.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.1" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="379.1" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="382.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.06%)</title><rect x="379.8" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (1 samples, 0.06%)</title><rect x="379.8" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (1 samples, 0.06%)</title><rect x="379.8" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (1 samples, 0.06%)</title><rect x="379.8" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="379.8" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="379.8" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="379.8" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="379.8" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="379.8" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="379.8" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="379.8" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.8" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="379.8" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.8" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="379.8" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="379.8" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="379.8" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="379.8" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="379.8" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="379.8" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="379.8" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="379.8" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="379.8" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="379.8" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="379.8" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.8" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.isAlive (1 samples, 0.06%)</title><rect x="380.4" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (6 samples, 0.35%)</title><rect x="381.1" y="979.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (5 samples, 0.29%)</title><rect x="381.1" y="963.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (4 samples, 0.23%)</title><rect x="381.1" y="947.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (4 samples, 0.23%)</title><rect x="381.1" y="931.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (4 samples, 0.23%)</title><rect x="381.1" y="915.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (4 samples, 0.23%)</title><rect x="381.1" y="899.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (4 samples, 0.23%)</title><rect x="381.1" y="883.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (4 samples, 0.23%)</title><rect x="381.1" y="867.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (4 samples, 0.23%)</title><rect x="381.1" y="851.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (4 samples, 0.23%)</title><rect x="381.1" y="835.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (4 samples, 0.23%)</title><rect x="381.1" y="819.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 0.23%)</title><rect x="381.1" y="803.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.23%)</title><rect x="381.1" y="787.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.23%)</title><rect x="381.1" y="771.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (3 samples, 0.17%)</title><rect x="381.1" y="755.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (3 samples, 0.17%)</title><rect x="381.1" y="739.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (3 samples, 0.17%)</title><rect x="381.1" y="723.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.1" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (2 samples, 0.12%)</title><rect x="381.1" y="707.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.1" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (2 samples, 0.12%)</title><rect x="381.1" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.12%)</title><rect x="381.1" y="675.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.1" y="686.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="381.1" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="381.1" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.1" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="381.1" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.1" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="381.1" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.1" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="381.1" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.1" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="381.1" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="381.1" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.06%)</title><rect x="381.1" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.1" y="558.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="381.1" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.1" y="542.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="381.1" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="381.1" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.1" y="510.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="381.1" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.1" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="381.8" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.8" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="381.8" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.8" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="381.8" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.8" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="381.8" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="381.8" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.06%)</title><rect x="381.8" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.8" y="590.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.encodePath (1 samples, 0.06%)</title><rect x="381.8" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.8" y="574.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.firstEncodeIndex (1 samples, 0.06%)</title><rect x="381.8" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="382.5" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.5" y="718.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="382.5" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.5" y="702.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="382.5" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.5" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="382.5" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.5" y="670.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="382.5" y="643.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="385.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="383.2" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="383.2" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="383.2" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="383.2" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (1 samples, 0.06%)</title><rect x="383.2" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="383.2" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.06%)</title><rect x="383.8" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.06%)</title><rect x="383.8" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.8" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.06%)</title><rect x="383.8" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.8" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.06%)</title><rect x="383.8" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.8" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="383.8" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="383.8" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.8" y="878.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x00007f136c8bbe00 (1 samples, 0.06%)</title><rect x="383.8" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.06%)</title><rect x="384.5" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="384.5" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DefinedShapeMatcher.matches (1 samples, 0.06%)</title><rect x="384.5" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DefinedShapeMatcher.matches (1 samples, 0.06%)</title><rect x="384.5" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/EqualityMatcher.matches (1 samples, 0.06%)</title><rect x="384.5" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="384.5" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.5" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.06%)</title><rect x="384.5" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.5" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.06%)</title><rect x="384.5" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="384.5" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="387.5" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="384.5" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="387.5" y="830.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="384.5" y="803.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="387.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (2 samples, 0.12%)</title><rect x="385.2" y="979.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.12%)</title><rect x="385.2" y="963.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="385.2" y="947.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.12%)</title><rect x="385.2" y="931.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.12%)</title><rect x="385.2" y="915.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="385.2" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="385.2" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="385.2" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="385.2" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.2" y="862.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="385.2" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.2" y="846.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="385.2" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.2" y="830.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="385.2" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.2" y="814.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="385.2" y="787.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="388.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="385.9" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="385.9" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="385.9" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="385.9" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitAnnotation (1 samples, 0.06%)</title><rect x="385.9" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="385.9" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForByteCodeElement.&lt;init&gt; (1 samples, 0.06%)</title><rect x="385.9" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="385.9" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$TypeStrategy$Default$3.builder (1 samples, 0.06%)</title><rect x="386.6" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter.ignoreAlso (1 samples, 0.06%)</title><rect x="386.6" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.6" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.06%)</title><rect x="386.6" y="1011.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="389.6" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.06%)</title><rect x="386.6" y="995.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="389.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (55 samples, 3.17%)</title><rect x="387.2" y="1043.0" width="37.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.2" y="1054.0">net..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (31 samples, 1.79%)</title><rect x="387.2" y="1027.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.2" y="1038.0">n..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (16 samples, 0.92%)</title><rect x="387.2" y="1011.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.2" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (16 samples, 0.92%)</title><rect x="387.2" y="995.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (6 samples, 0.35%)</title><rect x="387.2" y="979.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (2 samples, 0.12%)</title><rect x="387.2" y="963.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getParameters (1 samples, 0.06%)</title><rect x="387.2" y="947.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getParameters (1 samples, 0.06%)</title><rect x="387.2" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="387.9" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.9" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.06%)</title><rect x="387.9" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$TypeSubstituting.size (1 samples, 0.06%)</title><rect x="387.9" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterList.size (1 samples, 0.06%)</title><rect x="387.9" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.06%)</title><rect x="388.6" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.6" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.06%)</title><rect x="388.6" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.6" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="388.6" y="931.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.6" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="388.6" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="388.6" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="388.6" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (3 samples, 0.17%)</title><rect x="389.3" y="963.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (2 samples, 0.12%)</title><rect x="389.3" y="947.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getReturnType (1 samples, 0.06%)</title><rect x="389.3" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.3" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="389.3" y="915.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="392.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$AbstractBase.asErasures (1 samples, 0.06%)</title><rect x="390.0" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Explicit.&lt;init&gt; (1 samples, 0.06%)</title><rect x="390.0" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.06%)</title><rect x="390.6" y="947.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.6" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.06%)</title><rect x="390.6" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.6" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="390.6" y="915.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.06%)</title><rect x="390.6" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (10 samples, 0.58%)</title><rect x="391.3" y="979.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Frozen.getDeclaredMethods (1 samples, 0.06%)</title><rect x="391.3" y="963.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="392.0" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.extendBy (1 samples, 0.06%)</title><rect x="392.0" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.06%)</title><rect x="392.0" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="392.0" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="392.0" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token.equals (1 samples, 0.06%)</title><rect x="392.0" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.0" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.06%)</title><rect x="392.0" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="392.0" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="392.0" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (8 samples, 0.46%)</title><rect x="392.7" y="963.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (8 samples, 0.46%)</title><rect x="392.7" y="947.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="392.7" y="931.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="392.7" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.7" y="926.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f136c8b7080 (1 samples, 0.06%)</title><rect x="392.7" y="899.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="393.4" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.hashCode (1 samples, 0.06%)</title><rect x="393.4" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.hashCode (1 samples, 0.06%)</title><rect x="393.4" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.hashCode (1 samples, 0.06%)</title><rect x="393.4" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (1 samples, 0.06%)</title><rect x="393.4" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (1 samples, 0.06%)</title><rect x="393.4" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="393.4" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="393.4" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="393.4" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="393.4" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="393.4" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="393.4" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.4" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="393.4" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="393.4" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.4" y="718.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="393.4" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.4" y="702.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="393.4" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.4" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="393.4" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.4" y="670.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="393.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="654.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytesBytes (1 samples, 0.06%)</title><rect x="393.4" y="627.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="396.4" y="638.0"></text>
</g>
<g>
<title>jni_GetPrimitiveArrayCritical (1 samples, 0.06%)</title><rect x="393.4" y="611.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="396.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (6 samples, 0.35%)</title><rect x="394.0" y="931.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="394.0" y="915.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.06%)</title><rect x="394.0" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="394.0" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="394.0" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.0" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="394.0" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$TypeSubstituting.get (1 samples, 0.06%)</title><rect x="394.0" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$TypeSubstituting.get (1 samples, 0.06%)</title><rect x="394.0" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterList.get (1 samples, 0.06%)</title><rect x="394.0" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="394.7" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="394.7" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="394.7" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.06%)</title><rect x="394.7" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="394.7" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.06%)</title><rect x="394.7" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="394.7" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.06%)</title><rect x="394.7" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.06%)</title><rect x="394.7" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForRawType.onParameterizedType (1 samples, 0.06%)</title><rect x="394.7" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForRawType.onParameterizedType (1 samples, 0.06%)</title><rect x="394.7" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.06%)</title><rect x="394.7" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="394.7" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (4 samples, 0.23%)</title><rect x="395.4" y="915.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (4 samples, 0.23%)</title><rect x="395.4" y="899.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (4 samples, 0.23%)</title><rect x="395.4" y="883.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.inject (1 samples, 0.06%)</title><rect x="395.4" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (1 samples, 0.06%)</title><rect x="395.4" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (1 samples, 0.06%)</title><rect x="395.4" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key.equals (1 samples, 0.06%)</title><rect x="395.4" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.getIdentifiers (1 samples, 0.06%)</title><rect x="395.4" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.4" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="395.4" y="787.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="398.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (3 samples, 0.17%)</title><rect x="396.1" y="867.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (3 samples, 0.17%)</title><rect x="396.1" y="851.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (3 samples, 0.17%)</title><rect x="396.1" y="835.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="396.1" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.06%)</title><rect x="396.1" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="396.1" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="396.1" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getType (1 samples, 0.06%)</title><rect x="396.1" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.06%)</title><rect x="396.1" y="739.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="396.1" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="396.1" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="396.1" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="396.1" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.resolve (1 samples, 0.06%)</title><rect x="396.1" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="396.8" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="396.8" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="396.8" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="396.8" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="396.8" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="396.8" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="396.8" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isVisibleTo (1 samples, 0.06%)</title><rect x="396.8" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.06%)</title><rect x="396.8" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.06%)</title><rect x="396.8" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.represents (1 samples, 0.06%)</title><rect x="396.8" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="396.8" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="396.8" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="396.8" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.06%)</title><rect x="396.8" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.8" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="397.4" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="397.4" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="397.4" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="397.4" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isVisibleTo (1 samples, 0.06%)</title><rect x="397.4" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isVirtual (1 samples, 0.06%)</title><rect x="397.4" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPrivate (1 samples, 0.06%)</title><rect x="397.4" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="397.4" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (9 samples, 0.52%)</title><rect x="398.1" y="1011.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (8 samples, 0.46%)</title><rect x="398.1" y="995.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 0.29%)</title><rect x="398.1" y="979.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (5 samples, 0.29%)</title><rect x="398.1" y="963.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (5 samples, 0.29%)</title><rect x="398.1" y="947.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (5 samples, 0.29%)</title><rect x="398.1" y="931.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (5 samples, 0.29%)</title><rect x="398.1" y="915.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (5 samples, 0.29%)</title><rect x="398.1" y="899.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.1" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="398.1" y="883.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="401.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (4 samples, 0.23%)</title><rect x="398.8" y="883.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (4 samples, 0.23%)</title><rect x="398.8" y="867.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (4 samples, 0.23%)</title><rect x="398.8" y="851.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (4 samples, 0.23%)</title><rect x="398.8" y="835.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (4 samples, 0.23%)</title><rect x="398.8" y="819.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (4 samples, 0.23%)</title><rect x="398.8" y="803.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 0.23%)</title><rect x="398.8" y="787.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.23%)</title><rect x="398.8" y="771.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.23%)</title><rect x="398.8" y="755.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (3 samples, 0.17%)</title><rect x="398.8" y="739.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.8" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (3 samples, 0.17%)</title><rect x="398.8" y="723.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.8" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (3 samples, 0.17%)</title><rect x="398.8" y="707.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="398.8" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.8" y="702.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="398.8" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.8" y="686.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="398.8" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.8" y="670.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="398.8" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.8" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="398.8" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.8" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="398.8" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.8" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="398.8" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.8" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="398.8" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.8" y="590.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="398.8" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.8" y="574.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="398.8" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.06%)</title><rect x="398.8" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (1 samples, 0.06%)</title><rect x="398.8" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.encode (1 samples, 0.06%)</title><rect x="398.8" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.8" y="510.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (1 samples, 0.06%)</title><rect x="398.8" y="483.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeLoop (1 samples, 0.06%)</title><rect x="398.8" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8$Encoder.encodeArrayLoop (1 samples, 0.06%)</title><rect x="398.8" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/cs/UTF_8.updatePositions (1 samples, 0.06%)</title><rect x="398.8" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="401.8" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="399.5" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.5" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="399.5" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="399.5" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="399.5" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="399.5" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.5" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="399.5" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="399.5" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="399.5" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="399.5" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="399.5" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="399.5" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="399.5" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="399.5" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="399.5" y="483.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="399.5" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.5" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="400.2" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.2" y="702.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="400.2" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.2" y="686.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="400.2" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.2" y="670.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="400.2" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.2" y="654.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="400.2" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="400.2" y="611.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="403.2" y="622.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="400.2" y="595.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="403.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="400.8" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (1 samples, 0.06%)</title><rect x="400.8" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="400.8" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="400.8" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="400.8" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (3 samples, 0.17%)</title><rect x="401.5" y="979.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (3 samples, 0.17%)</title><rect x="401.5" y="963.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (3 samples, 0.17%)</title><rect x="401.5" y="947.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.17%)</title><rect x="401.5" y="931.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.17%)</title><rect x="401.5" y="915.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (3 samples, 0.17%)</title><rect x="401.5" y="899.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (3 samples, 0.17%)</title><rect x="401.5" y="883.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.12%)</title><rect x="401.5" y="867.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.12%)</title><rect x="401.5" y="851.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="404.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.12%)</title><rect x="401.5" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.12%)</title><rect x="401.5" y="819.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.12%)</title><rect x="401.5" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (2 samples, 0.12%)</title><rect x="401.5" y="787.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (2 samples, 0.12%)</title><rect x="401.5" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="404.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (2 samples, 0.12%)</title><rect x="401.5" y="755.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.12%)</title><rect x="401.5" y="739.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.12%)</title><rect x="401.5" y="723.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="401.5" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.12%)</title><rect x="401.5" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.12%)</title><rect x="401.5" y="675.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="401.5" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="404.5" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="401.5" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.5" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="401.5" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="401.5" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.5" y="622.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="401.5" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.5" y="606.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="401.5" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.5" y="590.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="401.5" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.5" y="574.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="401.5" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="401.5" y="531.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="404.5" y="542.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="401.5" y="515.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="404.5" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="402.2" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="402.2" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="402.2" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="402.2" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="402.2" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="402.2" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="402.2" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.06%)</title><rect x="402.9" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="402.9" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="402.9" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="402.9" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="402.9" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="402.9" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="402.9" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="402.9" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.9" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="402.9" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.9" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.06%)</title><rect x="402.9" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.9" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.tabAt (1 samples, 0.06%)</title><rect x="402.9" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.9" y="718.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getObjectVolatile (1 samples, 0.06%)</title><rect x="402.9" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="995.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="403.6" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="403.6" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="403.6" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="403.6" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="403.6" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getName (1 samples, 0.06%)</title><rect x="403.6" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isMethod (1 samples, 0.06%)</title><rect x="403.6" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isTypeInitializer (1 samples, 0.06%)</title><rect x="403.6" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="403.6" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.6" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="403.6" y="739.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="406.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (6 samples, 0.35%)</title><rect x="404.2" y="1011.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.2" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (6 samples, 0.35%)</title><rect x="404.2" y="995.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (6 samples, 0.35%)</title><rect x="404.2" y="979.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (6 samples, 0.35%)</title><rect x="404.2" y="963.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="947.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="931.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="915.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="899.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="883.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="867.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="851.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="835.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="819.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="803.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="787.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (6 samples, 0.35%)</title><rect x="404.2" y="771.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (6 samples, 0.35%)</title><rect x="404.2" y="755.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (5 samples, 0.29%)</title><rect x="404.2" y="739.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (5 samples, 0.29%)</title><rect x="404.2" y="723.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (5 samples, 0.29%)</title><rect x="404.2" y="707.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (5 samples, 0.29%)</title><rect x="404.2" y="691.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.29%)</title><rect x="404.2" y="675.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.29%)</title><rect x="404.2" y="659.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.29%)</title><rect x="404.2" y="643.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (3 samples, 0.17%)</title><rect x="404.2" y="627.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.2" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (3 samples, 0.17%)</title><rect x="404.2" y="611.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.2" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (3 samples, 0.17%)</title><rect x="404.2" y="595.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.2" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="404.2" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="404.2" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="404.2" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="404.2" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="404.2" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.2" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="404.2" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="404.2" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="404.2" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="404.2" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="404.2" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="404.2" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="404.2" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.2" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.12%)</title><rect x="404.9" y="579.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.9" y="590.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.12%)</title><rect x="404.9" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.9" y="574.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.12%)</title><rect x="404.9" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.9" y="558.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.12%)</title><rect x="404.9" y="531.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.9" y="542.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.12%)</title><rect x="404.9" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="404.9" y="499.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="407.9" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="404.9" y="483.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="407.9" y="494.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="405.6" y="499.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="408.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.12%)</title><rect x="406.3" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="406.3" y="611.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="406.3" y="595.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.12%)</title><rect x="406.3" y="579.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.06%)</title><rect x="407.0" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.06%)</title><rect x="407.0" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="410.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (1 samples, 0.06%)</title><rect x="407.0" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.06%)</title><rect x="407.0" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.0" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.06%)</title><rect x="407.0" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="407.0" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="407.0" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="407.0" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="410.0" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isSamePackage (1 samples, 0.06%)</title><rect x="407.6" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.6" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="407.6" y="723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="410.6" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="407.6" y="707.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="410.6" y="718.0"></text>
</g>
<g>
<title>DirectNativeCallWrapper::instruction_address() const (1 samples, 0.06%)</title><rect x="407.6" y="691.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="410.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (22 samples, 1.27%)</title><rect x="408.3" y="1027.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (22 samples, 1.27%)</title><rect x="408.3" y="1011.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default$1.resolve (2 samples, 0.12%)</title><rect x="409.0" y="995.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter.&lt;init&gt; (2 samples, 0.12%)</title><rect x="409.0" y="979.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (2 samples, 0.12%)</title><rect x="409.0" y="963.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.&lt;init&gt; (2 samples, 0.12%)</title><rect x="409.0" y="947.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.0" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="409.0" y="931.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="412.0" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="409.0" y="915.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="412.0" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="409.0" y="899.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="412.0" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="409.0" y="883.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="412.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantNameAndType (1 samples, 0.06%)</title><rect x="409.7" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.hash (1 samples, 0.06%)</title><rect x="409.7" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing.writeTo (2 samples, 0.12%)</title><rect x="410.4" y="995.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.&lt;init&gt; (2 samples, 0.12%)</title><rect x="410.4" y="979.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/field/FieldDescription$AbstractBase.getDescriptor (2 samples, 0.12%)</title><rect x="410.4" y="963.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType.getDescriptor (1 samples, 0.06%)</title><rect x="410.4" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getInternalName (1 samples, 0.06%)</title><rect x="410.4" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.4" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.06%)</title><rect x="410.4" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyFieldDescription.getType (1 samples, 0.06%)</title><rect x="411.0" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (17 samples, 0.98%)</title><rect x="411.7" y="995.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (17 samples, 0.98%)</title><rect x="411.7" y="979.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.06%)</title><rect x="411.7" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.06%)</title><rect x="411.7" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (1 samples, 0.06%)</title><rect x="411.7" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="414.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.06%)</title><rect x="411.7" y="915.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.7" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="411.7" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyTypeList.get (1 samples, 0.06%)</title><rect x="411.7" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyTypeList.get (1 samples, 0.06%)</title><rect x="411.7" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="411.7" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="411.7" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="411.7" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.7" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="411.7" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.7" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.&lt;init&gt; (1 samples, 0.06%)</title><rect x="411.7" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="411.7" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="411.7" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (14 samples, 0.81%)</title><rect x="412.4" y="963.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.4" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="412.4" y="947.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="415.4" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="412.4" y="931.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="415.4" y="942.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="412.4" y="915.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="415.4" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="412.4" y="899.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="415.4" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="412.4" y="883.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="415.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (13 samples, 0.75%)</title><rect x="413.1" y="947.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (3 samples, 0.17%)</title><rect x="413.8" y="931.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (3 samples, 0.17%)</title><rect x="413.8" y="915.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (2 samples, 0.12%)</title><rect x="414.4" y="899.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="414.4" y="883.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="414.4" y="867.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.12%)</title><rect x="414.4" y="851.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="414.4" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.06%)</title><rect x="415.1" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.06%)</title><rect x="415.1" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType.getDescriptor (1 samples, 0.06%)</title><rect x="415.1" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.06%)</title><rect x="415.8" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (8 samples, 0.46%)</title><rect x="416.5" y="931.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLineNumber (1 samples, 0.06%)</title><rect x="416.5" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitLineNumber (1 samples, 0.06%)</title><rect x="416.5" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="419.5" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="416.5" y="883.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="419.5" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="416.5" y="867.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="419.5" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="416.5" y="851.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="419.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="416.5" y="835.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="419.5" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="416.5" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="419.5" y="830.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.06%)</title><rect x="416.5" y="803.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="419.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (7 samples, 0.40%)</title><rect x="417.2" y="915.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (7 samples, 0.40%)</title><rect x="417.2" y="899.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (7 samples, 0.40%)</title><rect x="417.2" y="883.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (6 samples, 0.35%)</title><rect x="417.2" y="867.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (6 samples, 0.35%)</title><rect x="417.2" y="851.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (6 samples, 0.35%)</title><rect x="417.2" y="835.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (6 samples, 0.35%)</title><rect x="417.2" y="819.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (2 samples, 0.12%)</title><rect x="417.2" y="803.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.apply (2 samples, 0.12%)</title><rect x="417.2" y="787.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.doApply (2 samples, 0.12%)</title><rect x="417.2" y="771.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference.resolve (2 samples, 0.12%)</title><rect x="417.2" y="755.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/primitive/VoidAwareAssigner.assign (1 samples, 0.06%)</title><rect x="417.8" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.8" y="750.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbbb0000)@0x00007f136c8bec80 (1 samples, 0.06%)</title><rect x="417.8" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (2 samples, 0.12%)</title><rect x="418.5" y="803.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.06%)</title><rect x="418.5" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.06%)</title><rect x="418.5" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitLdcInsn (1 samples, 0.06%)</title><rect x="418.5" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.adjustStack (1 samples, 0.06%)</title><rect x="418.5" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.adjustStack (1 samples, 0.06%)</title><rect x="418.5" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.5" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="418.5" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.5" y="718.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.06%)</title><rect x="418.5" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="421.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="419.2" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="419.2" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayStackManipulation.apply (1 samples, 0.06%)</title><rect x="419.2" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="419.2" y="739.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.2" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="419.2" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="419.2" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="419.2" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.2" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="419.2" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.2" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="419.2" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.2" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="419.2" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="419.2" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.2" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="419.2" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.2" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="419.2" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.2" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="419.2" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="419.2" y="563.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="422.2" y="574.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="419.2" y="547.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="422.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitEnd (2 samples, 0.12%)</title><rect x="419.9" y="803.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitEnd (2 samples, 0.12%)</title><rect x="419.9" y="787.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound.onEnd (2 samples, 0.12%)</title><rect x="419.9" y="771.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/ExceptionHandlers$1.apply (2 samples, 0.12%)</title><rect x="419.9" y="755.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="420.6" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="420.6" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="420.6" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="420.6" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="420.6" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="420.6" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="420.6" y="643.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.prepare (1 samples, 0.06%)</title><rect x="421.2" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound.onPrepare (1 samples, 0.06%)</title><rect x="421.2" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="421.2" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="421.2" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="421.2" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="421.2" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="421.2" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="421.2" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="421.2" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantClass (1 samples, 0.06%)</title><rect x="421.2" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8Reference (1 samples, 0.06%)</title><rect x="421.2" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8 (1 samples, 0.06%)</title><rect x="421.2" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.2" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="421.2" y="675.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="424.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="421.2" y="659.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="424.2" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="421.2" y="643.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="424.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="421.2" y="627.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="424.2" y="638.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.06%)</title><rect x="421.2" y="611.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="424.2" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="421.2" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="424.2" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="421.2" y="579.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="424.2" y="590.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="421.2" y="563.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="424.2" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="421.2" y="547.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="424.2" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="421.2" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="424.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.visitAnnotation (1 samples, 0.06%)</title><rect x="421.9" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/AnnotationWriter.create (1 samples, 0.06%)</title><rect x="421.9" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/AnnotationWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="421.9" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/AnnotationVisitor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="421.9" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/AnnotationVisitor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="421.9" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitInnerClass (1 samples, 0.06%)</title><rect x="422.6" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.considerTriggerAfterAttributes (1 samples, 0.06%)</title><rect x="422.6" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onAfterAttributes (1 samples, 0.06%)</title><rect x="422.6" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/attribute/TypeAttributeAppender$ForInstrumentedType$Differentiating.apply (1 samples, 0.06%)</title><rect x="422.6" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (2 samples, 0.12%)</title><rect x="423.3" y="1027.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.returns (1 samples, 0.06%)</title><rect x="423.3" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.returns (1 samples, 0.06%)</title><rect x="423.3" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.erasure (1 samples, 0.06%)</title><rect x="423.3" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.3" y="990.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="423.3" y="963.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="426.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getReturnType (1 samples, 0.06%)</title><rect x="424.0" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveReturnType (1 samples, 0.06%)</title><rect x="424.0" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="424.0" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="427.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="424.0" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="424.0" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="424.0" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.0" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="424.0" y="915.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="427.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onComplete (1 samples, 0.06%)</title><rect x="424.6" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.6" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="424.6" y="1043.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="427.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onDiscovery (1 samples, 0.06%)</title><rect x="425.3" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.&lt;init&gt; (1 samples, 0.06%)</title><rect x="426.0" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.&lt;init&gt; (1 samples, 0.06%)</title><rect x="426.0" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.0" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayItr.hasNext (1 samples, 0.06%)</title><rect x="426.0" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.of (2 samples, 0.12%)</title><rect x="426.7" y="1091.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.7" y="1102.0"></text>
</g>
<g>
<title>Runtime1::is_instance_of(oopDesc*, oopDesc*) (1 samples, 0.06%)</title><rect x="426.7" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="429.7" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.&lt;init&gt; (1 samples, 0.06%)</title><rect x="427.4" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (8 samples, 0.46%)</title><rect x="428.0" y="1219.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (8 samples, 0.46%)</title><rect x="428.0" y="1203.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Class.getName (7 samples, 0.40%)</title><rect x="428.0" y="1187.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (7 samples, 0.40%)</title><rect x="428.0" y="1171.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.0" y="1182.0"></text>
</g>
<g>
<title>JVM_InitClassName (7 samples, 0.40%)</title><rect x="428.0" y="1155.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="431.0" y="1166.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (7 samples, 0.40%)</title><rect x="428.0" y="1139.0" width="4.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="431.0" y="1150.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (6 samples, 0.35%)</title><rect x="428.0" y="1123.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="431.0" y="1134.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1196148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1196148ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="428.0" y="1107.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="431.0" y="1118.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (2 samples, 0.12%)</title><rect x="428.7" y="1107.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="431.7" y="1118.0"></text>
</g>
<g>
<title>WeakHandle&lt;(WeakHandleType)2&gt;::create(Handle) (1 samples, 0.06%)</title><rect x="428.7" y="1091.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="431.7" y="1102.0"></text>
</g>
<g>
<title>OopStorage::allocate() (1 samples, 0.06%)</title><rect x="428.7" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="431.7" y="1086.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="428.7" y="1059.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="431.7" y="1070.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.06%)</title><rect x="429.4" y="1091.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="432.4" y="1102.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.06%)</title><rect x="430.1" y="1107.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="433.1" y="1118.0"></text>
</g>
<g>
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (1 samples, 0.06%)</title><rect x="430.1" y="1091.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="433.1" y="1102.0"></text>
</g>
<g>
<title>WeakHandle&lt;(WeakHandleType)2&gt;::create(Handle) (2 samples, 0.12%)</title><rect x="430.7" y="1107.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="433.7" y="1118.0"></text>
</g>
<g>
<title>Symbol::as_klass_external_name() const (1 samples, 0.06%)</title><rect x="432.1" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="435.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.06%)</title><rect x="432.8" y="1187.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.8" y="1198.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.06%)</title><rect x="432.8" y="1171.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="435.8" y="1182.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.06%)</title><rect x="432.8" y="1155.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="435.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.06%)</title><rect x="433.5" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.06%)</title><rect x="433.5" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.5" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (2 samples, 0.12%)</title><rect x="434.1" y="1235.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.12%)</title><rect x="434.1" y="1219.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="437.1" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader$CodeSourceKey.equals (1 samples, 0.06%)</title><rect x="434.1" y="1203.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.1" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader$CodeSourceKey.hashCode (1 samples, 0.06%)</title><rect x="434.8" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="434.8" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="434.8" y="1171.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (3 samples, 0.17%)</title><rect x="435.5" y="1251.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (3 samples, 0.17%)</title><rect x="435.5" y="1235.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.definePackage (1 samples, 0.06%)</title><rect x="435.5" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.5" y="1230.0"></text>
</g>
<g>
<title>java/util/jar/JavaUtilJarAccessImpl.getTrustedAttributes (1 samples, 0.06%)</title><rect x="435.5" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.getAndVerifyPackage (2 samples, 0.12%)</title><rect x="436.2" y="1219.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getDefinedPackage (1 samples, 0.06%)</title><rect x="436.2" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="436.2" y="1187.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.isSealed (1 samples, 0.06%)</title><rect x="436.9" y="1203.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.9" y="1214.0"></text>
</g>
<g>
<title>java/util/jar/JavaUtilJarAccessImpl.getTrustedAttributes (1 samples, 0.06%)</title><rect x="436.9" y="1187.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.9" y="1198.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.getTrustedAttributes (1 samples, 0.06%)</title><rect x="436.9" y="1171.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="439.9" y="1182.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.getAttributes (1 samples, 0.06%)</title><rect x="436.9" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.9" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="436.9" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.9" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="436.9" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="436.9" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="436.9" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.9" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="436.9" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (3 samples, 0.17%)</title><rect x="437.5" y="1251.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (3 samples, 0.17%)</title><rect x="437.5" y="1235.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (2 samples, 0.12%)</title><rect x="437.5" y="1219.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.5" y="1230.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (2 samples, 0.12%)</title><rect x="437.5" y="1203.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.5" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (2 samples, 0.12%)</title><rect x="437.5" y="1187.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.5" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="437.5" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.5" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="437.5" y="1155.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.5" y="1166.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="438.2" y="1171.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.2" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.CENSIZ (1 samples, 0.06%)</title><rect x="438.2" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.2" y="1166.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.LG (1 samples, 0.06%)</title><rect x="438.2" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.2" y="1150.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.SH (1 samples, 0.06%)</title><rect x="438.2" y="1123.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getManifest (1 samples, 0.06%)</title><rect x="438.9" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.9" y="1230.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getManifest (1 samples, 0.06%)</title><rect x="438.9" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.9" y="1214.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="438.9" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.9" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.poll (1 samples, 0.06%)</title><rect x="438.9" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (34 samples, 1.96%)</title><rect x="439.6" y="1251.0" width="23.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.6" y="1262.0">j..</text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (32 samples, 1.84%)</title><rect x="440.3" y="1235.0" width="21.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.3" y="1246.0">j..</text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (28 samples, 1.61%)</title><rect x="440.3" y="1219.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="443.3" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (28 samples, 1.61%)</title><rect x="440.3" y="1203.0" width="19.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.3" y="1214.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (3 samples, 0.17%)</title><rect x="440.3" y="1187.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="443.3" y="1198.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytesBytes (1 samples, 0.06%)</title><rect x="442.3" y="1187.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="445.3" y="1198.0"></text>
</g>
<g>
<title>jni_GetPrimitiveArrayCritical (1 samples, 0.06%)</title><rect x="442.3" y="1171.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="445.3" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.06%)</title><rect x="442.3" y="1155.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="445.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.98%)</title><rect x="443.0" y="1187.0" width="11.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="446.0" y="1198.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (17 samples, 0.98%)</title><rect x="443.0" y="1171.0" width="11.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="446.0" y="1182.0"></text>
</g>
<g>
<title>inflate (7 samples, 0.40%)</title><rect x="454.5" y="1187.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="457.5" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (4 samples, 0.23%)</title><rect x="459.3" y="1219.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.3" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (4 samples, 0.23%)</title><rect x="459.3" y="1203.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.3" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.close (2 samples, 0.12%)</title><rect x="459.3" y="1187.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.3" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.remove (1 samples, 0.06%)</title><rect x="460.0" y="1171.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.0" y="1182.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.remove (1 samples, 0.06%)</title><rect x="460.0" y="1155.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="460.0" y="1139.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.0" y="1150.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (2 samples, 0.12%)</title><rect x="460.7" y="1187.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.7" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (2 samples, 0.12%)</title><rect x="460.7" y="1171.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.7" y="1182.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.06%)</title><rect x="461.3" y="1155.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.3" y="1166.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.06%)</title><rect x="461.3" y="1139.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.3" y="1150.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.06%)</title><rect x="461.3" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.3" y="1134.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.06%)</title><rect x="461.3" y="1107.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="464.3" y="1118.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.06%)</title><rect x="461.3" y="1091.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="464.3" y="1102.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="461.3" y="1075.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="464.3" y="1086.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="462.0" y="1235.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="465.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getCodeSigners (1 samples, 0.06%)</title><rect x="462.7" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.7" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/classes.jsa (1 samples, 0.06%)</title><rect x="462.7" y="1235.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="465.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getCodeSourceURL (1 samples, 0.06%)</title><rect x="463.4" y="1251.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (10 samples, 0.58%)</title><rect x="464.1" y="1267.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (10 samples, 0.58%)</title><rect x="464.1" y="1251.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.1" y="1262.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="464.1" y="1235.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.1" y="1246.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="464.1" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.1" y="1230.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="464.1" y="1203.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.1" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="464.1" y="1187.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.1" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="464.1" y="1171.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.1" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="464.1" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.1" y="1166.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.hashN (1 samples, 0.06%)</title><rect x="464.1" y="1139.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (9 samples, 0.52%)</title><rect x="464.7" y="1235.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.7" y="1246.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (6 samples, 0.35%)</title><rect x="465.4" y="1219.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.4" y="1230.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (6 samples, 0.35%)</title><rect x="465.4" y="1203.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="466.1" y="1187.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.1" y="1198.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="466.1" y="1171.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="469.1" y="1182.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (4 samples, 0.23%)</title><rect x="466.8" y="1187.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="466.8" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.8" y="1182.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseContextSpec (3 samples, 0.17%)</title><rect x="467.5" y="1171.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.12%)</title><rect x="467.5" y="1155.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.12%)</title><rect x="467.5" y="1139.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.12%)</title><rect x="467.5" y="1123.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.5" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="468.1" y="1107.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="471.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="468.8" y="1155.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.06%)</title><rect x="468.8" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.8" y="1150.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.encodePath (2 samples, 0.12%)</title><rect x="469.5" y="1219.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="1230.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.firstEncodeIndex (2 samples, 0.12%)</title><rect x="469.5" y="1203.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (6 samples, 0.35%)</title><rect x="470.9" y="1283.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (6 samples, 0.35%)</title><rect x="470.9" y="1267.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (6 samples, 0.35%)</title><rect x="470.9" y="1251.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (6 samples, 0.35%)</title><rect x="470.9" y="1235.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (6 samples, 0.35%)</title><rect x="470.9" y="1219.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (6 samples, 0.35%)</title><rect x="470.9" y="1203.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.9" y="1214.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (6 samples, 0.35%)</title><rect x="470.9" y="1187.0" width="4.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="473.9" y="1198.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (5 samples, 0.29%)</title><rect x="470.9" y="1171.0" width="3.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="473.9" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (4 samples, 0.23%)</title><rect x="470.9" y="1155.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="473.9" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (4 samples, 0.23%)</title><rect x="470.9" y="1139.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="473.9" y="1150.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (2 samples, 0.12%)</title><rect x="470.9" y="1123.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="473.9" y="1134.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_stream(char const*, Thread*) (2 samples, 0.12%)</title><rect x="470.9" y="1107.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="473.9" y="1118.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_entry(char const*, int*, bool, Thread*) (1 samples, 0.06%)</title><rect x="470.9" y="1091.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="473.9" y="1102.0"></text>
</g>
<g>
<title>ZIP_FindEntry (1 samples, 0.06%)</title><rect x="470.9" y="1075.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="473.9" y="1086.0"></text>
</g>
<g>
<title>ZIP_GetEntry2 (1 samples, 0.06%)</title><rect x="470.9" y="1059.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="473.9" y="1070.0"></text>
</g>
<g>
<title>ZIP_FindEntry (1 samples, 0.06%)</title><rect x="471.5" y="1091.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="474.5" y="1102.0"></text>
</g>
<g>
<title>Dictionary::find_shared_class(int, unsigned int, Symbol*) (1 samples, 0.06%)</title><rect x="472.2" y="1123.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="475.2" y="1134.0"></text>
</g>
<g>
<title>PerfTraceTime::~PerfTraceTime() (1 samples, 0.06%)</title><rect x="472.9" y="1123.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="475.9" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.06%)</title><rect x="473.6" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="476.6" y="1166.0"></text>
</g>
<g>
<title>VerifyFixClassname (1 samples, 0.06%)</title><rect x="474.3" y="1171.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="477.3" y="1182.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.06%)</title><rect x="474.9" y="1379.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.9" y="1390.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.06%)</title><rect x="474.9" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.9" y="1374.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.06%)</title><rect x="474.9" y="1347.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.9" y="1358.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.06%)</title><rect x="474.9" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.9" y="1342.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.06%)</title><rect x="474.9" y="1315.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.9" y="1326.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (1 samples, 0.06%)</title><rect x="474.9" y="1299.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.9" y="1310.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 0.06%)</title><rect x="474.9" y="1283.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.9" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 0.06%)</title><rect x="474.9" y="1267.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.9" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (1 samples, 0.06%)</title><rect x="474.9" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.9" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (1 samples, 0.06%)</title><rect x="474.9" y="1235.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.9" y="1246.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.06%)</title><rect x="474.9" y="1219.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="477.9" y="1230.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="474.9" y="1203.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="477.9" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="474.9" y="1187.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="477.9" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="474.9" y="1171.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="477.9" y="1182.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="474.9" y="1155.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="477.9" y="1166.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.06%)</title><rect x="475.6" y="1379.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.6" y="1390.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.06%)</title><rect x="475.6" y="1363.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.6" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="476.3" y="1395.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.3" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="476.3" y="1379.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.3" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="476.3" y="1363.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.3" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="476.3" y="1347.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.3" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="476.3" y="1331.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.3" y="1342.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="476.3" y="1315.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.3" y="1326.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="476.3" y="1299.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.3" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="476.3" y="1283.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="476.3" y="1267.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="476.3" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="476.3" y="1235.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.3" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="476.3" y="1219.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.3" y="1230.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="476.3" y="1203.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.3" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="476.3" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.3" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="476.3" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.3" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="476.3" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.3" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="476.3" y="1139.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.3" y="1150.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="476.3" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="476.3" y="1107.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="476.3" y="1091.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.3" y="1102.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="476.3" y="1075.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="479.3" y="1086.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="476.3" y="1059.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="479.3" y="1070.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="476.3" y="1043.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="479.3" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="476.3" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="479.3" y="1038.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="476.3" y="1011.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="479.3" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="476.3" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="479.3" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="476.3" y="979.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="479.3" y="990.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.06%)</title><rect x="476.3" y="963.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="479.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (38 samples, 2.19%)</title><rect x="477.0" y="1395.0" width="25.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.0" y="1406.0">j..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.run (1 samples, 0.06%)</title><rect x="477.0" y="1379.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.0" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.runDutyCycle (1 samples, 0.06%)</title><rect x="477.0" y="1363.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.0" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.consumeFromPrimaryQueue (1 samples, 0.06%)</title><rect x="477.0" y="1347.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.0" y="1358.0"></text>
</g>
<g>
<title>org/jctools/queues/MpscBlockingConsumerArrayQueue.poll (1 samples, 0.06%)</title><rect x="477.0" y="1331.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.0" y="1342.0"></text>
</g>
<g>
<title>org/jctools/queues/MpscBlockingConsumerArrayQueue.parkUntilNext (1 samples, 0.06%)</title><rect x="477.0" y="1315.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.0" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Worker.run (37 samples, 2.13%)</title><rect x="477.6" y="1379.0" width="25.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.6" y="1390.0">d..</text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.run (22 samples, 1.27%)</title><rect x="478.3" y="1363.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$RunnableTask.run (22 samples, 1.27%)</title><rect x="478.3" y="1347.0" width="15.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.3" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$RunnableTask.run (22 samples, 1.27%)</title><rect x="478.3" y="1331.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.3" y="1342.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask.run (22 samples, 1.27%)</title><rect x="478.3" y="1315.0" width="15.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.3" y="1326.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.performCleanUp (21 samples, 1.21%)</title><rect x="479.0" y="1299.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.0" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="480.4" y="1283.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="483.4" y="1294.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="480.4" y="1267.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="483.4" y="1278.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="480.4" y="1251.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="483.4" y="1262.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="480.4" y="1235.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="483.4" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="480.4" y="1219.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="483.4" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="480.4" y="1203.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="483.4" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.06%)</title><rect x="480.4" y="1187.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="483.4" y="1198.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="480.4" y="1171.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="483.4" y="1182.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="480.4" y="1155.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="483.4" y="1166.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="480.4" y="1139.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="483.4" y="1150.0"></text>
</g>
<g>
<title>AdapterBlob::create(CodeBuffer*) (1 samples, 0.06%)</title><rect x="480.4" y="1123.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="483.4" y="1134.0"></text>
</g>
<g>
<title>RuntimeBlob::RuntimeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*, bool) [clone .constprop.38] (1 samples, 0.06%)</title><rect x="480.4" y="1107.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="483.4" y="1118.0"></text>
</g>
<g>
<title>CodeBuffer::copy_relocations_to(CodeBlob*) const (1 samples, 0.06%)</title><rect x="480.4" y="1091.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="483.4" y="1102.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.maintenance (5 samples, 0.29%)</title><rect x="481.0" y="1283.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.0" y="1294.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.climb (1 samples, 0.06%)</title><rect x="481.0" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.0" y="1278.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.drainReadBuffer (2 samples, 0.12%)</title><rect x="481.7" y="1267.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.7" y="1278.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/StripedBuffer.drainTo (2 samples, 0.12%)</title><rect x="481.7" y="1251.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.7" y="1262.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedBuffer$RingBuffer.drainTo (2 samples, 0.12%)</title><rect x="481.7" y="1235.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.lazySet (1 samples, 0.06%)</title><rect x="482.4" y="1219.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.06%)</title><rect x="482.4" y="1203.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.4" y="1214.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireEntries (2 samples, 0.12%)</title><rect x="483.1" y="1267.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.1" y="1278.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireAfterAccessEntries (1 samples, 0.06%)</title><rect x="483.1" y="1251.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.1" y="1262.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMS.accessOrderWindowDeque (1 samples, 0.06%)</title><rect x="483.1" y="1235.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.1" y="1246.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.pacer (1 samples, 0.06%)</title><rect x="483.8" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (10 samples, 0.58%)</title><rect x="484.4" y="1283.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.4" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (10 samples, 0.58%)</title><rect x="484.4" y="1267.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.4" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (10 samples, 0.58%)</title><rect x="484.4" y="1251.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (10 samples, 0.58%)</title><rect x="484.4" y="1235.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (10 samples, 0.58%)</title><rect x="484.4" y="1219.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (10 samples, 0.58%)</title><rect x="484.4" y="1203.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (10 samples, 0.58%)</title><rect x="484.4" y="1187.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (10 samples, 0.58%)</title><rect x="484.4" y="1171.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (10 samples, 0.58%)</title><rect x="484.4" y="1155.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (10 samples, 0.58%)</title><rect x="484.4" y="1139.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (10 samples, 0.58%)</title><rect x="484.4" y="1123.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.4" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (10 samples, 0.58%)</title><rect x="484.4" y="1107.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.4" y="1118.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (10 samples, 0.58%)</title><rect x="484.4" y="1091.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (10 samples, 0.58%)</title><rect x="484.4" y="1075.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (10 samples, 0.58%)</title><rect x="484.4" y="1059.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.4" y="1070.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.58%)</title><rect x="484.4" y="1043.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (10 samples, 0.58%)</title><rect x="484.4" y="1027.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (10 samples, 0.58%)</title><rect x="484.4" y="1011.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (10 samples, 0.58%)</title><rect x="484.4" y="995.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (10 samples, 0.58%)</title><rect x="484.4" y="979.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (10 samples, 0.58%)</title><rect x="484.4" y="963.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onTransformation (1 samples, 0.06%)</title><rect x="484.4" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$ModuleReadEdgeCompleting.onTransformation (1 samples, 0.06%)</title><rect x="484.4" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.modify (1 samples, 0.06%)</title><rect x="484.4" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule$Dispatcher$Enabled$WithInstrumentationSupport.modify (1 samples, 0.06%)</title><rect x="484.4" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.4" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="484.4" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="484.4" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="484.4" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.06%)</title><rect x="484.4" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.4" y="846.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.redefineModule (1 samples, 0.06%)</title><rect x="484.4" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.06%)</title><rect x="484.4" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.06%)</title><rect x="484.4" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.06%)</title><rect x="484.4" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.06%)</title><rect x="484.4" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.06%)</title><rect x="484.4" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="484.4" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.06%)</title><rect x="484.4" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.06%)</title><rect x="484.4" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findStatic (1 samples, 0.06%)</title><rect x="484.4" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethod (1 samples, 0.06%)</title><rect x="484.4" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.06%)</title><rect x="484.4" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.06%)</title><rect x="484.4" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.06%)</title><rect x="484.4" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.06%)</title><rect x="484.4" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.shouldBeInitialized (1 samples, 0.06%)</title><rect x="484.4" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.4" y="590.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isSamePackage (1 samples, 0.06%)</title><rect x="484.4" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.12%)</title><rect x="485.1" y="947.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (2 samples, 0.12%)</title><rect x="485.1" y="931.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.06%)</title><rect x="485.1" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="485.1" y="899.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="485.1" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="485.1" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.06%)</title><rect x="485.1" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.06%)</title><rect x="485.1" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.06%)</title><rect x="485.1" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="485.1" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="485.1" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="485.1" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="485.1" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="485.1" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="485.1" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="485.1" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readClass (1 samples, 0.06%)</title><rect x="485.1" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="488.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readStringish (1 samples, 0.06%)</title><rect x="485.1" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="485.1" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="485.1" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="485.1" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.1" y="638.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/WrapRunnableAsNewTaskInstrumentation.getInstrumentationMuzzle (1 samples, 0.06%)</title><rect x="485.8" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.8" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="485.8" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.8" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="485.8" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.8" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="485.8" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.8" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="485.8" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.8" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="485.8" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.8" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="485.8" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.8" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="485.8" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.8" y="814.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="485.8" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.8" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="485.8" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.8" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="485.8" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.8" y="766.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="485.8" y="739.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="488.8" y="750.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="485.8" y="723.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="488.8" y="734.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="485.8" y="707.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="488.8" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="485.8" y="691.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="488.8" y="702.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="485.8" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="488.8" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="485.8" y="659.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="488.8" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="485.8" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="488.8" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="485.8" y="627.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="488.8" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="485.8" y="611.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="488.8" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.06%)</title><rect x="485.8" y="595.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="488.8" y="606.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.06%)</title><rect x="485.8" y="579.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="488.8" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (4 samples, 0.23%)</title><rect x="486.5" y="947.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (4 samples, 0.23%)</title><rect x="486.5" y="931.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (4 samples, 0.23%)</title><rect x="486.5" y="915.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (4 samples, 0.23%)</title><rect x="486.5" y="899.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (2 samples, 0.12%)</title><rect x="486.5" y="883.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.5" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="486.5" y="867.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="489.5" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="486.5" y="851.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="489.5" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="489.5" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="819.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="489.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="803.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="489.5" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="489.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="771.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="489.5" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="755.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="489.5" y="766.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="739.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="489.5" y="750.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="486.5" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="489.5" y="734.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.06%)</title><rect x="486.5" y="707.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="489.5" y="718.0"></text>
</g>
<g>
<title>jni_DeleteGlobalRef (1 samples, 0.06%)</title><rect x="486.5" y="691.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="489.5" y="702.0"></text>
</g>
<g>
<title>OopStorage::release(oopDesc* const*) (1 samples, 0.06%)</title><rect x="486.5" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="489.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.06%)</title><rect x="487.2" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.2" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.2" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.2" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.2" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory.make (1 samples, 0.06%)</title><rect x="487.2" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.06%)</title><rect x="487.2" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.06%)</title><rect x="487.2" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.2" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.06%)</title><rect x="487.2" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.2" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.06%)</title><rect x="487.2" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.06%)</title><rect x="487.2" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.06%)</title><rect x="487.2" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.2" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.06%)</title><rect x="487.2" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.2" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.06%)</title><rect x="487.2" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.2" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.2" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.2" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.2" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.2" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.referencedTypes (1 samples, 0.06%)</title><rect x="487.2" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.2" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getMethods (1 samples, 0.06%)</title><rect x="487.2" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.2" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (1 samples, 0.06%)</title><rect x="487.2" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.06%)</title><rect x="487.8" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.8" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="487.8" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="487.8" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="487.8" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="487.8" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (1 samples, 0.06%)</title><rect x="487.8" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="487.8" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="487.8" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="487.8" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="487.8" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="487.8" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="487.8" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="487.8" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="487.8" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="487.8" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="487.8" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.8" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="487.8" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.8" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="487.8" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.8" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="487.8" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.8" y="590.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="487.8" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.8" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="487.8" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.8" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="487.8" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.8" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="487.8" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.8" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="487.8" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.8" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="487.8" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="487.8" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.06%)</title><rect x="487.8" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.8" y="462.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.8" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.8" y="446.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="487.8" y="419.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.8" y="430.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.06%)</title><rect x="487.8" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.8" y="414.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (1 samples, 0.06%)</title><rect x="487.8" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.8" y="398.0"></text>
</g>
<g>
<title>java/net/URL.isBuiltinStreamHandler (1 samples, 0.06%)</title><rect x="487.8" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.8" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.06%)</title><rect x="488.5" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="488.5" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="488.5" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="488.5" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="488.5" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="488.5" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="488.5" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="488.5" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="488.5" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readParameterAnnotations (1 samples, 0.06%)</title><rect x="488.5" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.06%)</title><rect x="488.5" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="488.5" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visit (1 samples, 0.06%)</title><rect x="488.5" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.06%)</title><rect x="488.5" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.06%)</title><rect x="488.5" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant$PropertyDelegate$ForNonArrayType.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="488.5" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.5" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="488.5" y="627.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="491.5" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="488.5" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="491.5" y="622.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="488.5" y="595.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="491.5" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="488.5" y="579.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="491.5" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="488.5" y="563.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="491.5" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="488.5" y="547.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="491.5" y="558.0"></text>
</g>
<g>
<title>JavaFieldStream::JavaFieldStream(InstanceKlass const*) (1 samples, 0.06%)</title><rect x="488.5" y="531.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="491.5" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (3 samples, 0.17%)</title><rect x="489.2" y="947.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 0.17%)</title><rect x="489.2" y="931.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (3 samples, 0.17%)</title><rect x="489.2" y="915.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.17%)</title><rect x="489.2" y="899.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.17%)</title><rect x="489.2" y="883.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.17%)</title><rect x="489.2" y="867.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="492.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (2 samples, 0.12%)</title><rect x="489.2" y="851.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.2" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1$1.visitLdcInsn (1 samples, 0.06%)</title><rect x="489.2" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.06%)</title><rect x="489.2" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor.visitLdcInsn (1 samples, 0.06%)</title><rect x="489.2" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.2" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::quicken_io_cc(JavaThread*) (1 samples, 0.06%)</title><rect x="489.2" y="787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.2" y="798.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="489.2" y="771.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="492.2" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="489.2" y="755.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.2" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="489.2" y="739.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.2" y="750.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="489.2" y="723.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="492.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="489.9" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitMethodInsn (1 samples, 0.06%)</title><rect x="489.9" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="489.9" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="489.9" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.adjustStack (1 samples, 0.06%)</title><rect x="489.9" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.adjustStack (1 samples, 0.06%)</title><rect x="489.9" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.9" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.remove (1 samples, 0.06%)</title><rect x="489.9" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.06%)</title><rect x="490.6" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.06%)</title><rect x="490.6" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.06%)</title><rect x="490.6" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.06%)</title><rect x="490.6" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.06%)</title><rect x="490.6" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.06%)</title><rect x="490.6" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling.&lt;init&gt; (1 samples, 0.06%)</title><rect x="490.6" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.&lt;init&gt; (1 samples, 0.06%)</title><rect x="490.6" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="490.6" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="490.6" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="490.6" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="490.6" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.6" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="490.6" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.6" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="490.6" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.6" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="490.6" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.6" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="490.6" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="490.6" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.6" y="606.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="490.6" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.6" y="590.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="490.6" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.6" y="574.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="490.6" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="490.6" y="531.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="493.6" y="542.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="490.6" y="515.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="493.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.&lt;clinit&gt; (3 samples, 0.17%)</title><rect x="491.2" y="1283.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="491.2" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.2" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="491.2" y="1251.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="494.2" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="491.2" y="1235.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="494.2" y="1246.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="491.2" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="494.2" y="1230.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="491.2" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="494.2" y="1214.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="491.9" y="1267.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.9" y="1278.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="491.9" y="1251.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.9" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="491.9" y="1235.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="491.9" y="1219.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.9" y="1230.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="491.9" y="1203.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.9" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="491.9" y="1187.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.9" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="491.9" y="1171.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.9" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="491.9" y="1155.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.9" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="491.9" y="1139.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.9" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="491.9" y="1123.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.9" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (2 samples, 0.12%)</title><rect x="491.9" y="1107.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.06%)</title><rect x="491.9" y="1091.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.06%)</title><rect x="491.9" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="491.9" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="491.9" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (1 samples, 0.06%)</title><rect x="492.6" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.6" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="492.6" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="492.6" y="1059.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="492.6" y="1043.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.take (14 samples, 0.81%)</title><rect x="493.3" y="1363.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.3" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.getDelay (2 samples, 0.12%)</title><rect x="493.3" y="1347.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/System.nanoTime (1 samples, 0.06%)</title><rect x="493.3" y="1331.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="493.3" y="1315.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="496.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="493.3" y="1299.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="496.3" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="493.3" y="1283.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="496.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="493.3" y="1267.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="496.3" y="1278.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="493.3" y="1251.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="496.3" y="1262.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="493.3" y="1235.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="496.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.convert (1 samples, 0.06%)</title><rect x="494.0" y="1331.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.0" y="1342.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="494.0" y="1315.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.0" y="1326.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="494.0" y="1299.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.0" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="494.0" y="1283.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.0" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="494.0" y="1267.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.0" y="1278.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="494.0" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.0" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="494.0" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.0" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="494.0" y="1219.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.0" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="494.0" y="1203.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.0" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="494.0" y="1187.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.0" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="494.0" y="1171.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.0" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="494.0" y="1155.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.0" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="494.0" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.0" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="494.0" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.0" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="494.0" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.0" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="494.0" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="494.0" y="1075.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.0" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="494.0" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="494.0" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="494.0" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="494.0" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="494.0" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="494.0" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="494.0" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="494.0" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="494.0" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.06%)</title><rect x="494.0" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (1 samples, 0.06%)</title><rect x="494.0" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.0" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="494.0" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.0" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="494.0" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.0" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="494.0" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.0" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="494.0" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.0" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="494.0" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.0" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="494.0" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.0" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="494.0" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.0" y="798.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="494.0" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.0" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="494.0" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.0" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="494.0" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="494.0" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.0" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="494.0" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.0" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="494.0" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.0" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="494.0" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="497.0" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="494.0" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.0" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="494.0" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="494.0" y="627.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="494.0" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (10 samples, 0.58%)</title><rect x="494.6" y="1347.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="494.6" y="1331.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="494.6" y="1315.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.6" y="1326.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="494.6" y="1299.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="497.6" y="1310.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="494.6" y="1283.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="497.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="495.3" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.06%)</title><rect x="496.0" y="1331.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="496.0" y="1315.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="496.0" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.0" y="1310.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="496.0" y="1283.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="499.0" y="1294.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="496.0" y="1267.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="499.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (7 samples, 0.40%)</title><rect x="496.7" y="1331.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.40%)</title><rect x="496.7" y="1315.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.7" y="1326.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.17%)</title><rect x="496.7" y="1299.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="499.7" y="1310.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="497.4" y="1283.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="500.4" y="1294.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.06%)</title><rect x="497.4" y="1267.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="500.4" y="1278.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="498.0" y="1283.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="501.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="498.7" y="1299.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="501.7" y="1310.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="498.7" y="1283.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="501.7" y="1294.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="499.4" y="1299.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="502.4" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.12%)</title><rect x="500.1" y="1299.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="503.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.12%)</title><rect x="501.4" y="1347.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.12%)</title><rect x="501.4" y="1331.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.12%)</title><rect x="501.4" y="1315.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.12%)</title><rect x="501.4" y="1299.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.12%)</title><rect x="501.4" y="1283.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.06%)</title><rect x="501.4" y="1267.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="502.1" y="1267.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="502.1" y="1251.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="502.1" y="1235.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.17%)</title><rect x="502.8" y="1395.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLL.make (1 samples, 0.06%)</title><rect x="502.8" y="1379.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="502.8" y="1363.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="502.8" y="1347.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="502.8" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.06%)</title><rect x="502.8" y="1315.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.06%)</title><rect x="502.8" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.06%)</title><rect x="502.8" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.06%)</title><rect x="502.8" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.06%)</title><rect x="502.8" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.06%)</title><rect x="502.8" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (1 samples, 0.06%)</title><rect x="502.8" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (1 samples, 0.06%)</title><rect x="502.8" y="1203.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (1 samples, 0.06%)</title><rect x="502.8" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.8" y="1198.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyType.isNullConversion (1 samples, 0.06%)</title><rect x="502.8" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (2 samples, 0.12%)</title><rect x="503.5" y="1379.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (2 samples, 0.12%)</title><rect x="503.5" y="1363.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (2 samples, 0.12%)</title><rect x="503.5" y="1347.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="503.5" y="1331.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.5" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="503.5" y="1315.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="506.5" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="503.5" y="1299.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="506.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (1 samples, 0.06%)</title><rect x="504.2" y="1331.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.2" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="504.2" y="1315.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="507.2" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="504.2" y="1299.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="507.2" y="1310.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_call(Bytecodes::Code, methodHandle const&amp;, bool) (1 samples, 0.06%)</title><rect x="504.2" y="1283.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="507.2" y="1294.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.06%)</title><rect x="504.2" y="1267.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="507.2" y="1278.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.06%)</title><rect x="504.2" y="1251.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="507.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (1 samples, 0.06%)</title><rect x="504.8" y="1395.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.8" y="1406.0"></text>
</g>
<g>
<title>java/time/ZoneId.systemDefault (1 samples, 0.06%)</title><rect x="504.8" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.8" y="1390.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.06%)</title><rect x="504.8" y="1363.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.8" y="1374.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.06%)</title><rect x="504.8" y="1347.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.8" y="1358.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.06%)</title><rect x="504.8" y="1331.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.8" y="1342.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.06%)</title><rect x="504.8" y="1315.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.8" y="1326.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.06%)</title><rect x="504.8" y="1299.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.8" y="1310.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.06%)</title><rect x="504.8" y="1283.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.8" y="1294.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.06%)</title><rect x="504.8" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.8" y="1278.0"></text>
</g>
<g>
<title>java/time/ZoneRegion.ofId (1 samples, 0.06%)</title><rect x="504.8" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.8" y="1262.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRulesProvider.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="504.8" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.8" y="1246.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="504.8" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.8" y="1230.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRulesProvider$1.run (1 samples, 0.06%)</title><rect x="504.8" y="1203.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.8" y="1214.0"></text>
</g>
<g>
<title>java/time/zone/TzdbZoneRulesProvider.&lt;init&gt; (1 samples, 0.06%)</title><rect x="504.8" y="1187.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.8" y="1198.0"></text>
</g>
<g>
<title>java/time/zone/TzdbZoneRulesProvider.load (1 samples, 0.06%)</title><rect x="504.8" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.8" y="1182.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readFully (1 samples, 0.06%)</title><rect x="504.8" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.8" y="1166.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readFully (1 samples, 0.06%)</title><rect x="504.8" y="1139.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.8" y="1150.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (1 samples, 0.06%)</title><rect x="504.8" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.8" y="1134.0"></text>
</g>
<g>
<title>java/io/FileInputStream.available (1 samples, 0.06%)</title><rect x="504.8" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.8" y="1118.0"></text>
</g>
<g>
<title>java/io/FileInputStream.available0 (1 samples, 0.06%)</title><rect x="504.8" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.8" y="1102.0"></text>
</g>
<g>
<title>Java_java_io_FileInputStream_available0 (1 samples, 0.06%)</title><rect x="504.8" y="1075.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="507.8" y="1086.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.06%)</title><rect x="504.8" y="1059.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="507.8" y="1070.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="504.8" y="1043.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="507.8" y="1054.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.06%)</title><rect x="505.5" y="1395.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="508.5" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (1 samples, 0.06%)</title><rect x="506.2" y="1395.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.06%)</title><rect x="506.2" y="1379.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.2" y="1390.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="506.2" y="1363.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="509.2" y="1374.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="506.2" y="1347.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="509.2" y="1358.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="506.2" y="1331.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="509.2" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (1 samples, 0.06%)</title><rect x="506.9" y="1395.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="506.9" y="1379.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.9" y="1390.0"></text>
</g>
<g>
<title>start_thread (899 samples, 51.79%)</title><rect x="507.6" y="1395.0" width="611.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="510.6" y="1406.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (899 samples, 51.79%)</title><rect x="507.6" y="1379.0" width="611.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="510.6" y="1390.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (899 samples, 51.79%)</title><rect x="507.6" y="1363.0" width="611.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="510.6" y="1374.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 0.75%)</title><rect x="507.6" y="1347.0" width="8.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="510.6" y="1358.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.17%)</title><rect x="507.6" y="1331.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="510.6" y="1342.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.17%)</title><rect x="507.6" y="1315.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="510.6" y="1326.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.12%)</title><rect x="508.2" y="1299.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="511.2" y="1310.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.06%)</title><rect x="508.2" y="1283.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="511.2" y="1294.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.06%)</title><rect x="508.9" y="1283.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="511.9" y="1294.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="508.9" y="1267.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="511.9" y="1278.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.06%)</title><rect x="508.9" y="1251.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="511.9" y="1262.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="509.6" y="1331.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="512.6" y="1342.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="510.3" y="1331.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="513.3" y="1342.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (1 samples, 0.06%)</title><rect x="510.3" y="1315.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="513.3" y="1326.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="510.3" y="1299.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="513.3" y="1310.0"></text>
</g>
<g>
<title>G1CMBitMap::clear_range(MemRegion) (1 samples, 0.06%)</title><rect x="510.3" y="1283.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="513.3" y="1294.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="510.3" y="1267.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="513.3" y="1278.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.40%)</title><rect x="511.0" y="1331.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="514.0" y="1342.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="511.0" y="1315.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="514.0" y="1326.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="511.0" y="1299.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="514.0" y="1310.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.23%)</title><rect x="511.6" y="1315.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="514.6" y="1326.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.23%)</title><rect x="511.6" y="1299.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="514.6" y="1310.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.23%)</title><rect x="511.6" y="1283.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="514.6" y="1294.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.23%)</title><rect x="511.6" y="1267.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="514.6" y="1278.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.23%)</title><rect x="511.6" y="1251.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="514.6" y="1262.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.12%)</title><rect x="511.6" y="1235.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="514.6" y="1246.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.12%)</title><rect x="511.6" y="1219.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="514.6" y="1230.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (2 samples, 0.12%)</title><rect x="513.0" y="1235.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="516.0" y="1246.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.12%)</title><rect x="513.0" y="1219.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="516.0" y="1230.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.06%)</title><rect x="513.7" y="1203.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="516.7" y="1214.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.06%)</title><rect x="513.7" y="1187.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="516.7" y="1198.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="514.4" y="1315.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="517.4" y="1326.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.06%)</title><rect x="514.4" y="1299.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="517.4" y="1310.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="514.4" y="1283.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="517.4" y="1294.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.06%)</title><rect x="514.4" y="1267.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="517.4" y="1278.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.06%)</title><rect x="514.4" y="1251.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="517.4" y="1262.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.06%)</title><rect x="514.4" y="1235.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="517.4" y="1246.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.06%)</title><rect x="514.4" y="1219.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="517.4" y="1230.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="515.0" y="1315.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="518.0" y="1326.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.06%)</title><rect x="515.0" y="1299.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="518.0" y="1310.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.06%)</title><rect x="515.0" y="1283.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="518.0" y="1294.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.06%)</title><rect x="515.0" y="1267.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="518.0" y="1278.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)2&gt;::do_oop(oopDesc**) (1 samples, 0.06%)</title><rect x="515.0" y="1251.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="518.0" y="1262.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="515.0" y="1235.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="518.0" y="1246.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="515.7" y="1331.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="518.7" y="1342.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (1 samples, 0.06%)</title><rect x="515.7" y="1315.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="518.7" y="1326.0"></text>
</g>
<g>
<title>JavaThread::run() (883 samples, 50.86%)</title><rect x="516.4" y="1347.0" width="600.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="519.4" y="1358.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (870 samples, 50.12%)</title><rect x="516.4" y="1331.0" width="591.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="519.4" y="1342.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (868 samples, 50.00%)</title><rect x="516.4" y="1315.0" width="590.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="519.4" y="1326.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>Arena::~Arena() (1 samples, 0.06%)</title><rect x="516.4" y="1299.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="519.4" y="1310.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (746 samples, 42.97%)</title><rect x="517.1" y="1299.0" width="507.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="520.1" y="1310.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (746 samples, 42.97%)</title><rect x="517.1" y="1283.0" width="507.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="520.1" y="1294.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.06%)</title><rect x="517.1" y="1267.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="520.1" y="1278.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.06%)</title><rect x="517.1" y="1251.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="520.1" y="1262.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="517.1" y="1235.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="520.1" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="517.1" y="1219.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="520.1" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="517.1" y="1203.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="520.1" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="517.1" y="1187.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="520.1" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="517.1" y="1171.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="520.1" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="517.1" y="1155.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="520.1" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="517.1" y="1139.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="520.1" y="1150.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="517.1" y="1123.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="520.1" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="517.1" y="1107.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="520.1" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="517.1" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="520.1" y="1102.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="517.1" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="520.1" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="517.1" y="1059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="520.1" y="1070.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="517.1" y="1043.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="520.1" y="1054.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="517.1" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="520.1" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="517.1" y="1011.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="520.1" y="1022.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="517.1" y="995.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="520.1" y="1006.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="517.1" y="979.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="520.1" y="990.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (493 samples, 28.40%)</title><rect x="517.8" y="1267.0" width="335.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="520.8" y="1278.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (12 samples, 0.69%)</title><rect x="517.8" y="1251.0" width="8.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="520.8" y="1262.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (9 samples, 0.52%)</title><rect x="517.8" y="1235.0" width="6.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="520.8" y="1246.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.12%)</title><rect x="522.5" y="1219.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="525.5" y="1230.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.06%)</title><rect x="523.2" y="1203.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="526.2" y="1214.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="523.2" y="1187.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="526.2" y="1198.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.06%)</title><rect x="523.2" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="526.2" y="1182.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.12%)</title><rect x="523.9" y="1235.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="526.9" y="1246.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.06%)</title><rect x="523.9" y="1219.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="526.9" y="1230.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.06%)</title><rect x="523.9" y="1203.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="526.9" y="1214.0"></text>
</g>
<g>
<title>CodeSection::initialize_shared_locs(relocInfo*, int) (1 samples, 0.06%)</title><rect x="523.9" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="526.9" y="1198.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.06%)</title><rect x="524.6" y="1219.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="527.6" y="1230.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="525.2" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="528.2" y="1246.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (9 samples, 0.52%)</title><rect x="525.9" y="1251.0" width="6.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="528.9" y="1262.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.17%)</title><rect x="526.6" y="1235.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="529.6" y="1246.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="526.6" y="1219.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="529.6" y="1230.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="526.6" y="1203.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="529.6" y="1214.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="527.3" y="1219.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="530.3" y="1230.0"></text>
</g>
<g>
<title>CompressedWriteStream::write_int_mb(int) (1 samples, 0.06%)</title><rect x="527.3" y="1203.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="530.3" y="1214.0"></text>
</g>
<g>
<title>PhaseRegAlloc::is_oop(Node const*) const (1 samples, 0.06%)</title><rect x="527.9" y="1219.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="530.9" y="1230.0"></text>
</g>
<g>
<title>JVMState::same_calls_as(JVMState const*) const (1 samples, 0.06%)</title><rect x="528.6" y="1235.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="531.6" y="1246.0"></text>
</g>
<g>
<title>MachOper::reg(PhaseRegAlloc*, Node const*) const (1 samples, 0.06%)</title><rect x="529.3" y="1235.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="532.3" y="1246.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (3 samples, 0.17%)</title><rect x="530.0" y="1235.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="533.0" y="1246.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.17%)</title><rect x="530.0" y="1219.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="533.0" y="1230.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.06%)</title><rect x="531.3" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="534.3" y="1214.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.06%)</title><rect x="532.0" y="1251.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="535.0" y="1262.0"></text>
</g>
<g>
<title>Matcher::match() (33 samples, 1.90%)</title><rect x="532.7" y="1251.0" width="22.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="535.7" y="1262.0">M..</text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.06%)</title><rect x="533.4" y="1235.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="536.4" y="1246.0"></text>
</g>
<g>
<title>Arena::destruct_contents() (1 samples, 0.06%)</title><rect x="534.1" y="1235.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="537.1" y="1246.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="534.1" y="1219.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="537.1" y="1230.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (4 samples, 0.23%)</title><rect x="534.7" y="1235.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="537.7" y="1246.0"></text>
</g>
<g>
<title>ConNode::Opcode() const (1 samples, 0.06%)</title><rect x="536.8" y="1219.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="539.8" y="1230.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (26 samples, 1.50%)</title><rect x="537.5" y="1235.0" width="17.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="540.5" y="1246.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (5 samples, 0.29%)</title><rect x="540.2" y="1219.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="543.2" y="1230.0"></text>
</g>
<g>
<title>Matcher::collect_null_checks(Node*, Node*) (1 samples, 0.06%)</title><rect x="543.6" y="1219.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="546.6" y="1230.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (14 samples, 0.81%)</title><rect x="544.3" y="1219.0" width="9.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="547.3" y="1230.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (6 samples, 0.35%)</title><rect x="545.6" y="1203.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="548.6" y="1214.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.12%)</title><rect x="547.0" y="1187.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="550.0" y="1198.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.06%)</title><rect x="547.0" y="1171.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="550.0" y="1182.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.06%)</title><rect x="547.0" y="1155.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="550.0" y="1166.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.06%)</title><rect x="547.0" y="1139.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="550.0" y="1150.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.06%)</title><rect x="547.7" y="1171.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="550.7" y="1182.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.06%)</title><rect x="547.7" y="1155.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="550.7" y="1166.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (2 samples, 0.12%)</title><rect x="548.3" y="1187.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="551.3" y="1198.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="548.3" y="1171.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="551.3" y="1182.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="548.3" y="1155.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="551.3" y="1166.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="549.0" y="1171.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="552.0" y="1182.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (6 samples, 0.35%)</title><rect x="549.7" y="1203.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="552.7" y="1214.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (3 samples, 0.17%)</title><rect x="550.4" y="1187.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="553.4" y="1198.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.12%)</title><rect x="550.4" y="1171.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="553.4" y="1182.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="550.4" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="553.4" y="1166.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.06%)</title><rect x="550.4" y="1139.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="553.4" y="1150.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.06%)</title><rect x="551.1" y="1155.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="554.1" y="1166.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="551.1" y="1139.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="554.1" y="1150.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.06%)</title><rect x="551.7" y="1171.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="554.7" y="1182.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="552.4" y="1187.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="555.4" y="1198.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.06%)</title><rect x="553.1" y="1187.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="556.1" y="1198.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.06%)</title><rect x="553.8" y="1219.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="556.8" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="554.5" y="1219.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="557.5" y="1230.0"></text>
</g>
<g>
<title>Node::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.06%)</title><rect x="555.1" y="1251.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="558.1" y="1262.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.06%)</title><rect x="555.8" y="1251.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="558.8" y="1262.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.06%)</title><rect x="555.8" y="1235.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="558.8" y="1246.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.06%)</title><rect x="555.8" y="1219.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="558.8" y="1230.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.06%)</title><rect x="555.8" y="1203.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="558.8" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.06%)</title><rect x="556.5" y="1251.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="559.5" y="1262.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.06%)</title><rect x="556.5" y="1235.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="559.5" y="1246.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (44 samples, 2.53%)</title><rect x="557.2" y="1251.0" width="29.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="560.2" y="1262.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.06%)</title><rect x="557.2" y="1235.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="560.2" y="1246.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.06%)</title><rect x="557.2" y="1219.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="560.2" y="1230.0"></text>
</g>
<g>
<title>Block_Stack::most_frequent_successor(Block*) (1 samples, 0.06%)</title><rect x="557.2" y="1203.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="560.2" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (43 samples, 2.48%)</title><rect x="557.9" y="1235.0" width="29.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="560.9" y="1246.0">Ph..</text>
</g>
<g>
<title>CallStaticJavaDirectNode::oper_input_base() const (1 samples, 0.06%)</title><rect x="557.9" y="1219.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="560.9" y="1230.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="558.5" y="1219.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="561.5" y="1230.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.06%)</title><rect x="559.2" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="562.2" y="1230.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.06%)</title><rect x="559.2" y="1203.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="562.2" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (4 samples, 0.23%)</title><rect x="559.9" y="1219.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="562.9" y="1230.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.12%)</title><rect x="559.9" y="1203.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="562.9" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.06%)</title><rect x="561.3" y="1203.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="564.3" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.06%)</title><rect x="561.9" y="1203.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="564.9" y="1214.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.06%)</title><rect x="561.9" y="1187.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="564.9" y="1198.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="561.9" y="1171.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="564.9" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (7 samples, 0.40%)</title><rect x="562.6" y="1219.0" width="4.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="565.6" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="562.6" y="1203.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="565.6" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.06%)</title><rect x="563.3" y="1203.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="566.3" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::lower_pressure(Block*, unsigned int, LRG&amp;, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.06%)</title><rect x="563.3" y="1187.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="566.3" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="564.0" y="1203.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="567.0" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (3 samples, 0.17%)</title><rect x="564.7" y="1203.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="567.7" y="1214.0"></text>
</g>
<g>
<title>jmpConNode::ideal_Opcode() const (1 samples, 0.06%)</title><rect x="566.7" y="1203.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="569.7" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (4 samples, 0.23%)</title><rect x="567.4" y="1219.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="570.4" y="1230.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.06%)</title><rect x="569.4" y="1203.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="572.4" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.35%)</title><rect x="570.1" y="1219.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="573.1" y="1230.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="572.1" y="1203.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.1" y="1214.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="572.8" y="1203.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="575.8" y="1214.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="573.5" y="1203.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="576.5" y="1214.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="573.5" y="1187.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.5" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (2 samples, 0.12%)</title><rect x="574.2" y="1219.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="577.2" y="1230.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (14 samples, 0.81%)</title><rect x="575.5" y="1219.0" width="9.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="578.5" y="1230.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="577.6" y="1203.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="580.6" y="1214.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="578.2" y="1203.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="581.2" y="1214.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (8 samples, 0.46%)</title><rect x="578.9" y="1203.0" width="5.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="581.9" y="1214.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="581.0" y="1187.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.0" y="1198.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (2 samples, 0.12%)</title><rect x="581.6" y="1187.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="584.6" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="583.0" y="1187.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="586.0" y="1198.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (1 samples, 0.06%)</title><rect x="584.4" y="1203.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="587.4" y="1214.0"></text>
</g>
<g>
<title>TypeNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="585.0" y="1219.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="588.0" y="1230.0"></text>
</g>
<g>
<title>__memset_avx2_erms (2 samples, 0.12%)</title><rect x="585.7" y="1219.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="588.7" y="1230.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.06%)</title><rect x="587.1" y="1251.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="590.1" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (390 samples, 22.47%)</title><rect x="587.8" y="1251.0" width="265.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="590.8" y="1262.0">PhaseChaitin::Register_Allocate()</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="587.8" y="1235.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="590.8" y="1246.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.06%)</title><rect x="588.4" y="1235.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="591.4" y="1246.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="589.1" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="592.1" y="1246.0"></text>
</g>
<g>
<title>MachNode::oper_input_base() const (2 samples, 0.12%)</title><rect x="589.8" y="1235.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="592.8" y="1246.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="591.2" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="594.2" y="1246.0"></text>
</g>
<g>
<title>MachProjNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="591.8" y="1235.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="594.8" y="1246.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (2 samples, 0.12%)</title><rect x="592.5" y="1235.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="595.5" y="1246.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="593.9" y="1235.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="596.9" y="1246.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (14 samples, 0.81%)</title><rect x="594.6" y="1235.0" width="9.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="597.6" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (19 samples, 1.09%)</title><rect x="604.1" y="1235.0" width="12.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="607.1" y="1246.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="606.8" y="1219.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="609.8" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="607.5" y="1219.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="610.5" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (2 samples, 0.12%)</title><rect x="608.2" y="1219.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="611.2" y="1230.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (11 samples, 0.63%)</title><rect x="609.5" y="1219.0" width="7.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="612.5" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.35%)</title><rect x="612.9" y="1203.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="615.9" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (26 samples, 1.50%)</title><rect x="617.0" y="1235.0" width="17.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="620.0" y="1246.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.29%)</title><rect x="622.4" y="1219.0" width="3.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="625.4" y="1230.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (13 samples, 0.75%)</title><rect x="625.8" y="1219.0" width="8.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="628.8" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.29%)</title><rect x="631.3" y="1203.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="634.3" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (35 samples, 2.02%)</title><rect x="634.7" y="1235.0" width="23.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="637.7" y="1246.0">P..</text>
</g>
<g>
<title>MachNode::rematerialize() const (3 samples, 0.17%)</title><rect x="652.3" y="1219.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="655.3" y="1230.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="652.3" y="1203.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="655.3" y="1214.0"></text>
</g>
<g>
<title>compI_rRegNode::rule() const (1 samples, 0.06%)</title><rect x="653.0" y="1203.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="656.0" y="1214.0"></text>
</g>
<g>
<title>regDOper::type() const (1 samples, 0.06%)</title><rect x="653.7" y="1203.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="656.7" y="1214.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.06%)</title><rect x="654.4" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="657.4" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (3 samples, 0.17%)</title><rect x="655.1" y="1219.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="658.1" y="1230.0"></text>
</g>
<g>
<title>TypeNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="657.1" y="1219.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="660.1" y="1230.0"></text>
</g>
<g>
<title>loadINode::rule() const (1 samples, 0.06%)</title><rect x="657.8" y="1219.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="660.8" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (85 samples, 4.90%)</title><rect x="658.5" y="1235.0" width="57.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="661.5" y="1246.0">PhaseC..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.06%)</title><rect x="670.0" y="1219.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="673.0" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="670.7" y="1219.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="673.7" y="1230.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.06%)</title><rect x="672.1" y="1219.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="675.1" y="1230.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="672.7" y="1219.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="675.7" y="1230.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.12%)</title><rect x="673.4" y="1219.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="676.4" y="1230.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.06%)</title><rect x="674.8" y="1219.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="677.8" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (9 samples, 0.52%)</title><rect x="675.4" y="1219.0" width="6.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="678.4" y="1230.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.06%)</title><rect x="679.5" y="1203.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="682.5" y="1214.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="680.2" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="683.2" y="1214.0"></text>
</g>
<g>
<title>loadLNode::rule() const (1 samples, 0.06%)</title><rect x="680.9" y="1203.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="683.9" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (31 samples, 1.79%)</title><rect x="681.6" y="1219.0" width="21.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="684.6" y="1230.0">P..</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (11 samples, 0.63%)</title><rect x="695.2" y="1203.0" width="7.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="698.2" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (16 samples, 0.92%)</title><rect x="702.6" y="1219.0" width="10.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="705.6" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="704.0" y="1203.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="707.0" y="1214.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.17%)</title><rect x="704.7" y="1203.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="707.7" y="1214.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (10 samples, 0.58%)</title><rect x="706.7" y="1203.0" width="6.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="709.7" y="1214.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.12%)</title><rect x="713.5" y="1219.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.5" y="1230.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.06%)</title><rect x="714.9" y="1219.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="717.9" y="1230.0"></text>
</g>
<g>
<title>decodeKlass_not_nullNode::rule() const (1 samples, 0.06%)</title><rect x="715.6" y="1219.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.6" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (6 samples, 0.35%)</title><rect x="716.2" y="1235.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="719.2" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.17%)</title><rect x="718.3" y="1219.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="721.3" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (3 samples, 0.17%)</title><rect x="720.3" y="1235.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="723.3" y="1246.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="721.7" y="1219.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="724.7" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (2 samples, 0.12%)</title><rect x="722.4" y="1235.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="725.4" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (1 samples, 0.06%)</title><rect x="723.7" y="1235.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="726.7" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (25 samples, 1.44%)</title><rect x="724.4" y="1235.0" width="17.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="727.4" y="1246.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="729.8" y="1219.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="732.8" y="1230.0"></text>
</g>
<g>
<title>RegMask::Size() const (10 samples, 0.58%)</title><rect x="730.5" y="1219.0" width="6.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="733.5" y="1230.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (3 samples, 0.17%)</title><rect x="737.3" y="1219.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="740.3" y="1230.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (2 samples, 0.12%)</title><rect x="739.3" y="1219.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="742.3" y="1230.0"></text>
</g>
<g>
<title>subI_rRegNode::cisc_RegMask() const (1 samples, 0.06%)</title><rect x="740.7" y="1219.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="743.7" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.85] (10 samples, 0.58%)</title><rect x="741.4" y="1235.0" width="6.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="744.4" y="1246.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.12%)</title><rect x="744.8" y="1219.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="747.8" y="1230.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.06%)</title><rect x="746.1" y="1219.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="749.1" y="1230.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.06%)</title><rect x="746.8" y="1219.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="749.8" y="1230.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="747.5" y="1219.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="750.5" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (6 samples, 0.35%)</title><rect x="748.2" y="1235.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="751.2" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (43 samples, 2.48%)</title><rect x="752.3" y="1235.0" width="29.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="755.3" y="1246.0">Ph..</text>
</g>
<g>
<title>Block::find_remove(Node const*) (1 samples, 0.06%)</title><rect x="765.2" y="1219.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="768.2" y="1230.0"></text>
</g>
<g>
<title>Node_Array::remove(unsigned int) (1 samples, 0.06%)</title><rect x="765.2" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="768.2" y="1214.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.06%)</title><rect x="765.9" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="768.9" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (20 samples, 1.15%)</title><rect x="766.5" y="1219.0" width="13.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="769.5" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.42] (2 samples, 0.12%)</title><rect x="778.8" y="1203.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="781.8" y="1214.0"></text>
</g>
<g>
<title>Block::find_remove(Node const*) (1 samples, 0.06%)</title><rect x="778.8" y="1187.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="781.8" y="1198.0"></text>
</g>
<g>
<title>Node_Array::remove(unsigned int) (1 samples, 0.06%)</title><rect x="778.8" y="1171.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="781.8" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.42] (1 samples, 0.06%)</title><rect x="779.4" y="1187.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="782.4" y="1198.0"></text>
</g>
<g>
<title>Block::find_remove(Node const*) (1 samples, 0.06%)</title><rect x="779.4" y="1171.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="782.4" y="1182.0"></text>
</g>
<g>
<title>Node_Array::remove(unsigned int) (1 samples, 0.06%)</title><rect x="779.4" y="1155.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="782.4" y="1166.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.12%)</title><rect x="780.1" y="1219.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="783.1" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.06%)</title><rect x="781.5" y="1235.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="784.5" y="1246.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (40 samples, 2.30%)</title><rect x="782.2" y="1235.0" width="27.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="785.2" y="1246.0">P..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.06%)</title><rect x="782.2" y="1219.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="785.2" y="1230.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (38 samples, 2.19%)</title><rect x="782.8" y="1219.0" width="25.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="785.8" y="1230.0">P..</text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (13 samples, 0.75%)</title><rect x="782.8" y="1203.0" width="8.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="785.8" y="1214.0"></text>
</g>
<g>
<title>IndexSet::alloc_block() (1 samples, 0.06%)</title><rect x="791.0" y="1187.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="794.0" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="791.7" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.7" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.06%)</title><rect x="792.4" y="1203.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="795.4" y="1214.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (20 samples, 1.15%)</title><rect x="793.0" y="1203.0" width="13.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="796.0" y="1214.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="804.6" y="1187.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="807.6" y="1198.0"></text>
</g>
<g>
<title>LRG::compute_degree(LRG&amp;) const (1 samples, 0.06%)</title><rect x="806.0" y="1187.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="809.0" y="1198.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (3 samples, 0.17%)</title><rect x="806.6" y="1203.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="809.6" y="1214.0"></text>
</g>
<g>
<title>orI_rRegNode::two_adr() const (1 samples, 0.06%)</title><rect x="808.7" y="1219.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="811.7" y="1230.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (8 samples, 0.46%)</title><rect x="809.4" y="1235.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="812.4" y="1246.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="812.1" y="1219.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="815.1" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.17%)</title><rect x="812.8" y="1219.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="815.8" y="1230.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (11 samples, 0.63%)</title><rect x="814.8" y="1235.0" width="7.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="817.8" y="1246.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.46%)</title><rect x="816.8" y="1219.0" width="5.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="819.8" y="1230.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.12%)</title><rect x="822.3" y="1235.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="825.3" y="1246.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.12%)</title><rect x="822.3" y="1219.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="825.3" y="1230.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (32 samples, 1.84%)</title><rect x="823.6" y="1235.0" width="21.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="826.6" y="1246.0">P..</text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.06%)</title><rect x="833.1" y="1219.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="836.1" y="1230.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.12%)</title><rect x="833.8" y="1219.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="836.8" y="1230.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (15 samples, 0.86%)</title><rect x="835.2" y="1219.0" width="10.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="838.2" y="1230.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.12%)</title><rect x="842.7" y="1203.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="845.7" y="1214.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.12%)</title><rect x="844.0" y="1203.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="847.0" y="1214.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="845.4" y="1235.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="848.4" y="1246.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.06%)</title><rect x="846.1" y="1235.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="849.1" y="1246.0"></text>
</g>
<g>
<title>ShouldNotReachHereNode::is_block_proj() const (1 samples, 0.06%)</title><rect x="846.7" y="1235.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="849.7" y="1246.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="847.4" y="1235.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="850.4" y="1246.0"></text>
</g>
<g>
<title>andI_rReg_immNode::two_adr() const (1 samples, 0.06%)</title><rect x="848.1" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="851.1" y="1246.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (2 samples, 0.12%)</title><rect x="848.8" y="1235.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="851.8" y="1246.0"></text>
</g>
<g>
<title>loadINode::oper_input_base() const (1 samples, 0.06%)</title><rect x="850.1" y="1235.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="853.1" y="1246.0"></text>
</g>
<g>
<title>rolI_rReg_i8_0Node::out_RegMask() const (2 samples, 0.12%)</title><rect x="850.8" y="1235.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="853.8" y="1246.0"></text>
</g>
<g>
<title>tlsLoadPNode::out_RegMask() const (1 samples, 0.06%)</title><rect x="852.2" y="1235.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="855.2" y="1246.0"></text>
</g>
<g>
<title>Compile::Optimize() (188 samples, 10.83%)</title><rect x="852.9" y="1267.0" width="127.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="855.9" y="1278.0">Compile::Optimiz..</text>
</g>
<g>
<title>CmpNode::bottom_type() const (1 samples, 0.06%)</title><rect x="852.9" y="1251.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="855.9" y="1262.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (64 samples, 3.69%)</title><rect x="853.5" y="1251.0" width="43.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="856.5" y="1262.0">Comp..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (64 samples, 3.69%)</title><rect x="853.5" y="1235.0" width="43.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="856.5" y="1246.0">Phas..</text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="853.5" y="1219.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="856.5" y="1230.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="854.2" y="1219.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="857.2" y="1230.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="854.2" y="1203.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="857.2" y="1214.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="854.2" y="1187.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="857.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.06%)</title><rect x="854.2" y="1171.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="857.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::update_main_loop_skeleton_predicates(Node*, CountedLoopNode*, Node*, int) (1 samples, 0.06%)</title><rect x="854.2" y="1155.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="857.2" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_skeleton_predicate(Node*, Node*, Node*, Node*, Node*, Node*, IdealLoopTree*, Node*) (1 samples, 0.06%)</title><rect x="854.2" y="1139.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="857.2" y="1150.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="854.2" y="1123.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="857.2" y="1134.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.06%)</title><rect x="854.2" y="1107.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="857.2" y="1118.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="854.9" y="1219.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="857.9" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.06%)</title><rect x="854.9" y="1203.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="857.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.06%)</title><rect x="854.9" y="1187.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="857.9" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.06%)</title><rect x="854.9" y="1171.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="857.9" y="1182.0"></text>
</g>
<g>
<title>LShiftLNode::Opcode() const (1 samples, 0.06%)</title><rect x="855.6" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="858.6" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (6 samples, 0.35%)</title><rect x="856.3" y="1219.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="859.3" y="1230.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (2 samples, 0.12%)</title><rect x="859.0" y="1203.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="862.0" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (17 samples, 0.98%)</title><rect x="860.3" y="1219.0" width="11.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="863.3" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (4 samples, 0.23%)</title><rect x="869.2" y="1203.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.126] (1 samples, 0.06%)</title><rect x="871.2" y="1187.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="874.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (16 samples, 0.92%)</title><rect x="871.9" y="1219.0" width="10.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.9" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (7 samples, 0.40%)</title><rect x="876.6" y="1203.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="879.6" y="1214.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.06%)</title><rect x="876.6" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="879.6" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (6 samples, 0.35%)</title><rect x="877.3" y="1187.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="880.3" y="1198.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="877.3" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="880.3" y="1182.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.06%)</title><rect x="877.3" y="1155.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="880.3" y="1166.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="877.3" y="1139.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="880.3" y="1150.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.06%)</title><rect x="877.3" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="880.3" y="1134.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.06%)</title><rect x="878.0" y="1171.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="881.0" y="1182.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="878.0" y="1155.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="881.0" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="878.0" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="881.0" y="1150.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="878.0" y="1123.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.0" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.12%)</title><rect x="878.7" y="1171.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="881.7" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="879.4" y="1155.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="882.4" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.12%)</title><rect x="880.0" y="1171.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="883.0" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.06%)</title><rect x="881.4" y="1203.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="884.4" y="1214.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="882.1" y="1203.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="885.1" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.12%)</title><rect x="882.8" y="1219.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="885.8" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (10 samples, 0.58%)</title><rect x="884.1" y="1219.0" width="6.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="887.1" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.06%)</title><rect x="885.5" y="1203.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="888.5" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::handle_use(Node*, Node*, small_cache*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="885.5" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="888.5" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.06%)</title><rect x="886.2" y="1203.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="889.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="886.2" y="1187.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="889.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (6 samples, 0.35%)</title><rect x="886.8" y="1203.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="889.8" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="886.8" y="1187.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="889.8" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.06%)</title><rect x="887.5" y="1187.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="890.5" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_move_store_before_loop(Node*, Node*) (3 samples, 0.17%)</title><rect x="888.2" y="1187.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="891.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.12%)</title><rect x="888.9" y="1171.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="891.9" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::replace_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="890.2" y="1187.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="893.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.06%)</title><rect x="890.2" y="1171.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="893.2" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.40%)</title><rect x="890.9" y="1219.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="893.9" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.40%)</title><rect x="890.9" y="1203.0" width="4.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="893.9" y="1214.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="892.3" y="1187.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="895.3" y="1198.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="892.3" y="1171.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="895.3" y="1182.0"></text>
</g>
<g>
<title>CallStaticJavaNode::Opcode() const (1 samples, 0.06%)</title><rect x="893.0" y="1187.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="896.0" y="1198.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.12%)</title><rect x="893.6" y="1187.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="896.6" y="1198.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.06%)</title><rect x="893.6" y="1171.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="896.6" y="1182.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.06%)</title><rect x="894.3" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="897.3" y="1182.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="895.0" y="1187.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.0" y="1198.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="895.0" y="1171.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="898.0" y="1182.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="895.0" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="898.0" y="1166.0"></text>
</g>
<g>
<title>RegionNode::pinned() const (1 samples, 0.06%)</title><rect x="895.7" y="1219.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="898.7" y="1230.0"></text>
</g>
<g>
<title>SafePointNode::pinned() const (1 samples, 0.06%)</title><rect x="896.4" y="1219.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="899.4" y="1230.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.261] (2 samples, 0.12%)</title><rect x="897.0" y="1251.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="900.0" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (5 samples, 0.29%)</title><rect x="898.4" y="1251.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="901.4" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (5 samples, 0.29%)</title><rect x="898.4" y="1235.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="901.4" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (2 samples, 0.12%)</title><rect x="898.4" y="1219.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="901.4" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.274] (2 samples, 0.12%)</title><rect x="898.4" y="1203.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="901.4" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::add_edge(PointsToNode*, PointsToNode*) [clone .isra.196] (1 samples, 0.06%)</title><rect x="898.4" y="1187.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="901.4" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (1 samples, 0.06%)</title><rect x="899.1" y="1187.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="902.1" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (3 samples, 0.17%)</title><rect x="899.8" y="1219.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="902.8" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.17%)</title><rect x="899.8" y="1203.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="902.8" y="1214.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="899.8" y="1187.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="902.8" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.12%)</title><rect x="900.4" y="1187.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.4" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.12%)</title><rect x="900.4" y="1171.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="903.4" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.12%)</title><rect x="900.4" y="1155.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.4" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1139.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="903.4" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1123.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="903.4" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="903.4" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1091.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="903.4" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="903.4" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1059.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="903.4" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.4" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1027.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="903.4" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="1011.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="903.4" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="995.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="903.4" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="979.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="903.4" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="903.4" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="947.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="903.4" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="915.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.4" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="899.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="903.4" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="903.4" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="867.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="903.4" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="903.4" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="903.4" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="819.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="903.4" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="803.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="903.4" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="903.4" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="771.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="903.4" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="755.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.4" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="739.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="903.4" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="707.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="903.4" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="691.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.4" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.4" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="903.4" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="643.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="903.4" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="627.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="903.4" y="638.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="611.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="903.4" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.4" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="579.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="903.4" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="563.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="903.4" y="574.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="547.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="903.4" y="558.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="531.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="903.4" y="542.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="499.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="903.4" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="483.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="903.4" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="467.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="903.4" y="478.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="451.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="462.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="435.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="903.4" y="446.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="419.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="903.4" y="430.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="403.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="903.4" y="414.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="387.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="903.4" y="398.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="371.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="903.4" y="382.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="355.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="903.4" y="366.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="339.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="350.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="323.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.4" y="334.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="307.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.4" y="318.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="291.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="903.4" y="302.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="275.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.4" y="286.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="259.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="903.4" y="270.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="243.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.4" y="254.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="227.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="903.4" y="238.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="211.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.4" y="222.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="195.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="903.4" y="206.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="179.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="903.4" y="190.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="163.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.4" y="174.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="147.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="903.4" y="158.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="131.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="903.4" y="142.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="115.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="903.4" y="126.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="99.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="903.4" y="110.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="83.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="903.4" y="94.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="67.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.4" y="78.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="51.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="903.4" y="62.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.06%)</title><rect x="900.4" y="35.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="903.4" y="46.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1139.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="904.1" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1123.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="904.1" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1107.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="904.1" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1091.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="904.1" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="904.1" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1059.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.1" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="904.1" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1027.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="904.1" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.06%)</title><rect x="901.1" y="1011.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="904.1" y="1022.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="901.1" y="995.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.1" y="1006.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (9 samples, 0.52%)</title><rect x="901.8" y="1251.0" width="6.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="904.8" y="1262.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="905.9" y="1235.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="908.9" y="1246.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.06%)</title><rect x="905.9" y="1219.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="908.9" y="1230.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.06%)</title><rect x="905.9" y="1203.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="908.9" y="1214.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="906.6" y="1235.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="909.6" y="1246.0"></text>
</g>
<g>
<title>LoadBNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="907.2" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="910.2" y="1246.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.06%)</title><rect x="907.2" y="1219.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="910.2" y="1230.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (2 samples, 0.12%)</title><rect x="907.9" y="1251.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="910.9" y="1262.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (2 samples, 0.12%)</title><rect x="907.9" y="1235.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="910.9" y="1246.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.06%)</title><rect x="908.6" y="1219.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="911.6" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (59 samples, 3.40%)</title><rect x="909.3" y="1251.0" width="40.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="912.3" y="1262.0">Pha..</text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="909.3" y="1235.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="912.3" y="1246.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="909.3" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="912.3" y="1230.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="910.0" y="1235.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="913.0" y="1246.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.12%)</title><rect x="910.6" y="1235.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="913.6" y="1246.0"></text>
</g>
<g>
<title>IdealLoopTree::adjust_loop_exit_prob(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="910.6" y="1219.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="913.6" y="1230.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="911.3" y="1219.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="914.3" y="1230.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="911.3" y="1203.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="914.3" y="1214.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="911.3" y="1187.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="914.3" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.06%)</title><rect x="911.3" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="914.3" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::update_main_loop_skeleton_predicates(Node*, CountedLoopNode*, Node*, int) (1 samples, 0.06%)</title><rect x="911.3" y="1155.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="914.3" y="1166.0"></text>
</g>
<g>
<title>PhaseTransform::intcon(int) (1 samples, 0.06%)</title><rect x="911.3" y="1139.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="914.3" y="1150.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="911.3" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.3" y="1134.0"></text>
</g>
<g>
<title>TypeInt::eq(Type const*) const (1 samples, 0.06%)</title><rect x="911.3" y="1107.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="914.3" y="1118.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.12%)</title><rect x="912.0" y="1235.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="915.0" y="1246.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="912.0" y="1219.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="915.0" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.06%)</title><rect x="912.0" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="915.0" y="1214.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="912.0" y="1187.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="915.0" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.06%)</title><rect x="912.7" y="1219.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="915.7" y="1230.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="912.7" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="915.7" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (9 samples, 0.52%)</title><rect x="913.4" y="1235.0" width="6.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="916.4" y="1246.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (2 samples, 0.12%)</title><rect x="916.8" y="1219.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="919.8" y="1230.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="918.1" y="1219.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="921.1" y="1230.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="918.8" y="1219.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="921.8" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.29%)</title><rect x="919.5" y="1235.0" width="3.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="922.5" y="1246.0"></text>
</g>
<g>
<title>IfNode::pinned() const (1 samples, 0.06%)</title><rect x="921.5" y="1219.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="924.5" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.126] (1 samples, 0.06%)</title><rect x="922.2" y="1219.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="925.2" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (15 samples, 0.86%)</title><rect x="922.9" y="1235.0" width="10.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="925.9" y="1246.0"></text>
</g>
<g>
<title>Opaque1Node::Opcode() const (1 samples, 0.06%)</title><rect x="926.9" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="929.9" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (8 samples, 0.46%)</title><rect x="927.6" y="1219.0" width="5.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="930.6" y="1230.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.06%)</title><rect x="930.3" y="1203.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="933.3" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.17%)</title><rect x="931.0" y="1203.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="934.0" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.06%)</title><rect x="932.4" y="1187.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="935.4" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.17%)</title><rect x="933.1" y="1235.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="936.1" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (2 samples, 0.12%)</title><rect x="933.7" y="1219.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="936.7" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_intrinsify_fill() (1 samples, 0.06%)</title><rect x="935.1" y="1235.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="938.1" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::intrinsify_fill(IdealLoopTree*) [clone .part.140] (1 samples, 0.06%)</title><rect x="935.1" y="1219.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="938.1" y="1230.0"></text>
</g>
<g>
<title>LoopNode::is_valid_counted_loop() const [clone .part.136] (1 samples, 0.06%)</title><rect x="935.1" y="1203.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="938.1" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::eliminate_useless_predicates() [clone .part.150] (1 samples, 0.06%)</title><rect x="935.8" y="1235.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="938.8" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::collect_potentially_useful_predicates(IdealLoopTree*, Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="935.8" y="1219.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="938.8" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::init_dom_lca_tags() (1 samples, 0.06%)</title><rect x="936.5" y="1235.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="939.5" y="1246.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.06%)</title><rect x="936.5" y="1219.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="939.5" y="1230.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="936.5" y="1203.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="939.5" y="1214.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="936.5" y="1187.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="939.5" y="1198.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="936.5" y="1171.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="939.5" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (8 samples, 0.46%)</title><rect x="937.1" y="1235.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.1" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.06%)</title><rect x="937.8" y="1219.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="940.8" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="937.8" y="1203.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="940.8" y="1214.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="937.8" y="1187.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="940.8" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (3 samples, 0.17%)</title><rect x="938.5" y="1219.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="941.5" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="939.9" y="1203.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="942.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (3 samples, 0.17%)</title><rect x="940.5" y="1219.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="943.5" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::conditional_move(Node*) (1 samples, 0.06%)</title><rect x="940.5" y="1203.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="943.5" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.06%)</title><rect x="940.5" y="1187.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="943.5" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.06%)</title><rect x="941.2" y="1203.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="944.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.06%)</title><rect x="941.9" y="1203.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="944.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_internal(Node*, Node*) const [clone .part.142] (1 samples, 0.06%)</title><rect x="941.9" y="1187.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="944.9" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.40%)</title><rect x="942.6" y="1235.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="945.6" y="1246.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.40%)</title><rect x="942.6" y="1219.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="945.6" y="1230.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="942.6" y="1203.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="945.6" y="1214.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.06%)</title><rect x="942.6" y="1187.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="945.6" y="1198.0"></text>
</g>
<g>
<title>CMoveNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="943.3" y="1203.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="946.3" y="1214.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="943.3" y="1187.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="946.3" y="1198.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="943.3" y="1171.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="946.3" y="1182.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="943.9" y="1203.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="946.9" y="1214.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.06%)</title><rect x="943.9" y="1187.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="946.9" y="1198.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="943.9" y="1171.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="946.9" y="1182.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="943.9" y="1155.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="946.9" y="1166.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="944.6" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="947.6" y="1214.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="944.6" y="1187.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="947.6" y="1198.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="944.6" y="1171.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="947.6" y="1182.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.06%)</title><rect x="944.6" y="1155.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="947.6" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="944.6" y="1139.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="947.6" y="1150.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="944.6" y="1123.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="945.3" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="948.3" y="1214.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="946.0" y="1203.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="949.0" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (1 samples, 0.06%)</title><rect x="946.0" y="1187.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="949.0" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1171.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="949.0" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1155.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="949.0" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1139.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="949.0" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="949.0" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1107.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="949.0" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1091.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="949.0" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1075.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="949.0" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1059.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="949.0" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="949.0" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1027.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="949.0" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="1011.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="949.0" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="995.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="949.0" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="979.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.0" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="963.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="949.0" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="947.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="949.0" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="931.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="949.0" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="949.0" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="899.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.0" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="883.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="949.0" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="949.0" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="949.0" y="862.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.06%)</title><rect x="946.0" y="835.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.0" y="846.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="946.0" y="819.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="949.0" y="830.0"></text>
</g>
<g>
<title>StoreNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="946.7" y="1203.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="949.7" y="1214.0"></text>
</g>
<g>
<title>RegionNode::pinned() const (1 samples, 0.06%)</title><rect x="947.3" y="1235.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="950.3" y="1246.0"></text>
</g>
<g>
<title>SafePointNode::pinned() const (2 samples, 0.12%)</title><rect x="948.0" y="1235.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="951.0" y="1246.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (39 samples, 2.25%)</title><rect x="949.4" y="1251.0" width="26.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="952.4" y="1262.0">P..</text>
</g>
<g>
<title>LShiftINode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="949.4" y="1235.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="952.4" y="1246.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="950.1" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="953.1" y="1246.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.06%)</title><rect x="950.1" y="1219.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="953.1" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (37 samples, 2.13%)</title><rect x="950.7" y="1235.0" width="25.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="953.7" y="1246.0">P..</text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (2 samples, 0.12%)</title><rect x="951.4" y="1219.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="954.4" y="1230.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (2 samples, 0.12%)</title><rect x="951.4" y="1203.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="954.4" y="1214.0"></text>
</g>
<g>
<title>RegionNode::hash() const (1 samples, 0.06%)</title><rect x="952.1" y="1187.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="955.1" y="1198.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (2 samples, 0.12%)</title><rect x="952.8" y="1219.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="955.8" y="1230.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (5 samples, 0.29%)</title><rect x="954.1" y="1219.0" width="3.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="957.1" y="1230.0"></text>
</g>
<g>
<title>IfNode::fold_compares(PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="954.1" y="1203.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.1" y="1214.0"></text>
</g>
<g>
<title>IfNode::reroute_side_effect_free_unc(ProjNode*, ProjNode*, PhaseIterGVN*) (1 samples, 0.06%)</title><rect x="954.1" y="1187.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="957.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="954.8" y="1203.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="957.8" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="954.8" y="1187.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="957.8" y="1198.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="954.8" y="1171.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="957.8" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="955.5" y="1203.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="958.5" y="1214.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="955.5" y="1187.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="958.5" y="1198.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (2 samples, 0.12%)</title><rect x="956.2" y="1203.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="959.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.12%)</title><rect x="956.2" y="1187.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="959.2" y="1198.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.12%)</title><rect x="956.2" y="1171.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="959.2" y="1182.0"></text>
</g>
<g>
<title>LShiftLNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="957.5" y="1219.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="960.5" y="1230.0"></text>
</g>
<g>
<title>PhaseTransform::longcon(long) (1 samples, 0.06%)</title><rect x="957.5" y="1203.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="960.5" y="1214.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="957.5" y="1187.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="960.5" y="1198.0"></text>
</g>
<g>
<title>TypeLong::eq(Type const*) const (1 samples, 0.06%)</title><rect x="957.5" y="1171.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="960.5" y="1182.0"></text>
</g>
<g>
<title>LoadBNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="958.2" y="1219.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="961.2" y="1230.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="958.9" y="1219.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="961.9" y="1230.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.06%)</title><rect x="958.9" y="1203.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="961.9" y="1214.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="958.9" y="1187.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="961.9" y="1198.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="958.9" y="1171.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="961.9" y="1182.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="958.9" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="961.9" y="1166.0"></text>
</g>
<g>
<title>MemBarNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="959.6" y="1219.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="962.6" y="1230.0"></text>
</g>
<g>
<title>MemBarNode::remove(PhaseIterGVN*) [clone .part.155] (1 samples, 0.06%)</title><rect x="959.6" y="1203.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="962.6" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="959.6" y="1187.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="962.6" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="959.6" y="1171.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="962.6" y="1182.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="959.6" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="962.6" y="1166.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="960.3" y="1219.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="963.3" y="1230.0"></text>
</g>
<g>
<title>MergeMemNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="960.9" y="1219.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="963.9" y="1230.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (4 samples, 0.23%)</title><rect x="961.6" y="1219.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="964.6" y="1230.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.06%)</title><rect x="963.7" y="1203.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="966.7" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (6 samples, 0.35%)</title><rect x="964.3" y="1219.0" width="4.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="967.3" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (3 samples, 0.17%)</title><rect x="966.4" y="1203.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="969.4" y="1214.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (3 samples, 0.17%)</title><rect x="966.4" y="1187.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="969.4" y="1198.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="968.4" y="1219.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="971.4" y="1230.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.06%)</title><rect x="968.4" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.4" y="1214.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (8 samples, 0.46%)</title><rect x="969.1" y="1219.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="972.1" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="969.1" y="1203.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="972.1" y="1214.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="969.1" y="1187.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (4 samples, 0.23%)</title><rect x="969.8" y="1203.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.8" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (4 samples, 0.23%)</title><rect x="969.8" y="1187.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="972.8" y="1198.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (4 samples, 0.23%)</title><rect x="969.8" y="1171.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="972.8" y="1182.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="972.5" y="1203.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="975.5" y="1214.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.12%)</title><rect x="973.2" y="1203.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="976.2" y="1214.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="974.5" y="1219.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="977.5" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (1 samples, 0.06%)</title><rect x="974.5" y="1203.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="977.5" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="974.5" y="1187.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="977.5" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="974.5" y="1171.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="977.5" y="1182.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.06%)</title><rect x="974.5" y="1155.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="977.5" y="1166.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="974.5" y="1139.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="977.5" y="1150.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.06%)</title><rect x="975.2" y="1219.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="978.2" y="1230.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.06%)</title><rect x="975.2" y="1203.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="978.2" y="1214.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (5 samples, 0.29%)</title><rect x="975.9" y="1251.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="978.9" y="1262.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.29%)</title><rect x="975.9" y="1235.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="978.9" y="1246.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.23%)</title><rect x="976.6" y="1219.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="979.6" y="1230.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="976.6" y="1203.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="979.6" y="1214.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="976.6" y="1187.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="979.6" y="1198.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.06%)</title><rect x="976.6" y="1171.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.6" y="1182.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="976.6" y="1155.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="979.6" y="1166.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="976.6" y="1139.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="979.6" y="1150.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="976.6" y="1123.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="979.6" y="1134.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.06%)</title><rect x="977.2" y="1203.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="980.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="977.9" y="1203.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="980.9" y="1214.0"></text>
</g>
<g>
<title>StoreNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="978.6" y="1203.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="981.6" y="1214.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.06%)</title><rect x="978.6" y="1187.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="981.6" y="1198.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.06%)</title><rect x="978.6" y="1171.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="981.6" y="1182.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="979.3" y="1251.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="982.3" y="1262.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="979.3" y="1235.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="982.3" y="1246.0"></text>
</g>
<g>
<title>TypeAryPtr::remove_speculative() const (1 samples, 0.06%)</title><rect x="980.0" y="1251.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="983.0" y="1262.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (4 samples, 0.23%)</title><rect x="980.6" y="1267.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="983.6" y="1278.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (3 samples, 0.17%)</title><rect x="980.6" y="1251.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="983.6" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="981.3" y="1235.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.3" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="981.3" y="1219.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="984.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="981.3" y="1203.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="984.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="981.3" y="1187.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="984.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="981.3" y="1171.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="984.3" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="981.3" y="1155.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="984.3" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="981.3" y="1139.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="984.3" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="981.3" y="1123.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="984.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="981.3" y="1107.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="984.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="981.3" y="1091.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="984.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="981.3" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="984.3" y="1086.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.06%)</title><rect x="981.3" y="1059.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="984.3" y="1070.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.06%)</title><rect x="981.3" y="1043.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="984.3" y="1054.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="981.3" y="1027.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="984.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="982.0" y="1075.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="985.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="982.0" y="1059.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="985.0" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="982.0" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.0" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="982.0" y="1027.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="985.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="982.0" y="1011.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="985.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="982.0" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="985.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="982.0" y="979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="985.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="982.0" y="963.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="985.0" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="982.0" y="947.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="985.0" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="982.0" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="982.0" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="985.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="982.0" y="899.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="985.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="982.0" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="985.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="982.0" y="867.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="985.0" y="878.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="982.0" y="851.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="985.0" y="862.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.06%)</title><rect x="982.0" y="835.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="985.0" y="846.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="982.7" y="1251.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="985.7" y="1262.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="982.7" y="1235.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="985.7" y="1246.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="983.4" y="1267.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.4" y="1278.0"></text>
</g>
<g>
<title>Compile::rethrow_exceptions(JVMState*) (1 samples, 0.06%)</title><rect x="984.0" y="1267.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="987.0" y="1278.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="984.0" y="1251.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="987.0" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (54 samples, 3.11%)</title><rect x="984.7" y="1267.0" width="36.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="987.7" y="1278.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (54 samples, 3.11%)</title><rect x="984.7" y="1251.0" width="36.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="987.7" y="1262.0">Par..</text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.12%)</title><rect x="984.7" y="1235.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="987.7" y="1246.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="984.7" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="987.7" y="1230.0"></text>
</g>
<g>
<title>ParmNode::Opcode() const (1 samples, 0.06%)</title><rect x="984.7" y="1203.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="987.7" y="1214.0"></text>
</g>
<g>
<title>SafePointNode::grow_stack(JVMState*, unsigned int) (1 samples, 0.06%)</title><rect x="985.4" y="1219.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="988.4" y="1230.0"></text>
</g>
<g>
<title>Node::ins_req(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="985.4" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="988.4" y="1214.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="985.4" y="1187.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="988.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (51 samples, 2.94%)</title><rect x="986.1" y="1235.0" width="34.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="989.1" y="1246.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (51 samples, 2.94%)</title><rect x="986.1" y="1219.0" width="34.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="989.1" y="1230.0">Pa..</text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="986.1" y="1203.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="989.1" y="1214.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.06%)</title><rect x="986.1" y="1187.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="989.1" y="1198.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.06%)</title><rect x="986.1" y="1171.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="989.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (50 samples, 2.88%)</title><rect x="986.8" y="1203.0" width="33.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="989.8" y="1214.0">Pa..</text>
</g>
<g>
<title>GraphKit::shared_unlock(Node*, Node*) (1 samples, 0.06%)</title><rect x="986.8" y="1187.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="989.8" y="1198.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.06%)</title><rect x="986.8" y="1171.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="989.8" y="1182.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="986.8" y="1155.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (44 samples, 2.53%)</title><rect x="987.4" y="1187.0" width="30.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="990.4" y="1198.0">Pa..</text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="987.4" y="1171.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="990.4" y="1182.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.06%)</title><rect x="987.4" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="990.4" y="1166.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.181] (1 samples, 0.06%)</title><rect x="987.4" y="1139.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.4" y="1150.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="987.4" y="1123.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="990.4" y="1134.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="987.4" y="1107.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="990.4" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (27 samples, 1.56%)</title><rect x="988.1" y="1171.0" width="18.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="991.1" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (27 samples, 1.56%)</title><rect x="988.1" y="1155.0" width="18.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="991.1" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (27 samples, 1.56%)</title><rect x="988.1" y="1139.0" width="18.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="991.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (26 samples, 1.50%)</title><rect x="988.1" y="1123.0" width="17.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="991.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (26 samples, 1.50%)</title><rect x="988.1" y="1107.0" width="17.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="991.1" y="1118.0"></text>
</g>
<g>
<title>Arena::Amalloc_D(unsigned long, AllocFailStrategy::AllocFailEnum) [clone .constprop.127] (1 samples, 0.06%)</title><rect x="988.1" y="1091.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="991.1" y="1102.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.06%)</title><rect x="988.8" y="1091.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="991.8" y="1102.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const*&amp;) (1 samples, 0.06%)</title><rect x="988.8" y="1075.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="991.8" y="1086.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="988.8" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="991.8" y="1070.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.06%)</title><rect x="988.8" y="1043.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="991.8" y="1054.0"></text>
</g>
<g>
<title>GraphKit::replace_in_map(Node*, Node*) [clone .part.177] (1 samples, 0.06%)</title><rect x="988.8" y="1027.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="991.8" y="1038.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.06%)</title><rect x="988.8" y="1011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="991.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 1.15%)</title><rect x="989.5" y="1091.0" width="13.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="992.5" y="1102.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="989.5" y="1075.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="992.5" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="989.5" y="1059.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="992.5" y="1070.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.2" y="1075.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="993.2" y="1086.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.06%)</title><rect x="990.2" y="1059.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.2" y="1070.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_string_equals(StrIntrinsicNode::ArgEncoding) (1 samples, 0.06%)</title><rect x="990.2" y="1043.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.2" y="1054.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="990.2" y="1027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="993.2" y="1038.0"></text>
</g>
<g>
<title>LoadRangeNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="990.2" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.2" y="1022.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="990.2" y="995.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="993.2" y="1006.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.06%)</title><rect x="990.2" y="979.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.2" y="990.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="990.2" y="963.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="993.2" y="974.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="990.2" y="947.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="993.2" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (17 samples, 0.98%)</title><rect x="990.8" y="1075.0" width="11.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.8" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (17 samples, 0.98%)</title><rect x="990.8" y="1059.0" width="11.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.8" y="1070.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.06%)</title><rect x="990.8" y="1043.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="993.8" y="1054.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="990.8" y="1027.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="993.8" y="1038.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="990.8" y="1011.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="993.8" y="1022.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="990.8" y="995.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.8" y="1006.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.06%)</title><rect x="990.8" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.8" y="990.0"></text>
</g>
<g>
<title>GraphKit::compute_stack_effects(int&amp;, int&amp;) (1 samples, 0.06%)</title><rect x="990.8" y="963.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="993.8" y="974.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="990.8" y="947.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="993.8" y="958.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="990.8" y="931.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="993.8" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="990.8" y="915.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="993.8" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="990.8" y="899.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="993.8" y="910.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="990.8" y="883.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="993.8" y="894.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="990.8" y="867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.8" y="878.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="990.8" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="993.8" y="862.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.06%)</title><rect x="990.8" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="993.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.75%)</title><rect x="991.5" y="1043.0" width="8.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="994.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.75%)</title><rect x="991.5" y="1027.0" width="8.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="994.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.75%)</title><rect x="991.5" y="1011.0" width="8.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="994.5" y="1022.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.06%)</title><rect x="991.5" y="995.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="994.5" y="1006.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="991.5" y="979.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="994.5" y="990.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="991.5" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="994.5" y="974.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="991.5" y="947.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="994.5" y="958.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="991.5" y="931.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="994.5" y="942.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.06%)</title><rect x="991.5" y="915.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="994.5" y="926.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="991.5" y="899.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="994.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.69%)</title><rect x="992.2" y="995.0" width="8.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="995.2" y="1006.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="992.2" y="979.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="995.2" y="990.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="992.2" y="963.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="995.2" y="974.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="992.2" y="947.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.2" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="992.2" y="931.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="995.2" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="992.2" y="915.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="995.2" y="926.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="992.2" y="899.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="995.2" y="910.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_interface_method_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="992.2" y="883.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="995.2" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="992.2" y="867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="995.2" y="878.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="992.2" y="851.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="995.2" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="992.2" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="995.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="992.2" y="819.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="995.2" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.58%)</title><rect x="992.9" y="979.0" width="6.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.9" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.58%)</title><rect x="992.9" y="963.0" width="6.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="995.9" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.58%)</title><rect x="992.9" y="947.0" width="6.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="995.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.58%)</title><rect x="992.9" y="931.0" width="6.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="992.9" y="915.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="995.9" y="926.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.06%)</title><rect x="992.9" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="995.9" y="910.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.06%)</title><rect x="992.9" y="883.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="995.9" y="894.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="992.9" y="867.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="995.9" y="878.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="992.9" y="851.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="995.9" y="862.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="992.9" y="835.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="995.9" y="846.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.06%)</title><rect x="992.9" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="995.9" y="830.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="992.9" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="995.9" y="814.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="992.9" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="995.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.52%)</title><rect x="993.6" y="915.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="996.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.46%)</title><rect x="993.6" y="899.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="996.6" y="910.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.06%)</title><rect x="993.6" y="883.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="996.6" y="894.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="993.6" y="867.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.6" y="878.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="993.6" y="851.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="996.6" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.35%)</title><rect x="994.2" y="883.0" width="4.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.2" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.35%)</title><rect x="994.2" y="867.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="997.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.35%)</title><rect x="994.2" y="851.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="997.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.29%)</title><rect x="994.2" y="835.0" width="3.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="997.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.29%)</title><rect x="994.2" y="819.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="997.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="994.2" y="803.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="997.2" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="994.2" y="787.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="997.2" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="994.2" y="771.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="994.2" y="755.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="997.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="994.2" y="739.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="997.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="994.2" y="723.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="997.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="994.2" y="707.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="997.2" y="718.0"></text>
</g>
<g>
<title>Compile::print_inlining_update(CallGenerator*) (1 samples, 0.06%)</title><rect x="994.2" y="691.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.2" y="702.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="994.9" y="691.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="997.9" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="994.9" y="675.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="997.9" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="994.9" y="659.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="994.9" y="643.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="997.9" y="654.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicates(int) (1 samples, 0.06%)</title><rect x="994.9" y="627.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.9" y="638.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.189] (1 samples, 0.06%)</title><rect x="994.9" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="997.9" y="622.0"></text>
</g>
<g>
<title>GraphKit::create_and_map_if(Node*, Node*, float, float) (1 samples, 0.06%)</title><rect x="994.9" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="997.9" y="606.0"></text>
</g>
<g>
<title>Parse::ensure_phi(int, bool) (1 samples, 0.06%)</title><rect x="995.6" y="739.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="998.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="996.3" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="999.3" y="814.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.06%)</title><rect x="996.3" y="787.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="999.3" y="798.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.06%)</title><rect x="996.3" y="771.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="999.3" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="997.0" y="803.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1000.0" y="814.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.06%)</title><rect x="997.6" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1000.6" y="846.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="997.6" y="819.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1000.6" y="830.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="997.6" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1000.6" y="814.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="997.6" y="787.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1000.6" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="883.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.3" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="867.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1001.3" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1001.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="998.3" y="835.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1001.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="998.3" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1001.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.3" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="998.3" y="787.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1001.3" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="771.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1001.3" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="755.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="998.3" y="739.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="998.3" y="723.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.3" y="707.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1001.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="998.3" y="691.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.3" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1001.3" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1001.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="998.3" y="643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1001.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="998.3" y="627.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1001.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.3" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1001.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="998.3" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.3" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="579.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1001.3" y="590.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="563.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1001.3" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1001.3" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="531.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="998.3" y="515.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="998.3" y="499.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1001.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.3" y="483.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="998.3" y="467.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.3" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="451.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1001.3" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="435.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1001.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="998.3" y="419.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1001.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="998.3" y="403.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1001.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.3" y="387.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="998.3" y="371.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1001.3" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="355.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1001.3" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="339.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1001.3" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="998.3" y="323.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.3" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="998.3" y="307.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1001.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.3" y="291.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.3" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="998.3" y="275.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1001.3" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="259.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1001.3" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="243.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1001.3" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="998.3" y="227.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.3" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="998.3" y="211.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1001.3" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="998.3" y="195.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.3" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="998.3" y="179.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.3" y="190.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="998.3" y="163.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1001.3" y="174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="998.3" y="147.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1001.3" y="158.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="998.3" y="131.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1001.3" y="142.0"></text>
</g>
<g>
<title>MergeMemNode::set_base_memory(Node*) (1 samples, 0.06%)</title><rect x="998.3" y="115.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1001.3" y="126.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="999.0" y="899.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="999.0" y="883.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1002.0" y="894.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="999.0" y="867.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.0" y="878.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="999.0" y="851.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1002.0" y="862.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="999.0" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1002.0" y="846.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.06%)</title><rect x="999.0" y="819.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1002.0" y="830.0"></text>
</g>
<g>
<title>IdealKit::end_if() (1 samples, 0.06%)</title><rect x="999.0" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.0" y="814.0"></text>
</g>
<g>
<title>IdealKit::goto_(Node*, bool) (1 samples, 0.06%)</title><rect x="999.0" y="787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1002.0" y="798.0"></text>
</g>
<g>
<title>IdealKit::do_memory_merge(Node*, Node*) (1 samples, 0.06%)</title><rect x="999.0" y="771.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.0" y="782.0"></text>
</g>
<g>
<title>PhiNode::make(Node*, Node*, Type const*, TypePtr const*) (1 samples, 0.06%)</title><rect x="999.0" y="755.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1002.0" y="766.0"></text>
</g>
<g>
<title>TypePtr::speculative_type() const (1 samples, 0.06%)</title><rect x="999.7" y="979.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1002.7" y="990.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="999.7" y="963.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.7" y="974.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="999.7" y="947.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="1000.4" y="1043.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1003.4" y="1054.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1000.4" y="1027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1003.4" y="1038.0"></text>
</g>
<g>
<title>TypeOopPtr::cleanup_speculative() const (1 samples, 0.06%)</title><rect x="1000.4" y="1011.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.4" y="1022.0"></text>
</g>
<g>
<title>Parse::init_blocks() (1 samples, 0.06%)</title><rect x="1001.0" y="1043.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1004.0" y="1054.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.85] (1 samples, 0.06%)</title><rect x="1001.7" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1004.7" y="1054.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.06%)</title><rect x="1001.7" y="1027.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1004.7" y="1038.0"></text>
</g>
<g>
<title>JumpData::cell_count() const (1 samples, 0.06%)</title><rect x="1001.7" y="1011.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1004.7" y="1022.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1002.4" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1005.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1002.4" y="1059.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1005.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1002.4" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1005.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1002.4" y="1027.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1002.4" y="1011.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1005.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1002.4" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1005.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1002.4" y="979.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1005.4" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1002.4" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1005.4" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1002.4" y="947.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1005.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1002.4" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1005.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1002.4" y="915.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1005.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1002.4" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1005.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1002.4" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1005.4" y="894.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_receiver_for_speculation(Node*) [clone .part.178] (1 samples, 0.06%)</title><rect x="1002.4" y="867.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1005.4" y="878.0"></text>
</g>
<g>
<title>ciMethod::call_profile_at_bci(int) (1 samples, 0.06%)</title><rect x="1002.4" y="851.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.06%)</title><rect x="1003.1" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1006.1" y="1102.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.06%)</title><rect x="1003.1" y="1075.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1006.1" y="1086.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1003.1" y="1059.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.1" y="1070.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.06%)</title><rect x="1003.1" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1006.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.12%)</title><rect x="1003.8" y="1091.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.12%)</title><rect x="1003.8" y="1075.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1006.8" y="1086.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.12%)</title><rect x="1003.8" y="1059.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1006.8" y="1070.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.12%)</title><rect x="1003.8" y="1043.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.8" y="1054.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.12%)</title><rect x="1003.8" y="1027.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1006.8" y="1038.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.12%)</title><rect x="1003.8" y="1011.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1006.8" y="1022.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (2 samples, 0.12%)</title><rect x="1003.8" y="995.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1006.8" y="1006.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.12%)</title><rect x="1003.8" y="979.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1006.8" y="990.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1003.8" y="963.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1006.8" y="974.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1003.8" y="947.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1006.8" y="958.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="1003.8" y="931.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1006.8" y="942.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.06%)</title><rect x="1003.8" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1006.8" y="926.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1003.8" y="899.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.8" y="910.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1003.8" y="883.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1006.8" y="894.0"></text>
</g>
<g>
<title>TypeNode::cmp(Node const&amp;) const (1 samples, 0.06%)</title><rect x="1004.4" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1007.4" y="974.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1005.1" y="1091.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.1" y="1102.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.06%)</title><rect x="1005.1" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.1" y="1086.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1005.1" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.1" y="1070.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="1005.1" y="1043.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1008.1" y="1054.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.06%)</title><rect x="1005.1" y="1027.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1008.1" y="1038.0"></text>
</g>
<g>
<title>Compile::grow_node_notes(GrowableArray&lt;Node_Notes*&gt;*, int) (1 samples, 0.06%)</title><rect x="1005.1" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1008.1" y="1022.0"></text>
</g>
<g>
<title>Parse::ensure_phis_everywhere() (1 samples, 0.06%)</title><rect x="1005.8" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1008.8" y="1134.0"></text>
</g>
<g>
<title>Parse::ensure_memory_phi(int, bool) (1 samples, 0.06%)</title><rect x="1005.8" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.8" y="1118.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="1005.8" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1008.8" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (16 samples, 0.92%)</title><rect x="1006.5" y="1171.0" width="10.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1009.5" y="1182.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.06%)</title><rect x="1006.5" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.5" y="1166.0"></text>
</g>
<g>
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.06%)</title><rect x="1006.5" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.5" y="1150.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1006.5" y="1123.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.5" y="1134.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="1006.5" y="1107.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1009.5" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.75%)</title><rect x="1007.2" y="1155.0" width="8.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.2" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.75%)</title><rect x="1007.2" y="1139.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.2" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.75%)</title><rect x="1007.2" y="1123.0" width="8.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1010.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.75%)</title><rect x="1007.2" y="1107.0" width="8.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="1007.2" y="1091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1010.2" y="1102.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.06%)</title><rect x="1007.2" y="1075.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1010.2" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.69%)</title><rect x="1007.8" y="1091.0" width="8.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.58%)</title><rect x="1007.8" y="1075.0" width="6.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1010.8" y="1086.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1007.8" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1010.8" y="1070.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1007.8" y="1043.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1010.8" y="1054.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1007.8" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1010.8" y="1038.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1007.8" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1010.8" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1007.8" y="995.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1010.8" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1007.8" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1010.8" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1007.8" y="963.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1010.8" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1007.8" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.8" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1007.8" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.8" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_new(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1007.8" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1010.8" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1007.8" y="899.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1010.8" y="910.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1008.5" y="1059.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1011.5" y="1070.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.06%)</title><rect x="1008.5" y="1043.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.5" y="1054.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.06%)</title><rect x="1008.5" y="1027.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1011.5" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.35%)</title><rect x="1009.2" y="1059.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.2" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.35%)</title><rect x="1009.2" y="1043.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1012.2" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.35%)</title><rect x="1009.2" y="1027.0" width="4.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1012.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.35%)</title><rect x="1009.2" y="1011.0" width="4.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.35%)</title><rect x="1009.2" y="995.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1012.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.35%)</title><rect x="1009.2" y="979.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1012.2" y="990.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.06%)</title><rect x="1009.2" y="963.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1012.2" y="974.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="1009.2" y="947.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1012.2" y="958.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1009.2" y="931.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1012.2" y="942.0"></text>
</g>
<g>
<title>TypeTuple::xdual() const (1 samples, 0.06%)</title><rect x="1009.2" y="915.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1012.2" y="926.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.06%)</title><rect x="1009.2" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1012.2" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.23%)</title><rect x="1009.9" y="963.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1012.9" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.23%)</title><rect x="1009.9" y="947.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1012.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.23%)</title><rect x="1009.9" y="931.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1012.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.23%)</title><rect x="1009.9" y="915.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1012.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.23%)</title><rect x="1009.9" y="899.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1012.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.17%)</title><rect x="1009.9" y="883.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1012.9" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.17%)</title><rect x="1009.9" y="867.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1012.9" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.17%)</title><rect x="1009.9" y="851.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1012.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.17%)</title><rect x="1009.9" y="835.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1012.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.17%)</title><rect x="1009.9" y="819.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1012.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.17%)</title><rect x="1009.9" y="803.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1012.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1009.9" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1012.9" y="798.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1009.9" y="771.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1012.9" y="782.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="1009.9" y="755.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1012.9" y="766.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="1009.9" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.9" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="1009.9" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1012.9" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="1009.9" y="707.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1012.9" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1009.9" y="691.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1012.9" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="1009.9" y="675.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.9" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="1009.9" y="659.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1012.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_newarray(BasicType) (1 samples, 0.06%)</title><rect x="1010.6" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1013.6" y="798.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.06%)</title><rect x="1010.6" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1013.6" y="782.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1010.6" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1013.6" y="766.0"></text>
</g>
<g>
<title>CMoveNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="1010.6" y="739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1013.6" y="750.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.06%)</title><rect x="1011.2" y="787.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1014.2" y="798.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.06%)</title><rect x="1011.2" y="771.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.2" y="782.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1011.2" y="755.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.2" y="766.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="1011.2" y="739.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1011.9" y="883.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1011.9" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1014.9" y="878.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1011.9" y="851.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1014.9" y="862.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1011.9" y="835.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.9" y="846.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1011.9" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.9" y="830.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="1011.9" y="803.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1014.9" y="814.0"></text>
</g>
<g>
<title>PhaseTransform::longcon(long) (1 samples, 0.06%)</title><rect x="1011.9" y="787.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.9" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1012.6" y="963.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1015.6" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1012.6" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1015.6" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1012.6" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1015.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1012.6" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1015.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1012.6" y="899.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1015.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1012.6" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1015.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1012.6" y="867.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1015.6" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1012.6" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1015.6" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1012.6" y="835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1015.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1012.6" y="819.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1015.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1012.6" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1015.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1012.6" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1015.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1012.6" y="771.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1015.6" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1012.6" y="755.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.6" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1012.6" y="739.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1015.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1012.6" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1015.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1012.6" y="707.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1015.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1012.6" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1015.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1012.6" y="675.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1015.6" y="686.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1012.6" y="659.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1015.6" y="670.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1012.6" y="643.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1015.6" y="654.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1012.6" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1015.6" y="638.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1012.6" y="611.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.6" y="622.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1012.6" y="595.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1015.6" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1013.3" y="1059.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1016.3" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1013.3" y="1043.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1016.3" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1013.3" y="1027.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1016.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1013.3" y="1011.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1016.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1013.3" y="995.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1016.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1013.3" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1016.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1013.3" y="963.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1016.3" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1013.3" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1016.3" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1013.3" y="931.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1016.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1013.3" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1016.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1013.3" y="899.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1016.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1013.3" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1016.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1013.3" y="867.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1016.3" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1013.3" y="851.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.3" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1013.3" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1016.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1013.3" y="819.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1013.3" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1016.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1013.3" y="787.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1016.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.06%)</title><rect x="1013.3" y="771.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1016.3" y="782.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.06%)</title><rect x="1013.3" y="755.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.3" y="766.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.06%)</title><rect x="1013.3" y="739.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1016.3" y="750.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.06%)</title><rect x="1013.3" y="723.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1016.3" y="734.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1013.3" y="707.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1016.3" y="718.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="1013.3" y="691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.3" y="702.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="1013.3" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1016.3" y="686.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.06%)</title><rect x="1013.3" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1016.3" y="670.0"></text>
</g>
<g>
<title>TypeTuple::hash() const (1 samples, 0.06%)</title><rect x="1013.3" y="643.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1016.3" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="1043.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.0" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="1027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1017.0" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="1011.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1017.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="995.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1017.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1014.0" y="979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1017.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1014.0" y="963.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1017.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1014.0" y="947.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1017.0" y="958.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="931.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.0" y="942.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="915.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1017.0" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="899.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1017.0" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="883.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1017.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="867.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1014.0" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1017.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1014.0" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1017.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1014.0" y="819.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.0" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="803.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.0" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1017.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1014.0" y="755.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1014.0" y="739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1017.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1014.0" y="723.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.0" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="707.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1017.0" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="691.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1017.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1014.0" y="659.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1017.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1014.0" y="643.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1014.0" y="627.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1017.0" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="611.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1017.0" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="595.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.0" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="579.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1017.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="563.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1014.0" y="547.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1014.0" y="531.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1017.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1014.0" y="515.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.0" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="499.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1017.0" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="483.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1017.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="467.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1017.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1014.0" y="451.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1017.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1014.0" y="435.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1014.0" y="419.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.0" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="403.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1017.0" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="387.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1017.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="371.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1017.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1014.0" y="355.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1017.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1014.0" y="339.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1017.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1014.0" y="323.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1017.0" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1014.0" y="307.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.0" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1014.0" y="291.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1017.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1014.0" y="275.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.0" y="286.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.06%)</title><rect x="1014.0" y="259.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.0" y="270.0"></text>
</g>
<g>
<title>Type::get_typeflow_type(ciType*) (1 samples, 0.06%)</title><rect x="1014.0" y="243.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1017.0" y="254.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1014.6" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="1014.6" y="1059.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.6" y="1070.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.06%)</title><rect x="1014.6" y="1043.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1017.6" y="1054.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="1014.6" y="1027.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.6" y="1038.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1014.6" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1017.6" y="1022.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1014.6" y="995.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.6" y="1006.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.06%)</title><rect x="1014.6" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.6" y="990.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.06%)</title><rect x="1014.6" y="963.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.6" y="974.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.06%)</title><rect x="1014.6" y="947.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.6" y="958.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.06%)</title><rect x="1014.6" y="931.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1017.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (1 samples, 0.06%)</title><rect x="1015.3" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.3" y="1086.0"></text>
</g>
<g>
<title>GraphKit::gen_instanceof(Node*, Node*, bool) (1 samples, 0.06%)</title><rect x="1015.3" y="1059.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1018.3" y="1070.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.06%)</title><rect x="1015.3" y="1043.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1018.3" y="1054.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1015.3" y="1027.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1018.3" y="1038.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1015.3" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1018.3" y="1022.0"></text>
</g>
<g>
<title>BitMap::set_union(BitMap const&amp;) (1 samples, 0.06%)</title><rect x="1015.3" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.3" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1016.0" y="1155.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1019.0" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1016.0" y="1139.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1019.0" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1016.0" y="1123.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1019.0" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1016.0" y="1107.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1019.0" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1016.0" y="1091.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1019.0" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1016.0" y="1075.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1019.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="1016.0" y="1059.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1019.0" y="1070.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1016.0" y="1043.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1019.0" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1016.0" y="1027.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1019.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.06%)</title><rect x="1016.7" y="1059.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1019.7" y="1070.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.06%)</title><rect x="1016.7" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1019.7" y="1054.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1016.7" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1019.7" y="1038.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1016.7" y="1011.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1019.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (2 samples, 0.12%)</title><rect x="1017.4" y="1187.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.4" y="1198.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (2 samples, 0.12%)</title><rect x="1017.4" y="1171.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.4" y="1182.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1017.4" y="1155.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1020.4" y="1166.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="1017.4" y="1139.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.4" y="1150.0"></text>
</g>
<g>
<title>Phase::gen_subtype_check(Node*, Node*, Node**, MergeMemNode*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="1018.0" y="1155.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1021.0" y="1166.0"></text>
</g>
<g>
<title>gen_subtype_check_compare(Node*, Node*, Node*, BoolTest::mask, float, PhaseGVN*, BasicType) (1 samples, 0.06%)</title><rect x="1018.0" y="1139.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1021.0" y="1150.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="1018.0" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1021.0" y="1134.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1018.0" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1021.0" y="1118.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="1018.0" y="1091.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1021.0" y="1102.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.12%)</title><rect x="1018.7" y="1187.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1021.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.12%)</title><rect x="1018.7" y="1171.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1021.7" y="1182.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="1018.7" y="1155.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1021.7" y="1166.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="1019.4" y="1155.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1022.4" y="1166.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1019.4" y="1139.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1022.4" y="1150.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="1019.4" y="1123.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1022.4" y="1134.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="1019.4" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1022.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="1020.1" y="1187.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1023.1" y="1198.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.06%)</title><rect x="1020.1" y="1171.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1023.1" y="1182.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.06%)</title><rect x="1020.1" y="1155.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.1" y="1166.0"></text>
</g>
<g>
<title>TypeInt::make(int, int, int) (1 samples, 0.06%)</title><rect x="1020.1" y="1139.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.1" y="1150.0"></text>
</g>
<g>
<title>Parse::load_interpreter_state(Node*) (1 samples, 0.06%)</title><rect x="1020.7" y="1235.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1023.7" y="1246.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="1020.7" y="1219.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1023.7" y="1230.0"></text>
</g>
<g>
<title>TypeAryPtr::make(TypePtr::PTR, TypeAry const*, ciKlass*, bool, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="1020.7" y="1203.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1023.7" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="1021.4" y="1267.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1024.4" y="1278.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.17%)</title><rect x="1022.1" y="1267.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1025.1" y="1278.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 0.17%)</title><rect x="1022.1" y="1251.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1025.1" y="1262.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="1023.5" y="1235.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1026.5" y="1246.0"></text>
</g>
<g>
<title>CompileBroker::set_last_compile(CompilerThread*, methodHandle const&amp;, bool, int) (1 samples, 0.06%)</title><rect x="1024.1" y="1299.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1027.1" y="1310.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.06%)</title><rect x="1024.1" y="1283.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1027.1" y="1294.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (4 samples, 0.23%)</title><rect x="1024.8" y="1299.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1027.8" y="1310.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (3 samples, 0.17%)</title><rect x="1024.8" y="1283.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1027.8" y="1294.0"></text>
</g>
<g>
<title>Symbol::print_symbol_on(outputStream*) const (2 samples, 0.12%)</title><rect x="1024.8" y="1267.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1027.8" y="1278.0"></text>
</g>
<g>
<title>UTF8::as_quoted_ascii(char const*, int, char*, int) (1 samples, 0.06%)</title><rect x="1024.8" y="1251.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1027.8" y="1262.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.06%)</title><rect x="1025.5" y="1251.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1028.5" y="1262.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.06%)</title><rect x="1025.5" y="1235.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1028.5" y="1246.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.06%)</title><rect x="1026.2" y="1267.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.2" y="1278.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.06%)</title><rect x="1026.2" y="1251.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1029.2" y="1262.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.06%)</title><rect x="1026.9" y="1283.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1029.9" y="1294.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.06%)</title><rect x="1026.9" y="1267.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1029.9" y="1278.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="1026.9" y="1251.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1029.9" y="1262.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (108 samples, 6.22%)</title><rect x="1027.5" y="1299.0" width="73.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1030.5" y="1310.0">Compiler..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (108 samples, 6.22%)</title><rect x="1027.5" y="1283.0" width="73.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1030.5" y="1294.0">Compilat..</text>
</g>
<g>
<title>Compilation::compile_method() (108 samples, 6.22%)</title><rect x="1027.5" y="1267.0" width="73.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1030.5" y="1278.0">Compilat..</text>
</g>
<g>
<title>Compilation::compile_java_method() (104 samples, 5.99%)</title><rect x="1027.5" y="1251.0" width="70.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1030.5" y="1262.0">Compilat..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (47 samples, 2.71%)</title><rect x="1027.5" y="1235.0" width="32.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1030.5" y="1246.0">Co..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (4 samples, 0.23%)</title><rect x="1027.5" y="1219.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1030.5" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (3 samples, 0.17%)</title><rect x="1028.2" y="1203.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1031.2" y="1214.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.17%)</title><rect x="1028.2" y="1187.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1031.2" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1029.6" y="1171.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1032.6" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1029.6" y="1155.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1032.6" y="1166.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (34 samples, 1.96%)</title><rect x="1030.3" y="1219.0" width="23.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.3" y="1230.0">I..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (34 samples, 1.96%)</title><rect x="1030.3" y="1203.0" width="23.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1033.3" y="1214.0">I..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (34 samples, 1.96%)</title><rect x="1030.3" y="1187.0" width="23.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1033.3" y="1198.0">G..</text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.06%)</title><rect x="1030.3" y="1171.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1033.3" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1030.3" y="1155.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1033.3" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1030.3" y="1139.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1033.3" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1030.3" y="1123.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1033.3" y="1134.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1030.3" y="1107.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1033.3" y="1118.0"></text>
</g>
<g>
<title>PhiSimplifier::simplify(Instruction*) (1 samples, 0.06%)</title><rect x="1030.3" y="1091.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1033.3" y="1102.0"></text>
</g>
<g>
<title>Phi::operand_at(int) const (1 samples, 0.06%)</title><rect x="1030.3" y="1075.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1033.3" y="1086.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.06%)</title><rect x="1030.9" y="1171.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.9" y="1182.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.06%)</title><rect x="1030.9" y="1155.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1033.9" y="1166.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.06%)</title><rect x="1030.9" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1033.9" y="1150.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.06%)</title><rect x="1030.9" y="1123.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1033.9" y="1134.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.06%)</title><rect x="1030.9" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1033.9" y="1118.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.06%)</title><rect x="1030.9" y="1091.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1033.9" y="1102.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.06%)</title><rect x="1030.9" y="1075.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1033.9" y="1086.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.06%)</title><rect x="1030.9" y="1059.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1033.9" y="1070.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.06%)</title><rect x="1031.6" y="1171.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1034.6" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (31 samples, 1.79%)</title><rect x="1032.3" y="1171.0" width="21.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1035.3" y="1182.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (31 samples, 1.79%)</title><rect x="1032.3" y="1155.0" width="21.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1035.3" y="1166.0">G..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.12%)</title><rect x="1032.3" y="1139.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1035.3" y="1150.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::grow(int) (1 samples, 0.06%)</title><rect x="1033.0" y="1123.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1036.0" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::convert(Bytecodes::Code, BasicType, BasicType) (1 samples, 0.06%)</title><rect x="1033.7" y="1139.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1036.7" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.06%)</title><rect x="1033.7" y="1123.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1036.7" y="1134.0"></text>
</g>
<g>
<title>ValueType::is_constant() const (1 samples, 0.06%)</title><rect x="1033.7" y="1107.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1036.7" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::copy_state_for_exception_with_bci(int) (1 samples, 0.06%)</title><rect x="1034.3" y="1139.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1037.3" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (25 samples, 1.44%)</title><rect x="1035.0" y="1139.0" width="17.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1038.0" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.06%)</title><rect x="1035.0" y="1123.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1038.0" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::handle_exception(Instruction*) (1 samples, 0.06%)</title><rect x="1035.0" y="1107.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1038.0" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (18 samples, 1.04%)</title><rect x="1035.7" y="1123.0" width="12.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1038.7" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (18 samples, 1.04%)</title><rect x="1035.7" y="1107.0" width="12.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1038.7" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (18 samples, 1.04%)</title><rect x="1035.7" y="1091.0" width="12.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1038.7" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (18 samples, 1.04%)</title><rect x="1035.7" y="1075.0" width="12.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1038.7" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::set_end(BlockEnd*) [clone .part.101] (1 samples, 0.06%)</title><rect x="1035.7" y="1059.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.7" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (15 samples, 0.86%)</title><rect x="1036.4" y="1059.0" width="10.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1039.4" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.06%)</title><rect x="1036.4" y="1043.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1039.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::handle_exception(Instruction*) (1 samples, 0.06%)</title><rect x="1036.4" y="1027.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1039.4" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (11 samples, 0.63%)</title><rect x="1037.1" y="1043.0" width="7.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1040.1" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.58%)</title><rect x="1037.1" y="1027.0" width="6.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1040.1" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.46%)</title><rect x="1037.1" y="1011.0" width="5.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.1" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.46%)</title><rect x="1037.1" y="995.0" width="5.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1040.1" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.06%)</title><rect x="1037.1" y="979.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1040.1" y="990.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1037.1" y="963.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1040.1" y="974.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1037.1" y="947.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1040.1" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.29%)</title><rect x="1037.7" y="979.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1040.7" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::null_check(Instruction*) (1 samples, 0.06%)</title><rect x="1037.7" y="963.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.7" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.12%)</title><rect x="1038.4" y="963.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.4" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.12%)</title><rect x="1038.4" y="947.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.4" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.12%)</title><rect x="1038.4" y="931.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.4" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.12%)</title><rect x="1038.4" y="915.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.4" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1038.4" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.4" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1038.4" y="883.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.4" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1038.4" y="867.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1041.4" y="878.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1038.4" y="851.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.4" y="862.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1038.4" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.4" y="846.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1038.4" y="819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1041.4" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1039.1" y="899.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1042.1" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1039.1" y="883.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1042.1" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1039.1" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.1" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1039.1" y="851.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1042.1" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1039.1" y="835.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1042.1" y="846.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1039.1" y="819.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.1" y="830.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1039.1" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1042.1" y="814.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1039.1" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1042.1" y="798.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1039.1" y="771.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1042.1" y="782.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.06%)</title><rect x="1039.8" y="963.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1042.8" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1039.8" y="947.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1042.8" y="958.0"></text>
</g>
<g>
<title>ciObjectFactory::vm_symbol_at(int) (1 samples, 0.06%)</title><rect x="1040.5" y="963.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.5" y="974.0"></text>
</g>
<g>
<title>LongType::base() const (1 samples, 0.06%)</title><rect x="1041.1" y="979.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1044.1" y="990.0"></text>
</g>
<g>
<title>as_ValueType(BasicType) (1 samples, 0.06%)</title><rect x="1041.8" y="979.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1044.8" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::store_local(ValueStack*, Instruction*, int) (1 samples, 0.06%)</title><rect x="1042.5" y="1011.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1045.5" y="1022.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.06%)</title><rect x="1043.2" y="1011.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1046.2" y="1022.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1043.2" y="995.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1046.2" y="1006.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.06%)</title><rect x="1043.2" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1046.2" y="990.0"></text>
</g>
<g>
<title>MethodData::next_data(ProfileData*) const (1 samples, 0.06%)</title><rect x="1043.2" y="963.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1046.2" y="974.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1043.2" y="947.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.2" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.06%)</title><rect x="1043.9" y="1027.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1046.9" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.9" y="1011.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.9" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.9" y="995.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.9" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.06%)</title><rect x="1043.9" y="979.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1046.9" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.06%)</title><rect x="1043.9" y="963.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1046.9" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1043.9" y="947.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1046.9" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.9" y="931.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1046.9" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1043.9" y="915.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1046.9" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.06%)</title><rect x="1043.9" y="899.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1046.9" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.06%)</title><rect x="1043.9" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1046.9" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::if_zero(ValueType*, Instruction::Condition) (1 samples, 0.06%)</title><rect x="1043.9" y="867.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1046.9" y="878.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1043.9" y="851.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1046.9" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.06%)</title><rect x="1044.5" y="1043.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1047.5" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1044.5" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.5" y="1038.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1044.5" y="1011.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.5" y="1022.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1044.5" y="995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1047.5" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.12%)</title><rect x="1045.2" y="1043.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.2" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.12%)</title><rect x="1045.2" y="1027.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1048.2" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.12%)</title><rect x="1045.2" y="1011.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.2" y="1022.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (2 samples, 0.12%)</title><rect x="1045.2" y="995.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.2" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1045.2" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.2" y="990.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="1045.2" y="963.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1048.2" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1045.2" y="947.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.2" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="1045.2" y="931.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.2" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1045.9" y="979.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1048.9" y="990.0"></text>
</g>
<g>
<title>methodHandle::methodHandle(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1045.9" y="963.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.9" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (2 samples, 0.12%)</title><rect x="1046.6" y="1059.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.6" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::profile_return_type(Instruction*, ciMethod*, ciMethod*, int) (1 samples, 0.06%)</title><rect x="1046.6" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.6" y="1054.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.06%)</title><rect x="1046.6" y="1027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.6" y="1038.0"></text>
</g>
<g>
<title>ciMethodData::data_at(int) (1 samples, 0.06%)</title><rect x="1046.6" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1049.6" y="1022.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1047.3" y="1043.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1050.3" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.06%)</title><rect x="1047.9" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.9" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1047.9" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.9" y="1118.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.23%)</title><rect x="1048.6" y="1123.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1051.6" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.23%)</title><rect x="1048.6" y="1107.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1051.6" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.23%)</title><rect x="1048.6" y="1091.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1051.6" y="1102.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1048.6" y="1075.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.6" y="1086.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1048.6" y="1059.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1051.6" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1048.6" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1051.6" y="1054.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (3 samples, 0.17%)</title><rect x="1049.3" y="1075.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1052.3" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.12%)</title><rect x="1050.0" y="1059.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1053.0" y="1070.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.12%)</title><rect x="1050.0" y="1043.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.0" y="1054.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.06%)</title><rect x="1050.0" y="1027.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1053.0" y="1038.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1050.7" y="1027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1053.7" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1050.7" y="1011.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1053.7" y="1022.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="1050.7" y="995.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1053.7" y="1006.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="1050.7" y="979.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1053.7" y="990.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.06%)</title><rect x="1051.3" y="1123.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.3" y="1134.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.06%)</title><rect x="1051.3" y="1107.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1054.3" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1051.3" y="1091.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1054.3" y="1102.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.06%)</title><rect x="1051.3" y="1075.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1054.3" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.06%)</title><rect x="1052.0" y="1139.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1055.0" y="1150.0"></text>
</g>
<g>
<title>Return::visit(InstructionVisitor*) (1 samples, 0.06%)</title><rect x="1052.0" y="1123.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1055.0" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::new_instance(int) (1 samples, 0.06%)</title><rect x="1052.7" y="1139.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1055.7" y="1150.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.06%)</title><rect x="1052.7" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1055.7" y="1134.0"></text>
</g>
<g>
<title>IR::compute_code() (1 samples, 0.06%)</title><rect x="1053.4" y="1219.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.4" y="1230.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1053.4" y="1203.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.4" y="1214.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_order(BlockBegin*) (1 samples, 0.06%)</title><rect x="1053.4" y="1187.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1056.4" y="1198.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::sort_into_work_list(BlockBegin*) (1 samples, 0.06%)</title><rect x="1053.4" y="1171.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.4" y="1182.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_weight(BlockBegin*) (1 samples, 0.06%)</title><rect x="1053.4" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1056.4" y="1166.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (3 samples, 0.17%)</title><rect x="1054.1" y="1219.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1057.1" y="1230.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (2 samples, 0.12%)</title><rect x="1054.1" y="1203.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.1" y="1214.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (2 samples, 0.12%)</title><rect x="1054.1" y="1187.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1057.1" y="1198.0"></text>
</g>
<g>
<title>Intrinsic::input_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1054.1" y="1171.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1057.1" y="1182.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1054.7" y="1171.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.7" y="1182.0"></text>
</g>
<g>
<title>UseCountComputer::visit(Instruction**) (1 samples, 0.06%)</title><rect x="1054.7" y="1155.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1057.7" y="1166.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1055.4" y="1203.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1058.4" y="1214.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (3 samples, 0.17%)</title><rect x="1056.1" y="1219.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1059.1" y="1230.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (3 samples, 0.17%)</title><rect x="1056.1" y="1203.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1059.1" y="1214.0"></text>
</g>
<g>
<title>BlockBegin::visit(InstructionVisitor*) (1 samples, 0.06%)</title><rect x="1056.8" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1059.8" y="1198.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (1 samples, 0.06%)</title><rect x="1057.5" y="1187.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1060.5" y="1198.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (1 samples, 0.06%)</title><rect x="1058.1" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1061.1" y="1230.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (1 samples, 0.06%)</title><rect x="1058.1" y="1203.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.1" y="1214.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.06%)</title><rect x="1058.1" y="1187.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.1" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1058.1" y="1171.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.1" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1058.1" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.1" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1058.1" y="1139.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.1" y="1150.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.1" y="1123.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1061.1" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1058.1" y="1107.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.1" y="1118.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1058.1" y="1091.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1061.1" y="1102.0"></text>
</g>
<g>
<title>RangeCheckElimination::eliminate(IR*) (1 samples, 0.06%)</title><rect x="1058.8" y="1219.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.8" y="1230.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1203.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1061.8" y="1214.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1187.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.8" y="1198.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1171.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1061.8" y="1182.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1155.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.8" y="1166.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1139.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.8" y="1150.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1061.8" y="1134.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1107.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1061.8" y="1118.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.8" y="1102.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1075.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1061.8" y="1086.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1059.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1061.8" y="1070.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1043.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1061.8" y="1054.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1061.8" y="1038.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="1011.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1061.8" y="1022.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="995.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1061.8" y="1006.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="979.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1061.8" y="990.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="963.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1061.8" y="974.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1061.8" y="958.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="931.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1061.8" y="942.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1061.8" y="926.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="899.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.8" y="910.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.8" y="894.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.8" y="878.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="851.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.8" y="862.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1058.8" y="835.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.8" y="846.0"></text>
</g>
<g>
<title>RangeCheckEliminator::process_if(GrowableArray&lt;int&gt;&amp;, BlockBegin*, If*) (1 samples, 0.06%)</title><rect x="1058.8" y="819.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1061.8" y="830.0"></text>
</g>
<g>
<title>RangeCheckEliminator::add_if_condition(GrowableArray&lt;int&gt;&amp;, Instruction*, Instruction*, Instruction::Condition) [clone .part.102] (1 samples, 0.06%)</title><rect x="1058.8" y="803.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.8" y="814.0"></text>
</g>
<g>
<title>RangeCheckEliminator::get_bound(Instruction*) (1 samples, 0.06%)</title><rect x="1058.8" y="787.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1061.8" y="798.0"></text>
</g>
<g>
<title>Phi::operand_at(int) const (1 samples, 0.06%)</title><rect x="1058.8" y="771.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.8" y="782.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (18 samples, 1.04%)</title><rect x="1059.5" y="1235.0" width="12.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1062.5" y="1246.0"></text>
</g>
<g>
<title>AbstractAssembler::bind(Label&amp;) (1 samples, 0.06%)</title><rect x="1059.5" y="1219.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1062.5" y="1230.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (12 samples, 0.69%)</title><rect x="1060.2" y="1219.0" width="8.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1063.2" y="1230.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (3 samples, 0.17%)</title><rect x="1060.9" y="1203.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.9" y="1214.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (1 samples, 0.06%)</title><rect x="1060.9" y="1187.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1063.9" y="1198.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.06%)</title><rect x="1060.9" y="1171.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1063.9" y="1182.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.06%)</title><rect x="1060.9" y="1155.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.9" y="1166.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="1060.9" y="1139.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.9" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="1060.9" y="1123.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1063.9" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_static_call_stub() (1 samples, 0.06%)</title><rect x="1061.5" y="1187.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.5" y="1198.0"></text>
</g>
<g>
<title>CodeSection::relocate(unsigned char*, RelocationHolder const&amp;, int) (1 samples, 0.06%)</title><rect x="1061.5" y="1171.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1064.5" y="1182.0"></text>
</g>
<g>
<title>CodeSection::expand_locs(int) (1 samples, 0.06%)</title><rect x="1061.5" y="1155.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1064.5" y="1166.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="1061.5" y="1139.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1064.5" y="1150.0"></text>
</g>
<g>
<title>MacroAssembler::jump(AddressLiteral) (1 samples, 0.06%)</title><rect x="1062.2" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1065.2" y="1198.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (4 samples, 0.23%)</title><rect x="1062.9" y="1203.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1065.9" y="1214.0"></text>
</g>
<g>
<title>Assembler::mov(RegisterImpl*, RegisterImpl*) (1 samples, 0.06%)</title><rect x="1062.9" y="1187.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1065.9" y="1198.0"></text>
</g>
<g>
<title>LIR_Assembler::mem2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool) (3 samples, 0.17%)</title><rect x="1063.6" y="1187.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1066.6" y="1198.0"></text>
</g>
<g>
<title>Assembler::movl(RegisterImpl*, Address) (2 samples, 0.12%)</title><rect x="1063.6" y="1171.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1066.6" y="1182.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (2 samples, 0.12%)</title><rect x="1063.6" y="1155.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1066.6" y="1166.0"></text>
</g>
<g>
<title>Assembler::emit_compressed_disp_byte(int&amp;) (1 samples, 0.06%)</title><rect x="1064.3" y="1139.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1067.3" y="1150.0"></text>
</g>
<g>
<title>Assembler::movsbl(RegisterImpl*, Address) (1 samples, 0.06%)</title><rect x="1064.9" y="1171.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1067.9" y="1182.0"></text>
</g>
<g>
<title>Assembler::prefix(Address, RegisterImpl*, bool) [clone .constprop.66] (1 samples, 0.06%)</title><rect x="1064.9" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1067.9" y="1166.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op2(LIR_Op2*) (1 samples, 0.06%)</title><rect x="1065.6" y="1203.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1068.6" y="1214.0"></text>
</g>
<g>
<title>LIR_Assembler::arith_op(LIR_Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, bool) (1 samples, 0.06%)</title><rect x="1065.6" y="1187.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1068.6" y="1198.0"></text>
</g>
<g>
<title>Assembler::addl(RegisterImpl*, int) (1 samples, 0.06%)</title><rect x="1065.6" y="1171.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1068.6" y="1182.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (1 samples, 0.06%)</title><rect x="1066.3" y="1203.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1069.3" y="1214.0"></text>
</g>
<g>
<title>LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*) (1 samples, 0.06%)</title><rect x="1067.0" y="1203.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1070.0" y="1214.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1067.6" y="1203.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1070.6" y="1214.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (1 samples, 0.06%)</title><rect x="1067.6" y="1187.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1070.6" y="1198.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (1 samples, 0.06%)</title><rect x="1067.6" y="1171.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1070.6" y="1182.0"></text>
</g>
<g>
<title>Assembler::call_literal(unsigned char*, RelocationHolder const&amp;) (1 samples, 0.06%)</title><rect x="1067.6" y="1155.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1070.6" y="1166.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opLabel(LIR_OpLabel*) (1 samples, 0.06%)</title><rect x="1068.3" y="1219.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1071.3" y="1230.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (4 samples, 0.23%)</title><rect x="1069.0" y="1219.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1072.0" y="1230.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1069.0" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1072.0" y="1214.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.06%)</title><rect x="1069.0" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1072.0" y="1198.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.06%)</title><rect x="1069.0" y="1171.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1072.0" y="1182.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1069.0" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1072.0" y="1166.0"></text>
</g>
<g>
<title>G1BarrierSetAssembler::gen_post_barrier_stub(LIR_Assembler*, G1PostBarrierStub*) (1 samples, 0.06%)</title><rect x="1069.7" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1072.7" y="1214.0"></text>
</g>
<g>
<title>MacroAssembler::call(AddressLiteral) (1 samples, 0.06%)</title><rect x="1069.7" y="1187.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1072.7" y="1198.0"></text>
</g>
<g>
<title>Assembler::call_literal(unsigned char*, RelocationHolder const&amp;) (1 samples, 0.06%)</title><rect x="1069.7" y="1171.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.7" y="1182.0"></text>
</g>
<g>
<title>Relocation::pack_data_to(CodeSection*) (1 samples, 0.06%)</title><rect x="1069.7" y="1155.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1072.7" y="1166.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (2 samples, 0.12%)</title><rect x="1070.4" y="1203.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1073.4" y="1214.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.12%)</title><rect x="1070.4" y="1187.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1073.4" y="1198.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.12%)</title><rect x="1070.4" y="1171.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1073.4" y="1182.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1070.4" y="1155.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1073.4" y="1166.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="1070.4" y="1139.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1073.4" y="1150.0"></text>
</g>
<g>
<title>OopMap::deep_copy() (1 samples, 0.06%)</title><rect x="1071.0" y="1155.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1074.0" y="1166.0"></text>
</g>
<g>
<title>OopMap::OopMap(OopMap::DeepCopyToken, OopMap*) (1 samples, 0.06%)</title><rect x="1071.0" y="1139.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1074.0" y="1150.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (38 samples, 2.19%)</title><rect x="1071.7" y="1235.0" width="25.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1074.7" y="1246.0">C..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (9 samples, 0.52%)</title><rect x="1071.7" y="1219.0" width="6.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1074.7" y="1230.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (9 samples, 0.52%)</title><rect x="1071.7" y="1203.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1074.7" y="1214.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.06%)</title><rect x="1071.7" y="1187.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1074.7" y="1198.0"></text>
</g>
<g>
<title>LIRGenerator::profile_parameters(Base*) (1 samples, 0.06%)</title><rect x="1071.7" y="1171.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1074.7" y="1182.0"></text>
</g>
<g>
<title>ciEnv::comp_level() (1 samples, 0.06%)</title><rect x="1071.7" y="1155.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1074.7" y="1166.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (4 samples, 0.23%)</title><rect x="1072.4" y="1187.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1075.4" y="1198.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (4 samples, 0.23%)</title><rect x="1072.4" y="1171.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1075.4" y="1182.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (2 samples, 0.12%)</title><rect x="1072.4" y="1155.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1075.4" y="1166.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (2 samples, 0.12%)</title><rect x="1072.4" y="1139.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1075.4" y="1150.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (2 samples, 0.12%)</title><rect x="1073.8" y="1155.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.8" y="1166.0"></text>
</g>
<g>
<title>LIRGenerator::do_If(If*) (1 samples, 0.06%)</title><rect x="1075.1" y="1187.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1078.1" y="1198.0"></text>
</g>
<g>
<title>LIRGenerator::profile_branch(If*, Instruction::Condition) (1 samples, 0.06%)</title><rect x="1075.1" y="1171.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1078.1" y="1182.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.06%)</title><rect x="1075.1" y="1155.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1078.1" y="1166.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (2 samples, 0.12%)</title><rect x="1075.8" y="1187.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1078.8" y="1198.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (2 samples, 0.12%)</title><rect x="1075.8" y="1171.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1078.8" y="1182.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (1 samples, 0.06%)</title><rect x="1077.2" y="1187.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.2" y="1198.0"></text>
</g>
<g>
<title>ciMethod::is_accessor() const (1 samples, 0.06%)</title><rect x="1077.2" y="1171.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.2" y="1182.0"></text>
</g>
<g>
<title>Method::is_accessor() const (1 samples, 0.06%)</title><rect x="1077.2" y="1155.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1080.2" y="1166.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::optimize(BlockList*) (1 samples, 0.06%)</title><rect x="1077.8" y="1219.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1080.8" y="1230.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::delete_unnecessary_jumps(BlockList*) (1 samples, 0.06%)</title><rect x="1077.8" y="1203.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1080.8" y="1214.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (28 samples, 1.61%)</title><rect x="1078.5" y="1219.0" width="19.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1081.5" y="1230.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (8 samples, 0.46%)</title><rect x="1078.5" y="1203.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1081.5" y="1214.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (7 samples, 0.40%)</title><rect x="1079.2" y="1187.0" width="4.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1082.2" y="1198.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (4 samples, 0.23%)</title><rect x="1079.2" y="1171.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1082.2" y="1182.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (3 samples, 0.17%)</title><rect x="1081.9" y="1171.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1084.9" y="1182.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.06%)</title><rect x="1081.9" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1084.9" y="1166.0"></text>
</g>
<g>
<title>LinearScanWalker::split_when_partial_register_available(Interval*, int) (1 samples, 0.06%)</title><rect x="1081.9" y="1139.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1084.9" y="1150.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.06%)</title><rect x="1082.6" y="1155.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.6" y="1166.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_collect_inactive_any(Interval*) (1 samples, 0.06%)</title><rect x="1082.6" y="1139.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1085.6" y="1150.0"></text>
</g>
<g>
<title>Range::intersects_at(Range*) const (1 samples, 0.06%)</title><rect x="1082.6" y="1123.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1085.6" y="1134.0"></text>
</g>
<g>
<title>LinearScanWalker::combine_spilled_intervals(Interval*) (1 samples, 0.06%)</title><rect x="1083.3" y="1155.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1086.3" y="1166.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (9 samples, 0.52%)</title><rect x="1084.0" y="1203.0" width="6.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1087.0" y="1214.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (8 samples, 0.46%)</title><rect x="1084.0" y="1187.0" width="5.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1087.0" y="1198.0"></text>
</g>
<g>
<title>LinearScan::calc_operand_for_interval(Interval const*) (1 samples, 0.06%)</title><rect x="1085.3" y="1171.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.3" y="1182.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (2 samples, 0.12%)</title><rect x="1086.0" y="1171.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.0" y="1182.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.12%)</title><rect x="1087.4" y="1171.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.4" y="1182.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.12%)</title><rect x="1087.4" y="1155.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.4" y="1166.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1087.4" y="1139.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1090.4" y="1150.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1087.4" y="1123.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1090.4" y="1134.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1087.4" y="1107.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.4" y="1118.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1088.0" y="1139.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1091.0" y="1150.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 0.06%)</title><rect x="1088.7" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1091.7" y="1182.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.06%)</title><rect x="1088.7" y="1155.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1091.7" y="1166.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.06%)</title><rect x="1088.7" y="1139.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1091.7" y="1150.0"></text>
</g>
<g>
<title>LinearScan::init_compute_oop_maps() (1 samples, 0.06%)</title><rect x="1089.4" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1092.4" y="1198.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (7 samples, 0.40%)</title><rect x="1090.1" y="1203.0" width="4.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.1" y="1214.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1092.8" y="1187.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1095.8" y="1198.0"></text>
</g>
<g>
<title>LinearScan::add_def(int, int, IntervalUseKind, BasicType) (1 samples, 0.06%)</title><rect x="1093.5" y="1187.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.5" y="1198.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_output_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.06%)</title><rect x="1094.2" y="1187.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1097.2" y="1198.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (3 samples, 0.17%)</title><rect x="1094.8" y="1203.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1097.8" y="1214.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.06%)</title><rect x="1096.2" y="1187.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.2" y="1198.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (1 samples, 0.06%)</title><rect x="1096.9" y="1203.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1099.9" y="1214.0"></text>
</g>
<g>
<title>MoveResolver::MoveResolver(LinearScan*) (1 samples, 0.06%)</title><rect x="1096.9" y="1187.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1099.9" y="1198.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.06%)</title><rect x="1097.6" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1100.6" y="1246.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1097.6" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1100.6" y="1230.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.06%)</title><rect x="1097.6" y="1203.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1100.6" y="1214.0"></text>
</g>
<g>
<title>Compilation::initialize() (1 samples, 0.06%)</title><rect x="1098.2" y="1251.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.2" y="1262.0"></text>
</g>
<g>
<title>DebugInformationRecorder::DebugInformationRecorder(OopRecorder*) (1 samples, 0.06%)</title><rect x="1098.2" y="1235.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1101.2" y="1246.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (3 samples, 0.17%)</title><rect x="1098.9" y="1251.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1101.9" y="1262.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.06%)</title><rect x="1098.9" y="1235.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1101.9" y="1246.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.12%)</title><rect x="1099.6" y="1235.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1102.6" y="1246.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.12%)</title><rect x="1099.6" y="1219.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1102.6" y="1230.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.06%)</title><rect x="1099.6" y="1203.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1102.6" y="1214.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (1 samples, 0.06%)</title><rect x="1099.6" y="1187.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1102.6" y="1198.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (1 samples, 0.06%)</title><rect x="1099.6" y="1171.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1102.6" y="1182.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="1100.3" y="1203.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1103.3" y="1214.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.06%)</title><rect x="1101.0" y="1299.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1104.0" y="1310.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (3 samples, 0.17%)</title><rect x="1101.6" y="1299.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1104.6" y="1310.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 0.06%)</title><rect x="1101.6" y="1283.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1104.6" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (2 samples, 0.12%)</title><rect x="1102.3" y="1283.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.3" y="1294.0"></text>
</g>
<g>
<title>ciBaseObject::set_ident(unsigned int) (1 samples, 0.06%)</title><rect x="1102.3" y="1267.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1105.3" y="1278.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1103.0" y="1267.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1106.0" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (3 samples, 0.17%)</title><rect x="1103.7" y="1299.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.7" y="1310.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (3 samples, 0.17%)</title><rect x="1103.7" y="1283.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.7" y="1294.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (3 samples, 0.17%)</title><rect x="1103.7" y="1267.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1106.7" y="1278.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.12%)</title><rect x="1103.7" y="1251.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.7" y="1262.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.12%)</title><rect x="1103.7" y="1235.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1106.7" y="1246.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="1103.7" y="1219.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1106.7" y="1230.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1103.7" y="1203.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.7" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1103.7" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1106.7" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1104.4" y="1219.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1107.4" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1104.4" y="1203.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1107.4" y="1214.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="1104.4" y="1187.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.4" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1105.0" y="1251.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1108.0" y="1262.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1105.0" y="1235.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1108.0" y="1246.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.06%)</title><rect x="1105.0" y="1219.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1108.0" y="1230.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (1 samples, 0.06%)</title><rect x="1105.7" y="1299.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1108.7" y="1310.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (1 samples, 0.06%)</title><rect x="1105.7" y="1283.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1108.7" y="1294.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.06%)</title><rect x="1105.7" y="1267.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.7" y="1278.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.06%)</title><rect x="1106.4" y="1315.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1109.4" y="1326.0"></text>
</g>
<g>
<title>__GI_sysinfo (1 samples, 0.06%)</title><rect x="1106.4" y="1299.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1109.4" y="1310.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.06%)</title><rect x="1107.1" y="1315.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1110.1" y="1326.0"></text>
</g>
<g>
<title>CompileBroker::can_remove(CompilerThread*, bool) [clone .part.148] (1 samples, 0.06%)</title><rect x="1107.1" y="1299.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1110.1" y="1310.0"></text>
</g>
<g>
<title>LowMemoryDetector::has_pending_requests() (1 samples, 0.06%)</title><rect x="1107.8" y="1331.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1110.8" y="1342.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (12 samples, 0.69%)</title><rect x="1108.4" y="1331.0" width="8.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1111.4" y="1342.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (11 samples, 0.63%)</title><rect x="1108.4" y="1315.0" width="7.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1111.4" y="1326.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (11 samples, 0.63%)</title><rect x="1108.4" y="1299.0" width="7.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1111.4" y="1310.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.06%)</title><rect x="1108.4" y="1283.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.4" y="1294.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.06%)</title><rect x="1109.1" y="1283.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1112.1" y="1294.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.06%)</title><rect x="1109.1" y="1267.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1112.1" y="1278.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1109.1" y="1251.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1112.1" y="1262.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1109.8" y="1283.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.8" y="1294.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.06%)</title><rect x="1109.8" y="1267.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1112.8" y="1278.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="1109.8" y="1251.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1112.8" y="1262.0"></text>
</g>
<g>
<title>ScopeDesc::is_top() const (1 samples, 0.06%)</title><rect x="1110.5" y="1283.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1113.5" y="1294.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (7 samples, 0.40%)</title><rect x="1111.2" y="1283.0" width="4.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1114.2" y="1294.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (3 samples, 0.17%)</title><rect x="1111.2" y="1267.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.2" y="1278.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.12%)</title><rect x="1111.2" y="1251.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1114.2" y="1262.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1112.5" y="1251.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1115.5" y="1262.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="1113.2" y="1267.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1116.2" y="1278.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.12%)</title><rect x="1113.9" y="1267.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.9" y="1278.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.12%)</title><rect x="1113.9" y="1251.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1116.9" y="1262.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1115.2" y="1267.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1118.2" y="1278.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.06%)</title><rect x="1115.9" y="1315.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.9" y="1326.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="1115.9" y="1299.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1118.9" y="1310.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.17%)</title><rect x="1116.6" y="1347.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1119.6" y="1358.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.17%)</title><rect x="1116.6" y="1331.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1119.6" y="1342.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.67] (3 samples, 0.17%)</title><rect x="1116.6" y="1315.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1119.6" y="1326.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.17%)</title><rect x="1116.6" y="1299.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1119.6" y="1310.0"></text>
</g>
<g>
<title>VM_Deoptimize::doit() (1 samples, 0.06%)</title><rect x="1116.6" y="1283.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1119.6" y="1294.0"></text>
</g>
<g>
<title>CodeCache::make_marked_nmethods_not_entrant() (1 samples, 0.06%)</title><rect x="1116.6" y="1267.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.6" y="1278.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (1 samples, 0.06%)</title><rect x="1116.6" y="1251.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1119.6" y="1262.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit() (2 samples, 0.12%)</title><rect x="1117.3" y="1283.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.3" y="1294.0"></text>
</g>
<g>
<title>MetadataOnStackMark::MetadataOnStackMark(bool) (1 samples, 0.06%)</title><rect x="1117.3" y="1267.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.3" y="1278.0"></text>
</g>
<g>
<title>nmethod::is_alive() const (1 samples, 0.06%)</title><rect x="1117.3" y="1251.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.3" y="1262.0"></text>
</g>
<g>
<title>VM_RedefineClasses::redefine_single_class(_jclass*, InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="1117.9" y="1267.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1120.9" y="1278.0"></text>
</g>
<g>
<title>CodeCache::flush_evol_dependents_on(InstanceKlass*) (1 samples, 0.06%)</title><rect x="1117.9" y="1251.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.9" y="1262.0"></text>
</g>
<g>
<title>CodeCache::mark_for_evol_deoptimization(InstanceKlass*) (1 samples, 0.06%)</title><rect x="1117.9" y="1235.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1120.9" y="1246.0"></text>
</g>
<g>
<title>CompiledMethod::clear_inline_caches() (1 samples, 0.06%)</title><rect x="1117.9" y="1219.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1120.9" y="1230.0"></text>
</g>
<g>
<title>opt_virtual_call_Relocation::clear_inline_cache() (1 samples, 0.06%)</title><rect x="1117.9" y="1203.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1120.9" y="1214.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(CompiledMethod*, NativeCall*) (1 samples, 0.06%)</title><rect x="1117.9" y="1187.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.9" y="1198.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.06%)</title><rect x="1117.9" y="1171.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.9" y="1182.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (105 samples, 6.05%)</title><rect x="1118.6" y="1395.0" width="71.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.6" y="1406.0">sun/inst..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (105 samples, 6.05%)</title><rect x="1118.6" y="1379.0" width="71.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.6" y="1390.0">sun/inst..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.17%)</title><rect x="1118.6" y="1363.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.17%)</title><rect x="1118.6" y="1347.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1121.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.17%)</title><rect x="1118.6" y="1331.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.17%)</title><rect x="1118.6" y="1315.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.17%)</title><rect x="1118.6" y="1299.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1118.6" y="1283.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.6" y="1294.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1118.6" y="1267.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.6" y="1278.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (1 samples, 0.06%)</title><rect x="1118.6" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="1118.6" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.6" y="1246.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader$1.apply (1 samples, 0.06%)</title><rect x="1118.6" y="1219.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.6" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader$1.apply (1 samples, 0.06%)</title><rect x="1118.6" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.6" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader$DebugHolder.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1118.6" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.6" y="1198.0"></text>
</g>
<g>
<title>sun/security/util/Debug.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1118.6" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (1 samples, 0.06%)</title><rect x="1118.6" y="1155.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (1 samples, 0.06%)</title><rect x="1118.6" y="1139.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.inflate (1 samples, 0.06%)</title><rect x="1118.6" y="1123.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.12%)</title><rect x="1119.3" y="1283.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.12%)</title><rect x="1119.3" y="1267.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.12%)</title><rect x="1119.3" y="1251.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.3" y="1262.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1119.3" y="1235.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.12%)</title><rect x="1119.3" y="1219.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.12%)</title><rect x="1119.3" y="1203.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1119.3" y="1187.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (2 samples, 0.12%)</title><rect x="1119.3" y="1171.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.3" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1119.3" y="1155.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.12%)</title><rect x="1119.3" y="1139.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.12%)</title><rect x="1119.3" y="1123.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (2 samples, 0.12%)</title><rect x="1119.3" y="1107.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.3" y="1118.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1119.3" y="1091.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.3" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1119.3" y="1075.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.3" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1119.3" y="1059.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.3" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (2 samples, 0.12%)</title><rect x="1119.3" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.3" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1119.3" y="1027.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.3" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (2 samples, 0.12%)</title><rect x="1119.3" y="1011.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.3" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1119.3" y="995.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.3" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (2 samples, 0.12%)</title><rect x="1119.3" y="979.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.3" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.checkUTF8 (1 samples, 0.06%)</title><rect x="1120.0" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.0" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (102 samples, 5.88%)</title><rect x="1120.7" y="1363.0" width="69.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.7" y="1374.0">java/la..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (102 samples, 5.88%)</title><rect x="1120.7" y="1347.0" width="69.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1123.7" y="1358.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (102 samples, 5.88%)</title><rect x="1120.7" y="1331.0" width="69.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.7" y="1342.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (102 samples, 5.88%)</title><rect x="1120.7" y="1315.0" width="69.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.7" y="1326.0">jdk/int..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.premain (102 samples, 5.88%)</title><rect x="1120.7" y="1299.0" width="69.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.7" y="1310.0">datadog..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.agentmain (102 samples, 5.88%)</title><rect x="1120.7" y="1283.0" width="69.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.7" y="1294.0">datadog..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (102 samples, 5.88%)</title><rect x="1120.7" y="1267.0" width="69.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.7" y="1278.0">java/la..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (102 samples, 5.88%)</title><rect x="1120.7" y="1251.0" width="69.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.7" y="1262.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (102 samples, 5.88%)</title><rect x="1120.7" y="1235.0" width="69.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.7" y="1246.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (102 samples, 5.88%)</title><rect x="1120.7" y="1219.0" width="69.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.7" y="1230.0">jdk/int..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1203.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.7" y="1214.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.7" y="1198.0"></text>
</g>
<g>
<title>datadog/slf4j/helpers/SubstituteLoggerFactory.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1171.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1155.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1139.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1123.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1107.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findVarHandle (1 samples, 0.06%)</title><rect x="1120.7" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getFieldVarHandle (1 samples, 0.06%)</title><rect x="1120.7" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getFieldVarHandleCommon (1 samples, 0.06%)</title><rect x="1120.7" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandles.makeFieldHandle (1 samples, 0.06%)</title><rect x="1120.7" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadOnly.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1027.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.methodType (1 samples, 0.06%)</title><rect x="1120.7" y="995.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1123.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (1 samples, 0.06%)</title><rect x="1120.7" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (1 samples, 0.06%)</title><rect x="1120.7" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1120.7" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.7" y="958.0"></text>
</g>
<g>
<title>sun/invoke/util/Wrapper.forPrimitiveType (1 samples, 0.06%)</title><rect x="1120.7" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.7" y="942.0"></text>
</g>
<g>
<title>sun/invoke/util/Wrapper.findPrimitiveType (1 samples, 0.06%)</title><rect x="1120.7" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.7" y="926.0"></text>
</g>
<g>
<title>sun/invoke/util/Wrapper.hashPrim (1 samples, 0.06%)</title><rect x="1120.7" y="899.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="1120.7" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.start (101 samples, 5.82%)</title><rect x="1121.3" y="1203.0" width="68.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.3" y="1214.0">datadog..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createParentClassloader (3 samples, 0.17%)</title><rect x="1121.3" y="1187.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.3" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDatadogClassLoader (1 samples, 0.06%)</title><rect x="1121.3" y="1171.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1121.3" y="1155.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1121.3" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1121.3" y="1123.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.06%)</title><rect x="1121.3" y="1107.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.3" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1121.3" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.3" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1121.3" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.3" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.06%)</title><rect x="1121.3" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.3" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.06%)</title><rect x="1121.3" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.3" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.06%)</title><rect x="1121.3" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.3" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.06%)</title><rect x="1121.3" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.3" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/ZipCoder$UTF8.toString (1 samples, 0.06%)</title><rect x="1121.3" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/System$2.newStringUTF8NoRepl (1 samples, 0.06%)</title><rect x="1121.3" y="979.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringCoding.newStringUTF8NoRepl (1 samples, 0.06%)</title><rect x="1121.3" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.hasNegatives (1 samples, 0.06%)</title><rect x="1121.3" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getPlatformClassLoader (1 samples, 0.06%)</title><rect x="1122.0" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1122.0" y="1155.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.06%)</title><rect x="1122.0" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.06%)</title><rect x="1122.0" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.06%)</title><rect x="1122.0" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.06%)</title><rect x="1122.0" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.06%)</title><rect x="1122.0" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.06%)</title><rect x="1122.0" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.06%)</title><rect x="1122.0" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="1122.0" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="1122.0" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.0" y="1022.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.06%)</title><rect x="1122.0" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.0" y="1006.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.06%)</title><rect x="1122.0" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.0" y="990.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.06%)</title><rect x="1122.0" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.0" y="974.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.06%)</title><rect x="1122.0" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.0" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1122.0" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.0" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.06%)</title><rect x="1122.0" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.0" y="926.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.06%)</title><rect x="1122.0" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.0" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.06%)</title><rect x="1122.0" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.0" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.06%)</title><rect x="1122.0" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.06%)</title><rect x="1122.0" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.06%)</title><rect x="1122.0" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.06%)</title><rect x="1122.0" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.0" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.06%)</title><rect x="1122.0" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.0" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.06%)</title><rect x="1122.0" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.0" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.defineProxyClass (1 samples, 0.06%)</title><rect x="1122.0" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.0" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateProxyClass (1 samples, 0.06%)</title><rect x="1122.0" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.0" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateClassFile (1 samples, 0.06%)</title><rect x="1122.0" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.0" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.write (1 samples, 0.06%)</title><rect x="1122.0" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.0" y="734.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.writeShort (1 samples, 0.06%)</title><rect x="1122.0" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.0" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="1122.0" y="691.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1125.0" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="1122.0" y="675.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1125.0" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1122.0" y="659.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1125.0" y="670.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1122.0" y="643.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.0" y="654.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.06%)</title><rect x="1122.0" y="627.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1125.0" y="638.0"></text>
</g>
<g>
<title>OopMapStream::find_next() [clone .part.39] (1 samples, 0.06%)</title><rect x="1122.0" y="611.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.0" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1122.7" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.06%)</title><rect x="1122.7" y="1155.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.06%)</title><rect x="1122.7" y="1139.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.06%)</title><rect x="1122.7" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.06%)</title><rect x="1122.7" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.7" y="1118.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/classes.jsa (1 samples, 0.06%)</title><rect x="1122.7" y="1091.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1125.7" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.installDatadogTracer (22 samples, 1.27%)</title><rect x="1123.4" y="1187.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1123.4" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.4" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1123.4" y="1155.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.4" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.hasPackage (1 samples, 0.06%)</title><rect x="1123.4" y="1139.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.4" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="1123.4" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.4" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="1123.4" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="1123.4" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.4" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="1123.4" y="1075.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1126.4" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="1123.4" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.4" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="1123.4" y="1043.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.4" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1123.4" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.4" y="1038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1123.4" y="1011.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1126.4" y="1022.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.06%)</title><rect x="1123.4" y="995.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1126.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 1.21%)</title><rect x="1124.1" y="1171.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 1.21%)</title><rect x="1124.1" y="1155.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (21 samples, 1.21%)</title><rect x="1124.1" y="1139.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (21 samples, 1.21%)</title><rect x="1124.1" y="1123.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.1" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/TracerInstaller.installGlobalTracer (21 samples, 1.21%)</title><rect x="1124.1" y="1107.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.1" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.build (20 samples, 1.15%)</title><rect x="1124.1" y="1091.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.1" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (20 samples, 1.15%)</title><rect x="1124.1" y="1075.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.1" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (20 samples, 1.15%)</title><rect x="1124.1" y="1059.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.1" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/MetricsAggregatorFactory.createMetricsAggregator (6 samples, 0.35%)</title><rect x="1124.1" y="1043.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.1" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (5 samples, 0.29%)</title><rect x="1124.1" y="1027.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.1" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1124.1" y="1011.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.1" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1124.1" y="995.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.1" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1124.1" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.1" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="1124.1" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.1" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1124.1" y="947.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.1" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1124.1" y="931.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.1" y="942.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="1124.1" y="915.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.1" y="926.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="1124.1" y="899.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1127.1" y="910.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1124.1" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.1" y="894.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_method_signature(Symbol*) (1 samples, 0.06%)</title><rect x="1124.1" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.getWellKnownTags (4 samples, 0.23%)</title><rect x="1124.7" y="1011.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.7" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.getHostName (4 samples, 0.23%)</title><rect x="1124.7" y="995.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Runtime.exec (4 samples, 0.23%)</title><rect x="1124.7" y="979.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Runtime.exec (4 samples, 0.23%)</title><rect x="1124.7" y="963.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.7" y="974.0"></text>
</g>
<g>
<title>java/lang/Runtime.exec (4 samples, 0.23%)</title><rect x="1124.7" y="947.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.7" y="958.0"></text>
</g>
<g>
<title>java/lang/ProcessBuilder.start (4 samples, 0.23%)</title><rect x="1124.7" y="931.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.7" y="942.0"></text>
</g>
<g>
<title>java/lang/ProcessBuilder.start (4 samples, 0.23%)</title><rect x="1124.7" y="915.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.7" y="926.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.start (4 samples, 0.23%)</title><rect x="1124.7" y="899.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.&lt;init&gt; (4 samples, 0.23%)</title><rect x="1124.7" y="883.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.7" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.23%)</title><rect x="1124.7" y="867.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.7" y="878.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl$$Lambda$51/1991724700.run (4 samples, 0.23%)</title><rect x="1124.7" y="851.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.7" y="862.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.lambda$new$0 (4 samples, 0.23%)</title><rect x="1124.7" y="835.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.7" y="846.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.initStreams (4 samples, 0.23%)</title><rect x="1124.7" y="819.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="1124.7" y="803.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1127.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ProcessHandleImpl.completion (1 samples, 0.06%)</title><rect x="1125.4" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1125.4" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.4" y="798.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1125.4" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.4" y="782.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1125.4" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1125.4" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1125.4" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.4" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1125.4" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1125.4" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1125.4" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1125.4" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1125.4" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1125.4" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="1125.4" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1128.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.06%)</title><rect x="1125.4" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.06%)</title><rect x="1125.4" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.06%)</title><rect x="1125.4" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1125.4" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.4" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="1125.4" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.4" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="1125.4" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.4" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1125.4" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="1125.4" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1128.4" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.06%)</title><rect x="1125.4" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.12%)</title><rect x="1126.1" y="803.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.12%)</title><rect x="1126.1" y="787.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.1" y="798.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="1126.1" y="771.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.1" y="782.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="1126.1" y="755.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="1126.1" y="739.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="1126.1" y="723.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.1" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1126.1" y="707.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="1126.1" y="691.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="1126.1" y="675.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="1126.1" y="659.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="1126.1" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="1126.1" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (2 samples, 0.12%)</title><rect x="1126.1" y="611.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (2 samples, 0.12%)</title><rect x="1126.1" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (2 samples, 0.12%)</title><rect x="1126.1" y="579.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (2 samples, 0.12%)</title><rect x="1126.1" y="563.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.06%)</title><rect x="1126.1" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.1" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.06%)</title><rect x="1126.1" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.1" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.1" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.1" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.1" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.1" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.1" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.1" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.1" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.06%)</title><rect x="1126.8" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.8" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.8" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="1126.8" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="1126.8" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.8" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="1126.8" y="483.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.8" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="1126.8" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.8" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (1 samples, 0.06%)</title><rect x="1126.8" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.8" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="1126.8" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.8" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="1126.8" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.8" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="1126.8" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.8" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="1126.8" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.8" y="398.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f136c8b7080 (1 samples, 0.06%)</title><rect x="1126.8" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1127.5" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.5" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1127.5" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.5" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1127.5" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.5" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1127.5" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.5" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1127.5" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.5" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1127.5" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.5" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1127.5" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1127.5" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.06%)</title><rect x="1127.5" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.5" y="910.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.06%)</title><rect x="1127.5" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.5" y="894.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.06%)</title><rect x="1127.5" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.5" y="878.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.06%)</title><rect x="1127.5" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="1127.5" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="1127.5" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.5" y="830.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1127.5" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.5" y="814.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1127.5" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.5" y="798.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1127.5" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1127.5" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1127.5" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="1127.5" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="1127.5" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.5" y="718.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="1127.5" y="691.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1130.5" y="702.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="1127.5" y="675.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1130.5" y="686.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1127.5" y="659.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1130.5" y="670.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1127.5" y="643.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.5" y="654.0"></text>
</g>
<g>
<title>Method::bci_from(unsigned char*) const (1 samples, 0.06%)</title><rect x="1127.5" y="627.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.5" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (5 samples, 0.29%)</title><rect x="1128.1" y="1043.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.1" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (5 samples, 0.29%)</title><rect x="1128.1" y="1027.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.1" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.builder (1 samples, 0.06%)</title><rect x="1128.1" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.1" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter$DDAgentWriterBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.1" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.1" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/HealthMetrics.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.1" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.1" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/HealthMetrics.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.1" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.1" y="974.0"></text>
</g>
<g>
<title>datadog/trace/api/cache/RadixTreeCache.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1128.1" y="947.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/api/cache/RadixTreeCache.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.1" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/api/cache/RadixTreeCache.get (1 samples, 0.06%)</title><rect x="1128.1" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/api/cache/RadixTreeCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="1128.1" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.compareAndSet (1 samples, 0.06%)</title><rect x="1128.1" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethod (1 samples, 0.06%)</title><rect x="1128.1" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodImpl (1 samples, 0.06%)</title><rect x="1128.1" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.1" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.varHandleOperationLinkerMethod (1 samples, 0.06%)</title><rect x="1128.1" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.1" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (1 samples, 0.06%)</title><rect x="1128.1" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (1 samples, 0.06%)</title><rect x="1128.1" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (1 samples, 0.06%)</title><rect x="1128.1" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (1 samples, 0.06%)</title><rect x="1128.1" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (1 samples, 0.06%)</title><rect x="1128.1" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.1" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (1 samples, 0.06%)</title><rect x="1128.1" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (1 samples, 0.06%)</title><rect x="1128.1" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (1 samples, 0.06%)</title><rect x="1128.1" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalizeAll (1 samples, 0.06%)</title><rect x="1128.1" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.1" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1128.8" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.8" y="1022.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi.adapter (1 samples, 0.06%)</title><rect x="1128.8" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.8" y="1006.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi.adapter (1 samples, 0.06%)</title><rect x="1128.8" y="979.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.8" y="990.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi.adapter (1 samples, 0.06%)</title><rect x="1128.8" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.8" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1128.8" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.8" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1128.8" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.8" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1128.8" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.8" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1128.8" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.8" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1128.8" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.8" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1128.8" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1128.8" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1128.8" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.8" y="846.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.8" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.8" y="830.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.8" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.8" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.12%)</title><rect x="1129.5" y="1011.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.5" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.12%)</title><rect x="1129.5" y="995.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1129.5" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.5" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1129.5" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.5" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.06%)</title><rect x="1129.5" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.5" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1129.5" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.5" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1129.5" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.5" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1129.5" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.5" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1129.5" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.5" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1129.5" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.5" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1129.5" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1132.5" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1129.5" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.5" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1129.5" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.5" y="830.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.06%)</title><rect x="1129.5" y="803.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1132.5" y="814.0"></text>
</g>
<g>
<title>okhttp3/OkHttpClient$Builder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1130.2" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.2" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1130.2" y="963.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.2" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1130.2" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1130.2" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1130.2" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1130.2" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.2" y="910.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1130.2" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1130.2" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.2" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="1130.2" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.2" y="862.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1130.2" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.2" y="846.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1130.2" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1130.2" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1130.2" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.2" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1130.2" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1130.2" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1130.2" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1130.2" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1130.2" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1130.2" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1130.2" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1130.2" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="1130.2" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.2" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.06%)</title><rect x="1130.2" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1130.2" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1130.2" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.2" y="606.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.06%)</title><rect x="1130.2" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.2" y="590.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.06%)</title><rect x="1130.2" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.2" y="574.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.isDebugEnabled (1 samples, 0.06%)</title><rect x="1130.2" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.2" y="558.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory$Helper.enabled (1 samples, 0.06%)</title><rect x="1130.2" y="531.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.2" y="542.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.enabled (1 samples, 0.06%)</title><rect x="1130.2" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.2" y="526.0"></text>
</g>
<g>
<title>datadog/trace/logging/LogLevel.isEnabled (1 samples, 0.06%)</title><rect x="1130.2" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Enum.compareTo (1 samples, 0.06%)</title><rect x="1130.2" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.getClass (1 samples, 0.06%)</title><rect x="1130.2" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.2" y="478.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl.get (1 samples, 0.06%)</title><rect x="1130.9" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.9" y="1022.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.parse (1 samples, 0.06%)</title><rect x="1130.9" y="995.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.9" y="1006.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.canonicalizeHost (1 samples, 0.06%)</title><rect x="1130.9" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.9" y="990.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.canonicalizeHost (1 samples, 0.06%)</title><rect x="1130.9" y="963.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.9" y="974.0"></text>
</g>
<g>
<title>java/net/IDN.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1130.9" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Class.getResourceAsStream (1 samples, 0.06%)</title><rect x="1130.9" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResourceAsStream (1 samples, 0.06%)</title><rect x="1130.9" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceAsStream (1 samples, 0.06%)</title><rect x="1130.9" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.open (1 samples, 0.06%)</title><rect x="1130.9" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="1130.9" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="1130.9" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.06%)</title><rect x="1130.9" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.06%)</title><rect x="1130.9" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.06%)</title><rect x="1130.9" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.06%)</title><rect x="1130.9" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.asSpecial (1 samples, 0.06%)</title><rect x="1130.9" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getReferenceKind (1 samples, 0.06%)</title><rect x="1130.9" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.9" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.createStatsDClient (8 samples, 0.46%)</title><rect x="1131.5" y="1043.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.5" y="1054.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (7 samples, 0.40%)</title><rect x="1131.5" y="1027.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.5" y="1038.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (7 samples, 0.40%)</title><rect x="1131.5" y="1011.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.5" y="1022.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (6 samples, 0.35%)</title><rect x="1131.5" y="995.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.submit (3 samples, 0.17%)</title><rect x="1131.5" y="979.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (3 samples, 0.17%)</title><rect x="1131.5" y="963.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (2 samples, 0.12%)</title><rect x="1131.5" y="947.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.5" y="958.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="1131.5" y="931.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.5" y="942.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="1131.5" y="915.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="1131.5" y="899.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="1131.5" y="883.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.5" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1131.5" y="867.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="1131.5" y="851.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="1131.5" y="835.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="1131.5" y="819.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="1131.5" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="1131.5" y="787.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.06%)</title><rect x="1131.5" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.06%)</title><rect x="1131.5" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.06%)</title><rect x="1131.5" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.06%)</title><rect x="1131.5" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.06%)</title><rect x="1131.5" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1131.5" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1131.5" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1131.5" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1131.5" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="1131.5" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.06%)</title><rect x="1131.5" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1131.5" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="1131.5" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="1131.5" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="1131.5" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="1132.2" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.06%)</title><rect x="1132.2" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.06%)</title><rect x="1132.2" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1132.2" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1132.2" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="1132.2" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.06%)</title><rect x="1132.2" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="1132.2" y="659.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.2" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="1132.2" y="643.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1135.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1132.2" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.2" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::extract_attached_method(vframeStream&amp;) (1 samples, 0.06%)</title><rect x="1132.2" y="611.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.2" y="622.0"></text>
</g>
<g>
<title>CompiledMethod::attached_method_before_pc(unsigned char*) (1 samples, 0.06%)</title><rect x="1132.2" y="595.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.2" y="606.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.06%)</title><rect x="1132.2" y="579.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="1132.9" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.06%)</title><rect x="1132.9" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.9" y="942.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1132.9" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.9" y="926.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1132.9" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1132.9" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1132.9" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.9" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1132.9" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1132.9" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1132.9" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1135.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1132.9" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1132.9" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1132.9" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="1132.9" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.06%)</title><rect x="1132.9" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1132.9" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1132.9" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="1132.9" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="1132.9" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1135.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getParameters (1 samples, 0.06%)</title><rect x="1132.9" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.9" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="1132.9" y="643.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1135.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.newSingleThreadExecutor (3 samples, 0.17%)</title><rect x="1133.6" y="979.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.6" y="990.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (3 samples, 0.17%)</title><rect x="1133.6" y="963.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.6" y="974.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (3 samples, 0.17%)</title><rect x="1133.6" y="947.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (3 samples, 0.17%)</title><rect x="1133.6" y="931.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.17%)</title><rect x="1133.6" y="915.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.6" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.17%)</title><rect x="1133.6" y="899.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.17%)</title><rect x="1133.6" y="883.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.17%)</title><rect x="1133.6" y="867.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (3 samples, 0.17%)</title><rect x="1133.6" y="851.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.17%)</title><rect x="1133.6" y="835.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (3 samples, 0.17%)</title><rect x="1133.6" y="819.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1136.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (2 samples, 0.12%)</title><rect x="1134.3" y="803.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.06%)</title><rect x="1134.3" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.06%)</title><rect x="1134.3" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.06%)</title><rect x="1134.3" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1134.3" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="1134.3" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.06%)</title><rect x="1134.9" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.06%)</title><rect x="1134.9" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1134.9" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1137.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1134.9" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="1134.9" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.06%)</title><rect x="1134.9" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.06%)</title><rect x="1134.9" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.06%)</title><rect x="1134.9" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitMethod (1 samples, 0.06%)</title><rect x="1134.9" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.06%)</title><rect x="1134.9" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitMethod (1 samples, 0.06%)</title><rect x="1134.9" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.06%)</title><rect x="1134.9" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.9" y="622.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticStatsDAddressResolution (1 samples, 0.06%)</title><rect x="1135.6" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.6" y="1006.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticAddressResolution (1 samples, 0.06%)</title><rect x="1135.6" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.6" y="990.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.06%)</title><rect x="1135.6" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.6" y="974.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.06%)</title><rect x="1135.6" y="947.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.6" y="958.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.06%)</title><rect x="1135.6" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.6" y="942.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="1135.6" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.6" y="926.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="1135.6" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.6" y="910.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.06%)</title><rect x="1135.6" y="883.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.06%)</title><rect x="1135.6" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="1135.6" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.6" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="1135.6" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.6" y="846.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="819.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.6" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.6" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.6" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="771.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.6" y="782.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="755.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.6" y="766.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.6" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="723.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.6" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="707.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.6" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="691.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.6" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="675.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.6" y="686.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.6" y="670.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="643.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.6" y="654.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.06%)</title><rect x="1135.6" y="627.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.6" y="638.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.06%)</title><rect x="1135.6" y="611.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.6" y="622.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (1 samples, 0.06%)</title><rect x="1135.6" y="595.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1138.6" y="606.0"></text>
</g>
<g>
<title>transformClassFile (1 samples, 0.06%)</title><rect x="1135.6" y="579.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1138.6" y="590.0"></text>
</g>
<g>
<title>jni_NewStringUTF (1 samples, 0.06%)</title><rect x="1135.6" y="563.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1138.6" y="574.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_str(char const*, Thread*) (1 samples, 0.06%)</title><rect x="1135.6" y="547.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.6" y="558.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) [clone .part.102] (1 samples, 0.06%)</title><rect x="1135.6" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.6" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.06%)</title><rect x="1135.6" y="515.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1136.3" y="1027.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1136.3" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.3" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1136.3" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.3" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1136.3" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.3" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1136.3" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.3" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1136.3" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.3" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1136.3" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.3" y="942.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1136.3" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.3" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1136.3" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.3" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1136.3" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.3" y="894.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1136.3" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.3" y="878.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1136.3" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1136.3" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1136.3" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.3" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1136.3" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1136.3" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1136.3" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1136.3" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1136.3" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default$1.resolve (1 samples, 0.06%)</title><rect x="1136.3" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Simple.of (1 samples, 0.06%)</title><rect x="1136.3" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.3" y="718.0"></text>
</g>
<g>
<title>java/util/Collections.singletonMap (1 samples, 0.06%)</title><rect x="1136.3" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.3" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1136.3" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.3" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.logStatus (1 samples, 0.06%)</title><rect x="1137.0" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.0" y="1054.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.06%)</title><rect x="1137.0" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="1038.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.06%)</title><rect x="1137.0" y="1011.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.0" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger$ConfigAdapter.toJson (1 samples, 0.06%)</title><rect x="1137.0" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.0" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger$ConfigAdapter.toJson (1 samples, 0.06%)</title><rect x="1137.0" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.0" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1137.0" y="963.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.0" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1137.0" y="947.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.0" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1137.0" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.0" y="942.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1137.0" y="915.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.0" y="926.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1137.0" y="899.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.0" y="910.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1137.0" y="883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.0" y="894.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.06%)</title><rect x="1137.0" y="867.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1140.0" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.builder (1 samples, 0.06%)</title><rect x="1137.7" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1140.7" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1137.7" y="1075.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.7" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.config (1 samples, 0.06%)</title><rect x="1137.7" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.7" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/propagation/HttpCodec.createExtractor (1 samples, 0.06%)</title><rect x="1137.7" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.7" y="1054.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1137.7" y="1027.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.7" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1137.7" y="1011.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.7" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="995.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.7" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="979.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.7" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="963.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1140.7" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="947.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.7" y="958.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="931.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.7" y="942.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="915.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.7" y="926.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="899.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.7" y="910.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1137.7" y="883.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1140.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startDatadogAgent (73 samples, 4.21%)</title><rect x="1138.3" y="1187.0" width="49.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.3" y="1198.0">datad..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (73 samples, 4.21%)</title><rect x="1138.3" y="1171.0" width="49.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.3" y="1182.0">java/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (73 samples, 4.21%)</title><rect x="1138.3" y="1155.0" width="49.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.3" y="1166.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (73 samples, 4.21%)</title><rect x="1138.3" y="1139.0" width="49.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.3" y="1150.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (73 samples, 4.21%)</title><rect x="1138.3" y="1123.0" width="49.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.3" y="1134.0">jdk/i..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.&lt;clinit&gt; (5 samples, 0.29%)</title><rect x="1138.3" y="1107.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.3" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.&lt;clinit&gt; (5 samples, 0.29%)</title><rect x="1138.3" y="1091.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.3" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.&lt;init&gt; (4 samples, 0.23%)</title><rect x="1138.3" y="1075.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.3" y="1086.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build (1 samples, 0.06%)</title><rect x="1138.3" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.3" y="1070.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1138.3" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.3" y="1054.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1138.3" y="1027.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1138.3" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.3" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1138.3" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.hasPackage (1 samples, 0.06%)</title><rect x="1138.3" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.3" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (2 samples, 0.12%)</title><rect x="1139.0" y="1059.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.0" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache$Provider.newWeakCache (2 samples, 0.12%)</title><rect x="1139.0" y="1043.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.0" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1139.0" y="1027.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.0" y="1038.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.build (2 samples, 0.12%)</title><rect x="1139.0" y="1011.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.0" y="1022.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1139.0" y="995.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.0" y="1006.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1139.0" y="979.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.0" y="990.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache (2 samples, 0.12%)</title><rect x="1139.0" y="963.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.0" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.0" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.0" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1139.0" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.0" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1139.0" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.0" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.0" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.0" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.0" y="862.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1139.0" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.0" y="798.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.0" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1139.0" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.0" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1139.0" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.0" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.0" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.0" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.0" y="702.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.0" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1139.0" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.0" y="638.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.0" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1139.0" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.0" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1139.0" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.0" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.0" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.0" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.0" y="542.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.0" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1139.0" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.0" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.0" y="478.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.0" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.0" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1139.0" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.0" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1139.0" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.0" y="430.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.0" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.0" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.0" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.0" y="382.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.0" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1139.0" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1139.0" y="307.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1142.0" y="318.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.06%)</title><rect x="1139.0" y="291.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1142.0" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1139.7" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1139.7" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1139.7" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.06%)</title><rect x="1139.7" y="899.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.7" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1139.7" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.7" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMS.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1139.7" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.7" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WS.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1139.7" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.7" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1139.7" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.7" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.7" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.7" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.7" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.7" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1139.7" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.7" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1139.7" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.7" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.7" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.7" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.7" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.7" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.7" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.7" y="734.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.7" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.7" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1139.7" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.7" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.7" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.7" y="670.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1139.7" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.7" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1139.7" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.7" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1139.7" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.7" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.7" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.7" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1139.7" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.7" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1139.7" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1139.7" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.7" y="558.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1139.7" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.7" y="542.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1139.7" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.7" y="526.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1139.7" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1139.7" y="483.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1142.7" y="494.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1139.7" y="467.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1142.7" y="478.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1140.4" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1140.4" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1140.4" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.4" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1140.4" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.4" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1140.4" y="995.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.4" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1140.4" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.4" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1140.4" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.4" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1140.4" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.4" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1140.4" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.4" y="942.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1140.4" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.4" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1140.4" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.4" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1140.4" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.4" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1140.4" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1140.4" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1140.4" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.4" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1140.4" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.4" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1140.4" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1140.4" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.4" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1140.4" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.4" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1140.4" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1140.4" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1140.4" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1140.4" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.4" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1140.4" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.4" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1140.4" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.4" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1140.4" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.4" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1140.4" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.4" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1140.4" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.4" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1140.4" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1140.4" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.4" y="606.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1140.4" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.4" y="590.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1140.4" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.4" y="574.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1140.4" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1140.4" y="531.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1143.4" y="542.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1140.4" y="515.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1143.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1141.1" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.1" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1141.1" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.1" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.06%)</title><rect x="1141.1" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1141.1" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1141.1" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 0.06%)</title><rect x="1141.1" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.1" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (68 samples, 3.92%)</title><rect x="1141.7" y="1107.0" width="46.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.7" y="1118.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (68 samples, 3.92%)</title><rect x="1141.7" y="1091.0" width="46.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.7" y="1102.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.instrument (3 samples, 0.17%)</title><rect x="1141.7" y="1075.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.7" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.applyInstrumentationTransformers (2 samples, 0.12%)</title><rect x="1141.7" y="1059.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.7" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/rabbitmq/amqp/RabbitChannelInstrumentation.transformers (1 samples, 0.06%)</title><rect x="1141.7" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.canThrow (1 samples, 0.06%)</title><rect x="1141.7" y="1027.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.canThrow (1 samples, 0.06%)</title><rect x="1141.7" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.isAssignableTo (1 samples, 0.06%)</title><rect x="1141.7" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (1 samples, 0.06%)</title><rect x="1141.7" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.isAssignableTo (1 samples, 0.06%)</title><rect x="1141.7" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (1 samples, 0.06%)</title><rect x="1141.7" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.06%)</title><rect x="1141.7" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1142.4" y="1043.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1142.4" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.4" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1142.4" y="1011.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.4" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1142.4" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.4" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1142.4" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.4" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1142.4" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.4" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1142.4" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.4" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1142.4" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.4" y="942.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1142.4" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.4" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1142.4" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.4" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1142.4" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.4" y="894.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1142.4" y="867.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1145.4" y="878.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1142.4" y="851.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1145.4" y="862.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1142.4" y="835.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1145.4" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1142.4" y="819.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1145.4" y="830.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1142.4" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.4" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1142.4" y="787.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.4" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1142.4" y="771.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.4" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_attributes(ClassFileStream const*, ConstantPool*, ClassFileParser::ClassAnnotationCollector*, Thread*) (1 samples, 0.06%)</title><rect x="1142.4" y="755.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.4" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_inner_classes_attribute(ClassFileStream const*, ConstantPool const*, unsigned char const*, bool, unsigned short, unsigned short, Thread*) (1 samples, 0.06%)</title><rect x="1142.4" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.4" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::check_inner_classes_circularity(ConstantPool const*, int, Thread*) (1 samples, 0.06%)</title><rect x="1142.4" y="723.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1145.4" y="734.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.typeMatcher (1 samples, 0.06%)</title><rect x="1143.1" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.1" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/DDElementMatchers.extendsClass (1 samples, 0.06%)</title><rect x="1143.1" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1143.1" y="1027.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.1" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1143.1" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.1" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1143.1" y="995.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.1" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1143.1" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.1" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1143.1" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.1" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1143.1" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.1" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1143.1" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1143.1" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.1" y="926.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1143.1" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.1" y="910.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1143.1" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.1" y="894.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1143.1" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.1" y="878.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="1143.1" y="851.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1146.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1143.8" y="1075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1146.8" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1143.8" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.8" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1143.8" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.8" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1143.8" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.8" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1143.8" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1143.8" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1143.8" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1143.8" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.8" y="974.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1143.8" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.8" y="958.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1143.8" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1143.8" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1143.8" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.8" y="910.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (14 samples, 0.81%)</title><rect x="1144.5" y="1075.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1147.5" y="1086.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (14 samples, 0.81%)</title><rect x="1144.5" y="1059.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.5" y="1070.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (14 samples, 0.81%)</title><rect x="1144.5" y="1043.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.5" y="1054.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (14 samples, 0.81%)</title><rect x="1144.5" y="1027.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.5" y="1038.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (5 samples, 0.29%)</title><rect x="1144.5" y="1011.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.forName (5 samples, 0.29%)</title><rect x="1144.5" y="995.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (5 samples, 0.29%)</title><rect x="1144.5" y="979.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.5" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (5 samples, 0.29%)</title><rect x="1144.5" y="963.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.5" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (5 samples, 0.29%)</title><rect x="1144.5" y="947.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.5" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (5 samples, 0.29%)</title><rect x="1144.5" y="931.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.5" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.29%)</title><rect x="1144.5" y="915.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1147.5" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (5 samples, 0.29%)</title><rect x="1144.5" y="899.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.5" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (5 samples, 0.29%)</title><rect x="1144.5" y="883.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.5" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (4 samples, 0.23%)</title><rect x="1144.5" y="867.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.5" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.12%)</title><rect x="1144.5" y="851.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.5" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.12%)</title><rect x="1144.5" y="835.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1147.5" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1144.5" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.5" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1144.5" y="803.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1147.5" y="814.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1144.5" y="787.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1147.5" y="798.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1144.5" y="771.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1147.5" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1144.5" y="755.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.5" y="766.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1144.5" y="739.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1147.5" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1144.5" y="723.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1147.5" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1144.5" y="707.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.5" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="1144.5" y="691.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.5" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="1144.5" y="675.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.5" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.06%)</title><rect x="1145.1" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.06%)</title><rect x="1145.1" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="1145.1" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.06%)</title><rect x="1145.1" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.1" y="782.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.06%)</title><rect x="1145.1" y="755.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1148.1" y="766.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.06%)</title><rect x="1145.1" y="739.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.1" y="750.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.06%)</title><rect x="1145.1" y="723.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.1" y="734.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.06%)</title><rect x="1145.1" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.1" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;565366ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 565366ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.06%)</title><rect x="1145.1" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (2 samples, 0.12%)</title><rect x="1145.8" y="851.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.8" y="862.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.12%)</title><rect x="1145.8" y="835.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.8" y="846.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.12%)</title><rect x="1145.8" y="819.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1148.8" y="830.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.12%)</title><rect x="1145.8" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="1145.8" y="787.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1148.8" y="798.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (2 samples, 0.12%)</title><rect x="1145.8" y="771.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1148.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1147.2" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1147.2" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.2" y="862.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1147.2" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.2" y="846.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1147.2" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.2" y="830.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.06%)</title><rect x="1147.2" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.2" y="814.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (9 samples, 0.52%)</title><rect x="1147.9" y="1011.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.9" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.52%)</title><rect x="1147.9" y="995.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.9" y="1006.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 0.52%)</title><rect x="1147.9" y="979.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.9" y="990.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 0.52%)</title><rect x="1147.9" y="963.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 0.52%)</title><rect x="1147.9" y="947.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (9 samples, 0.52%)</title><rect x="1147.9" y="931.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (9 samples, 0.52%)</title><rect x="1147.9" y="915.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (9 samples, 0.52%)</title><rect x="1147.9" y="899.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.9" y="910.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (9 samples, 0.52%)</title><rect x="1147.9" y="883.0" width="6.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1150.9" y="894.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (9 samples, 0.52%)</title><rect x="1147.9" y="867.0" width="6.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1150.9" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (9 samples, 0.52%)</title><rect x="1147.9" y="851.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.9" y="862.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (9 samples, 0.52%)</title><rect x="1147.9" y="835.0" width="6.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.9" y="846.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (9 samples, 0.52%)</title><rect x="1147.9" y="819.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1150.9" y="830.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (9 samples, 0.52%)</title><rect x="1147.9" y="803.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.9" y="814.0"></text>
</g>
<g>
<title>ClassVerifier::verify_anewarray(unsigned short, unsigned short, constantPoolHandle const&amp;, StackMapFrame*, Thread*) (1 samples, 0.06%)</title><rect x="1147.9" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.9" y="798.0"></text>
</g>
<g>
<title>ClassVerifier::create_temporary_symbol(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="1147.9" y="771.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.9" y="782.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="1147.9" y="755.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.9" y="766.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1147.9" y="739.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1150.9" y="750.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (2 samples, 0.12%)</title><rect x="1148.5" y="787.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.5" y="798.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.06%)</title><rect x="1148.5" y="771.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.5" y="782.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_type_signature(Symbol*) (1 samples, 0.06%)</title><rect x="1149.2" y="771.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.2" y="782.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (6 samples, 0.35%)</title><rect x="1149.9" y="787.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.9" y="798.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (4 samples, 0.23%)</title><rect x="1149.9" y="771.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.9" y="782.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (4 samples, 0.23%)</title><rect x="1149.9" y="755.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.9" y="766.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (4 samples, 0.23%)</title><rect x="1149.9" y="739.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.9" y="750.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1151.9" y="723.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.9" y="734.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_method_signature(Symbol*) (2 samples, 0.12%)</title><rect x="1152.6" y="771.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.6" y="782.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_type(char const*, long) (2 samples, 0.12%)</title><rect x="1152.6" y="755.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.6" y="766.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (5 samples, 0.29%)</title><rect x="1154.0" y="1075.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.0" y="1086.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.next (1 samples, 0.06%)</title><rect x="1154.0" y="1059.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.0" y="1070.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.next (1 samples, 0.06%)</title><rect x="1154.0" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.0" y="1054.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (1 samples, 0.06%)</title><rect x="1154.0" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.0" y="1038.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (4 samples, 0.23%)</title><rect x="1154.7" y="1059.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.7" y="1070.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (4 samples, 0.23%)</title><rect x="1154.7" y="1043.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.23%)</title><rect x="1154.7" y="1027.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (4 samples, 0.23%)</title><rect x="1154.7" y="1011.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (4 samples, 0.23%)</title><rect x="1154.7" y="995.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (4 samples, 0.23%)</title><rect x="1154.7" y="979.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.7" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1154.7" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.7" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1154.7" y="947.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.7" y="958.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1154.7" y="931.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.7" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="915.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.7" y="926.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="899.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.7" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.7" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="867.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.7" y="878.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="851.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.7" y="862.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="835.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.7" y="846.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.7" y="830.0"></text>
</g>
<g>
<title>StackMapTable::StackMapTable(StackMapReader*, StackMapFrame*, unsigned short, unsigned short, char*, int, Thread*) (1 samples, 0.06%)</title><rect x="1154.7" y="803.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.7" y="814.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/grpc/server/GrpcServerBuilderInstrumentation.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1155.3" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.3" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1155.3" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1158.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1155.3" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1158.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.06%)</title><rect x="1155.3" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1158.3" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="1155.3" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.06%)</title><rect x="1155.3" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.06%)</title><rect x="1155.3" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareTo (1 samples, 0.06%)</title><rect x="1155.3" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/rmi/context/server/RmiServerContextInstrumentation.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.0" y="963.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.0" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_ldc(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1156.0" y="947.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.0" y="958.0"></text>
</g>
<g>
<title>Bytecode_loadconstant::resolve_constant(Thread*) const (1 samples, 0.06%)</title><rect x="1156.0" y="931.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.0" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="1156.0" y="915.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.0" y="926.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/servlet2/Servlet2ResponseStatusInstrumentation.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.7" y="963.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.7" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.7" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.7" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.7" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.7" y="942.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.06%)</title><rect x="1156.7" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.7" y="926.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.06%)</title><rect x="1156.7" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.7" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.06%)</title><rect x="1156.7" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.06%)</title><rect x="1156.7" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.7" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.06%)</title><rect x="1156.7" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.7" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.06%)</title><rect x="1156.7" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.7" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.propertyNameToEnvironmentVariableName (1 samples, 0.06%)</title><rect x="1156.7" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.7" y="830.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.replaceAll (1 samples, 0.06%)</title><rect x="1156.7" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.7" y="814.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.06%)</title><rect x="1156.7" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1159.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.installOn (27 samples, 1.56%)</title><rect x="1157.4" y="1075.0" width="18.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.installOn (27 samples, 1.56%)</title><rect x="1157.4" y="1059.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.doInstall (27 samples, 1.56%)</title><rect x="1157.4" y="1043.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.makeRaw (2 samples, 0.12%)</title><rect x="1157.4" y="1027.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.&lt;clinit&gt; (2 samples, 0.12%)</title><rect x="1157.4" y="1011.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1157.4" y="995.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (2 samples, 0.12%)</title><rect x="1157.4" y="979.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (2 samples, 0.12%)</title><rect x="1157.4" y="963.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (1 samples, 0.06%)</title><rect x="1157.4" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (1 samples, 0.06%)</title><rect x="1157.4" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="1157.4" y="915.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="1157.4" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.06%)</title><rect x="1157.4" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.06%)</title><rect x="1157.4" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.06%)</title><rect x="1157.4" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1157.4" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="1157.4" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="1157.4" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1157.4" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="1157.4" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="1157.4" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1157.4" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.4" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="1157.4" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="1157.4" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.06%)</title><rect x="1157.4" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$OfLoadedInterfaceTypes.get (1 samples, 0.06%)</title><rect x="1157.4" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$OfLoadedInterfaceTypes.get (1 samples, 0.06%)</title><rect x="1157.4" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.4" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1157.4" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.4" y="654.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1157.4" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1157.4" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.4" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1157.4" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.4" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1157.4" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.4" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1157.4" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.4" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1157.4" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1157.4" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.06%)</title><rect x="1157.4" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.4" y="526.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.06%)</title><rect x="1157.4" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.4" y="510.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.06%)</title><rect x="1157.4" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.4" y="494.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.06%)</title><rect x="1157.4" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="1157.4" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="1157.4" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="446.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1157.4" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.4" y="430.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1157.4" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.4" y="414.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1157.4" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1157.4" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1157.4" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="1157.4" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="1157.4" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.4" y="334.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="1157.4" y="307.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1160.4" y="318.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="1157.4" y="291.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1160.4" y="302.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1157.4" y="275.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.4" y="286.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1157.4" y="259.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.4" y="270.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.06%)</title><rect x="1157.4" y="243.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.4" y="254.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1158.1" y="947.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$WrappingDispatcher.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1158.1" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.1" y="942.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.06%)</title><rect x="1158.1" y="915.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.1" y="926.0"></text>
</g>
<g>
<title>Method::build_method_counters(Method*, Thread*) (1 samples, 0.06%)</title><rect x="1158.1" y="899.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.1" y="910.0"></text>
</g>
<g>
<title>MethodCounters::allocate(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1158.1" y="883.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.1" y="894.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="1158.1" y="867.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1161.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy.apply (25 samples, 1.44%)</title><rect x="1158.7" y="1027.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.7" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.06%)</title><rect x="1158.7" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.7" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="1158.7" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.7" y="1006.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="1158.7" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.7" y="990.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="1158.7" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="1158.7" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.7" y="958.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.equals (1 samples, 0.06%)</title><rect x="1158.7" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.7" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDLocationStrategy.classFileLocator (1 samples, 0.06%)</title><rect x="1159.4" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.apply (9 samples, 0.52%)</title><rect x="1160.1" y="1011.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation.doApply (9 samples, 0.52%)</title><rect x="1160.1" y="995.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.retransformClasses (9 samples, 0.52%)</title><rect x="1160.1" y="979.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.1" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.52%)</title><rect x="1160.1" y="963.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.52%)</title><rect x="1160.1" y="947.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.52%)</title><rect x="1160.1" y="931.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.52%)</title><rect x="1160.1" y="915.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1163.1" y="926.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses (9 samples, 0.52%)</title><rect x="1160.1" y="899.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.1" y="910.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses0 (9 samples, 0.52%)</title><rect x="1160.1" y="883.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.1" y="894.0"></text>
</g>
<g>
<title>retransformClasses (1 samples, 0.06%)</title><rect x="1160.1" y="867.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1163.1" y="878.0"></text>
</g>
<g>
<title>jvmti_RetransformClasses (1 samples, 0.06%)</title><rect x="1160.1" y="851.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1163.1" y="862.0"></text>
</g>
<g>
<title>JvmtiEnv::RetransformClasses(int, _jclass* const*) (1 samples, 0.06%)</title><rect x="1160.1" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.1" y="846.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.06%)</title><rect x="1160.1" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.1" y="830.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit_prologue() (1 samples, 0.06%)</title><rect x="1160.1" y="803.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.1" y="814.0"></text>
</g>
<g>
<title>VM_RedefineClasses::load_new_class_versions(Thread*) (1 samples, 0.06%)</title><rect x="1160.1" y="787.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.1" y="798.0"></text>
</g>
<g>
<title>VM_RedefineClasses::merge_cp_and_rewrite(InstanceKlass*, InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="1160.1" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.1" y="782.0"></text>
</g>
<g>
<title>VM_RedefineClasses::merge_constant_pools(constantPoolHandle const&amp;, constantPoolHandle const&amp;, constantPoolHandle*, int*, Thread*) (1 samples, 0.06%)</title><rect x="1160.1" y="755.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.1" y="766.0"></text>
</g>
<g>
<title>ConstantPool::find_matching_entry(int, constantPoolHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1160.1" y="739.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.1" y="750.0"></text>
</g>
<g>
<title>ConstantPool::compare_entry_to(int, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="1160.1" y="723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.1" y="734.0"></text>
</g>
<g>
<title>constantTag::non_error_value() const (1 samples, 0.06%)</title><rect x="1160.1" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (8 samples, 0.46%)</title><rect x="1160.8" y="867.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1163.8" y="878.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (8 samples, 0.46%)</title><rect x="1160.8" y="851.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (8 samples, 0.46%)</title><rect x="1160.8" y="835.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (8 samples, 0.46%)</title><rect x="1160.8" y="819.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.8" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.46%)</title><rect x="1160.8" y="803.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (8 samples, 0.46%)</title><rect x="1160.8" y="787.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (8 samples, 0.46%)</title><rect x="1160.8" y="771.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (8 samples, 0.46%)</title><rect x="1160.8" y="755.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (8 samples, 0.46%)</title><rect x="1160.8" y="739.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (8 samples, 0.46%)</title><rect x="1160.8" y="723.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (2 samples, 0.12%)</title><rect x="1160.8" y="707.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1163.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (2 samples, 0.12%)</title><rect x="1160.8" y="691.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (2 samples, 0.12%)</title><rect x="1160.8" y="675.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (2 samples, 0.12%)</title><rect x="1160.8" y="659.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (1 samples, 0.06%)</title><rect x="1160.8" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (1 samples, 0.06%)</title><rect x="1160.8" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.06%)</title><rect x="1160.8" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (1 samples, 0.06%)</title><rect x="1160.8" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.8" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (1 samples, 0.06%)</title><rect x="1160.8" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.8" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (1 samples, 0.06%)</title><rect x="1160.8" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1163.8" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="1160.8" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1160.8" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.8" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1160.8" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1160.8" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.8" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="1160.8" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1163.8" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1160.8" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.8" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1160.8" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.8" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.06%)</title><rect x="1160.8" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.8" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readConst (1 samples, 0.06%)</title><rect x="1160.8" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.8" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_static_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="1160.8" y="403.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.8" y="414.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="1160.8" y="387.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.8" y="398.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="1160.8" y="371.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.8" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1160.8" y="355.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.8" y="366.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1160.8" y="339.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.8" y="350.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="1160.8" y="323.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.8" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.06%)</title><rect x="1161.5" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1161.5" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1161.5" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1161.5" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1161.5" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="1161.5" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.5" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="1161.5" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="1161.5" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.5" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1161.5" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.5" y="526.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="1161.5" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="1161.5" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.5" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="1161.5" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.5" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1161.5" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.5" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="1161.5" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.5" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="1161.5" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="1161.5" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.06%)</title><rect x="1161.5" y="387.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.5" y="398.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="1161.5" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.5" y="382.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.06%)</title><rect x="1161.5" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.5" y="366.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.06%)</title><rect x="1161.5" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.5" y="350.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="1161.5" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.5" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (6 samples, 0.35%)</title><rect x="1162.1" y="707.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (3 samples, 0.17%)</title><rect x="1162.1" y="691.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1165.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1162.1" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.1" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.06%)</title><rect x="1162.1" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="1162.1" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1165.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="1162.1" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="1162.1" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.06%)</title><rect x="1162.1" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getReturnType (1 samples, 0.06%)</title><rect x="1162.1" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1165.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveReturnType (1 samples, 0.06%)</title><rect x="1162.1" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="1162.1" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.1" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="1162.1" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (2 samples, 0.12%)</title><rect x="1162.8" y="675.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (2 samples, 0.12%)</title><rect x="1162.8" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (2 samples, 0.12%)</title><rect x="1162.8" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 0.17%)</title><rect x="1164.2" y="691.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (3 samples, 0.17%)</title><rect x="1164.2" y="675.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="1164.2" y="659.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="1164.2" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.12%)</title><rect x="1164.2" y="627.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (2 samples, 0.12%)</title><rect x="1164.2" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (1 samples, 0.06%)</title><rect x="1164.2" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (1 samples, 0.06%)</title><rect x="1164.2" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.06%)</title><rect x="1164.2" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1164.2" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1164.2" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="1164.2" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.2" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.06%)</title><rect x="1164.2" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.2" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.apply (1 samples, 0.06%)</title><rect x="1164.2" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.2" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$MethodSizeHandler$Default$WithCopiedArguments.bindExit (1 samples, 0.06%)</title><rect x="1164.2" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.2" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1164.2" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.2" y="462.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1164.2" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.2" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1164.2" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.2" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1164.2" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.2" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1164.2" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.2" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1164.2" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.2" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1164.2" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.2" y="366.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1164.2" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1164.2" y="323.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1164.2" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.2" y="318.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1164.2" y="291.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1167.2" y="302.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1164.2" y="275.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1167.2" y="286.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1164.2" y="259.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1167.2" y="270.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1164.2" y="243.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.2" y="254.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1164.2" y="227.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.2" y="238.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1164.2" y="211.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.2" y="222.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1164.2" y="195.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.2" y="206.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="1164.2" y="179.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.2" y="190.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="1164.2" y="163.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1167.2" y="174.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (1 samples, 0.06%)</title><rect x="1164.9" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.06%)</title><rect x="1164.9" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.06%)</title><rect x="1164.9" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.06%)</title><rect x="1164.9" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments$UsingArgumentCopy.injectStartFrame (1 samples, 0.06%)</title><rect x="1164.9" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.9" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="1164.9" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.9" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyTypeList.get (1 samples, 0.06%)</title><rect x="1164.9" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.9" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (1 samples, 0.06%)</title><rect x="1165.5" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1165.5" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1165.5" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1165.5" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.06%)</title><rect x="1165.5" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.consider (14 samples, 0.81%)</title><rect x="1166.2" y="1011.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.2" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher.matches (14 samples, 0.81%)</title><rect x="1166.2" y="995.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (12 samples, 0.69%)</title><rect x="1167.6" y="979.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (2 samples, 0.12%)</title><rect x="1167.6" y="963.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.6" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (2 samples, 0.12%)</title><rect x="1167.6" y="947.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (2 samples, 0.12%)</title><rect x="1167.6" y="931.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.6" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.12%)</title><rect x="1167.6" y="915.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1170.6" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.12%)</title><rect x="1167.6" y="899.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (2 samples, 0.12%)</title><rect x="1167.6" y="883.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1170.6" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (2 samples, 0.12%)</title><rect x="1167.6" y="867.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.12%)</title><rect x="1167.6" y="851.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.12%)</title><rect x="1167.6" y="835.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="1167.6" y="819.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1170.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="1167.6" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1170.6" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="1167.6" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.6" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="1167.6" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1170.6" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="1167.6" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.6" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="1167.6" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.06%)</title><rect x="1167.6" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1170.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="1167.6" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.6" y="718.0"></text>
</g>
<g>
<title>_linkToStatic (1 samples, 0.06%)</title><rect x="1167.6" y="691.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1170.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1168.2" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1168.2" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.2" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="1168.2" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1171.2" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="1168.2" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.2" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1168.2" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="1168.2" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="1168.2" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1168.2" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1171.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="1168.2" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1171.2" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1168.2" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1171.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="1168.2" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="1168.2" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (10 samples, 0.58%)</title><rect x="1168.9" y="963.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (10 samples, 0.58%)</title><rect x="1168.9" y="947.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.9" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (5 samples, 0.29%)</title><rect x="1168.9" y="931.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (4 samples, 0.23%)</title><rect x="1168.9" y="915.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="1168.9" y="899.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="1168.9" y="883.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="1168.9" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.06%)</title><rect x="1168.9" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.06%)</title><rect x="1168.9" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="1168.9" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="1168.9" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="1168.9" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.9" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="1168.9" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.9" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="1168.9" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1171.9" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="1168.9" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.9" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.recordRead (1 samples, 0.06%)</title><rect x="1168.9" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.06%)</title><rect x="1168.9" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="1168.9" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.06%)</title><rect x="1168.9" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="1168.9" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.06%)</title><rect x="1169.6" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="1169.6" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.getModifiers (1 samples, 0.06%)</title><rect x="1169.6" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1172.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.12%)</title><rect x="1170.3" y="899.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.06%)</title><rect x="1170.3" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.06%)</title><rect x="1170.3" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (1 samples, 0.06%)</title><rect x="1170.3" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1173.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.06%)</title><rect x="1171.0" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.0" y="894.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.06%)</title><rect x="1171.0" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="1171.6" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="1171.6" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1171.6" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.6" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1171.6" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="1171.6" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="1171.6" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="1171.6" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1171.6" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.6" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1171.6" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.06%)</title><rect x="1171.6" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.resolve (1 samples, 0.06%)</title><rect x="1171.6" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType.toGenericType (1 samples, 0.06%)</title><rect x="1171.6" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1171.6" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.6" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1171.6" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1171.6" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.6" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1171.6" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1171.6" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.6" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1171.6" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.6" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1171.6" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1171.6" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.06%)</title><rect x="1171.6" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.6" y="606.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.06%)</title><rect x="1171.6" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.6" y="590.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.06%)</title><rect x="1171.6" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.6" y="574.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.06%)</title><rect x="1171.6" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="1171.6" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="1171.6" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.6" y="526.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1171.6" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.6" y="510.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1171.6" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.6" y="494.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1171.6" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1171.6" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1174.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1171.6" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="1171.6" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="1171.6" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.6" y="414.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="1171.6" y="387.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1174.6" y="398.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="1171.6" y="371.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1174.6" y="382.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1171.6" y="355.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.6" y="366.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1171.6" y="339.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.6" y="350.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.06%)</title><rect x="1171.6" y="323.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.6" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 0.29%)</title><rect x="1172.3" y="931.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.3" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.29%)</title><rect x="1172.3" y="915.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.3" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.29%)</title><rect x="1172.3" y="899.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (5 samples, 0.29%)</title><rect x="1172.3" y="883.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (2 samples, 0.12%)</title><rect x="1172.3" y="867.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.3" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="1173.0" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="1173.0" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="1173.0" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="1173.0" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="1173.0" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.0" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.06%)</title><rect x="1173.0" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1176.0" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.17%)</title><rect x="1173.7" y="867.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.7" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.17%)</title><rect x="1173.7" y="851.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.7" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.17%)</title><rect x="1173.7" y="835.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.12%)</title><rect x="1173.7" y="819.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.12%)</title><rect x="1173.7" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.12%)</title><rect x="1173.7" y="787.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.12%)</title><rect x="1173.7" y="771.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.12%)</title><rect x="1173.7" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.12%)</title><rect x="1173.7" y="739.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1176.7" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="1173.7" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="1173.7" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.06%)</title><rect x="1173.7" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.06%)</title><rect x="1173.7" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.06%)</title><rect x="1173.7" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="1173.7" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.06%)</title><rect x="1174.4" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="1174.4" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.06%)</title><rect x="1174.4" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.06%)</title><rect x="1174.4" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="1174.4" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.06%)</title><rect x="1174.4" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.06%)</title><rect x="1174.4" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (1 samples, 0.06%)</title><rect x="1174.4" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="1175.0" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1178.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="1175.0" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1175.0" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1175.0" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1175.0" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1175.0" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.0" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="1175.0" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.0" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="1175.0" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.0" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1175.0" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.0" y="702.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="1175.0" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.0" y="686.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.06%)</title><rect x="1175.0" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.06%)</title><rect x="1175.0" y="643.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.06%)</title><rect x="1175.0" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getBufferBytes (1 samples, 0.06%)</title><rect x="1175.0" y="611.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.0" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.06%)</title><rect x="1175.0" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.0" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1175.0" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.0" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1175.0" y="563.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1175.0" y="547.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (17 samples, 0.98%)</title><rect x="1175.7" y="1075.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.7" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (3 samples, 0.17%)</title><rect x="1175.7" y="1059.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1175.7" y="1043.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.7" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1178.7" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.7" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.7" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1175.7" y="995.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.7" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1175.7" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.7" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.7" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.7" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.7" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1178.7" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.7" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.7" y="942.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.7" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.7" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.7" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1178.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1175.7" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.7" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.7" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.7" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.7" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.7" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1175.7" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1178.7" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1175.7" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.7" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.7" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.7" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.7" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.7" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.7" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.7" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.7" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.7" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.06%)</title><rect x="1175.7" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getNamedPackage (1 samples, 0.06%)</title><rect x="1175.7" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="1175.7" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.06%)</title><rect x="1175.7" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isDefaultFinalizer (1 samples, 0.06%)</title><rect x="1176.4" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isFinalizer (1 samples, 0.06%)</title><rect x="1176.4" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.named (1 samples, 0.06%)</title><rect x="1176.4" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1176.4" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.4" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1176.4" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.4" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1176.4" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.4" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1176.4" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.4" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1176.4" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.4" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1176.4" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1176.4" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1176.4" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.4" y="878.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1176.4" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.4" y="862.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1176.4" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.06%)</title><rect x="1176.4" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion.ofThisVm (1 samples, 0.06%)</title><rect x="1177.1" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion.ofThisVm (1 samples, 0.06%)</title><rect x="1177.1" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion$VersionLocator$ForJava9CapableVm.locate (1 samples, 0.06%)</title><rect x="1177.1" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1177.1" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.06%)</title><rect x="1177.1" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.06%)</title><rect x="1177.1" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.06%)</title><rect x="1177.1" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.1" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.06%)</title><rect x="1177.1" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.1" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.06%)</title><rect x="1177.1" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.1" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.06%)</title><rect x="1177.1" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.1" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.06%)</title><rect x="1177.1" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.1" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="1177.1" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.1" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="1177.1" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.1" y="862.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.06%)</title><rect x="1177.1" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.1" y="846.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.06%)</title><rect x="1177.1" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.1" y="830.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.06%)</title><rect x="1177.1" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.1" y="814.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.getInstance (1 samples, 0.06%)</title><rect x="1177.1" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.1" y="798.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1177.1" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.1" y="782.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSelectAnnotations (1 samples, 0.06%)</title><rect x="1177.1" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.1" y="766.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.06%)</title><rect x="1177.1" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.1" y="750.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.06%)</title><rect x="1177.1" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.1" y="734.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSig (1 samples, 0.06%)</title><rect x="1177.1" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.1" y="718.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSig (1 samples, 0.06%)</title><rect x="1177.1" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.1" y="702.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSignature (1 samples, 0.06%)</title><rect x="1177.1" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.1" y="686.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.06%)</title><rect x="1177.1" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.1" y="670.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.06%)</title><rect x="1177.1" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.1" y="654.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseClassTypeSignature (1 samples, 0.06%)</title><rect x="1177.1" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.1" y="638.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parsePackageNameAndSimpleClassTypeSignature (1 samples, 0.06%)</title><rect x="1177.1" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.1" y="622.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.skipIdentifier (1 samples, 0.06%)</title><rect x="1177.1" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.1" y="606.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.current (1 samples, 0.06%)</title><rect x="1177.1" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.1" y="590.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xba000000)@0x00007f136c8bce00 (1 samples, 0.06%)</title><rect x="1177.1" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (14 samples, 0.81%)</title><rect x="1177.8" y="1059.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split.&lt;init&gt; (14 samples, 0.81%)</title><rect x="1177.8" y="1043.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor.&lt;clinit&gt; (14 samples, 0.81%)</title><rect x="1177.8" y="1027.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1180.8" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.81%)</title><rect x="1177.8" y="1011.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1180.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (14 samples, 0.81%)</title><rect x="1177.8" y="995.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (14 samples, 0.81%)</title><rect x="1177.8" y="979.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.read (1 samples, 0.06%)</title><rect x="1177.8" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="1177.8" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.8" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1177.8" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.8" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1177.8" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.8" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1177.8" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.8" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1177.8" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.8" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1177.8" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.8" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1177.8" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.8" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1177.8" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.8" y="846.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1177.8" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.8" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1177.8" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.8" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1177.8" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.8" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1177.8" y="771.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1180.8" y="782.0"></text>
</g>
<g>
<title>next_utf2unicode (1 samples, 0.06%)</title><rect x="1177.8" y="755.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1180.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.&lt;clinit&gt; (13 samples, 0.75%)</title><rect x="1178.4" y="963.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.4" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.75%)</title><rect x="1178.4" y="947.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 0.75%)</title><rect x="1178.4" y="931.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 0.75%)</title><rect x="1178.4" y="915.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.4" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1178.4" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.4" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1178.4" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.4" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1178.4" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.4" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1178.4" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1178.4" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1178.4" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.4" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1178.4" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1178.4" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.4" y="798.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1178.4" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.4" y="782.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1178.4" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.4" y="766.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1178.4" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.4" y="750.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1178.4" y="723.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1181.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection.make (12 samples, 0.69%)</title><rect x="1179.1" y="899.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (3 samples, 0.17%)</title><rect x="1179.1" y="883.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (3 samples, 0.17%)</title><rect x="1179.1" y="867.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.1" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1179.1" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.1" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1179.1" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.1" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1179.1" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.1" y="830.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="1179.1" y="803.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.1" y="814.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="1179.1" y="787.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.1" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1179.1" y="771.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.1" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1179.1" y="755.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.1" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.06%)</title><rect x="1179.1" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.asGenericType (1 samples, 0.06%)</title><rect x="1179.8" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1182.8" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1179.8" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1179.8" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1182.8" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1179.8" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.8" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1179.8" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1182.8" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1179.8" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.8" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1179.8" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1179.8" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.8" y="750.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1179.8" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1179.8" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.8" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1179.8" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.8" y="702.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1179.8" y="675.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1182.8" y="686.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1179.8" y="659.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1182.8" y="670.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1179.8" y="643.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1182.8" y="654.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1179.8" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.8" y="638.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1179.8" y="611.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.8" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1179.8" y="595.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.8" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1179.8" y="579.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="1179.8" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.8" y="574.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.06%)</title><rect x="1179.8" y="547.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1180.5" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.5" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1180.5" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.5" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1180.5" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.5" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1180.5" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.5" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1180.5" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.5" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1180.5" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.5" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1180.5" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.5" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1180.5" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.5" y="750.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1180.5" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1180.5" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.06%)</title><rect x="1180.5" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.5" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.06%)</title><rect x="1180.5" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="1180.5" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.06%)</title><rect x="1180.5" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="1180.5" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="1180.5" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (7 samples, 0.40%)</title><rect x="1181.2" y="883.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (7 samples, 0.40%)</title><rect x="1181.2" y="867.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 0.40%)</title><rect x="1181.2" y="851.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 0.40%)</title><rect x="1181.2" y="835.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1181.2" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.2" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1181.2" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.2" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1181.2" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.2" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1181.2" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.2" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1181.2" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.2" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1181.2" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1181.2" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1181.2" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1181.2" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1181.2" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1181.2" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1181.2" y="643.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1184.2" y="654.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1181.2" y="627.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1184.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (4 samples, 0.23%)</title><rect x="1181.8" y="819.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1181.8" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.8" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.06%)</title><rect x="1181.8" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="1181.8" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="1181.8" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="1181.8" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.06%)</title><rect x="1181.8" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="1181.8" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.8" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="1181.8" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.06%)</title><rect x="1181.8" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.06%)</title><rect x="1181.8" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getStackSize (1 samples, 0.06%)</title><rect x="1181.8" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getStackSize (1 samples, 0.06%)</title><rect x="1181.8" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.8" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1181.8" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.8" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1181.8" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.8" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1181.8" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.8" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1181.8" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.8" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1181.8" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.8" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1181.8" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.8" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1181.8" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.8" y="526.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1181.8" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.8" y="510.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (1 samples, 0.06%)</title><rect x="1181.8" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="1181.8" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.8" y="478.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader$CodeSourceKey.equals (1 samples, 0.06%)</title><rect x="1181.8" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.8" y="462.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.06%)</title><rect x="1181.8" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.8" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (2 samples, 0.12%)</title><rect x="1182.5" y="803.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (2 samples, 0.12%)</title><rect x="1182.5" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.12%)</title><rect x="1182.5" y="771.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Default.getSuperClass (1 samples, 0.06%)</title><rect x="1182.5" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.5" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="1182.5" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.5" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1182.5" y="723.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1182.5" y="707.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.5" y="718.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="1182.5" y="691.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.5" y="702.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="1182.5" y="675.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.5" y="686.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.06%)</title><rect x="1182.5" y="659.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1185.5" y="670.0"></text>
</g>
<g>
<title>class_to_ID (1 samples, 0.06%)</title><rect x="1182.5" y="643.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1185.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="1183.2" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="1183.2" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1183.2" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="1183.2" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1186.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.06%)</title><rect x="1183.2" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="1183.2" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getReturnType (1 samples, 0.06%)</title><rect x="1183.2" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1186.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.06%)</title><rect x="1183.2" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$ForLoadedReturnType.resolve (1 samples, 0.06%)</title><rect x="1183.2" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.2" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getGenericReturnType (1 samples, 0.06%)</title><rect x="1183.2" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.2" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getGenericInfo (1 samples, 0.06%)</title><rect x="1183.2" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.2" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1183.2" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.2" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1183.2" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.2" y="574.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1183.2" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.2" y="558.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1183.2" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.2" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1183.2" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.2" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1183.2" y="499.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.2" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.06%)</title><rect x="1183.2" y="483.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.2" y="494.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1183.2" y="467.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.2" y="478.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1183.2" y="451.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.2" y="462.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1183.2" y="435.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.2" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Entry.resolve (1 samples, 0.06%)</title><rect x="1183.9" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1186.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/LatentMatcher$ForMethodToken.resolve (1 samples, 0.06%)</title><rect x="1183.9" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$Token.asSignatureToken (1 samples, 0.06%)</title><rect x="1183.9" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.06%)</title><rect x="1183.9" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reducing.onNonGenericType (1 samples, 0.06%)</title><rect x="1183.9" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reducing.onNonGenericType (1 samples, 0.06%)</title><rect x="1183.9" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/TargetType.resolve (1 samples, 0.06%)</title><rect x="1183.9" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1186.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.represents (1 samples, 0.06%)</title><rect x="1183.9" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.represents (1 samples, 0.06%)</title><rect x="1183.9" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1186.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="1183.9" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.12%)</title><rect x="1184.6" y="819.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (2 samples, 0.12%)</title><rect x="1184.6" y="803.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.06%)</title><rect x="1184.6" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.visitMethod (1 samples, 0.06%)</title><rect x="1184.6" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1184.6" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1184.6" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1184.6" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1184.6" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1184.6" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1184.6" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1187.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1184.6" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1187.6" y="670.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1184.6" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1184.6" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1184.6" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.6" y="622.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1184.6" y="595.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1187.6" y="606.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1184.6" y="579.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1187.6" y="590.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1184.6" y="563.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1184.6" y="547.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1184.6" y="531.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.6" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="1184.6" y="515.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1184.6" y="499.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="510.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="1184.6" y="483.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/Implementation$Context$Default$Factory.make (1 samples, 0.06%)</title><rect x="1185.2" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1185.2" y="771.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.06%)</title><rect x="1185.2" y="755.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1188.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase$Adapter.intercept (1 samples, 0.06%)</title><rect x="1185.9" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter.intercept (1 samples, 0.06%)</title><rect x="1185.9" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter.materialize (1 samples, 0.06%)</title><rect x="1185.9" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$AnnotationAdapter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1185.9" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.9" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1185.9" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.9" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1185.9" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.9" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1185.9" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.9" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1185.9" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1185.9" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1185.9" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1185.9" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1185.9" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1185.9" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1185.9" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.9" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1185.9" y="659.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1188.9" y="670.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1185.9" y="643.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1188.9" y="654.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1185.9" y="627.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1188.9" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1185.9" y="611.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="622.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1185.9" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1185.9" y="579.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1185.9" y="563.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="1185.9" y="547.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="558.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="1185.9" y="531.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.invoke (1 samples, 0.06%)</title><rect x="1186.6" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1186.6" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1186.6" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1186.6" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.6" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1186.6" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.6" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1186.6" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.6" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1186.6" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.6" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1186.6" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.6" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1186.6" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1186.6" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1186.6" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.6" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1186.6" y="707.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1189.6" y="718.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1186.6" y="691.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1189.6" y="702.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1186.6" y="675.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1189.6" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1186.6" y="659.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.6" y="670.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1186.6" y="643.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.6" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1186.6" y="627.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.6" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1186.6" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.6" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="1186.6" y="595.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="1186.6" y="579.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.with (1 samples, 0.06%)</title><rect x="1187.3" y="1075.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1187.3" y="1059.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1187.3" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.3" y="1054.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1187.3" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.3" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1187.3" y="1011.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.3" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1187.3" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.3" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1187.3" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1190.3" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1187.3" y="963.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.3" y="974.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1187.3" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.3" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1187.3" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.3" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1187.3" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1187.3" y="899.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1187.3" y="883.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1187.3" y="867.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1187.3" y="851.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1187.3" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="1187.3" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1187.3" y="803.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>PlaceholderTable::get_entry(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.06%)</title><rect x="1187.3" y="787.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startProfilingAgent (3 samples, 0.17%)</title><rect x="1188.0" y="1187.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.17%)</title><rect x="1188.0" y="1171.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.17%)</title><rect x="1188.0" y="1155.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.17%)</title><rect x="1188.0" y="1139.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.17%)</title><rect x="1188.0" y="1123.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.0" y="1134.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1188.0" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.0" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1188.0" y="1091.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.0" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1188.0" y="1075.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.0" y="1086.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="1188.0" y="1059.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="1070.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.06%)</title><rect x="1188.0" y="1043.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.0" y="1054.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.run (2 samples, 0.12%)</title><rect x="1188.6" y="1107.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.6" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;clinit&gt; (2 samples, 0.12%)</title><rect x="1188.6" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1188.6" y="1075.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.6" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1188.6" y="1059.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.6" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1188.6" y="1043.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="1054.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1188.6" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1188.6" y="1011.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.6" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="1188.6" y="995.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.6" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1188.6" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.6" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1188.6" y="963.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.6" y="974.0"></text>
</g>
<g>
<title>JavaFieldStream::JavaFieldStream(InstanceKlass const*) (1 samples, 0.06%)</title><rect x="1188.6" y="947.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.6" y="958.0"></text>
</g>
<g>
<title>constantPoolHandle::operator=(constantPoolHandle const&amp;) (1 samples, 0.06%)</title><rect x="1188.6" y="931.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.06%)</title><rect x="1189.3" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="1011.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.06%)</title><rect x="1189.3" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.3" y="1006.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.06%)</title><rect x="1189.3" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.3" y="990.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.06%)</title><rect x="1189.3" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.3" y="974.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.findAdapter (1 samples, 0.06%)</title><rect x="1189.3" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1192.3" y="958.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.forType (1 samples, 0.06%)</title><rect x="1189.3" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.newInstance (1 samples, 0.06%)</title><rect x="1189.3" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.3" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1189.3" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1189.3" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1189.3" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.06%)</title><rect x="1189.3" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.3" y="862.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.3" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1189.3" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.06%)</title><rect x="1189.3" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.3" y="814.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.06%)</title><rect x="1189.3" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.iterator (1 samples, 0.06%)</title><rect x="1189.3" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.newLookupIterator (1 samples, 0.06%)</title><rect x="1189.3" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.3" y="766.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.3" y="750.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.iteratorFor (1 samples, 0.06%)</title><rect x="1189.3" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.iterator (1 samples, 0.06%)</title><rect x="1189.3" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.3" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.06%)</title><rect x="1189.3" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.3" y="702.0"></text>
</g>
</g>
</svg>
