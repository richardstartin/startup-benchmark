<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1621"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1621"> </text>
<g id="frames">
<g>
<title>all (1,849 samples, 100.00%)</title><rect x="10.0" y="1587.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1598.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.05%)</title><rect x="10.0" y="1571.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1582.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="10.0" y="1555.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1566.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="10.0" y="1539.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1550.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.05%)</title><rect x="10.6" y="1571.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.6" y="1582.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.16%)</title><rect x="11.3" y="1571.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="14.3" y="1582.0"></text>
</g>
<g>
<title>open (1 samples, 0.05%)</title><rect x="11.3" y="1555.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.3" y="1566.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.11%)</title><rect x="11.9" y="1555.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="14.9" y="1566.0"></text>
</g>
<g>
<title>[unknown_Java] (10 samples, 0.54%)</title><rect x="13.2" y="1571.0" width="6.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="16.2" y="1582.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f81fc8b7080 (1 samples, 0.05%)</title><rect x="13.2" y="1555.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.2" y="1566.0"></text>
</g>
<g>
<title>Interpreter (6 samples, 0.32%)</title><rect x="13.8" y="1555.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.8" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="17.7" y="1555.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="20.7" y="1566.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.11%)</title><rect x="17.7" y="1539.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="20.7" y="1550.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.11%)</title><rect x="17.7" y="1523.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.7" y="1534.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="18.3" y="1507.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="21.3" y="1518.0"></text>
</g>
<g>
<title>wrong_method_stub (1 samples, 0.05%)</title><rect x="18.9" y="1555.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="21.9" y="1566.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="19.6" y="1571.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="22.6" y="1582.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.11%)</title><rect x="20.2" y="1571.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="23.2" y="1582.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (2 samples, 0.11%)</title><rect x="20.2" y="1555.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="23.2" y="1566.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.05%)</title><rect x="21.5" y="1571.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="24.5" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/benchmark/LoadClasses.main (682 samples, 36.88%)</title><rect x="22.1" y="1571.0" width="435.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.1" y="1582.0">datadog/trace/benchmark/LoadClasses.main</text>
</g>
<g>
<title>I2C/C2I adapters(0xbaa00000)@0x00007f81fc8bd000 (1 samples, 0.05%)</title><rect x="22.8" y="1555.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.8" y="1566.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbab00000)@0x00007f81fc8be580 (1 samples, 0.05%)</title><rect x="23.4" y="1555.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.4" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::quicken_io_cc(JavaThread*) (1 samples, 0.05%)</title><rect x="24.0" y="1555.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.0" y="1566.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="24.0" y="1539.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.0" y="1550.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="24.0" y="1523.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="27.0" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="24.0" y="1507.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="27.0" y="1518.0"></text>
</g>
<g>
<title>java/lang/Class.forName (676 samples, 36.56%)</title><rect x="24.7" y="1555.0" width="431.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.7" y="1566.0">java/lang/Class.forName</text>
</g>
<g>
<title>java/lang/Class.forName0 (676 samples, 36.56%)</title><rect x="24.7" y="1539.0" width="431.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.7" y="1550.0">java/lang/Class.forName0</text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (7 samples, 0.38%)</title><rect x="24.7" y="1523.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="27.7" y="1534.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (5 samples, 0.27%)</title><rect x="24.7" y="1507.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="27.7" y="1518.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (4 samples, 0.22%)</title><rect x="25.3" y="1491.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="28.3" y="1502.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (4 samples, 0.22%)</title><rect x="25.3" y="1475.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.3" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (4 samples, 0.22%)</title><rect x="25.3" y="1459.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.3" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (4 samples, 0.22%)</title><rect x="25.3" y="1443.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="28.3" y="1454.0"></text>
</g>
<g>
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Handle, Thread*) (3 samples, 0.16%)</title><rect x="25.3" y="1427.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.3" y="1438.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="26.0" y="1411.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="29.0" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.05%)</title><rect x="26.6" y="1411.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.6" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="26.6" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.6" y="1406.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.05%)</title><rect x="26.6" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.6" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="26.6" y="1363.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.6" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="26.6" y="1347.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.6" y="1358.0"></text>
</g>
<g>
<title>java_lang_String::char_converter(Handle, unsigned short, unsigned short, Thread*) (1 samples, 0.05%)</title><rect x="27.2" y="1427.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="30.2" y="1438.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="27.2" y="1411.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.2" y="1422.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="27.2" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.2" y="1406.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="27.2" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.2" y="1390.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="27.2" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.2" y="1374.0"></text>
</g>
<g>
<title>VerifyClassname (1 samples, 0.05%)</title><rect x="27.9" y="1507.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="30.9" y="1518.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (1 samples, 0.05%)</title><rect x="27.9" y="1491.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="30.9" y="1502.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (1 samples, 0.05%)</title><rect x="28.5" y="1507.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="31.5" y="1518.0"></text>
</g>
<g>
<title>UNICODE::as_utf8(signed char*, int, char*, int) (1 samples, 0.05%)</title><rect x="28.5" y="1491.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (669 samples, 36.18%)</title><rect x="29.1" y="1523.0" width="427.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.1" y="1534.0">java/lang/ClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (669 samples, 36.18%)</title><rect x="29.1" y="1507.0" width="427.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.1" y="1518.0">jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (669 samples, 36.18%)</title><rect x="29.1" y="1491.0" width="427.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.1" y="1502.0">jdk/internal/loader/BuiltinClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (669 samples, 36.18%)</title><rect x="29.1" y="1475.0" width="427.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.1" y="1486.0">jdk/internal/loader/BuiltinClassLoader.loadClassOrNull</text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.05%)</title><rect x="29.1" y="1459.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.05%)</title><rect x="29.1" y="1443.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.1" y="1454.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass (1 samples, 0.05%)</title><rect x="29.1" y="1427.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.1" y="1438.0"></text>
</g>
<g>
<title>java_lang_String::as_utf8_string(oopDesc*) (1 samples, 0.05%)</title><rect x="29.1" y="1411.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.1" y="1422.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;565366ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 565366ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.05%)</title><rect x="29.1" y="1395.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (3 samples, 0.16%)</title><rect x="29.8" y="1459.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.8" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (3 samples, 0.16%)</title><rect x="29.8" y="1443.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.8" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (3 samples, 0.16%)</title><rect x="29.8" y="1427.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.8" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$Node.&lt;init&gt; (1 samples, 0.05%)</title><rect x="29.8" y="1411.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.8" y="1422.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="29.8" y="1395.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="32.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.05%)</title><rect x="30.4" y="1411.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.05%)</title><rect x="30.4" y="1395.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.05%)</title><rect x="31.1" y="1411.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.1" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (655 samples, 35.42%)</title><rect x="31.7" y="1459.0" width="418.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.7" y="1470.0">jdk/internal/loader/BuiltinClassLoader.findClassOnClassPa..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (644 samples, 34.83%)</title><rect x="31.7" y="1443.0" width="411.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.7" y="1454.0">jdk/internal/loader/BuiltinClassLoader.defineClass</text>
</g>
<g>
<title>java/security/CodeSource.&lt;init&gt; (3 samples, 0.16%)</title><rect x="31.7" y="1427.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.7" y="1438.0"></text>
</g>
<g>
<title>sun/net/util/URLUtil.urlNoFragString (2 samples, 0.11%)</title><rect x="32.3" y="1411.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="32.3" y="1395.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.3" y="1406.0"></text>
</g>
<g>
<title>java/util/Locale.getDefault (1 samples, 0.05%)</title><rect x="32.3" y="1379.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="33.0" y="1395.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.0" y="1406.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="33.0" y="1379.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.0" y="1390.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (600 samples, 32.45%)</title><rect x="33.6" y="1427.0" width="382.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.6" y="1438.0">java/security/SecureClassLoader.defineClass</text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="33.6" y="1411.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="36.6" y="1422.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="33.6" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="36.6" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="33.6" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="36.6" y="1390.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(CompiledMethod*, NativeCall*) (1 samples, 0.05%)</title><rect x="33.6" y="1363.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="36.6" y="1374.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.05%)</title><rect x="33.6" y="1347.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="36.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (598 samples, 32.34%)</title><rect x="34.3" y="1411.0" width="381.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.3" y="1422.0">java/lang/ClassLoader.defineClass</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (590 samples, 31.91%)</title><rect x="34.3" y="1395.0" width="376.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.3" y="1406.0">java/lang/ClassLoader.defineClass1</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (85 samples, 4.60%)</title><rect x="34.3" y="1379.0" width="54.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="37.3" y="1390.0">Java_..</text>
</g>
<g>
<title>JVM_DefineClassWithSource (85 samples, 4.60%)</title><rect x="34.3" y="1363.0" width="54.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="37.3" y="1374.0">JVM_D..</text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (85 samples, 4.60%)</title><rect x="34.3" y="1347.0" width="54.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="37.3" y="1358.0">jvm_d..</text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (85 samples, 4.60%)</title><rect x="34.3" y="1331.0" width="54.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="37.3" y="1342.0">Syste..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (82 samples, 4.43%)</title><rect x="34.3" y="1315.0" width="52.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="37.3" y="1326.0">Klass..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (64 samples, 3.46%)</title><rect x="34.9" y="1299.0" width="40.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="37.9" y="1310.0">Cla..</text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (64 samples, 3.46%)</title><rect x="34.9" y="1283.0" width="40.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="37.9" y="1294.0">Cla..</text>
</g>
<g>
<title>ClassFileParser::parse_classfile_attributes(ClassFileStream const*, ConstantPool*, ClassFileParser::ClassAnnotationCollector*, Thread*) (1 samples, 0.05%)</title><rect x="35.5" y="1267.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="38.5" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_inner_classes_attribute(ClassFileStream const*, ConstantPool const*, unsigned char const*, bool, unsigned short, unsigned short, Thread*) (1 samples, 0.05%)</title><rect x="35.5" y="1251.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="38.5" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (8 samples, 0.43%)</title><rect x="36.2" y="1267.0" width="5.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="39.2" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (2 samples, 0.11%)</title><rect x="37.4" y="1251.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="40.4" y="1262.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.05%)</title><rect x="38.1" y="1235.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="41.1" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.05%)</title><rect x="38.7" y="1251.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="41.7" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (2 samples, 0.11%)</title><rect x="39.4" y="1251.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.4" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (2 samples, 0.11%)</title><rect x="39.4" y="1235.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="42.4" y="1246.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.05%)</title><rect x="40.6" y="1251.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.6" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (33 samples, 1.78%)</title><rect x="41.3" y="1267.0" width="21.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="44.3" y="1278.0">C..</text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (2 samples, 0.11%)</title><rect x="43.2" y="1251.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="46.2" y="1262.0"></text>
</g>
<g>
<title>Symbol::operator new(unsigned long, int, Thread*) (1 samples, 0.05%)</title><rect x="43.2" y="1235.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="46.2" y="1246.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.05%)</title><rect x="43.8" y="1235.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="46.8" y="1246.0"></text>
</g>
<g>
<title>Symbol::Symbol(unsigned char const*, int, int) (1 samples, 0.05%)</title><rect x="43.8" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="46.8" y="1230.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (22 samples, 1.19%)</title><rect x="44.5" y="1251.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="47.5" y="1262.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (5 samples, 0.27%)</title><rect x="58.5" y="1251.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="61.5" y="1262.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.05%)</title><rect x="61.7" y="1251.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="64.7" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.139] (2 samples, 0.11%)</title><rect x="62.3" y="1267.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="65.3" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="62.3" y="1251.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="65.3" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="63.0" y="1251.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="66.0" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="63.0" y="1235.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="66.0" y="1246.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.05%)</title><rect x="63.0" y="1219.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="66.0" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (16 samples, 0.87%)</title><rect x="63.6" y="1267.0" width="10.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="66.6" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (15 samples, 0.81%)</title><rect x="63.6" y="1251.0" width="9.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="66.6" y="1262.0"></text>
</g>
<g>
<title>AccessFlags::atomic_set_bits(int) (1 samples, 0.05%)</title><rect x="64.2" y="1235.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="67.2" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::copy_localvariable_table(ConstMethod const*, int, unsigned short*, void const**, int, unsigned short*, void const**, Thread*) (1 samples, 0.05%)</title><rect x="64.9" y="1235.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="67.9" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_linenumber_table(unsigned int, unsigned int, CompressedLineNumberWriteStream**, Thread*) (1 samples, 0.05%)</title><rect x="65.5" y="1235.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="68.5" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (6 samples, 0.32%)</title><rect x="66.2" y="1235.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="69.2" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (3 samples, 0.16%)</title><rect x="67.4" y="1219.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="70.4" y="1230.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.05%)</title><rect x="69.4" y="1219.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="72.4" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.05%)</title><rect x="70.0" y="1235.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="73.0" y="1246.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.05%)</title><rect x="70.0" y="1219.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="73.0" y="1230.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (3 samples, 0.16%)</title><rect x="70.6" y="1235.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="73.6" y="1246.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (2 samples, 0.11%)</title><rect x="70.6" y="1219.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="73.6" y="1230.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (2 samples, 0.11%)</title><rect x="70.6" y="1203.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="73.6" y="1214.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (2 samples, 0.11%)</title><rect x="70.6" y="1187.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="73.6" y="1198.0"></text>
</g>
<g>
<title>MetaspaceUtils::inc_used(Metaspace::MetadataType, unsigned long) (1 samples, 0.05%)</title><rect x="70.6" y="1171.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="73.6" y="1182.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="71.3" y="1171.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="74.3" y="1182.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.05%)</title><rect x="71.9" y="1219.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="74.9" y="1230.0"></text>
</g>
<g>
<title>metaspace::SmallBlocks::total_size() const (1 samples, 0.05%)</title><rect x="71.9" y="1203.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="74.9" y="1214.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.05%)</title><rect x="72.5" y="1235.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="75.5" y="1246.0"></text>
</g>
<g>
<title>SignatureInfo::do_void() (1 samples, 0.05%)</title><rect x="72.5" y="1219.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="75.5" y="1230.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="73.2" y="1251.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="76.2" y="1262.0"></text>
</g>
<g>
<title>ConstantPool::allocate(ClassLoaderData*, int, Thread*) (2 samples, 0.11%)</title><rect x="73.8" y="1267.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="76.8" y="1278.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (2 samples, 0.11%)</title><rect x="73.8" y="1251.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="76.8" y="1262.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (2 samples, 0.11%)</title><rect x="73.8" y="1235.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="76.8" y="1246.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::grow_and_allocate(unsigned long) (1 samples, 0.05%)</title><rect x="74.5" y="1219.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="77.5" y="1230.0"></text>
</g>
<g>
<title>metaspace::VirtualSpaceList::get_new_chunk(unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="74.5" y="1203.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="77.5" y="1214.0"></text>
</g>
<g>
<title>metaspace::Metachunk::Metachunk(metaspace::ChunkIndex, bool, unsigned long, metaspace::VirtualSpaceNode*) (1 samples, 0.05%)</title><rect x="74.5" y="1187.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="77.5" y="1198.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.05%)</title><rect x="75.1" y="1267.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="78.1" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (10 samples, 0.54%)</title><rect x="75.7" y="1299.0" width="6.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="78.7" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (9 samples, 0.49%)</title><rect x="75.7" y="1283.0" width="5.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="78.7" y="1294.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (3 samples, 0.16%)</title><rect x="75.7" y="1267.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="78.7" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::find_method(Symbol const*, Symbol const*) const (1 samples, 0.05%)</title><rect x="77.0" y="1251.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="80.0" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="77.0" y="1235.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="80.0" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::compute_modifier_flags(Thread*) const (1 samples, 0.05%)</title><rect x="77.6" y="1267.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="80.6" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="78.3" y="1267.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="81.3" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="78.3" y="1251.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="81.3" y="1262.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::allocate_instance(Klass*, Thread*) (1 samples, 0.05%)</title><rect x="78.9" y="1267.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="81.9" y="1278.0"></text>
</g>
<g>
<title>Method::klass_id_for_intrinsics(Klass const*) (1 samples, 0.05%)</title><rect x="79.6" y="1267.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="82.6" y="1278.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.05%)</title><rect x="79.6" y="1251.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="82.6" y="1262.0"></text>
</g>
<g>
<title>Reflection::verify_class_access(Klass const*, InstanceKlass const*, bool) (1 samples, 0.05%)</title><rect x="80.2" y="1267.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.2" y="1278.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="80.8" y="1267.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="83.8" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::class_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="80.8" y="1251.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="83.8" y="1262.0"></text>
</g>
<g>
<title>ClassAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="80.8" y="1235.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.8" y="1246.0"></text>
</g>
<g>
<title>Reflection::verify_class_access(Klass const*, InstanceKlass const*, bool) (1 samples, 0.05%)</title><rect x="81.5" y="1283.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="84.5" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (6 samples, 0.32%)</title><rect x="82.1" y="1299.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="85.1" y="1310.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, bool) (1 samples, 0.05%)</title><rect x="82.8" y="1283.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="85.8" y="1294.0"></text>
</g>
<g>
<title>method_comparator(Method*, Method*) (1 samples, 0.05%)</title><rect x="82.8" y="1267.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="85.8" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (2 samples, 0.11%)</title><rect x="83.4" y="1283.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="86.4" y="1294.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="83.4" y="1267.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="86.4" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="84.0" y="1267.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="87.0" y="1278.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.05%)</title><rect x="84.0" y="1251.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="87.0" y="1262.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="84.0" y="1235.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="87.0" y="1246.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;Klass*&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="84.7" y="1283.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="87.7" y="1294.0"></text>
</g>
<g>
<title>klassVtable::add_new_mirandas_to_lists(GrowableArray&lt;Method*&gt;*, GrowableArray&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.05%)</title><rect x="84.7" y="1267.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="87.7" y="1278.0"></text>
</g>
<g>
<title>klassVtable::is_miranda(Method*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) [clone .part.29] (1 samples, 0.05%)</title><rect x="84.7" y="1251.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="87.7" y="1262.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.05%)</title><rect x="85.3" y="1283.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="88.3" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::~ClassFileParser() (1 samples, 0.05%)</title><rect x="85.9" y="1299.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="88.9" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (3 samples, 0.16%)</title><rect x="86.6" y="1315.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="89.6" y="1326.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="86.6" y="1299.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.6" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (2 samples, 0.11%)</title><rect x="87.2" y="1299.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="90.2" y="1310.0"></text>
</g>
<g>
<title>BiasedLocking::enabled() (1 samples, 0.05%)</title><rect x="87.2" y="1283.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="90.2" y="1294.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="87.9" y="1283.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="90.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="88.5" y="1379.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="91.5" y="1390.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.05%)</title><rect x="88.5" y="1363.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="91.5" y="1374.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.05%)</title><rect x="89.1" y="1379.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="92.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (67 samples, 3.62%)</title><rect x="89.8" y="1379.0" width="42.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.8" y="1390.0">java..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (67 samples, 3.62%)</title><rect x="89.8" y="1363.0" width="42.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.8" y="1374.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (67 samples, 3.62%)</title><rect x="89.8" y="1347.0" width="42.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.8" y="1358.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (67 samples, 3.62%)</title><rect x="89.8" y="1331.0" width="42.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.8" y="1342.0">jdk/..</text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.05%)</title><rect x="89.8" y="1315.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.05%)</title><rect x="89.8" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.8" y="1310.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findLoadedClass0 (1 samples, 0.05%)</title><rect x="89.8" y="1283.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="92.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (66 samples, 3.57%)</title><rect x="90.4" y="1315.0" width="42.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.4" y="1326.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (65 samples, 3.52%)</title><rect x="91.0" y="1299.0" width="41.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.0" y="1310.0">jdk..</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (60 samples, 3.24%)</title><rect x="91.0" y="1283.0" width="38.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.0" y="1294.0">jav..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (60 samples, 3.24%)</title><rect x="91.0" y="1267.0" width="38.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.0" y="1278.0">jav..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (59 samples, 3.19%)</title><rect x="91.0" y="1251.0" width="37.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.0" y="1262.0">jav..</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (12 samples, 0.65%)</title><rect x="91.0" y="1235.0" width="7.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="94.0" y="1246.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (12 samples, 0.65%)</title><rect x="91.0" y="1219.0" width="7.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="94.0" y="1230.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (12 samples, 0.65%)</title><rect x="91.0" y="1203.0" width="7.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="94.0" y="1214.0"></text>
</g>
<g>
<title>ObjectLocker::ObjectLocker(Handle, Thread*, bool) (1 samples, 0.05%)</title><rect x="91.0" y="1187.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="94.0" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.05%)</title><rect x="91.7" y="1187.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.7" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (10 samples, 0.54%)</title><rect x="92.3" y="1187.0" width="6.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="95.3" y="1198.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (9 samples, 0.49%)</title><rect x="93.0" y="1171.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="96.0" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (8 samples, 0.43%)</title><rect x="93.0" y="1155.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="96.0" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (8 samples, 0.43%)</title><rect x="93.0" y="1139.0" width="5.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="96.0" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (7 samples, 0.38%)</title><rect x="93.0" y="1123.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="96.0" y="1134.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (4 samples, 0.22%)</title><rect x="94.2" y="1107.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="97.2" y="1118.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.05%)</title><rect x="96.8" y="1107.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="99.8" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.05%)</title><rect x="97.4" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="100.4" y="1134.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.05%)</title><rect x="97.4" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="100.4" y="1118.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="97.4" y="1091.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="100.4" y="1102.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="97.4" y="1075.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="100.4" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="97.4" y="1059.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="100.4" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.05%)</title><rect x="98.1" y="1155.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="101.1" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::layout_fields(ConstantPool*, ClassFileParser::FieldAllocationCount const*, ClassFileParser::ClassAnnotationCollector const*, ClassFileParser::FieldLayoutInfo*, Thread*) (1 samples, 0.05%)</title><rect x="98.1" y="1139.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="101.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (14 samples, 0.76%)</title><rect x="98.7" y="1235.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (14 samples, 0.76%)</title><rect x="98.7" y="1219.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (14 samples, 0.76%)</title><rect x="98.7" y="1203.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (14 samples, 0.76%)</title><rect x="98.7" y="1187.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (14 samples, 0.76%)</title><rect x="98.7" y="1171.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (14 samples, 0.76%)</title><rect x="98.7" y="1155.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.7" y="1166.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (13 samples, 0.70%)</title><rect x="98.7" y="1139.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (13 samples, 0.70%)</title><rect x="98.7" y="1123.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (12 samples, 0.65%)</title><rect x="98.7" y="1107.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.7" y="1118.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (4 samples, 0.22%)</title><rect x="98.7" y="1091.0" width="2.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="101.7" y="1102.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (4 samples, 0.22%)</title><rect x="98.7" y="1075.0" width="2.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="101.7" y="1086.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (4 samples, 0.22%)</title><rect x="98.7" y="1059.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="101.7" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (4 samples, 0.22%)</title><rect x="98.7" y="1043.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="101.7" y="1054.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (4 samples, 0.22%)</title><rect x="98.7" y="1027.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="101.7" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (3 samples, 0.16%)</title><rect x="98.7" y="1011.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="101.7" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (3 samples, 0.16%)</title><rect x="98.7" y="995.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="101.7" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="98.7" y="979.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="101.7" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.05%)</title><rect x="98.7" y="963.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="101.7" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.05%)</title><rect x="99.3" y="979.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="102.3" y="990.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.05%)</title><rect x="99.3" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="102.3" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.05%)</title><rect x="100.0" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="103.0" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.05%)</title><rect x="100.0" y="963.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="103.0" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.05%)</title><rect x="100.0" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="103.0" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.05%)</title><rect x="100.0" y="931.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="103.0" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.05%)</title><rect x="100.6" y="1011.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="103.6" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.05%)</title><rect x="100.6" y="995.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="103.6" y="1006.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="100.6" y="979.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="103.6" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::do_local_static_fields(void (*)(fieldDescriptor*, Handle, Thread*), Handle, Thread*) (1 samples, 0.05%)</title><rect x="100.6" y="963.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="103.6" y="974.0"></text>
</g>
<g>
<title>initialize_static_field(fieldDescriptor*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="100.6" y="947.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="103.6" y="958.0"></text>
</g>
<g>
<title>FieldType::basic_type(Symbol*) (1 samples, 0.05%)</title><rect x="100.6" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="103.6" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (6 samples, 0.32%)</title><rect x="101.3" y="1091.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (6 samples, 0.32%)</title><rect x="101.3" y="1075.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (6 samples, 0.32%)</title><rect x="101.3" y="1059.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (6 samples, 0.32%)</title><rect x="101.3" y="1043.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (6 samples, 0.32%)</title><rect x="101.3" y="1027.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (6 samples, 0.32%)</title><rect x="101.3" y="1011.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.3" y="1022.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (5 samples, 0.27%)</title><rect x="101.3" y="995.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (5 samples, 0.27%)</title><rect x="101.3" y="979.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.3" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (5 samples, 0.27%)</title><rect x="101.3" y="963.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.3" y="974.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="101.3" y="947.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="104.3" y="958.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="101.3" y="931.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="104.3" y="942.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="101.3" y="915.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="104.3" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="101.3" y="899.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="104.3" y="910.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="101.3" y="883.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="104.3" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.05%)</title><rect x="101.3" y="867.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="104.3" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="101.3" y="851.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="104.3" y="862.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.05%)</title><rect x="101.3" y="835.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="104.3" y="846.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.05%)</title><rect x="101.3" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="104.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 0.22%)</title><rect x="101.9" y="947.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (4 samples, 0.22%)</title><rect x="101.9" y="931.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 0.22%)</title><rect x="101.9" y="915.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 0.22%)</title><rect x="101.9" y="899.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (4 samples, 0.22%)</title><rect x="101.9" y="883.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.16%)</title><rect x="101.9" y="867.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.9" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (3 samples, 0.16%)</title><rect x="101.9" y="851.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (3 samples, 0.16%)</title><rect x="101.9" y="835.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.9" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (3 samples, 0.16%)</title><rect x="101.9" y="819.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.9" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="101.9" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.05%)</title><rect x="101.9" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.05%)</title><rect x="101.9" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="101.9" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.05%)</title><rect x="101.9" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.05%)</title><rect x="101.9" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.9" y="734.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="101.9" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="101.9" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="101.9" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.9" y="686.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="101.9" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.9" y="670.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="101.9" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="101.9" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="101.9" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.9" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="101.9" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="101.9" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="101.9" y="563.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="101.9" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="101.9" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.9" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="101.9" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.9" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.05%)</title><rect x="101.9" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.9" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.05%)</title><rect x="101.9" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.9" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="101.9" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="101.9" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.9" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="101.9" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.9" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="101.9" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.9" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.9" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="387.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.9" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.9" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="355.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.9" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.9" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.9" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.9" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.9" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.9" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="254.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="101.9" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="238.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.05%)</title><rect x="101.9" y="211.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.9" y="222.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.05%)</title><rect x="101.9" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.9" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="101.9" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.9" y="190.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="101.9" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.9" y="174.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="101.9" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.9" y="158.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="101.9" y="131.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.9" y="142.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="101.9" y="115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.9" y="126.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="101.9" y="99.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.9" y="110.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="101.9" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.9" y="94.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="101.9" y="67.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.9" y="78.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="101.9" y="51.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.9" y="62.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="101.9" y="35.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.9" y="46.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.11%)</title><rect x="102.5" y="803.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.5" y="814.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.11%)</title><rect x="102.5" y="787.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.11%)</title><rect x="102.5" y="771.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.11%)</title><rect x="102.5" y="755.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.5" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.11%)</title><rect x="102.5" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.11%)</title><rect x="102.5" y="723.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.11%)</title><rect x="102.5" y="707.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.11%)</title><rect x="102.5" y="691.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.11%)</title><rect x="102.5" y="675.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.11%)</title><rect x="102.5" y="659.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.11%)</title><rect x="102.5" y="643.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.11%)</title><rect x="102.5" y="627.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (2 samples, 0.11%)</title><rect x="102.5" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.5" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (2 samples, 0.11%)</title><rect x="102.5" y="595.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.11%)</title><rect x="102.5" y="579.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.5" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.11%)</title><rect x="102.5" y="563.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.5" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.11%)</title><rect x="102.5" y="547.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.5" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.11%)</title><rect x="102.5" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.5" y="542.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.11%)</title><rect x="102.5" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.5" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="102.5" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="102.5" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.5" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="102.5" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.5" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="102.5" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.5" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="102.5" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.5" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="102.5" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.5" y="430.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="102.5" y="403.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="105.5" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.05%)</title><rect x="103.2" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.2" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.2" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.2" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.2" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.2" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.2" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.2" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.2" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.2" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.2" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.2" y="350.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.2" y="334.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="103.2" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="103.8" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.05%)</title><rect x="103.8" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.8" y="862.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.05%)</title><rect x="103.8" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.8" y="846.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.05%)</title><rect x="103.8" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.8" y="830.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.isMultiRelease (1 samples, 0.05%)</title><rect x="103.8" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="104.5" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.5" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="104.5" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.5" y="990.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="104.5" y="963.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.5" y="974.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="104.5" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="104.5" y="931.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="107.5" y="942.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="104.5" y="915.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="107.5" y="926.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.11%)</title><rect x="105.1" y="1091.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.1" y="1102.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.11%)</title><rect x="105.1" y="1075.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.11%)</title><rect x="105.1" y="1059.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.11%)</title><rect x="105.1" y="1043.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.1" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.11%)</title><rect x="105.1" y="1027.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.1" y="1038.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.05%)</title><rect x="105.1" y="1011.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="108.1" y="1022.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.05%)</title><rect x="105.1" y="995.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="108.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="105.7" y="1011.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="105.7" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="105.7" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="105.7" y="963.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="105.7" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.05%)</title><rect x="105.7" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.05%)</title><rect x="105.7" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.05%)</title><rect x="105.7" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="105.7" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="105.7" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.05%)</title><rect x="105.7" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.05%)</title><rect x="105.7" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (1 samples, 0.05%)</title><rect x="105.7" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.05%)</title><rect x="105.7" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType.getDescriptor (1 samples, 0.05%)</title><rect x="105.7" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="105.7" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="105.7" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.7" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="105.7" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="105.7" y="723.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.05%)</title><rect x="106.4" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getNamedPackage (1 samples, 0.05%)</title><rect x="106.4" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="107.0" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.0" y="1150.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="107.0" y="1123.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.0" y="1134.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="107.0" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.0" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="107.0" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="107.0" y="1075.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="110.0" y="1086.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="107.0" y="1059.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="110.0" y="1070.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (33 samples, 1.78%)</title><rect x="107.6" y="1235.0" width="21.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.6" y="1246.0">s..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (33 samples, 1.78%)</title><rect x="107.6" y="1219.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.6" y="1230.0">s..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (33 samples, 1.78%)</title><rect x="107.6" y="1203.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.6" y="1214.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (33 samples, 1.78%)</title><rect x="107.6" y="1187.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.6" y="1198.0">n..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 1.78%)</title><rect x="107.6" y="1171.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.6" y="1182.0">j..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (33 samples, 1.78%)</title><rect x="107.6" y="1155.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.6" y="1166.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (33 samples, 1.78%)</title><rect x="107.6" y="1139.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.6" y="1150.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (33 samples, 1.78%)</title><rect x="107.6" y="1123.0" width="21.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.6" y="1134.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (33 samples, 1.78%)</title><rect x="107.6" y="1107.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.6" y="1118.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default$1.resolve (1 samples, 0.05%)</title><rect x="107.6" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Simple.of (1 samples, 0.05%)</title><rect x="107.6" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Simple.&lt;init&gt; (1 samples, 0.05%)</title><rect x="107.6" y="1059.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (32 samples, 1.73%)</title><rect x="108.3" y="1091.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.3" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.05%)</title><rect x="108.3" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.3" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.05%)</title><rect x="108.3" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="108.3" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onIgnored (2 samples, 0.11%)</title><rect x="108.9" y="1075.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.9" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.11%)</title><rect x="108.9" y="1059.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.9" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (2 samples, 0.11%)</title><rect x="108.9" y="1043.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (22 samples, 1.19%)</title><rect x="110.2" y="1075.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.2" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.05%)</title><rect x="110.2" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.2" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.05%)</title><rect x="110.2" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.2" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.05%)</title><rect x="110.2" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.2" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="110.2" y="1011.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="110.2" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.2" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.05%)</title><rect x="110.2" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.2" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.05%)</title><rect x="110.2" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.2" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.05%)</title><rect x="110.2" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="110.2" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="110.2" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.2" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.05%)</title><rect x="110.2" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (21 samples, 1.14%)</title><rect x="110.8" y="1059.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (21 samples, 1.14%)</title><rect x="110.8" y="1043.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.8" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (12 samples, 0.65%)</title><rect x="110.8" y="1027.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.8" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (3 samples, 0.16%)</title><rect x="111.5" y="1011.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.5" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (3 samples, 0.16%)</title><rect x="111.5" y="995.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.5" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (3 samples, 0.16%)</title><rect x="111.5" y="979.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.5" y="990.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (3 samples, 0.16%)</title><rect x="111.5" y="963.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.5" y="974.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (3 samples, 0.16%)</title><rect x="111.5" y="947.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.5" y="958.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (1 samples, 0.05%)</title><rect x="112.1" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.1" y="942.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (1 samples, 0.05%)</title><rect x="112.1" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (1 samples, 0.05%)</title><rect x="112.1" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.05%)</title><rect x="112.1" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.05%)</title><rect x="112.1" y="867.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.offer (1 samples, 0.05%)</title><rect x="112.1" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.1" y="862.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="112.1" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.1" y="846.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="112.1" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.1" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (1 samples, 0.05%)</title><rect x="112.1" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.1" y="814.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.compareTo (1 samples, 0.05%)</title><rect x="112.1" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.1" y="798.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.compareTo (1 samples, 0.05%)</title><rect x="112.1" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="112.7" y="931.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.7" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="113.4" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.4" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="113.4" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.4" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="113.4" y="979.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="116.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (6 samples, 0.32%)</title><rect x="114.0" y="1011.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.0" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.05%)</title><rect x="114.0" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.0" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.05%)</title><rect x="114.0" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.0" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (1 samples, 0.05%)</title><rect x="114.0" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (1 samples, 0.05%)</title><rect x="114.0" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="114.0" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.0" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="114.0" y="915.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="117.0" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (4 samples, 0.22%)</title><rect x="114.7" y="995.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (4 samples, 0.22%)</title><rect x="114.7" y="979.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.7" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="114.7" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="114.7" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="114.7" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="114.7" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="114.7" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="114.7" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.7" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="114.7" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="114.7" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="114.7" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.05%)</title><rect x="114.7" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.05%)</title><rect x="114.7" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="114.7" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="114.7" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.05%)</title><rect x="114.7" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.05%)</title><rect x="114.7" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.7" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.11%)</title><rect x="115.3" y="963.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.3" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.05%)</title><rect x="115.3" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.3" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="115.3" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="115.3" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="115.3" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.05%)</title><rect x="115.3" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="115.3" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="115.3" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="115.3" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.3" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="115.3" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.3" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="115.3" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.3" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="115.3" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.3" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="115.3" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.3" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="115.3" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.05%)</title><rect x="115.3" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="115.3" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.05%)</title><rect x="115.3" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.3" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="115.9" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.9" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="115.9" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.9" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="115.9" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="115.9" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="115.9" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="115.9" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="115.9" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="115.9" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="115.9" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="115.9" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.9" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="116.6" y="963.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="119.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="117.2" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.2" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.05%)</title><rect x="117.2" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.2" y="990.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.05%)</title><rect x="117.2" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.2" y="974.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="117.2" y="947.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="120.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.05%)</title><rect x="117.9" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.05%)</title><rect x="117.9" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.9" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="117.9" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.9" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="117.9" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.9" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (1 samples, 0.05%)</title><rect x="117.9" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.9" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getSuperClass (1 samples, 0.05%)</title><rect x="117.9" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getSuperClass (1 samples, 0.05%)</title><rect x="117.9" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (9 samples, 0.49%)</title><rect x="118.5" y="1027.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.5" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (7 samples, 0.38%)</title><rect x="118.5" y="1011.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.5" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (7 samples, 0.38%)</title><rect x="118.5" y="995.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.5" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="119.1" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.1" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="119.1" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.asErasure (1 samples, 0.05%)</title><rect x="119.1" y="947.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (4 samples, 0.22%)</title><rect x="119.8" y="979.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.8" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.05%)</title><rect x="119.8" y="963.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.8" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="119.8" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList.get (1 samples, 0.05%)</title><rect x="119.8" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList.get (1 samples, 0.05%)</title><rect x="119.8" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.8" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="120.4" y="963.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.4" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="120.4" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.4" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="120.4" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.4" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="120.4" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="120.4" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.05%)</title><rect x="120.4" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.05%)</title><rect x="120.4" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="120.4" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="120.4" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="120.4" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="120.4" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="120.4" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.4" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="120.4" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.4" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="120.4" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.4" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="120.4" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.4" y="750.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.05%)</title><rect x="120.4" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.4" y="734.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.05%)</title><rect x="120.4" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.4" y="718.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.05%)</title><rect x="120.4" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.4" y="702.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.05%)</title><rect x="120.4" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.4" y="686.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="120.4" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.4" y="670.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="120.4" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.4" y="654.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="120.4" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.4" y="638.0"></text>
</g>
<g>
<title>java/net/URL.isValidProtocol (1 samples, 0.05%)</title><rect x="120.4" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.isLetterOrDigit (1 samples, 0.05%)</title><rect x="120.4" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.isLetterOrDigit (1 samples, 0.05%)</title><rect x="120.4" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.getType (1 samples, 0.05%)</title><rect x="120.4" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.4" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.11%)</title><rect x="121.0" y="963.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.0" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="121.0" y="947.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.0" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="121.0" y="931.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.11%)</title><rect x="121.0" y="915.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.11%)</title><rect x="121.0" y="899.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.11%)</title><rect x="121.0" y="883.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.11%)</title><rect x="121.0" y="867.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.11%)</title><rect x="121.0" y="851.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.11%)</title><rect x="121.0" y="835.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.0" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="121.0" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="121.0" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="121.0" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="121.0" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="121.0" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="121.7" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="121.7" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="121.7" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="121.7" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="121.7" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="121.7" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="121.7" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="121.7" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="121.7" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="121.7" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.7" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="121.7" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="121.7" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="121.7" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="121.7" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="121.7" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="121.7" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.05%)</title><rect x="121.7" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.7" y="574.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="122.3" y="979.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="125.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.11%)</title><rect x="123.0" y="1011.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (2 samples, 0.11%)</title><rect x="123.0" y="995.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="123.6" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="123.6" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="123.6" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="123.6" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="123.6" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="123.6" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="123.6" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="123.6" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="123.6" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.05%)</title><rect x="123.6" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (1 samples, 0.05%)</title><rect x="123.6" y="819.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.&lt;init&gt; (1 samples, 0.05%)</title><rect x="123.6" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (1 samples, 0.05%)</title><rect x="124.2" y="1075.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.2" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (1 samples, 0.05%)</title><rect x="124.2" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.2" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.05%)</title><rect x="124.2" y="1043.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.2" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (1 samples, 0.05%)</title><rect x="124.2" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.2" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (1 samples, 0.05%)</title><rect x="124.2" y="1011.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.2" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="124.2" y="995.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="127.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.05%)</title><rect x="124.9" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.05%)</title><rect x="124.9" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.05%)</title><rect x="124.9" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.05%)</title><rect x="124.9" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.05%)</title><rect x="124.9" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.05%)</title><rect x="124.9" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="124.9" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="124.9" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.05%)</title><rect x="124.9" y="947.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="124.9" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory.make (1 samples, 0.05%)</title><rect x="124.9" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.05%)</title><rect x="124.9" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.05%)</title><rect x="124.9" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.9" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDefaultValue (1 samples, 0.05%)</title><rect x="124.9" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.9" y="878.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.05%)</title><rect x="124.9" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.9" y="862.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumValue (1 samples, 0.05%)</title><rect x="124.9" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="127.9" y="846.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSig (1 samples, 0.05%)</title><rect x="124.9" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.9" y="830.0"></text>
</g>
<g>
<title>sun/reflect/generics/factory/CoreReflectionFactory.make (1 samples, 0.05%)</title><rect x="124.9" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (5 samples, 0.27%)</title><rect x="125.5" y="1075.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.5" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (3 samples, 0.16%)</title><rect x="125.5" y="1059.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.5" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.05%)</title><rect x="125.5" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="125.5" y="1027.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Frozen.getModifiers (1 samples, 0.05%)</title><rect x="125.5" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.5" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="125.5" y="995.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="128.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (2 samples, 0.11%)</title><rect x="126.1" y="1043.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (2 samples, 0.11%)</title><rect x="126.1" y="1027.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.05%)</title><rect x="126.1" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (1 samples, 0.05%)</title><rect x="126.1" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.05%)</title><rect x="126.1" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$Values.iterator (1 samples, 0.05%)</title><rect x="126.1" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="126.1" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="126.1" y="931.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.05%)</title><rect x="126.8" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.05%)</title><rect x="126.8" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.extendBy (1 samples, 0.05%)</title><rect x="126.8" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.05%)</title><rect x="126.8" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.11%)</title><rect x="127.4" y="1059.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (2 samples, 0.11%)</title><rect x="127.4" y="1043.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="127.4" y="1027.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="127.4" y="1011.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="127.4" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.05%)</title><rect x="127.4" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (1 samples, 0.05%)</title><rect x="127.4" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.05%)</title><rect x="127.4" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.05%)</title><rect x="127.4" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.05%)</title><rect x="127.4" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.05%)</title><rect x="127.4" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="127.4" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="127.4" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="127.4" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.05%)</title><rect x="127.4" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.05%)</title><rect x="127.4" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.05%)</title><rect x="127.4" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice$Default$ForMethodEnter.mapped (1 samples, 0.05%)</title><rect x="127.4" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getStackSize (1 samples, 0.05%)</title><rect x="127.4" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.getStackSize (1 samples, 0.05%)</title><rect x="127.4" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitInnerClass (1 samples, 0.05%)</title><rect x="128.1" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitInnerClass (1 samples, 0.05%)</title><rect x="128.1" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isMemberType (1 samples, 0.05%)</title><rect x="128.1" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.isLocalType (1 samples, 0.05%)</title><rect x="128.1" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="128.1" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="128.1" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="128.1" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="128.1" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="128.1" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="128.1" y="851.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="128.1" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.1" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="128.1" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.1" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="128.1" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="128.1" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="128.1" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="128.1" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.1" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="128.1" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="128.1" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="128.1" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="128.1" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="128.1" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="128.1" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="128.1" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.1" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferU.get (1 samples, 0.05%)</title><rect x="128.1" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="128.1" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.1" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClassSourceLocation (1 samples, 0.05%)</title><rect x="128.7" y="1251.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.7" y="1262.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (1 samples, 0.05%)</title><rect x="128.7" y="1235.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (1 samples, 0.05%)</title><rect x="129.3" y="1283.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (1 samples, 0.05%)</title><rect x="129.3" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.definePackage (1 samples, 0.05%)</title><rect x="129.3" y="1251.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.definePackage (1 samples, 0.05%)</title><rect x="129.3" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/Package.&lt;init&gt; (1 samples, 0.05%)</title><rect x="129.3" y="1219.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/NamedPackage.&lt;init&gt; (1 samples, 0.05%)</title><rect x="129.3" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.05%)</title><rect x="129.3" y="1187.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.3" y="1198.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.05%)</title><rect x="129.3" y="1171.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="132.3" y="1182.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.05%)</title><rect x="129.3" y="1155.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="132.3" y="1166.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="129.3" y="1139.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="132.3" y="1150.0"></text>
</g>
<g>
<title>G1BarrierSet::enqueue(oopDesc*) (1 samples, 0.05%)</title><rect x="129.3" y="1123.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="132.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (4 samples, 0.22%)</title><rect x="130.0" y="1283.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.0" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (4 samples, 0.22%)</title><rect x="130.0" y="1267.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.0" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (4 samples, 0.22%)</title><rect x="130.0" y="1251.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.0" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (4 samples, 0.22%)</title><rect x="130.0" y="1235.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="130.0" y="1219.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="133.0" y="1230.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="130.0" y="1203.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="133.0" y="1214.0"></text>
</g>
<g>
<title>inflate (3 samples, 0.16%)</title><rect x="130.6" y="1219.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="133.6" y="1230.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.05%)</title><rect x="132.5" y="1379.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="135.5" y="1390.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (435 samples, 23.53%)</title><rect x="133.2" y="1379.0" width="277.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.2" y="1390.0">sun/instrument/InstrumentationImpl.tr..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (435 samples, 23.53%)</title><rect x="133.2" y="1363.0" width="277.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.2" y="1374.0">sun/instrument/TransformerManager.tra..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (435 samples, 23.53%)</title><rect x="133.2" y="1347.0" width="277.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.2" y="1358.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (435 samples, 23.53%)</title><rect x="133.2" y="1331.0" width="277.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.2" y="1342.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (435 samples, 23.53%)</title><rect x="133.2" y="1315.0" width="277.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.2" y="1326.0">java/security/AccessController.doPriv..</text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f81fc8b7080 (1 samples, 0.05%)</title><rect x="133.2" y="1299.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.2" y="1310.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.16%)</title><rect x="133.8" y="1299.0" width="1.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="136.8" y="1310.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="134.4" y="1283.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="137.4" y="1294.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="134.4" y="1267.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="137.4" y="1278.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="134.4" y="1251.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="137.4" y="1262.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="134.4" y="1235.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="137.4" y="1246.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.05%)</title><rect x="135.1" y="1283.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="138.1" y="1294.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="135.1" y="1267.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="138.1" y="1278.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.05%)</title><rect x="135.1" y="1251.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="138.1" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (431 samples, 23.31%)</title><rect x="135.7" y="1299.0" width="275.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.7" y="1310.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (431 samples, 23.31%)</title><rect x="135.7" y="1283.0" width="275.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.7" y="1294.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (431 samples, 23.31%)</title><rect x="135.7" y="1267.0" width="275.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.7" y="1278.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (431 samples, 23.31%)</title><rect x="135.7" y="1251.0" width="275.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.7" y="1262.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.05%)</title><rect x="135.7" y="1235.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.05%)</title><rect x="135.7" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.7" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default$1.typePool (1 samples, 0.05%)</title><rect x="136.4" y="1235.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.4" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.05%)</title><rect x="136.4" y="1219.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.4" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.05%)</title><rect x="136.4" y="1203.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.4" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.createCachingTypePool (1 samples, 0.05%)</title><rect x="136.4" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.4" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (424 samples, 22.93%)</title><rect x="137.0" y="1235.0" width="270.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.0" y="1246.0">net/bytebuddy/agent/builder/AgentBui..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/HelperInjector.transform (1 samples, 0.05%)</title><rect x="142.7" y="1219.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.7" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/HelperInjector.getHelperMap (1 samples, 0.05%)</title><rect x="142.7" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.7" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="142.7" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.7" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="142.7" y="1171.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="142.7" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.7" y="1166.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="142.7" y="1139.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.7" y="1150.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.05%)</title><rect x="142.7" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.7" y="1134.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.05%)</title><rect x="142.7" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.7" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.05%)</title><rect x="142.7" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.7" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.05%)</title><rect x="142.7" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.7" y="1086.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.05%)</title><rect x="142.7" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="1070.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.05%)</title><rect x="142.7" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.7" y="1054.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.05%)</title><rect x="142.7" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.7" y="1038.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.05%)</title><rect x="142.7" y="1011.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="145.7" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="142.7" y="995.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="145.7" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/ContextStoreUtils$1.transform (1 samples, 0.05%)</title><rect x="143.4" y="1219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.4" y="1230.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="143.4" y="1203.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="146.4" y="1214.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="143.4" y="1187.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="146.4" y="1198.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="143.4" y="1171.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="146.4" y="1182.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="143.4" y="1155.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="146.4" y="1166.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.54%)</title><rect x="144.0" y="1219.0" width="6.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="147.0" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$NativeMethodStrategy$Disabled.resolve (3 samples, 0.16%)</title><rect x="150.4" y="1219.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.4" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer$Suffixing.withRandomSuffix (3 samples, 0.16%)</title><rect x="150.4" y="1203.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="150.4" y="1187.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.4" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/RandomString.make (2 samples, 0.11%)</title><rect x="151.0" y="1187.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.0" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/RandomString.make (2 samples, 0.11%)</title><rect x="151.0" y="1171.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.0" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/RandomString.&lt;init&gt; (1 samples, 0.05%)</title><rect x="151.7" y="1155.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.7" y="1166.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (1 samples, 0.05%)</title><rect x="151.7" y="1139.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.7" y="1150.0"></text>
</g>
<g>
<title>java/util/Random.&lt;init&gt; (1 samples, 0.05%)</title><rect x="151.7" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onIgnored (8 samples, 0.43%)</title><rect x="152.3" y="1219.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.3" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (7 samples, 0.38%)</title><rect x="153.0" y="1203.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.0" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (7 samples, 0.38%)</title><rect x="153.0" y="1187.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.0" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (313 samples, 16.93%)</title><rect x="157.4" y="1219.0" width="199.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.4" y="1230.0">net/bytebuddy/agent/builde..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.05%)</title><rect x="157.4" y="1203.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.4" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.05%)</title><rect x="157.4" y="1187.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.4" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.05%)</title><rect x="157.4" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.4" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="157.4" y="1155.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.4" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="157.4" y="1139.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.4" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.05%)</title><rect x="157.4" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.4" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.05%)</title><rect x="157.4" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.4" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.05%)</title><rect x="157.4" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="157.4" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="157.4" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="157.4" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="157.4" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.4" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="157.4" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.4" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="157.4" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.4" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="157.4" y="979.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.4" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="157.4" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="157.4" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="157.4" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.05%)</title><rect x="157.4" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.05%)</title><rect x="157.4" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="157.4" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="157.4" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="157.4" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (312 samples, 16.87%)</title><rect x="158.1" y="1203.0" width="199.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.1" y="1214.0">net/bytebuddy/agent/builde..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (312 samples, 16.87%)</title><rect x="158.1" y="1187.0" width="199.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.1" y="1198.0">net/bytebuddy/agent/builde..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (4 samples, 0.22%)</title><rect x="158.1" y="1171.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.1" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (4 samples, 0.22%)</title><rect x="158.1" y="1155.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.1" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (4 samples, 0.22%)</title><rect x="158.1" y="1139.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.1" y="1150.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (4 samples, 0.22%)</title><rect x="158.1" y="1123.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.1" y="1134.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (4 samples, 0.22%)</title><rect x="158.1" y="1107.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.1" y="1118.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (1 samples, 0.05%)</title><rect x="159.3" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.3" y="1102.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (1 samples, 0.05%)</title><rect x="159.3" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.3" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (1 samples, 0.05%)</title><rect x="159.3" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.05%)</title><rect x="159.3" y="1043.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.3" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.05%)</title><rect x="159.3" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.3" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.&lt;init&gt; (1 samples, 0.05%)</title><rect x="159.3" y="1011.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.3" y="1022.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.newLookupKey (1 samples, 0.05%)</title><rect x="160.0" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.0" y="1102.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.&lt;init&gt; (1 samples, 0.05%)</title><rect x="160.0" y="1075.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.0" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (152 samples, 8.22%)</title><rect x="160.6" y="1171.0" width="97.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.6" y="1182.0">datadog/tra..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (17 samples, 0.92%)</title><rect x="160.6" y="1155.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.6" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (17 samples, 0.92%)</title><rect x="160.6" y="1139.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.6" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (15 samples, 0.81%)</title><rect x="160.6" y="1123.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.6" y="1134.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (15 samples, 0.81%)</title><rect x="160.6" y="1107.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.6" y="1118.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (14 samples, 0.76%)</title><rect x="161.2" y="1091.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.2" y="1102.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (6 samples, 0.32%)</title><rect x="162.5" y="1075.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.5" y="1086.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (6 samples, 0.32%)</title><rect x="162.5" y="1059.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.5" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (6 samples, 0.32%)</title><rect x="162.5" y="1043.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.5" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (6 samples, 0.32%)</title><rect x="162.5" y="1027.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.5" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Scheduled.&lt;init&gt; (1 samples, 0.05%)</title><rect x="162.5" y="1011.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.5" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Scheduled.&lt;init&gt; (1 samples, 0.05%)</title><rect x="162.5" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.5" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (5 samples, 0.27%)</title><rect x="163.2" y="1011.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.&lt;init&gt; (1 samples, 0.05%)</title><rect x="163.2" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.offer (4 samples, 0.22%)</title><rect x="163.8" y="995.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.8" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.05%)</title><rect x="163.8" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.8" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.05%)</title><rect x="163.8" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.8" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (1 samples, 0.05%)</title><rect x="163.8" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.11%)</title><rect x="164.4" y="979.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="165.1" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="165.7" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="165.7" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.05%)</title><rect x="165.7" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.32%)</title><rect x="166.4" y="1075.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.4" y="1086.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.equals (1 samples, 0.05%)</title><rect x="168.9" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.9" y="1070.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$InternalReference.referenceEquals (1 samples, 0.05%)</title><rect x="168.9" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.05%)</title><rect x="169.5" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.5" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.getCache (1 samples, 0.05%)</title><rect x="170.2" y="1123.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.2" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (1 samples, 0.05%)</title><rect x="170.2" y="1107.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.2" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache$Provider.newWeakCache (1 samples, 0.05%)</title><rect x="170.2" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.2" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.&lt;init&gt; (1 samples, 0.05%)</title><rect x="170.2" y="1075.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.2" y="1086.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.build (1 samples, 0.05%)</title><rect x="170.2" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.2" y="1070.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (1 samples, 0.05%)</title><rect x="170.2" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.2" y="1054.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (1 samples, 0.05%)</title><rect x="170.2" y="1027.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.2" y="1038.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache (1 samples, 0.05%)</title><rect x="170.2" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="170.2" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.2" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="170.2" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.2" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.05%)</title><rect x="170.2" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.2" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkName (1 samples, 0.05%)</title><rect x="170.2" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="170.2" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="170.2" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="170.2" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.2" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.hasResources (1 samples, 0.05%)</title><rect x="170.8" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="170.8" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="170.8" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="170.8" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="170.8" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.8" y="1070.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="170.8" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="170.8" y="1027.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="170.8" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="170.8" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="170.8" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="170.8" y="963.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="170.8" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.8" y="958.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferU.get (1 samples, 0.05%)</title><rect x="170.8" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.8" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (3 samples, 0.16%)</title><rect x="171.5" y="1155.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.5" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="172.7" y="1139.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="172.7" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="173.4" y="1155.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.4" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="173.4" y="1139.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.4" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="173.4" y="1123.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.4" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="173.4" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="173.4" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="173.4" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.4" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.afterNodeInsertion (1 samples, 0.05%)</title><rect x="173.4" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.4" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="174.0" y="1155.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="177.0" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (106 samples, 5.73%)</title><rect x="174.7" y="1155.0" width="67.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.7" y="1166.0">net/byt..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (5 samples, 0.27%)</title><rect x="174.7" y="1139.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.7" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (5 samples, 0.27%)</title><rect x="174.7" y="1123.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="174.7" y="1107.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.7" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="174.7" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.7" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="174.7" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.7" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="174.7" y="1059.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.05%)</title><rect x="174.7" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.7" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.05%)</title><rect x="174.7" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.05%)</title><rect x="174.7" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.05%)</title><rect x="174.7" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="174.7" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="174.7" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="174.7" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.7" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (4 samples, 0.22%)</title><rect x="175.3" y="1107.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (4 samples, 0.22%)</title><rect x="175.3" y="1091.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (4 samples, 0.22%)</title><rect x="175.3" y="1075.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (4 samples, 0.22%)</title><rect x="175.3" y="1059.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (4 samples, 0.22%)</title><rect x="175.3" y="1043.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (4 samples, 0.22%)</title><rect x="175.3" y="1027.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (4 samples, 0.22%)</title><rect x="175.3" y="1011.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="175.3" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="175.3" y="979.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="175.3" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="175.3" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="175.3" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="175.3" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.size (1 samples, 0.05%)</title><rect x="175.3" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (3 samples, 0.16%)</title><rect x="175.9" y="995.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (3 samples, 0.16%)</title><rect x="175.9" y="979.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (3 samples, 0.16%)</title><rect x="175.9" y="963.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (3 samples, 0.16%)</title><rect x="175.9" y="947.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (3 samples, 0.16%)</title><rect x="175.9" y="931.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (3 samples, 0.16%)</title><rect x="175.9" y="915.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (3 samples, 0.16%)</title><rect x="175.9" y="899.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.9" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="175.9" y="883.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="178.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (1 samples, 0.05%)</title><rect x="176.6" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.6" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="176.6" y="867.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="179.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="177.2" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="177.2" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="177.2" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.2" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="177.2" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.2" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="177.2" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.2" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="177.2" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.2" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="177.2" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.2" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="177.2" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.2" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.05%)</title><rect x="177.2" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.2" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.05%)</title><rect x="177.2" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.2" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.05%)</title><rect x="177.2" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.2" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (85 samples, 4.60%)</title><rect x="177.8" y="1139.0" width="54.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.8" y="1150.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (85 samples, 4.60%)</title><rect x="177.8" y="1123.0" width="54.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.8" y="1134.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (36 samples, 1.95%)</title><rect x="177.8" y="1107.0" width="23.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.8" y="1118.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (36 samples, 1.95%)</title><rect x="177.8" y="1091.0" width="23.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.8" y="1102.0">d..</text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (16 samples, 0.87%)</title><rect x="177.8" y="1075.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (16 samples, 0.87%)</title><rect x="177.8" y="1059.0" width="10.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (16 samples, 0.87%)</title><rect x="177.8" y="1043.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (16 samples, 0.87%)</title><rect x="177.8" y="1027.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.8" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (5 samples, 0.27%)</title><rect x="177.8" y="1011.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (5 samples, 0.27%)</title><rect x="177.8" y="995.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (5 samples, 0.27%)</title><rect x="177.8" y="979.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (5 samples, 0.27%)</title><rect x="177.8" y="963.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (5 samples, 0.27%)</title><rect x="177.8" y="947.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (5 samples, 0.27%)</title><rect x="177.8" y="931.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (5 samples, 0.27%)</title><rect x="177.8" y="915.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.8" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="178.5" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.5" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="178.5" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (3 samples, 0.16%)</title><rect x="179.1" y="899.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.16%)</title><rect x="179.1" y="883.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.05%)</title><rect x="179.1" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.1" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="179.1" y="851.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="182.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="179.8" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="179.8" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.8" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="180.4" y="867.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="183.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (11 samples, 0.59%)</title><rect x="181.0" y="1011.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (11 samples, 0.59%)</title><rect x="181.0" y="995.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.0" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="181.0" y="979.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="184.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedConstructor.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="181.7" y="979.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="184.7" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="181.7" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.7" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="181.7" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.7" y="958.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (1 samples, 0.05%)</title><rect x="181.7" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.7" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.05%)</title><rect x="181.7" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.7" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedValues.size (1 samples, 0.05%)</title><rect x="181.7" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="182.3" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.3" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="182.3" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.3" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="182.3" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.3" y="958.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (1 samples, 0.05%)</title><rect x="182.3" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (5 samples, 0.27%)</title><rect x="182.9" y="979.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (5 samples, 0.27%)</title><rect x="182.9" y="963.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.9" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.11%)</title><rect x="182.9" y="947.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (2 samples, 0.11%)</title><rect x="182.9" y="931.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (2 samples, 0.11%)</title><rect x="182.9" y="915.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.of (2 samples, 0.11%)</title><rect x="182.9" y="899.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.&lt;init&gt; (2 samples, 0.11%)</title><rect x="182.9" y="883.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.9" y="894.0"></text>
</g>
<g>
<title>com/sun/proxy/jdk/proxy1/$Proxy11.annotationType (1 samples, 0.05%)</title><rect x="182.9" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.9" y="878.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationInvocationHandler.invoke (1 samples, 0.05%)</title><rect x="182.9" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.9" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getName (1 samples, 0.05%)</title><rect x="182.9" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="185.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.&lt;init&gt; (1 samples, 0.05%)</title><rect x="183.6" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.6" y="878.0"></text>
</g>
<g>
<title>com/sun/proxy/jdk/proxy1/$Proxy11.annotationType (1 samples, 0.05%)</title><rect x="183.6" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (3 samples, 0.16%)</title><rect x="184.2" y="947.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (3 samples, 0.16%)</title><rect x="184.2" y="931.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (3 samples, 0.16%)</title><rect x="184.2" y="915.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.2" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.matches (1 samples, 0.05%)</title><rect x="184.2" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/EqualityMatcher.matches (2 samples, 0.11%)</title><rect x="184.9" y="899.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="187.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (2 samples, 0.11%)</title><rect x="184.9" y="883.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="184.9" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="184.9" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.9" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="184.9" y="835.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="187.9" y="846.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="185.5" y="867.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="188.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (3 samples, 0.16%)</title><rect x="186.1" y="979.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (2 samples, 0.11%)</title><rect x="186.8" y="963.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.8" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (2 samples, 0.11%)</title><rect x="186.8" y="947.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (20 samples, 1.08%)</title><rect x="188.1" y="1075.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (20 samples, 1.08%)</title><rect x="188.1" y="1059.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (20 samples, 1.08%)</title><rect x="188.1" y="1043.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (20 samples, 1.08%)</title><rect x="188.1" y="1027.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (20 samples, 1.08%)</title><rect x="188.1" y="1011.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.1" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (11 samples, 0.59%)</title><rect x="188.1" y="995.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (11 samples, 0.59%)</title><rect x="188.1" y="979.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (11 samples, 0.59%)</title><rect x="188.1" y="963.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (9 samples, 0.49%)</title><rect x="189.3" y="947.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (9 samples, 0.49%)</title><rect x="189.3" y="931.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (9 samples, 0.49%)</title><rect x="189.3" y="915.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (9 samples, 0.49%)</title><rect x="189.3" y="899.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (2 samples, 0.11%)</title><rect x="189.3" y="883.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.11%)</title><rect x="189.3" y="867.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.05%)</title><rect x="189.3" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.3" y="862.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="189.3" y="835.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="192.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="190.0" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getMethodType (1 samples, 0.05%)</title><rect x="190.6" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.05%)</title><rect x="190.6" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getObjectType (1 samples, 0.05%)</title><rect x="191.2" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (5 samples, 0.27%)</title><rect x="191.9" y="883.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (5 samples, 0.27%)</title><rect x="191.9" y="867.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="191.9" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (3 samples, 0.16%)</title><rect x="192.5" y="851.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.16%)</title><rect x="192.5" y="835.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="193.8" y="819.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.05%)</title><rect x="194.4" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="194.4" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (8 samples, 0.43%)</title><rect x="195.1" y="995.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="195.1" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (7 samples, 0.38%)</title><rect x="195.7" y="979.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.7" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="195.7" y="963.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="198.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedConstructor.getDeclaredAnnotations (3 samples, 0.16%)</title><rect x="196.3" y="963.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.3" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="197.6" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.6" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="197.6" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.6" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (1 samples, 0.05%)</title><rect x="197.6" y="915.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.6" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.05%)</title><rect x="197.6" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.6" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.05%)</title><rect x="197.6" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.6" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.05%)</title><rect x="197.6" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.6" y="878.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector() (1 samples, 0.05%)</title><rect x="197.6" y="851.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="200.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="198.3" y="963.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="198.3" y="947.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.3" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.11%)</title><rect x="198.3" y="931.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (2 samples, 0.11%)</title><rect x="198.3" y="915.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.3" y="926.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.05%)</title><rect x="198.3" y="899.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="201.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.05%)</title><rect x="198.9" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.of (1 samples, 0.05%)</title><rect x="198.9" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.&lt;init&gt; (1 samples, 0.05%)</title><rect x="198.9" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.9" y="878.0"></text>
</g>
<g>
<title>com/sun/proxy/$Proxy2.annotationType (1 samples, 0.05%)</title><rect x="198.9" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.9" y="862.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationInvocationHandler.invoke (1 samples, 0.05%)</title><rect x="198.9" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.9" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterCount (1 samples, 0.05%)</title><rect x="198.9" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="199.5" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.05%)</title><rect x="199.5" y="947.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="202.5" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.05%)</title><rect x="199.5" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.5" y="942.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="200.2" y="995.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="203.2" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (44 samples, 2.38%)</title><rect x="200.8" y="1107.0" width="28.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.8" y="1118.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (8 samples, 0.43%)</title><rect x="200.8" y="1091.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.8" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (8 samples, 0.43%)</title><rect x="200.8" y="1075.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.8" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (2 samples, 0.11%)</title><rect x="200.8" y="1059.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.8" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.05%)</title><rect x="201.5" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.5" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="201.5" y="1027.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="204.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.11%)</title><rect x="202.1" y="1059.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.11%)</title><rect x="202.1" y="1043.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="202.1" y="1027.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="202.1" y="1011.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.1" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.05%)</title><rect x="202.1" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="205.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="202.7" y="995.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="202.7" y="979.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="202.7" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="202.7" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.7" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="202.7" y="931.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="205.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (4 samples, 0.22%)</title><rect x="203.4" y="1059.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.11%)</title><rect x="203.4" y="1043.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.11%)</title><rect x="203.4" y="1027.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.4" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getDeclaredAnnotations (2 samples, 0.11%)</title><rect x="203.4" y="1011.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredAnnotations (2 samples, 0.11%)</title><rect x="203.4" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (2 samples, 0.11%)</title><rect x="203.4" y="979.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (2 samples, 0.11%)</title><rect x="203.4" y="963.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (2 samples, 0.11%)</title><rect x="203.4" y="947.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.11%)</title><rect x="203.4" y="931.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.11%)</title><rect x="203.4" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.05%)</title><rect x="203.4" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.4" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.05%)</title><rect x="203.4" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.4" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.05%)</title><rect x="203.4" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.4" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.05%)</title><rect x="203.4" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.4" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="203.4" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.4" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.05%)</title><rect x="203.4" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.4" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (1 samples, 0.05%)</title><rect x="203.4" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.4" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (1 samples, 0.05%)</title><rect x="203.4" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.4" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.evict (1 samples, 0.05%)</title><rect x="203.4" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.4" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.remove (1 samples, 0.05%)</title><rect x="203.4" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.4" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.replaceNode (1 samples, 0.05%)</title><rect x="203.4" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="204.0" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="204.0" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="204.0" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.0" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="204.0" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.0" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="204.0" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="204.0" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.0" y="830.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.05%)</title><rect x="204.0" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.0" y="814.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="204.0" y="787.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.0" y="798.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.05%)</title><rect x="204.0" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.0" y="782.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.05%)</title><rect x="204.0" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.0" y="766.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.05%)</title><rect x="204.0" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.0" y="750.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.05%)</title><rect x="204.0" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.0" y="734.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.05%)</title><rect x="204.0" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.0" y="718.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.05%)</title><rect x="204.0" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.0" y="702.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.05%)</title><rect x="204.0" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.0" y="686.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.05%)</title><rect x="204.0" y="659.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="207.0" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="204.0" y="643.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="207.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.11%)</title><rect x="204.6" y="1043.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.11%)</title><rect x="204.6" y="1027.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="204.6" y="1011.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="204.6" y="995.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.6" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.11%)</title><rect x="204.6" y="979.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (2 samples, 0.11%)</title><rect x="204.6" y="963.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (2 samples, 0.11%)</title><rect x="204.6" y="947.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (2 samples, 0.11%)</title><rect x="204.6" y="931.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (2 samples, 0.11%)</title><rect x="204.6" y="915.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (2 samples, 0.11%)</title><rect x="204.6" y="899.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (2 samples, 0.11%)</title><rect x="204.6" y="883.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.05%)</title><rect x="205.3" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.05%)</title><rect x="205.3" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (1 samples, 0.05%)</title><rect x="205.3" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="205.3" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="205.3" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (3 samples, 0.16%)</title><rect x="205.9" y="1091.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.9" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="205.9" y="1075.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="208.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.05%)</title><rect x="207.2" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.2" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.05%)</title><rect x="207.2" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.2" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="207.2" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.2" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="207.2" y="1027.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.2" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="207.2" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="207.2" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.2" y="1006.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="207.2" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.2" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="207.2" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.2" y="974.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="207.2" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.2" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="207.2" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.2" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.05%)</title><rect x="207.2" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.2" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.05%)</title><rect x="207.2" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.2" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.05%)</title><rect x="207.2" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.05%)</title><rect x="207.2" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.2" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="207.2" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.05%)</title><rect x="207.2" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.2" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (3 samples, 0.16%)</title><rect x="207.8" y="1091.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.8" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (3 samples, 0.16%)</title><rect x="207.8" y="1075.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.8" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="207.8" y="1059.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="207.8" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="207.8" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="207.8" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="207.8" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (2 samples, 0.11%)</title><rect x="208.5" y="1059.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.5" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (2 samples, 0.11%)</title><rect x="208.5" y="1043.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="208.5" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="208.5" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.05%)</title><rect x="208.5" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="208.5" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="208.5" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="208.5" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.5" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="208.5" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList.get (1 samples, 0.05%)</title><rect x="209.1" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList.get (1 samples, 0.05%)</title><rect x="209.1" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.1" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (17 samples, 0.92%)</title><rect x="209.8" y="1091.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.8" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.05%)</title><rect x="209.8" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.8" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="209.8" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.05%)</title><rect x="209.8" y="1043.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.05%)</title><rect x="209.8" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="209.8" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="209.8" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.05%)</title><rect x="209.8" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="209.8" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="209.8" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="209.8" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.8" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="209.8" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.8" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="209.8" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.8" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="209.8" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.8" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="209.8" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.8" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="209.8" y="851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.8" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.05%)</title><rect x="209.8" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.8" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.05%)</title><rect x="209.8" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.8" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.05%)</title><rect x="209.8" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.8" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.applyRead (1 samples, 0.05%)</title><rect x="209.8" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.8" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.moveToBack (1 samples, 0.05%)</title><rect x="209.8" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.8" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.linkLast (1 samples, 0.05%)</title><rect x="209.8" y="755.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.8" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (8 samples, 0.43%)</title><rect x="210.4" y="1075.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.4" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="210.4" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.4" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="210.4" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.05%)</title><rect x="210.4" y="1027.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="210.4" y="1011.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.05%)</title><rect x="210.4" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="210.4" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="210.4" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.4" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="210.4" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="210.4" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="210.4" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.05%)</title><rect x="210.4" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.05%)</title><rect x="210.4" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="210.4" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="210.4" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.05%)</title><rect x="210.4" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.4" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.05%)</title><rect x="211.0" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.05%)</title><rect x="211.0" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.05%)</title><rect x="211.0" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="211.0" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.05%)</title><rect x="211.0" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.05%)</title><rect x="211.0" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.05%)</title><rect x="211.0" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.0" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.05%)</title><rect x="211.7" y="1059.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.7" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="211.7" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.05%)</title><rect x="211.7" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.05%)</title><rect x="211.7" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="211.7" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="211.7" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.05%)</title><rect x="211.7" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="211.7" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="211.7" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="211.7" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.7" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="211.7" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.7" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="211.7" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.7" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="211.7" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.7" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="211.7" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.7" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="211.7" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.7" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.05%)</title><rect x="211.7" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.7" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.05%)</title><rect x="211.7" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.7" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.05%)</title><rect x="211.7" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.7" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.11%)</title><rect x="212.3" y="1059.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.11%)</title><rect x="212.3" y="1043.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.3" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="212.3" y="1027.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.3" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="212.3" y="1011.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.11%)</title><rect x="212.3" y="995.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.11%)</title><rect x="212.3" y="979.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.11%)</title><rect x="212.3" y="963.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.11%)</title><rect x="212.3" y="947.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.11%)</title><rect x="212.3" y="931.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.11%)</title><rect x="212.3" y="915.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.3" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="212.3" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="212.3" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="212.3" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="212.3" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="212.3" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="212.3" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="212.3" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="212.3" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.3" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="212.3" y="771.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="215.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="212.9" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="212.9" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="212.9" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="212.9" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="212.9" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="212.9" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="212.9" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.9" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.16%)</title><rect x="213.6" y="1059.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.6" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="213.6" y="1043.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.6" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="213.6" y="1027.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (3 samples, 0.16%)</title><rect x="213.6" y="1011.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (3 samples, 0.16%)</title><rect x="213.6" y="995.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (3 samples, 0.16%)</title><rect x="213.6" y="979.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (3 samples, 0.16%)</title><rect x="213.6" y="963.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (3 samples, 0.16%)</title><rect x="213.6" y="947.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (3 samples, 0.16%)</title><rect x="213.6" y="931.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.6" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="213.6" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="213.6" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="213.6" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="213.6" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="213.6" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="213.6" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="213.6" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (2 samples, 0.11%)</title><rect x="214.2" y="915.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.11%)</title><rect x="214.2" y="899.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.11%)</title><rect x="214.2" y="883.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (2 samples, 0.11%)</title><rect x="214.2" y="867.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.11%)</title><rect x="214.2" y="851.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.11%)</title><rect x="214.2" y="835.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="217.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (2 samples, 0.11%)</title><rect x="214.2" y="819.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (2 samples, 0.11%)</title><rect x="214.2" y="803.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.11%)</title><rect x="214.2" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.11%)</title><rect x="214.2" y="771.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.11%)</title><rect x="214.2" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.11%)</title><rect x="214.2" y="739.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.2" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.11%)</title><rect x="214.2" y="723.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.2" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.11%)</title><rect x="214.2" y="707.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.11%)</title><rect x="214.2" y="691.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.2" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.11%)</title><rect x="214.2" y="675.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.2" y="686.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="214.2" y="659.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="217.2" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (8 samples, 0.43%)</title><rect x="215.5" y="1075.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.5" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (8 samples, 0.43%)</title><rect x="215.5" y="1059.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.5" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (8 samples, 0.43%)</title><rect x="215.5" y="1043.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.5" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.05%)</title><rect x="215.5" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (7 samples, 0.38%)</title><rect x="216.1" y="1027.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (7 samples, 0.38%)</title><rect x="216.1" y="1011.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.1" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="216.1" y="995.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="219.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (6 samples, 0.32%)</title><rect x="216.8" y="995.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (6 samples, 0.32%)</title><rect x="216.8" y="979.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (6 samples, 0.32%)</title><rect x="216.8" y="963.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (6 samples, 0.32%)</title><rect x="216.8" y="947.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.8" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (3 samples, 0.16%)</title><rect x="216.8" y="931.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (3 samples, 0.16%)</title><rect x="216.8" y="915.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (3 samples, 0.16%)</title><rect x="216.8" y="899.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (3 samples, 0.16%)</title><rect x="216.8" y="883.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (3 samples, 0.16%)</title><rect x="216.8" y="867.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (2 samples, 0.11%)</title><rect x="216.8" y="851.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.8" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.05%)</title><rect x="216.8" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="217.4" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="217.4" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.getActualName (1 samples, 0.05%)</title><rect x="217.4" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.05%)</title><rect x="218.0" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.05%)</title><rect x="218.0" y="835.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="218.7" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="218.7" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="218.7" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.7" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="218.7" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="218.7" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="218.7" y="851.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="218.7" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="218.7" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="218.7" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.7" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.05%)</title><rect x="218.7" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (2 samples, 0.11%)</title><rect x="219.3" y="931.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.11%)</title><rect x="219.3" y="915.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.11%)</title><rect x="219.3" y="899.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (2 samples, 0.11%)</title><rect x="219.3" y="883.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.11%)</title><rect x="219.3" y="867.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.11%)</title><rect x="219.3" y="851.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (2 samples, 0.11%)</title><rect x="219.3" y="835.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.11%)</title><rect x="219.3" y="819.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.11%)</title><rect x="219.3" y="803.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (2 samples, 0.11%)</title><rect x="219.3" y="787.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (2 samples, 0.11%)</title><rect x="219.3" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getEnclosingSource (2 samples, 0.11%)</title><rect x="219.3" y="755.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getEnclosingMethod (2 samples, 0.11%)</title><rect x="219.3" y="739.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod.getEnclosingMethod (2 samples, 0.11%)</title><rect x="219.3" y="723.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (2 samples, 0.11%)</title><rect x="219.3" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.3" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="219.3" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="219.3" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="219.3" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.05%)</title><rect x="219.3" y="643.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.05%)</title><rect x="219.3" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="219.3" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="219.3" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.05%)</title><rect x="219.3" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="219.3" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="219.3" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.3" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="219.3" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="219.3" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="220.0" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="220.0" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="220.0" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.0" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="220.0" y="643.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="223.0" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (13 samples, 0.70%)</title><rect x="220.6" y="1091.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (13 samples, 0.70%)</title><rect x="220.6" y="1075.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.6" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (13 samples, 0.70%)</title><rect x="220.6" y="1059.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (13 samples, 0.70%)</title><rect x="220.6" y="1043.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (13 samples, 0.70%)</title><rect x="220.6" y="1027.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="223.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (13 samples, 0.70%)</title><rect x="220.6" y="1011.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (13 samples, 0.70%)</title><rect x="220.6" y="995.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (13 samples, 0.70%)</title><rect x="220.6" y="979.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (13 samples, 0.70%)</title><rect x="220.6" y="963.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.6" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (7 samples, 0.38%)</title><rect x="220.6" y="947.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (7 samples, 0.38%)</title><rect x="220.6" y="931.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (7 samples, 0.38%)</title><rect x="220.6" y="915.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (6 samples, 0.32%)</title><rect x="221.2" y="899.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (6 samples, 0.32%)</title><rect x="221.2" y="883.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (3 samples, 0.16%)</title><rect x="221.2" y="867.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.2" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (2 samples, 0.11%)</title><rect x="221.2" y="851.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.size (1 samples, 0.05%)</title><rect x="221.2" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.2" y="846.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="221.9" y="835.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="224.9" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="222.5" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (2 samples, 0.11%)</title><rect x="223.2" y="867.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (2 samples, 0.11%)</title><rect x="223.2" y="851.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (2 samples, 0.11%)</title><rect x="223.2" y="835.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.2" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="223.8" y="819.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="226.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.05%)</title><rect x="224.4" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="224.4" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (4 samples, 0.22%)</title><rect x="225.1" y="947.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (4 samples, 0.22%)</title><rect x="225.1" y="931.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (4 samples, 0.22%)</title><rect x="225.1" y="915.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (4 samples, 0.22%)</title><rect x="225.1" y="899.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (4 samples, 0.22%)</title><rect x="225.1" y="883.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (4 samples, 0.22%)</title><rect x="225.1" y="867.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (4 samples, 0.22%)</title><rect x="225.1" y="851.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.05%)</title><rect x="225.1" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="225.1" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="225.1" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="225.1" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="225.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="225.1" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.1" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="225.1" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="225.1" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="225.1" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.1" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="225.1" y="691.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="228.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (2 samples, 0.11%)</title><rect x="225.7" y="835.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.11%)</title><rect x="225.7" y="819.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.11%)</title><rect x="225.7" y="803.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.7" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.11%)</title><rect x="225.7" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="225.7" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="225.7" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="225.7" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="225.7" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="225.7" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.05%)</title><rect x="225.7" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="226.3" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="226.3" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="226.3" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="227.0" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="227.0" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="227.0" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="227.0" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (1 samples, 0.05%)</title><rect x="227.6" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (1 samples, 0.05%)</title><rect x="227.6" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType.getOwnerType (1 samples, 0.05%)</title><rect x="228.3" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType.toGenericType (1 samples, 0.05%)</title><rect x="228.3" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="228.3" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.3" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (2 samples, 0.11%)</title><rect x="228.9" y="1107.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (1 samples, 0.05%)</title><rect x="228.9" y="1091.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.9" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getSuperClass (1 samples, 0.05%)</title><rect x="228.9" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getSuperClass (1 samples, 0.05%)</title><rect x="228.9" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveSuperClass (1 samples, 0.05%)</title><rect x="228.9" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.05%)</title><rect x="228.9" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="228.9" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.9" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolutionForMaybeLoadableType.resolve (1 samples, 0.05%)</title><rect x="228.9" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/IllegalStateException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="228.9" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.9" y="990.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="228.9" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.05%)</title><rect x="228.9" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="228.9" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="228.9" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="228.9" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.9" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.05%)</title><rect x="228.9" y="883.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="231.9" y="894.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.05%)</title><rect x="228.9" y="867.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="231.9" y="878.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="228.9" y="851.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="231.9" y="862.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="228.9" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="231.9" y="846.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.05%)</title><rect x="228.9" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="231.9" y="830.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.05%)</title><rect x="228.9" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="231.9" y="814.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.05%)</title><rect x="228.9" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="231.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (1 samples, 0.05%)</title><rect x="229.5" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.5" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getSuperClass (1 samples, 0.05%)</title><rect x="229.5" y="1075.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.5" y="1086.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="230.2" y="1107.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="233.2" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.05%)</title><rect x="231.4" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.4" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="231.4" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.getModifiers (1 samples, 0.05%)</title><rect x="231.4" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.4" y="1086.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="231.4" y="1059.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="234.4" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="232.1" y="1139.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="235.1" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (9 samples, 0.49%)</title><rect x="232.7" y="1139.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.7" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (6 samples, 0.32%)</title><rect x="233.4" y="1123.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.4" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (6 samples, 0.32%)</title><rect x="233.4" y="1107.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.4" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="233.4" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.4" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="233.4" y="1075.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.4" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.05%)</title><rect x="233.4" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.05%)</title><rect x="233.4" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.05%)</title><rect x="233.4" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.4" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (3 samples, 0.16%)</title><rect x="234.0" y="1091.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (3 samples, 0.16%)</title><rect x="234.0" y="1075.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.0" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (3 samples, 0.16%)</title><rect x="234.0" y="1059.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (3 samples, 0.16%)</title><rect x="234.0" y="1043.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (3 samples, 0.16%)</title><rect x="234.0" y="1027.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (3 samples, 0.16%)</title><rect x="234.0" y="1011.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (3 samples, 0.16%)</title><rect x="234.0" y="995.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.0" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="234.0" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="234.0" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="234.0" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="234.0" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="234.0" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (1 samples, 0.05%)</title><rect x="234.0" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="234.0" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="234.0" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asGenericType (1 samples, 0.05%)</title><rect x="234.0" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="234.6" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="234.6" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="234.6" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="234.6" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="234.6" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="234.6" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="234.6" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="234.6" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="234.6" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="234.6" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="234.6" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="234.6" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="234.6" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="234.6" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="234.6" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (1 samples, 0.05%)</title><rect x="234.6" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="234.6" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="234.6" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asGenericType (1 samples, 0.05%)</title><rect x="234.6" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="235.3" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="235.3" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="235.3" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="235.3" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="235.3" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="235.3" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="235.3" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="235.3" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="235.3" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.3" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="235.9" y="1091.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="238.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asGenericType (1 samples, 0.05%)</title><rect x="236.6" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.05%)</title><rect x="237.2" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.2" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.05%)</title><rect x="237.2" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.05%)</title><rect x="237.2" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.05%)</title><rect x="237.2" y="1075.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="240.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="237.2" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="237.2" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.2" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="237.8" y="1123.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.8" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="237.8" y="1107.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="240.8" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (6 samples, 0.32%)</title><rect x="238.5" y="1139.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.5" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (5 samples, 0.27%)</title><rect x="239.1" y="1123.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.1" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (4 samples, 0.22%)</title><rect x="239.7" y="1107.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.7" y="1118.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="239.7" y="1091.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="242.7" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (3 samples, 0.16%)</title><rect x="240.4" y="1091.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="240.4" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getModifiers (1 samples, 0.05%)</title><rect x="240.4" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="243.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.11%)</title><rect x="241.0" y="1075.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.0" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.05%)</title><rect x="241.7" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.7" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="241.7" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="244.7" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="241.7" y="1027.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="244.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (21 samples, 1.14%)</title><rect x="242.3" y="1155.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.3" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (3 samples, 0.16%)</title><rect x="242.3" y="1139.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.3" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.11%)</title><rect x="242.9" y="1123.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.9" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.11%)</title><rect x="242.9" y="1107.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.9" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="242.9" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.9" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="242.9" y="1075.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.9" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="242.9" y="1059.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.9" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="242.9" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.9" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="242.9" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="242.9" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="242.9" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="242.9" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="242.9" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="242.9" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="242.9" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$Nested$LazyParameterizedType.getTypeArguments (1 samples, 0.05%)</title><rect x="242.9" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="242.9" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="243.6" y="1091.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="243.6" y="1075.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.6" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="243.6" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.6" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="243.6" y="1043.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="246.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (10 samples, 0.54%)</title><rect x="244.2" y="1139.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.2" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (9 samples, 0.49%)</title><rect x="244.2" y="1123.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.2" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (8 samples, 0.43%)</title><rect x="244.9" y="1107.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.9" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.matches (1 samples, 0.05%)</title><rect x="244.9" y="1091.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.9" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (6 samples, 0.32%)</title><rect x="245.5" y="1091.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.5" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 0.16%)</title><rect x="245.5" y="1075.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.5" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.11%)</title><rect x="245.5" y="1059.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.5" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.11%)</title><rect x="245.5" y="1043.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.5" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="245.5" y="1027.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.5" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="245.5" y="1011.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.11%)</title><rect x="245.5" y="995.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.11%)</title><rect x="245.5" y="979.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.11%)</title><rect x="245.5" y="963.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.11%)</title><rect x="245.5" y="947.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.11%)</title><rect x="245.5" y="931.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.11%)</title><rect x="245.5" y="915.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.5" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="245.5" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="245.5" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="245.5" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="245.5" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="245.5" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="245.5" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.5" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="245.5" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="245.5" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="245.5" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="245.5" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="245.5" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="246.1" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="246.1" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="246.1" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="246.1" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="246.1" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="246.1" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="246.1" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (1 samples, 0.05%)</title><rect x="246.1" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.1" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="246.8" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.8" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="246.8" y="1043.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.8" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="246.8" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="246.8" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="246.8" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="246.8" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="246.8" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="246.8" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="246.8" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="246.8" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="246.8" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="246.8" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.8" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="246.8" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="246.8" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="246.8" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.8" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="246.8" y="819.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="249.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.16%)</title><rect x="247.4" y="1075.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.4" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="247.4" y="1059.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.4" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="247.4" y="1043.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (3 samples, 0.16%)</title><rect x="247.4" y="1027.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (3 samples, 0.16%)</title><rect x="247.4" y="1011.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (3 samples, 0.16%)</title><rect x="247.4" y="995.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (3 samples, 0.16%)</title><rect x="247.4" y="979.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (3 samples, 0.16%)</title><rect x="247.4" y="963.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (3 samples, 0.16%)</title><rect x="247.4" y="947.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (3 samples, 0.16%)</title><rect x="247.4" y="931.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (3 samples, 0.16%)</title><rect x="247.4" y="915.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (3 samples, 0.16%)</title><rect x="247.4" y="899.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (3 samples, 0.16%)</title><rect x="247.4" y="883.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (3 samples, 0.16%)</title><rect x="247.4" y="867.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (3 samples, 0.16%)</title><rect x="247.4" y="851.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (3 samples, 0.16%)</title><rect x="247.4" y="835.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (2 samples, 0.11%)</title><rect x="247.4" y="819.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="248.7" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="248.7" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.7" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="249.3" y="1091.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="252.3" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="250.0" y="1123.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="253.0" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (8 samples, 0.43%)</title><rect x="250.6" y="1139.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.6" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (8 samples, 0.43%)</title><rect x="250.6" y="1123.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.6" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (8 samples, 0.43%)</title><rect x="250.6" y="1107.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.6" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (7 samples, 0.38%)</title><rect x="250.6" y="1091.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.05%)</title><rect x="250.6" y="1075.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.6" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="250.6" y="1059.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="253.6" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 0.16%)</title><rect x="251.2" y="1075.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.2" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.16%)</title><rect x="251.2" y="1059.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.2" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="251.2" y="1043.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.2" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="251.2" y="1027.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.2" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (3 samples, 0.16%)</title><rect x="251.2" y="1011.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.2" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.11%)</title><rect x="251.2" y="995.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.11%)</title><rect x="251.2" y="979.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.11%)</title><rect x="251.2" y="963.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.11%)</title><rect x="251.2" y="947.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.11%)</title><rect x="251.2" y="931.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.2" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="251.2" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="251.2" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="251.2" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="251.2" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="251.2" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="251.2" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.2" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.05%)</title><rect x="251.2" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="251.9" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="251.9" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="251.9" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.9" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="251.9" y="867.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="254.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (1 samples, 0.05%)</title><rect x="252.5" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.05%)</title><rect x="252.5" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="252.5" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="252.5" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="252.5" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="252.5" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="252.5" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.5" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="252.5" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.5" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="252.5" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.5" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="252.5" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.5" y="862.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.05%)</title><rect x="252.5" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.5" y="846.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.05%)</title><rect x="252.5" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.05%)</title><rect x="252.5" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.05%)</title><rect x="252.5" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResourceBuffer (1 samples, 0.05%)</title><rect x="252.5" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.readBuffer (1 samples, 0.05%)</title><rect x="252.5" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.slice (1 samples, 0.05%)</title><rect x="252.5" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.5" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.05%)</title><rect x="252.5" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.5" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.11%)</title><rect x="253.1" y="1075.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.1" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="253.1" y="1059.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.1" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="253.1" y="1043.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.11%)</title><rect x="253.1" y="1027.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="253.1" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="253.1" y="995.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="253.1" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="253.1" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="253.1" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (1 samples, 0.05%)</title><rect x="253.1" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="253.1" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="253.1" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="253.1" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.1" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="253.1" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="253.1" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="253.1" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.1" y="846.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="253.1" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.1" y="830.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="253.1" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="253.1" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.1" y="798.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.05%)</title><rect x="253.1" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (1 samples, 0.05%)</title><rect x="253.8" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="256.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="253.8" y="995.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="253.8" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="253.8" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.8" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="253.8" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="253.8" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="253.8" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="254.4" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="254.4" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="254.4" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.05%)</title><rect x="254.4" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.05%)</title><rect x="255.1" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="255.1" y="1075.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.getModifiers (1 samples, 0.05%)</title><rect x="255.1" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/EqualityMatcher.matches (3 samples, 0.16%)</title><rect x="255.7" y="1155.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.equals (2 samples, 0.11%)</title><rect x="255.7" y="1139.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.7" y="1150.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="256.3" y="1123.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="259.3" y="1134.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="257.0" y="1139.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="260.0" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="257.6" y="1171.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="260.6" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (153 samples, 8.27%)</title><rect x="258.3" y="1171.0" width="97.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.3" y="1182.0">net/bytebud..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (126 samples, 6.81%)</title><rect x="258.3" y="1155.0" width="80.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.3" y="1166.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (126 samples, 6.81%)</title><rect x="258.3" y="1139.0" width="80.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.3" y="1150.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (8 samples, 0.43%)</title><rect x="258.3" y="1123.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.3" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (7 samples, 0.38%)</title><rect x="258.9" y="1107.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.9" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.05%)</title><rect x="258.9" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.9" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="259.5" y="1091.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="262.5" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (5 samples, 0.27%)</title><rect x="260.2" y="1091.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.2" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (3 samples, 0.16%)</title><rect x="261.4" y="1075.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.4" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="261.4" y="1059.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="264.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (2 samples, 0.11%)</title><rect x="262.1" y="1059.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (2 samples, 0.11%)</title><rect x="262.1" y="1043.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher$Mode$1.matches (2 samples, 0.11%)</title><rect x="262.1" y="1027.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.11%)</title><rect x="262.1" y="1011.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.1" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (108 samples, 5.84%)</title><rect x="263.4" y="1123.0" width="68.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.4" y="1134.0">datadog..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (3 samples, 0.16%)</title><rect x="263.4" y="1107.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.4" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (3 samples, 0.16%)</title><rect x="263.4" y="1091.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (3 samples, 0.16%)</title><rect x="263.4" y="1075.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (3 samples, 0.16%)</title><rect x="263.4" y="1059.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.4" y="1070.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.16%)</title><rect x="263.4" y="1043.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="266.4" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (3 samples, 0.16%)</title><rect x="265.3" y="1107.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.3" y="1118.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.05%)</title><rect x="265.3" y="1091.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.05%)</title><rect x="265.9" y="1091.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.05%)</title><rect x="265.9" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="265.9" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.05%)</title><rect x="265.9" y="1043.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.05%)</title><rect x="265.9" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.05%)</title><rect x="265.9" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.size (1 samples, 0.05%)</title><rect x="266.5" y="1091.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.5" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (9 samples, 0.49%)</title><rect x="267.2" y="1107.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.2" y="1118.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (6 samples, 0.32%)</title><rect x="268.5" y="1091.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.5" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (3 samples, 0.16%)</title><rect x="268.5" y="1075.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.5" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (3 samples, 0.16%)</title><rect x="268.5" y="1059.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.5" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.11%)</title><rect x="268.5" y="1043.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.11%)</title><rect x="268.5" y="1027.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (2 samples, 0.11%)</title><rect x="268.5" y="1011.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.11%)</title><rect x="268.5" y="995.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.11%)</title><rect x="268.5" y="979.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.11%)</title><rect x="268.5" y="963.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.5" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (2 samples, 0.11%)</title><rect x="268.5" y="947.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.5" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (2 samples, 0.11%)</title><rect x="268.5" y="931.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.5" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (2 samples, 0.11%)</title><rect x="268.5" y="915.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.5" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (2 samples, 0.11%)</title><rect x="268.5" y="899.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.5" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$DrainStatus$1.shouldDrainBuffers (1 samples, 0.05%)</title><rect x="269.1" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList.get (1 samples, 0.05%)</title><rect x="269.7" y="1043.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (3 samples, 0.16%)</title><rect x="270.4" y="1075.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (3 samples, 0.16%)</title><rect x="270.4" y="1059.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (3 samples, 0.16%)</title><rect x="270.4" y="1043.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (3 samples, 0.16%)</title><rect x="270.4" y="1027.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.05%)</title><rect x="270.4" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.05%)</title><rect x="270.4" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.05%)</title><rect x="270.4" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.11%)</title><rect x="271.0" y="1011.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.11%)</title><rect x="271.0" y="995.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.0" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="271.0" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.0" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="271.0" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.0" y="974.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="271.0" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.0" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="271.0" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.0" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="271.0" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.0" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.05%)</title><rect x="271.0" y="899.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.0" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.05%)</title><rect x="271.0" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.0" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.05%)</title><rect x="271.0" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.05%)</title><rect x="271.0" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="271.0" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.05%)</title><rect x="271.0" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.0" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="271.7" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="271.7" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="271.7" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.05%)</title><rect x="272.3" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.3" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (50 samples, 2.70%)</title><rect x="272.9" y="1107.0" width="31.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.9" y="1118.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (3 samples, 0.16%)</title><rect x="272.9" y="1091.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.9" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (3 samples, 0.16%)</title><rect x="272.9" y="1075.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.9" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.05%)</title><rect x="272.9" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.05%)</title><rect x="272.9" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.05%)</title><rect x="272.9" y="1027.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (2 samples, 0.11%)</title><rect x="273.6" y="1059.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="274.2" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.2" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (1 samples, 0.05%)</title><rect x="274.2" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.2" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (1 samples, 0.05%)</title><rect x="274.2" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.2" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher$Mode$1.matches (1 samples, 0.05%)</title><rect x="274.2" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="274.2" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.2" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (2 samples, 0.11%)</title><rect x="274.8" y="1091.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (2 samples, 0.11%)</title><rect x="274.8" y="1075.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (2 samples, 0.11%)</title><rect x="274.8" y="1059.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.11%)</title><rect x="274.8" y="1043.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.11%)</title><rect x="274.8" y="1027.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.11%)</title><rect x="274.8" y="1011.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.8" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (2 samples, 0.11%)</title><rect x="274.8" y="995.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.8" y="1006.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (2 samples, 0.11%)</title><rect x="274.8" y="979.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.8" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (2 samples, 0.11%)</title><rect x="274.8" y="963.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.8" y="974.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="274.8" y="947.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.8" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.notifyListener (1 samples, 0.05%)</title><rect x="275.5" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$DiscardingQueue.poll (1 samples, 0.05%)</title><rect x="275.5" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.5" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (2 samples, 0.11%)</title><rect x="276.1" y="1091.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.1" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.11%)</title><rect x="276.1" y="1075.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (2 samples, 0.11%)</title><rect x="276.1" y="1059.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (2 samples, 0.11%)</title><rect x="276.1" y="1043.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.11%)</title><rect x="276.1" y="1027.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.11%)</title><rect x="276.1" y="1011.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (2 samples, 0.11%)</title><rect x="276.1" y="995.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.11%)</title><rect x="276.1" y="979.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.05%)</title><rect x="276.1" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.1" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="276.1" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="276.8" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="276.8" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.8" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="276.8" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.8" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="276.8" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.8" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="276.8" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.8" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="276.8" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.8" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="276.8" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.05%)</title><rect x="276.8" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.8" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="276.8" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.05%)</title><rect x="276.8" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (11 samples, 0.59%)</title><rect x="277.4" y="1091.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.4" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 0.16%)</title><rect x="277.4" y="1075.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.4" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.16%)</title><rect x="277.4" y="1059.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.4" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="277.4" y="1043.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.4" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.16%)</title><rect x="277.4" y="1027.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (3 samples, 0.16%)</title><rect x="277.4" y="1011.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (3 samples, 0.16%)</title><rect x="277.4" y="995.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (3 samples, 0.16%)</title><rect x="277.4" y="979.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (3 samples, 0.16%)</title><rect x="277.4" y="963.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (3 samples, 0.16%)</title><rect x="277.4" y="947.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (3 samples, 0.16%)</title><rect x="277.4" y="931.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.4" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="277.4" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="277.4" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="277.4" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="277.4" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="277.4" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="277.4" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="277.4" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="277.4" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.4" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="277.4" y="787.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="280.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (2 samples, 0.11%)</title><rect x="278.0" y="915.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (1 samples, 0.05%)</title><rect x="278.0" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="278.0" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="278.0" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="278.0" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="278.0" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="278.0" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="278.0" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="278.0" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="278.0" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.05%)</title><rect x="278.0" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="281.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.05%)</title><rect x="278.0" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (1 samples, 0.05%)</title><rect x="278.0" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.05%)</title><rect x="278.0" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.05%)</title><rect x="278.0" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="278.0" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="278.0" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="278.0" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="278.7" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="278.7" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.7" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="278.7" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.7" y="878.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="278.7" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.7" y="862.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="278.7" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.7" y="846.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="278.7" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.7" y="830.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="278.7" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.7" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (8 samples, 0.43%)</title><rect x="279.3" y="1075.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.3" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (8 samples, 0.43%)</title><rect x="279.3" y="1059.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (8 samples, 0.43%)</title><rect x="279.3" y="1043.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (8 samples, 0.43%)</title><rect x="279.3" y="1027.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (4 samples, 0.22%)</title><rect x="279.3" y="1011.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (4 samples, 0.22%)</title><rect x="279.3" y="995.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (4 samples, 0.22%)</title><rect x="279.3" y="979.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (4 samples, 0.22%)</title><rect x="279.3" y="963.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (4 samples, 0.22%)</title><rect x="279.3" y="947.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (4 samples, 0.22%)</title><rect x="279.3" y="931.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (4 samples, 0.22%)</title><rect x="279.3" y="915.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (4 samples, 0.22%)</title><rect x="279.3" y="899.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (4 samples, 0.22%)</title><rect x="279.3" y="883.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (4 samples, 0.22%)</title><rect x="279.3" y="867.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (4 samples, 0.22%)</title><rect x="279.3" y="851.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (4 samples, 0.22%)</title><rect x="279.3" y="835.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (1 samples, 0.05%)</title><rect x="279.3" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.3" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="279.3" y="803.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="282.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="280.0" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="280.0" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.0" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="280.0" y="787.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="283.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.11%)</title><rect x="280.6" y="819.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.11%)</title><rect x="280.6" y="803.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType.toGenericType (1 samples, 0.05%)</title><rect x="280.6" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="280.6" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="280.6" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.6" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="280.6" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="280.6" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="280.6" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.6" y="718.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="280.6" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.6" y="702.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="280.6" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.6" y="686.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="280.6" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.05%)</title><rect x="280.6" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="281.2" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="281.2" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getEnclosingSource (1 samples, 0.05%)</title><rect x="281.2" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getEnclosingMethod (1 samples, 0.05%)</title><rect x="281.2" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod.getEnclosingMethod (1 samples, 0.05%)</title><rect x="281.2" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="281.2" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="281.2" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="281.2" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="281.2" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.05%)</title><rect x="281.2" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.05%)</title><rect x="281.2" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="281.2" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="281.2" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (4 samples, 0.22%)</title><rect x="281.9" y="1011.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (3 samples, 0.16%)</title><rect x="281.9" y="995.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (3 samples, 0.16%)</title><rect x="281.9" y="979.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.16%)</title><rect x="281.9" y="963.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.16%)</title><rect x="281.9" y="947.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.16%)</title><rect x="281.9" y="931.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.11%)</title><rect x="281.9" y="915.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.11%)</title><rect x="281.9" y="899.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.11%)</title><rect x="281.9" y="883.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.9" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="281.9" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.9" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="281.9" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="281.9" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="281.9" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="281.9" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.9" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="281.9" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="281.9" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="281.9" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="281.9" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="281.9" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="281.9" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="281.9" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="282.5" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.5" y="878.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.05%)</title><rect x="282.5" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.5" y="862.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="282.5" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.5" y="846.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="282.5" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.5" y="830.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="282.5" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.5" y="814.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="282.5" y="787.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="285.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="283.1" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="283.1" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="283.1" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="283.1" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitAnnotation (1 samples, 0.05%)</title><rect x="283.1" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForAnnotationProperty.&lt;init&gt; (1 samples, 0.05%)</title><rect x="283.1" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForRawType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="283.8" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.8" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (32 samples, 1.73%)</title><rect x="284.4" y="1091.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.4" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (32 samples, 1.73%)</title><rect x="284.4" y="1075.0" width="20.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.4" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (32 samples, 1.73%)</title><rect x="284.4" y="1059.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.4" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="284.4" y="1043.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="287.4" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.05%)</title><rect x="285.1" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (25 samples, 1.35%)</title><rect x="285.7" y="1043.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (14 samples, 0.76%)</title><rect x="285.7" y="1027.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (14 samples, 0.76%)</title><rect x="285.7" y="1011.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (14 samples, 0.76%)</title><rect x="285.7" y="995.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (14 samples, 0.76%)</title><rect x="285.7" y="979.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (14 samples, 0.76%)</title><rect x="285.7" y="963.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.7" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (4 samples, 0.22%)</title><rect x="285.7" y="947.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (4 samples, 0.22%)</title><rect x="285.7" y="931.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (4 samples, 0.22%)</title><rect x="285.7" y="915.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (4 samples, 0.22%)</title><rect x="285.7" y="899.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (4 samples, 0.22%)</title><rect x="285.7" y="883.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (4 samples, 0.22%)</title><rect x="285.7" y="867.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.7" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (2 samples, 0.11%)</title><rect x="285.7" y="851.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.size (1 samples, 0.05%)</title><rect x="286.3" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.3" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="287.0" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="287.0" y="835.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="287.0" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="287.0" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="287.0" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="287.6" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="287.6" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.6" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="287.6" y="819.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="290.6" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="288.2" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (4 samples, 0.22%)</title><rect x="288.9" y="947.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (4 samples, 0.22%)</title><rect x="288.9" y="931.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (4 samples, 0.22%)</title><rect x="288.9" y="915.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.9" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (4 samples, 0.22%)</title><rect x="288.9" y="899.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (4 samples, 0.22%)</title><rect x="288.9" y="883.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (4 samples, 0.22%)</title><rect x="288.9" y="867.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (4 samples, 0.22%)</title><rect x="288.9" y="851.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (4 samples, 0.22%)</title><rect x="288.9" y="835.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (3 samples, 0.16%)</title><rect x="288.9" y="819.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.9" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="288.9" y="803.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="291.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="289.5" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="290.2" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="290.2" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.2" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="290.2" y="771.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="293.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.05%)</title><rect x="290.8" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.05%)</title><rect x="290.8" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="290.8" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (2 samples, 0.11%)</title><rect x="291.4" y="947.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.11%)</title><rect x="291.4" y="931.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (2 samples, 0.11%)</title><rect x="291.4" y="915.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (2 samples, 0.11%)</title><rect x="291.4" y="899.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.11%)</title><rect x="291.4" y="883.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (2 samples, 0.11%)</title><rect x="291.4" y="867.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (2 samples, 0.11%)</title><rect x="291.4" y="851.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="291.4" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="291.4" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="291.4" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="291.4" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.05%)</title><rect x="291.4" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getEnclosingSource (1 samples, 0.05%)</title><rect x="291.4" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.asErasure (1 samples, 0.05%)</title><rect x="291.4" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="292.1" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="292.1" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (3 samples, 0.16%)</title><rect x="292.7" y="947.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (1 samples, 0.05%)</title><rect x="292.7" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="292.7" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="292.7" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="292.7" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="292.7" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="292.7" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.7" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="292.7" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.7" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="292.7" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.7" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="292.7" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="292.7" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="292.7" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="292.7" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="292.7" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.7" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="292.7" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="292.7" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="292.7" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="292.7" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="292.7" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="292.7" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="292.7" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.05%)</title><rect x="292.7" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.05%)</title><rect x="292.7" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.05%)</title><rect x="292.7" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (1 samples, 0.05%)</title><rect x="292.7" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="292.7" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="292.7" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="292.7" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.11%)</title><rect x="293.4" y="931.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.11%)</title><rect x="293.4" y="915.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (2 samples, 0.11%)</title><rect x="293.4" y="899.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.4" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (2 samples, 0.11%)</title><rect x="293.4" y="883.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.4" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (2 samples, 0.11%)</title><rect x="293.4" y="867.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.4" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (2 samples, 0.11%)</title><rect x="293.4" y="851.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.4" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (2 samples, 0.11%)</title><rect x="293.4" y="835.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.4" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (2 samples, 0.11%)</title><rect x="293.4" y="819.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.4" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (2 samples, 0.11%)</title><rect x="293.4" y="803.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.4" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (2 samples, 0.11%)</title><rect x="293.4" y="787.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (2 samples, 0.11%)</title><rect x="293.4" y="771.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.11%)</title><rect x="293.4" y="755.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (2 samples, 0.11%)</title><rect x="293.4" y="739.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (5 samples, 0.27%)</title><rect x="294.6" y="1027.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (5 samples, 0.27%)</title><rect x="294.6" y="1011.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (5 samples, 0.27%)</title><rect x="294.6" y="995.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.27%)</title><rect x="294.6" y="979.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.27%)</title><rect x="294.6" y="963.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.27%)</title><rect x="294.6" y="947.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (4 samples, 0.22%)</title><rect x="294.6" y="931.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.6" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (4 samples, 0.22%)</title><rect x="294.6" y="915.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.6" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Utils.getBootstrapProxy (1 samples, 0.05%)</title><rect x="294.6" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="297.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Utils.getAgentClassLoader (1 samples, 0.05%)</title><rect x="294.6" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (1 samples, 0.05%)</title><rect x="294.6" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader0 (1 samples, 0.05%)</title><rect x="294.6" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (3 samples, 0.16%)</title><rect x="295.3" y="899.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.3" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="295.3" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.3" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="295.3" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="295.3" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="295.3" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="295.3" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.3" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="295.3" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="295.3" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="295.3" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="295.3" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="295.3" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="295.3" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="295.3" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getAttributes (1 samples, 0.05%)</title><rect x="295.3" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.slice (1 samples, 0.05%)</title><rect x="295.3" y="675.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.3" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="295.9" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.9" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="295.9" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="295.9" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="295.9" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.05%)</title><rect x="295.9" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="295.9" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="295.9" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="295.9" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.9" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="295.9" y="755.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="298.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="296.5" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.5" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="296.5" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.5" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="296.5" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.5" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="296.5" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.5" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="296.5" y="819.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.5" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="296.5" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="299.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="297.2" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="297.2" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="297.2" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="297.2" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.05%)</title><rect x="297.2" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.05%)</title><rect x="297.2" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (1 samples, 0.05%)</title><rect x="297.2" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.05%)</title><rect x="297.2" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.05%)</title><rect x="297.2" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="297.2" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor.visitClassType (1 samples, 0.05%)</title><rect x="297.2" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (5 samples, 0.27%)</title><rect x="297.8" y="1027.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (4 samples, 0.22%)</title><rect x="297.8" y="1011.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (4 samples, 0.22%)</title><rect x="297.8" y="995.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 0.22%)</title><rect x="297.8" y="979.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.22%)</title><rect x="297.8" y="963.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.22%)</title><rect x="297.8" y="947.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="297.8" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.8" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="297.8" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.8" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="297.8" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.8" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="297.8" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.8" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="297.8" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="297.8" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="297.8" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="297.8" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.8" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="297.8" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="297.8" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="297.8" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.moduleReaderFor (1 samples, 0.05%)</title><rect x="297.8" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="297.8" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.8" y="750.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="297.8" y="723.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="300.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (3 samples, 0.16%)</title><rect x="298.5" y="931.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="298.5" y="915.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="298.5" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.11%)</title><rect x="298.5" y="883.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (2 samples, 0.11%)</title><rect x="298.5" y="867.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (2 samples, 0.11%)</title><rect x="298.5" y="851.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (2 samples, 0.11%)</title><rect x="298.5" y="835.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (2 samples, 0.11%)</title><rect x="298.5" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (2 samples, 0.11%)</title><rect x="298.5" y="803.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (2 samples, 0.11%)</title><rect x="298.5" y="787.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="299.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.05%)</title><rect x="299.7" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="299.7" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.extract (1 samples, 0.05%)</title><rect x="299.7" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.05%)</title><rect x="299.7" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="302.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.05%)</title><rect x="299.7" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.visitFormalTypeParameter (1 samples, 0.05%)</title><rect x="299.7" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.collectTypeParameter (1 samples, 0.05%)</title><rect x="299.7" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="300.4" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="300.4" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="300.4" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="303.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="300.4" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="300.4" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="300.4" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.resolve (1 samples, 0.05%)</title><rect x="301.0" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForRawType.toGenericType (1 samples, 0.05%)</title><rect x="301.0" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (5 samples, 0.27%)</title><rect x="301.6" y="1043.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (5 samples, 0.27%)</title><rect x="301.6" y="1027.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (5 samples, 0.27%)</title><rect x="301.6" y="1011.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.27%)</title><rect x="301.6" y="995.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.27%)</title><rect x="301.6" y="979.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.27%)</title><rect x="301.6" y="963.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (5 samples, 0.27%)</title><rect x="301.6" y="947.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (5 samples, 0.27%)</title><rect x="301.6" y="931.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.6" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (5 samples, 0.27%)</title><rect x="301.6" y="915.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.6" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (2 samples, 0.11%)</title><rect x="301.6" y="899.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.6" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="301.6" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.6" y="894.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="301.6" y="867.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="304.6" y="878.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.05%)</title><rect x="302.3" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.3" y="894.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.05%)</title><rect x="302.3" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.3" y="878.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (1 samples, 0.05%)</title><rect x="302.3" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.3" y="862.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.&lt;init&gt; (1 samples, 0.05%)</title><rect x="302.3" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.3" y="846.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.05%)</title><rect x="302.3" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.3" y="830.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/Handler.openConnection (1 samples, 0.05%)</title><rect x="302.3" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.3" y="814.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/Handler.openConnection (1 samples, 0.05%)</title><rect x="302.3" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.3" y="798.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/Handler.createFileURLConnection (1 samples, 0.05%)</title><rect x="302.3" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.3" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (3 samples, 0.16%)</title><rect x="302.9" y="899.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.9" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (3 samples, 0.16%)</title><rect x="302.9" y="883.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.9" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.05%)</title><rect x="302.9" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.9" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="302.9" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.9" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="302.9" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.9" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="302.9" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.05%)</title><rect x="302.9" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.05%)</title><rect x="302.9" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.05%)</title><rect x="302.9" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.9" y="782.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.05%)</title><rect x="302.9" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.9" y="766.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.05%)</title><rect x="302.9" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.9" y="750.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.05%)</title><rect x="302.9" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.9" y="734.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.05%)</title><rect x="302.9" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.9" y="718.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.05%)</title><rect x="302.9" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.9" y="702.0"></text>
</g>
<g>
<title>java/util/zip/ZipCoder$UTF8.getBytes (1 samples, 0.05%)</title><rect x="302.9" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="305.9" y="686.0"></text>
</g>
<g>
<title>java/lang/System$2.getBytesUTF8NoRepl (1 samples, 0.05%)</title><rect x="302.9" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.getBytesUTF8NoRepl (1 samples, 0.05%)</title><rect x="302.9" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (2 samples, 0.11%)</title><rect x="303.6" y="867.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.11%)</title><rect x="303.6" y="851.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="303.6" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.6" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="303.6" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="303.6" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="303.6" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="303.6" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="303.6" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="303.6" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="303.6" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.05%)</title><rect x="303.6" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.05%)</title><rect x="303.6" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="306.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="304.2" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="304.2" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="304.2" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="304.2" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="304.2" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="304.2" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.05%)</title><rect x="304.2" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.05%)</title><rect x="304.2" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.05%)</title><rect x="304.2" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.05%)</title><rect x="304.2" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (1 samples, 0.05%)</title><rect x="304.2" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="304.2" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="304.2" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="304.2" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.2" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (40 samples, 2.16%)</title><rect x="304.8" y="1107.0" width="25.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.8" y="1118.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (40 samples, 2.16%)</title><rect x="304.8" y="1091.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.8" y="1102.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (40 samples, 2.16%)</title><rect x="304.8" y="1075.0" width="25.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.8" y="1086.0">d..</text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (31 samples, 1.68%)</title><rect x="304.8" y="1059.0" width="19.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (26 samples, 1.41%)</title><rect x="305.5" y="1043.0" width="16.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (26 samples, 1.41%)</title><rect x="305.5" y="1027.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (26 samples, 1.41%)</title><rect x="305.5" y="1011.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="308.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (26 samples, 1.41%)</title><rect x="305.5" y="995.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (26 samples, 1.41%)</title><rect x="305.5" y="979.0" width="16.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.5" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (11 samples, 0.59%)</title><rect x="306.1" y="963.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (11 samples, 0.59%)</title><rect x="306.1" y="947.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (11 samples, 0.59%)</title><rect x="306.1" y="931.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (11 samples, 0.59%)</title><rect x="306.1" y="915.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (11 samples, 0.59%)</title><rect x="306.1" y="899.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.named (1 samples, 0.05%)</title><rect x="306.1" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (5 samples, 0.27%)</title><rect x="306.8" y="883.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.8" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="306.8" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="306.8" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.get (1 samples, 0.05%)</title><rect x="306.8" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal.toGenericType (1 samples, 0.05%)</title><rect x="306.8" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (3 samples, 0.16%)</title><rect x="307.4" y="867.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (2 samples, 0.11%)</title><rect x="308.0" y="851.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.0" y="862.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="308.0" y="835.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="311.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.size (1 samples, 0.05%)</title><rect x="309.3" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (2 samples, 0.11%)</title><rect x="309.9" y="883.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="309.9" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="312.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="309.9" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.9" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="309.9" y="835.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="312.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.size (1 samples, 0.05%)</title><rect x="310.6" y="867.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (3 samples, 0.16%)</title><rect x="311.2" y="883.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (3 samples, 0.16%)</title><rect x="311.2" y="867.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.&lt;init&gt; (3 samples, 0.16%)</title><rect x="311.2" y="851.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (4 samples, 0.22%)</title><rect x="313.1" y="963.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (4 samples, 0.22%)</title><rect x="313.1" y="947.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (4 samples, 0.22%)</title><rect x="313.1" y="931.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (4 samples, 0.22%)</title><rect x="313.1" y="915.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="313.1" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.1" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="313.1" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.1" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="313.1" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.1" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="313.1" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.1" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="313.1" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.1" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.05%)</title><rect x="313.1" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.1" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.05%)</title><rect x="313.1" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.1" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.05%)</title><rect x="313.1" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.1" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.applyRead (1 samples, 0.05%)</title><rect x="313.1" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.1" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.moveToBack (1 samples, 0.05%)</title><rect x="313.1" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.1" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.unlink (1 samples, 0.05%)</title><rect x="313.1" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="316.1" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.16%)</title><rect x="313.8" y="899.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (2 samples, 0.11%)</title><rect x="313.8" y="883.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.8" y="894.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (2 samples, 0.11%)</title><rect x="313.8" y="867.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.8" y="878.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (2 samples, 0.11%)</title><rect x="313.8" y="851.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.8" y="862.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (2 samples, 0.11%)</title><rect x="313.8" y="835.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.8" y="846.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (2 samples, 0.11%)</title><rect x="313.8" y="819.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.8" y="830.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (2 samples, 0.11%)</title><rect x="313.8" y="803.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="315.1" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="315.1" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="315.1" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="315.1" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType$Latent.&lt;init&gt; (1 samples, 0.05%)</title><rect x="315.7" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="315.7" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (8 samples, 0.43%)</title><rect x="316.3" y="963.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (8 samples, 0.43%)</title><rect x="316.3" y="947.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (8 samples, 0.43%)</title><rect x="316.3" y="931.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (8 samples, 0.43%)</title><rect x="316.3" y="915.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (8 samples, 0.43%)</title><rect x="316.3" y="899.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (8 samples, 0.43%)</title><rect x="316.3" y="883.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (8 samples, 0.43%)</title><rect x="316.3" y="867.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (3 samples, 0.16%)</title><rect x="316.3" y="851.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.3" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="316.3" y="835.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="319.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.11%)</title><rect x="317.0" y="835.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.11%)</title><rect x="317.0" y="819.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$CacheProvider$Simple.find (1 samples, 0.05%)</title><rect x="317.0" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="317.0" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="317.0" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="317.6" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="317.6" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.6" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="317.6" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="317.6" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="317.6" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.6" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="317.6" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="320.6" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="317.6" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.size (1 samples, 0.05%)</title><rect x="317.6" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (1 samples, 0.05%)</title><rect x="318.2" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="318.9" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.05%)</title><rect x="318.9" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="319.5" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="319.5" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="319.5" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.5" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="319.5" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="319.5" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="319.5" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="319.5" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.11%)</title><rect x="320.2" y="851.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (2 samples, 0.11%)</title><rect x="320.2" y="835.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (2 samples, 0.11%)</title><rect x="320.2" y="819.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (2 samples, 0.11%)</title><rect x="320.2" y="803.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="320.2" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$AbstractBase.wrap (1 samples, 0.05%)</title><rect x="320.2" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$AbstractBase.wrap (1 samples, 0.05%)</title><rect x="320.2" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getTypeVariables (1 samples, 0.05%)</title><rect x="320.8" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForType$Tokenized.resolveTypeVariables (1 samples, 0.05%)</title><rect x="320.8" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TypeVariableList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="320.8" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (1 samples, 0.05%)</title><rect x="321.4" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (1 samples, 0.05%)</title><rect x="321.4" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="321.4" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="321.4" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="321.4" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="321.4" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="321.4" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="321.4" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="321.4" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="321.4" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.4" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="321.4" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.05%)</title><rect x="321.4" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.4" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="321.4" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.4" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="321.4" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.4" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="321.4" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.05%)</title><rect x="321.4" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (1 samples, 0.05%)</title><rect x="321.4" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (4 samples, 0.22%)</title><rect x="322.1" y="1043.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (4 samples, 0.22%)</title><rect x="322.1" y="1027.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (4 samples, 0.22%)</title><rect x="322.1" y="1011.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 0.22%)</title><rect x="322.1" y="995.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.22%)</title><rect x="322.1" y="979.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.22%)</title><rect x="322.1" y="963.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (3 samples, 0.16%)</title><rect x="322.1" y="947.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (3 samples, 0.16%)</title><rect x="322.1" y="931.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (3 samples, 0.16%)</title><rect x="322.1" y="915.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.1" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="322.1" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.1" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="322.1" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.1" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.05%)</title><rect x="322.1" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.1" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="322.1" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.1" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="322.1" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.1" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="322.1" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.11%)</title><rect x="322.7" y="899.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.7" y="910.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.11%)</title><rect x="322.7" y="883.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.7" y="894.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.11%)</title><rect x="322.7" y="867.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.7" y="878.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.11%)</title><rect x="322.7" y="851.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.7" y="862.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.11%)</title><rect x="322.7" y="835.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.7" y="846.0"></text>
</g>
<g>
<title>inflate (2 samples, 0.11%)</title><rect x="322.7" y="819.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="325.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="324.0" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="327.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="324.0" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="324.0" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="324.0" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="324.0" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="324.0" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (9 samples, 0.49%)</title><rect x="324.6" y="1059.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (9 samples, 0.49%)</title><rect x="324.6" y="1043.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (9 samples, 0.49%)</title><rect x="324.6" y="1027.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (9 samples, 0.49%)</title><rect x="324.6" y="1011.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (9 samples, 0.49%)</title><rect x="324.6" y="995.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (9 samples, 0.49%)</title><rect x="324.6" y="979.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (7 samples, 0.38%)</title><rect x="324.6" y="963.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.6" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (7 samples, 0.38%)</title><rect x="324.6" y="947.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (7 samples, 0.38%)</title><rect x="324.6" y="931.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.6" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (3 samples, 0.16%)</title><rect x="325.3" y="915.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.3" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="325.3" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="325.3" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="325.3" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.3" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="325.3" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="325.3" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="325.3" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.next (1 samples, 0.05%)</title><rect x="325.3" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.3" y="814.0"></text>
</g>
<g>
<title>java/net/URL.openStream (2 samples, 0.11%)</title><rect x="325.9" y="899.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.9" y="910.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.05%)</title><rect x="325.9" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="894.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (1 samples, 0.05%)</title><rect x="325.9" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.9" y="878.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.&lt;init&gt; (1 samples, 0.05%)</title><rect x="325.9" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.9" y="862.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.&lt;init&gt; (1 samples, 0.05%)</title><rect x="325.9" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.9" y="846.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.parseSpecs (1 samples, 0.05%)</title><rect x="325.9" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.9" y="830.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="325.9" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.9" y="814.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="325.9" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.9" y="798.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="325.9" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.9" y="782.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/Handler.parseURL (1 samples, 0.05%)</title><rect x="325.9" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.9" y="766.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbbaa000)@0x00007f81fc8bf400 (1 samples, 0.05%)</title><rect x="325.9" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.9" y="750.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.05%)</title><rect x="326.5" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.5" y="894.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.05%)</title><rect x="326.5" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.5" y="878.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.05%)</title><rect x="326.5" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.5" y="862.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.ensureOpen (1 samples, 0.05%)</title><rect x="326.5" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.5" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (2 samples, 0.11%)</title><rect x="327.2" y="915.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.2" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="327.2" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="327.2" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="327.2" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="327.2" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.2" y="862.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.05%)</title><rect x="327.8" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.8" y="910.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.05%)</title><rect x="327.8" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.8" y="894.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.05%)</title><rect x="327.8" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.8" y="878.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.05%)</title><rect x="327.8" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.8" y="862.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="327.8" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.8" y="846.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="327.8" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.8" y="830.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="327.8" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.8" y="814.0"></text>
</g>
<g>
<title>java/net/URL.toLowerCase (1 samples, 0.05%)</title><rect x="327.8" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="327.8" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="327.8" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="328.5" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.5" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="328.5" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.5" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="328.5" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="331.5" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="328.5" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.5" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="328.5" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.5" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="328.5" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.11%)</title><rect x="329.1" y="963.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="329.1" y="947.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="329.1" y="931.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.05%)</title><rect x="329.1" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="329.7" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.05%)</title><rect x="329.7" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.05%)</title><rect x="329.7" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.16%)</title><rect x="330.4" y="1107.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.16%)</title><rect x="330.4" y="1091.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.16%)</title><rect x="330.4" y="1075.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.05%)</title><rect x="330.4" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.4" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.afterNodeInsertion (1 samples, 0.05%)</title><rect x="331.0" y="1059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.0" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.05%)</title><rect x="331.0" y="1043.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.0" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.05%)</title><rect x="331.6" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.6" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (1 samples, 0.05%)</title><rect x="331.6" y="1043.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.6" y="1054.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="331.6" y="1027.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="334.6" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (2 samples, 0.11%)</title><rect x="332.3" y="1123.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.3" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (1 samples, 0.05%)</title><rect x="332.3" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (1 samples, 0.05%)</title><rect x="332.9" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getSuperClass (1 samples, 0.05%)</title><rect x="332.9" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.9" y="1102.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.22%)</title><rect x="333.6" y="1123.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="336.6" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="336.1" y="1123.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.1" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.asGenericType (1 samples, 0.05%)</title><rect x="336.7" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asGenericType (1 samples, 0.05%)</title><rect x="337.4" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.4" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="338.0" y="1123.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.0" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (27 samples, 1.46%)</title><rect x="338.7" y="1155.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (27 samples, 1.46%)</title><rect x="338.7" y="1139.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (27 samples, 1.46%)</title><rect x="338.7" y="1123.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (27 samples, 1.46%)</title><rect x="338.7" y="1107.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.7" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (26 samples, 1.41%)</title><rect x="339.3" y="1091.0" width="16.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="342.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (26 samples, 1.41%)</title><rect x="339.3" y="1075.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.3" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (8 samples, 0.43%)</title><rect x="339.3" y="1059.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.3" y="1070.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (8 samples, 0.43%)</title><rect x="339.3" y="1043.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.3" y="1054.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (8 samples, 0.43%)</title><rect x="339.3" y="1027.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.3" y="1038.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putIfAbsent (3 samples, 0.16%)</title><rect x="339.3" y="1011.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.3" y="1022.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putVal (3 samples, 0.16%)</title><rect x="339.3" y="995.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.3" y="1006.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8$Node.&lt;init&gt; (1 samples, 0.05%)</title><rect x="339.3" y="979.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.3" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.addCount (1 samples, 0.05%)</title><rect x="339.9" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.9" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.casTabAt (1 samples, 0.05%)</title><rect x="340.6" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.6" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (3 samples, 0.16%)</title><rect x="341.2" y="1011.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.2" y="1022.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (2 samples, 0.11%)</title><rect x="341.2" y="995.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.2" y="1006.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (2 samples, 0.11%)</title><rect x="341.2" y="979.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.2" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (2 samples, 0.11%)</title><rect x="341.2" y="963.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.2" y="974.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (1 samples, 0.05%)</title><rect x="341.2" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.2" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.add (1 samples, 0.05%)</title><rect x="341.2" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.2" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.offerLast (1 samples, 0.05%)</title><rect x="341.2" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.2" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.linkLast (1 samples, 0.05%)</title><rect x="341.2" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.2" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.setPrevious (1 samples, 0.05%)</title><rect x="341.2" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.2" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.setPrevious (1 samples, 0.05%)</title><rect x="341.2" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.2" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.getNext (1 samples, 0.05%)</title><rect x="341.2" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.05%)</title><rect x="341.9" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.casItem (1 samples, 0.05%)</title><rect x="341.9" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.05%)</title><rect x="342.5" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.05%)</title><rect x="342.5" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="342.5" y="963.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="342.5" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.5" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.checkNotNull (1 samples, 0.05%)</title><rect x="343.1" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.1" y="1022.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.notifyListener (1 samples, 0.05%)</title><rect x="343.8" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (18 samples, 0.97%)</title><rect x="344.4" y="1059.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (18 samples, 0.97%)</title><rect x="344.4" y="1043.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="344.4" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Resolution$Explicit.isResolved (1 samples, 0.05%)</title><rect x="344.4" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (17 samples, 0.92%)</title><rect x="345.0" y="1027.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.0" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="345.0" y="1011.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="348.0" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="345.0" y="995.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="348.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="345.0" y="979.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="348.0" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="345.0" y="963.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="348.0" y="974.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="345.0" y="947.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="348.0" y="958.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="345.0" y="931.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="348.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (12 samples, 0.65%)</title><rect x="345.7" y="1011.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (12 samples, 0.65%)</title><rect x="345.7" y="995.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="345.7" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readClass (2 samples, 0.11%)</title><rect x="346.3" y="979.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readStringish (2 samples, 0.11%)</title><rect x="346.3" y="963.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.05%)</title><rect x="346.3" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="346.3" y="931.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="349.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="346.3" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="346.3" y="899.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="346.3" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="349.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="346.3" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="347.0" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.05%)</title><rect x="347.6" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.05%)</title><rect x="347.6" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="347.6" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="347.6" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (8 samples, 0.43%)</title><rect x="348.2" y="979.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (2 samples, 0.11%)</title><rect x="348.2" y="963.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (2 samples, 0.11%)</title><rect x="348.2" y="947.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (2 samples, 0.11%)</title><rect x="348.2" y="931.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (6 samples, 0.32%)</title><rect x="349.5" y="963.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (3 samples, 0.16%)</title><rect x="350.2" y="947.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="353.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (2 samples, 0.11%)</title><rect x="350.8" y="931.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (2 samples, 0.11%)</title><rect x="350.8" y="915.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (2 samples, 0.11%)</title><rect x="350.8" y="899.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="350.8" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="350.8" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="350.8" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="350.8" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="350.8" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.visitFormalTypeParameter (1 samples, 0.05%)</title><rect x="351.4" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.collectTypeParameter (1 samples, 0.05%)</title><rect x="351.4" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="354.4" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="351.4" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="351.4" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ParameterBag.resolve (2 samples, 0.11%)</title><rect x="352.1" y="947.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.1" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="352.7" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.7" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="352.7" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="353.3" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.3" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="353.3" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (3 samples, 0.16%)</title><rect x="354.0" y="1011.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (3 samples, 0.16%)</title><rect x="354.0" y="995.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.05%)</title><rect x="354.0" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.05%)</title><rect x="354.6" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.extract (1 samples, 0.05%)</title><rect x="355.3" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="358.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.05%)</title><rect x="355.3" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.05%)</title><rect x="355.3" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="358.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="355.3" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="355.3" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="355.3" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.11%)</title><rect x="355.9" y="1171.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.9" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.11%)</title><rect x="355.9" y="1155.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="358.9" y="1166.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="355.9" y="1139.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="358.9" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (18 samples, 0.97%)</title><rect x="357.2" y="1219.0" width="11.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (16 samples, 0.87%)</title><rect x="357.2" y="1203.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.2" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (13 samples, 0.70%)</title><rect x="359.1" y="1187.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.1" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$SkipClassLoaderMatcher.matches (4 samples, 0.22%)</title><rect x="359.1" y="1171.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.1" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$SkipClassLoaderMatcher.matches (4 samples, 0.22%)</title><rect x="359.1" y="1155.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.1" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (2 samples, 0.11%)</title><rect x="359.1" y="1139.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.1" y="1150.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (2 samples, 0.11%)</title><rect x="359.1" y="1123.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.1" y="1134.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (2 samples, 0.11%)</title><rect x="359.1" y="1107.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.1" y="1118.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (2 samples, 0.11%)</title><rect x="359.1" y="1091.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.1" y="1102.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (2 samples, 0.11%)</title><rect x="359.1" y="1075.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.1" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (2 samples, 0.11%)</title><rect x="359.1" y="1059.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.1" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (2 samples, 0.11%)</title><rect x="359.1" y="1043.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.1" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (2 samples, 0.11%)</title><rect x="359.1" y="1027.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.1" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.&lt;init&gt; (1 samples, 0.05%)</title><rect x="359.1" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.offer (1 samples, 0.05%)</title><rect x="359.7" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="359.7" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="359.7" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="359.7" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="359.7" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="359.7" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.7" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$SkipClassLoaderMatcher.canSkipClassLoaderByName (2 samples, 0.11%)</title><rect x="360.4" y="1139.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.05%)</title><rect x="361.0" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.0" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (8 samples, 0.43%)</title><rect x="361.6" y="1171.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.6" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (8 samples, 0.43%)</title><rect x="361.6" y="1155.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.6" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/AdditionalLibraryIgnoresMatcher.matches (2 samples, 0.11%)</title><rect x="362.3" y="1139.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.3" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/AdditionalLibraryIgnoresMatcher.matches (1 samples, 0.05%)</title><rect x="362.9" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="365.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.05%)</title><rect x="363.6" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.11%)</title><rect x="364.2" y="1139.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.11%)</title><rect x="364.2" y="1123.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="364.2" y="1107.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.2" y="1118.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.matches (1 samples, 0.05%)</title><rect x="364.8" y="1107.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.8" y="1118.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.matches (1 samples, 0.05%)</title><rect x="365.5" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.5" y="1150.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.match (1 samples, 0.05%)</title><rect x="365.5" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.5" y="1134.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Begin.match (1 samples, 0.05%)</title><rect x="365.5" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.5" y="1118.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Slice.match (1 samples, 0.05%)</title><rect x="365.5" y="1091.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.5" y="1102.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.05%)</title><rect x="366.1" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.1" y="1150.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (1 samples, 0.05%)</title><rect x="366.1" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/Math.max (1 samples, 0.05%)</title><rect x="366.1" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.1" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.05%)</title><rect x="366.7" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="366.7" y="1155.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="366.7" y="1139.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (2 samples, 0.11%)</title><rect x="367.4" y="1203.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (13 samples, 0.70%)</title><rect x="368.7" y="1219.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.7" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (13 samples, 0.70%)</title><rect x="368.7" y="1203.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.7" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (13 samples, 0.70%)</title><rect x="368.7" y="1187.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.7" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (13 samples, 0.70%)</title><rect x="368.7" y="1171.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (5 samples, 0.27%)</title><rect x="368.7" y="1155.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (5 samples, 0.27%)</title><rect x="368.7" y="1139.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="368.7" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="368.7" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.7" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.05%)</title><rect x="368.7" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.7" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="368.7" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.7" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved$Factory.make (1 samples, 0.05%)</title><rect x="368.7" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.05%)</title><rect x="368.7" y="1043.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.05%)</title><rect x="368.7" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="368.7" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="368.7" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.05%)</title><rect x="368.7" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="368.7" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor1.newInstance (1 samples, 0.05%)</title><rect x="368.7" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (4 samples, 0.22%)</title><rect x="369.3" y="1123.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.3" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (4 samples, 0.22%)</title><rect x="369.3" y="1107.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.05%)</title><rect x="369.9" y="1091.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="369.9" y="1075.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$RelocationHandler$ForType.of (1 samples, 0.05%)</title><rect x="369.9" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="369.9" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.9" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="369.9" y="1027.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.9" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="369.9" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.9" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="369.9" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.9" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="369.9" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.9" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="369.9" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.9" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="369.9" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.9" y="958.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="369.9" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.9" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="369.9" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="372.9" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="369.9" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.9" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="369.9" y="883.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="372.9" y="894.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="369.9" y="867.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="372.9" y="878.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="851.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="372.9" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="372.9" y="846.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="819.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="372.9" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="803.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="372.9" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="369.9" y="787.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="372.9" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="372.9" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="755.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="372.9" y="766.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="739.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="372.9" y="750.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="723.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="372.9" y="734.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.05%)</title><rect x="369.9" y="707.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="372.9" y="718.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.05%)</title><rect x="369.9" y="691.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="372.9" y="702.0"></text>
</g>
<g>
<title>metaspace::BlockFreelist::get_block(unsigned long) (1 samples, 0.05%)</title><rect x="369.9" y="675.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="372.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (2 samples, 0.11%)</title><rect x="370.6" y="1091.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (2 samples, 0.11%)</title><rect x="370.6" y="1075.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (2 samples, 0.11%)</title><rect x="370.6" y="1059.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (2 samples, 0.11%)</title><rect x="370.6" y="1043.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.11%)</title><rect x="370.6" y="1027.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.11%)</title><rect x="370.6" y="1011.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.11%)</title><rect x="370.6" y="995.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.11%)</title><rect x="370.6" y="979.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="370.6" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="370.6" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="370.6" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.6" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="370.6" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.6" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="370.6" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="370.6" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="370.6" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.05%)</title><rect x="370.6" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.05%)</title><rect x="370.6" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="370.6" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.6" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="370.6" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.6" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="370.6" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="371.2" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="371.2" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="371.2" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="371.2" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.05%)</title><rect x="371.2" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="371.2" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="371.2" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (5 samples, 0.27%)</title><rect x="371.8" y="1155.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.8" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (1 samples, 0.05%)</title><rect x="371.8" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.8" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="371.8" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.8" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="371.8" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.8" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="371.8" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="371.8" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (1 samples, 0.05%)</title><rect x="371.8" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.05%)</title><rect x="371.8" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.05%)</title><rect x="371.8" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.05%)</title><rect x="371.8" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="371.8" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="371.8" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="371.8" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="371.8" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="371.8" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="371.8" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="371.8" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.8" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="371.8" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.8" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="371.8" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.8" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.05%)</title><rect x="371.8" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.8" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="371.8" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.8" y="846.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.05%)</title><rect x="371.8" y="819.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="374.8" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.05%)</title><rect x="371.8" y="803.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="374.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.05%)</title><rect x="372.5" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.5" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="372.5" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.5" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.05%)</title><rect x="372.5" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.5" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.05%)</title><rect x="372.5" y="1091.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="375.5" y="1102.0"></text>
</g>
<g>
<title>JvmtiDynamicCodeEventCollector::JvmtiDynamicCodeEventCollector() (1 samples, 0.05%)</title><rect x="372.5" y="1075.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="375.5" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (3 samples, 0.16%)</title><rect x="373.1" y="1139.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.1" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (3 samples, 0.16%)</title><rect x="373.1" y="1123.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.1" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (3 samples, 0.16%)</title><rect x="373.1" y="1107.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.1" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (3 samples, 0.16%)</title><rect x="373.1" y="1091.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (3 samples, 0.16%)</title><rect x="373.1" y="1075.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.16%)</title><rect x="373.1" y="1059.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.16%)</title><rect x="373.1" y="1043.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.16%)</title><rect x="373.1" y="1027.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.11%)</title><rect x="373.1" y="1011.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (2 samples, 0.11%)</title><rect x="373.1" y="995.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (2 samples, 0.11%)</title><rect x="373.1" y="979.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.11%)</title><rect x="373.1" y="963.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.1" y="974.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.11%)</title><rect x="373.1" y="947.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.1" y="958.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.11%)</title><rect x="373.1" y="931.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.1" y="942.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.11%)</title><rect x="373.1" y="915.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.1" y="926.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="373.1" y="899.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="376.1" y="910.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.05%)</title><rect x="373.8" y="899.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="376.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="374.4" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="374.4" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="374.4" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.05%)</title><rect x="374.4" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.05%)</title><rect x="374.4" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.05%)</title><rect x="374.4" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="374.4" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="374.4" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (3 samples, 0.16%)</title><rect x="375.0" y="1155.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.0" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (3 samples, 0.16%)</title><rect x="375.0" y="1139.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.0" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.16%)</title><rect x="375.0" y="1123.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.0" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.16%)</title><rect x="375.0" y="1107.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.0" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.16%)</title><rect x="375.0" y="1091.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.11%)</title><rect x="375.0" y="1075.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.0" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (2 samples, 0.11%)</title><rect x="375.0" y="1059.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (2 samples, 0.11%)</title><rect x="375.0" y="1043.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="378.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.11%)</title><rect x="375.0" y="1027.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.0" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.11%)</title><rect x="375.0" y="1011.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.0" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.11%)</title><rect x="375.0" y="995.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.0" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.11%)</title><rect x="375.0" y="979.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.0" y="990.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (2 samples, 0.11%)</title><rect x="375.0" y="963.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="378.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="376.3" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="376.3" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="379.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="376.3" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readClass (1 samples, 0.05%)</title><rect x="376.3" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readStringish (1 samples, 0.05%)</title><rect x="376.3" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.05%)</title><rect x="376.3" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="376.3" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="376.3" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (48 samples, 2.60%)</title><rect x="377.0" y="1219.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.0" y="1230.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (31 samples, 1.68%)</title><rect x="377.0" y="1203.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.0" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (17 samples, 0.92%)</title><rect x="377.0" y="1187.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.0" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (17 samples, 0.92%)</title><rect x="377.0" y="1171.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.0" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (7 samples, 0.38%)</title><rect x="377.6" y="1155.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.6" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (3 samples, 0.16%)</title><rect x="378.2" y="1139.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.2" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getReturnType (2 samples, 0.11%)</title><rect x="378.2" y="1123.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.2" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="378.2" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.2" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$ForLoadedReturnType.resolve (1 samples, 0.05%)</title><rect x="378.2" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.2" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDefinition$Sort.describe (1 samples, 0.05%)</title><rect x="378.2" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.2" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getReturnType (1 samples, 0.05%)</title><rect x="378.9" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveReturnType (1 samples, 0.05%)</title><rect x="378.9" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.05%)</title><rect x="378.9" y="1075.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="378.9" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Resolution$Simple.resolve (1 samples, 0.05%)</title><rect x="378.9" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.05%)</title><rect x="379.5" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.5" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="379.5" y="1107.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.5" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.05%)</title><rect x="380.1" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.1" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.05%)</title><rect x="380.1" y="1123.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.1" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="380.1" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="380.1" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="380.1" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="380.1" y="1059.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (2 samples, 0.11%)</title><rect x="380.8" y="1139.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.8" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.05%)</title><rect x="380.8" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.8" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.05%)</title><rect x="380.8" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.8" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getType (1 samples, 0.05%)</title><rect x="380.8" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="380.8" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="380.8" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="380.8" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="380.8" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="380.8" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="380.8" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="380.8" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="380.8" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.equals (1 samples, 0.05%)</title><rect x="380.8" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.8" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="380.8" y="931.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="383.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.05%)</title><rect x="381.4" y="1123.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.4" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.values (1 samples, 0.05%)</title><rect x="381.4" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.4" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (9 samples, 0.49%)</title><rect x="382.1" y="1155.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.1" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.05%)</title><rect x="382.1" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.1" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.extendBy (1 samples, 0.05%)</title><rect x="382.1" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.1" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.05%)</title><rect x="382.1" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="382.1" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="382.1" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="382.1" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeToken.equals (1 samples, 0.05%)</title><rect x="382.1" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.1" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.05%)</title><rect x="382.1" y="1027.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.05%)</title><rect x="382.1" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.1" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="382.1" y="995.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="385.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (7 samples, 0.38%)</title><rect x="382.7" y="1139.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.05%)</title><rect x="382.7" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying$1.onNonGenericType (1 samples, 0.05%)</title><rect x="382.7" y="1107.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.7" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying.onNonGenericType (1 samples, 0.05%)</title><rect x="382.7" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="385.7" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.05%)</title><rect x="382.7" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.7" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.05%)</title><rect x="382.7" y="1059.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.05%)</title><rect x="382.7" y="1043.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="382.7" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="382.7" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="382.7" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="382.7" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="382.7" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.7" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="382.7" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.7" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="382.7" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="382.7" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.7" y="926.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.05%)</title><rect x="382.7" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.7" y="910.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="382.7" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.7" y="894.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="382.7" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.7" y="878.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="382.7" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="385.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="382.7" y="835.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="385.7" y="846.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="382.7" y="819.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="385.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (6 samples, 0.32%)</title><rect x="383.3" y="1123.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="383.3" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="383.3" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.hashCode (1 samples, 0.05%)</title><rect x="383.3" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.hashCode (1 samples, 0.05%)</title><rect x="383.3" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.hashCode (1 samples, 0.05%)</title><rect x="383.3" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.3" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="383.3" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="383.3" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="383.3" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForUpperBoundWildcard.toGenericType (1 samples, 0.05%)</title><rect x="383.3" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.3" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="383.3" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.3" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="383.3" y="947.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.3" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="383.3" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.3" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="383.3" y="915.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.3" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="383.3" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.3" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="383.3" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.3" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="383.3" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.3" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="383.3" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.3" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="383.3" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.3" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="383.3" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.3" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="383.3" y="803.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="386.3" y="814.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="383.3" y="787.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="386.3" y="798.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="383.3" y="771.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="386.3" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="383.3" y="755.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="386.3" y="766.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="383.3" y="739.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="386.3" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="383.3" y="723.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="386.3" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="383.3" y="707.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="386.3" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.05%)</title><rect x="383.3" y="691.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="386.3" y="702.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="383.3" y="675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="386.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (5 samples, 0.27%)</title><rect x="384.0" y="1107.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.0" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.05%)</title><rect x="384.0" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.05%)</title><rect x="384.0" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.0" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.05%)</title><rect x="384.0" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.05%)</title><rect x="384.0" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.05%)</title><rect x="384.0" y="1027.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.05%)</title><rect x="384.0" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="384.0" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="384.0" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodSortMatcher.matches (1 samples, 0.05%)</title><rect x="384.0" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodSortMatcher.matches (1 samples, 0.05%)</title><rect x="384.0" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodSortMatcher$Sort$4.isSort (1 samples, 0.05%)</title><rect x="384.0" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isVirtual (1 samples, 0.05%)</title><rect x="384.0" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPrivate (1 samples, 0.05%)</title><rect x="384.0" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="384.0" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getModifiers (1 samples, 0.05%)</title><rect x="384.0" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (3 samples, 0.16%)</title><rect x="384.6" y="1091.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (3 samples, 0.16%)</title><rect x="384.6" y="1075.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="384.6" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.6" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="384.6" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.hashCode (1 samples, 0.05%)</title><rect x="384.6" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.hashCode (1 samples, 0.05%)</title><rect x="384.6" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.hashCode (1 samples, 0.05%)</title><rect x="384.6" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.11%)</title><rect x="385.3" y="1059.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.05%)</title><rect x="385.3" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.05%)</title><rect x="385.3" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.05%)</title><rect x="385.3" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.05%)</title><rect x="385.3" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="385.3" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="385.3" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="388.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="385.3" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="385.3" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="385.3" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="385.3" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asRawType (1 samples, 0.05%)</title><rect x="385.3" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="385.3" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="385.3" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="385.3" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.3" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="385.3" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="385.3" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.3" y="814.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="385.3" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="388.3" y="798.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="385.3" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.3" y="782.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="385.3" y="755.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.3" y="766.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="385.3" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.3" y="750.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.05%)</title><rect x="385.3" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="385.9" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.9" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="385.9" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$TypeSubstituting.get (1 samples, 0.05%)</title><rect x="385.9" y="1011.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="386.5" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.5" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="386.5" y="1075.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.5" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="386.5" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.5" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="386.5" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isVisibleTo (1 samples, 0.05%)</title><rect x="386.5" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.05%)</title><rect x="386.5" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.05%)</title><rect x="386.5" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.5" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.05%)</title><rect x="386.5" y="979.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="389.5" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.05%)</title><rect x="386.5" y="963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="389.5" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="386.5" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="389.5" y="958.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.05%)</title><rect x="386.5" y="931.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="389.5" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.05%)</title><rect x="386.5" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="389.5" y="926.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="386.5" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="389.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="387.2" y="1139.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.2" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="387.2" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.2" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="387.2" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.2" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.05%)</title><rect x="387.2" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.2" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (7 samples, 0.38%)</title><rect x="387.8" y="1187.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.8" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (7 samples, 0.38%)</title><rect x="387.8" y="1171.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.8" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 0.27%)</title><rect x="387.8" y="1155.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.8" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (5 samples, 0.27%)</title><rect x="387.8" y="1139.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.8" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (5 samples, 0.27%)</title><rect x="387.8" y="1123.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.8" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (5 samples, 0.27%)</title><rect x="387.8" y="1107.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.8" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (5 samples, 0.27%)</title><rect x="387.8" y="1091.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (5 samples, 0.27%)</title><rect x="387.8" y="1075.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (5 samples, 0.27%)</title><rect x="387.8" y="1059.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (5 samples, 0.27%)</title><rect x="387.8" y="1043.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (5 samples, 0.27%)</title><rect x="387.8" y="1027.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (5 samples, 0.27%)</title><rect x="387.8" y="1011.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (5 samples, 0.27%)</title><rect x="387.8" y="995.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (5 samples, 0.27%)</title><rect x="387.8" y="979.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.27%)</title><rect x="387.8" y="963.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.27%)</title><rect x="387.8" y="947.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.27%)</title><rect x="387.8" y="931.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.11%)</title><rect x="388.4" y="915.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.11%)</title><rect x="388.4" y="899.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.4" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.11%)</title><rect x="388.4" y="883.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.11%)</title><rect x="388.4" y="867.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.4" y="878.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.11%)</title><rect x="388.4" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.4" y="862.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.11%)</title><rect x="388.4" y="835.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.4" y="846.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.11%)</title><rect x="388.4" y="819.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.4" y="830.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.11%)</title><rect x="388.4" y="803.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="388.4" y="787.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="391.4" y="798.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="388.4" y="771.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="391.4" y="782.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.05%)</title><rect x="389.1" y="787.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="392.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.11%)</title><rect x="389.7" y="915.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="389.7" y="899.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.11%)</title><rect x="389.7" y="883.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.05%)</title><rect x="389.7" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (1 samples, 0.05%)</title><rect x="389.7" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.&lt;init&gt; (1 samples, 0.05%)</title><rect x="389.7" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfField.extract (1 samples, 0.05%)</title><rect x="389.7" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="392.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.acceptType (1 samples, 0.05%)</title><rect x="389.7" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="389.7" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor.visitClassType (1 samples, 0.05%)</title><rect x="389.7" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="392.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$ForTopLevelType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="389.7" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$IncompleteToken$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="389.7" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="389.7" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="390.4" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.05%)</title><rect x="390.4" y="851.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1155.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.0" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1139.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.0" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1123.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.0" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1107.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.0" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1091.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1075.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.0" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1059.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1043.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1027.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="1011.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="995.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.11%)</title><rect x="391.0" y="979.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (2 samples, 0.11%)</title><rect x="391.0" y="963.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (2 samples, 0.11%)</title><rect x="391.0" y="947.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (2 samples, 0.11%)</title><rect x="391.0" y="931.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.11%)</title><rect x="391.0" y="915.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.11%)</title><rect x="391.0" y="899.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.11%)</title><rect x="391.0" y="883.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.11%)</title><rect x="391.0" y="867.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.11%)</title><rect x="391.0" y="851.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="391.0" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.0" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="391.0" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.0" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="391.0" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.0" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="391.0" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.0" y="798.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.05%)</title><rect x="391.0" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.0" y="782.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.05%)</title><rect x="391.0" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.0" y="766.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.05%)</title><rect x="391.0" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.0" y="750.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.05%)</title><rect x="391.0" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.0" y="734.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="391.0" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.0" y="718.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="391.0" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.0" y="702.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="391.0" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.0" y="686.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.05%)</title><rect x="391.0" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="391.6" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="391.6" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="391.6" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="391.6" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readParameterAnnotations (1 samples, 0.05%)</title><rect x="391.6" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitParameterAnnotation (1 samples, 0.05%)</title><rect x="391.6" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (7 samples, 0.38%)</title><rect x="392.3" y="1187.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.3" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (7 samples, 0.38%)</title><rect x="392.3" y="1171.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.3" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (7 samples, 0.38%)</title><rect x="392.3" y="1155.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (7 samples, 0.38%)</title><rect x="392.3" y="1139.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.3" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (7 samples, 0.38%)</title><rect x="392.3" y="1123.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.3" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (7 samples, 0.38%)</title><rect x="392.3" y="1107.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (7 samples, 0.38%)</title><rect x="392.3" y="1091.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (7 samples, 0.38%)</title><rect x="392.3" y="1075.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (7 samples, 0.38%)</title><rect x="392.3" y="1059.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (7 samples, 0.38%)</title><rect x="392.3" y="1043.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (7 samples, 0.38%)</title><rect x="392.3" y="1027.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (6 samples, 0.32%)</title><rect x="392.3" y="1011.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (5 samples, 0.27%)</title><rect x="392.3" y="995.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (5 samples, 0.27%)</title><rect x="392.3" y="979.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (5 samples, 0.27%)</title><rect x="392.3" y="963.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (5 samples, 0.27%)</title><rect x="392.3" y="947.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (5 samples, 0.27%)</title><rect x="392.3" y="931.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (4 samples, 0.22%)</title><rect x="392.3" y="915.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (4 samples, 0.22%)</title><rect x="392.3" y="899.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="395.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (4 samples, 0.22%)</title><rect x="392.3" y="883.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (4 samples, 0.22%)</title><rect x="392.3" y="867.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 0.22%)</title><rect x="392.3" y="851.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.22%)</title><rect x="392.3" y="835.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.22%)</title><rect x="392.3" y="819.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (3 samples, 0.16%)</title><rect x="392.3" y="803.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (3 samples, 0.16%)</title><rect x="392.3" y="787.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.3" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (3 samples, 0.16%)</title><rect x="392.3" y="771.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.3" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (2 samples, 0.11%)</title><rect x="392.3" y="755.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.3" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.11%)</title><rect x="392.3" y="739.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.3" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.11%)</title><rect x="392.3" y="723.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="392.3" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="392.3" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1 samples, 0.05%)</title><rect x="392.3" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.05%)</title><rect x="392.3" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.05%)</title><rect x="392.3" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.05%)</title><rect x="392.3" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.3" y="638.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.05%)</title><rect x="392.3" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.3" y="622.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.05%)</title><rect x="392.3" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.3" y="606.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.05%)</title><rect x="392.3" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.3" y="590.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.05%)</title><rect x="392.3" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.3" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.05%)</title><rect x="392.3" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.3" y="558.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.05%)</title><rect x="392.3" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="392.9" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.05%)</title><rect x="392.9" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.9" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="392.9" y="675.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="392.9" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.05%)</title><rect x="392.9" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="392.9" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="392.9" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="392.9" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="392.9" y="579.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.05%)</title><rect x="392.9" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.05%)</title><rect x="392.9" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.05%)</title><rect x="392.9" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.9" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="393.5" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.5" y="766.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.05%)</title><rect x="393.5" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.5" y="750.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="393.5" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.5" y="734.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="393.5" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="396.5" y="718.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="393.5" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="393.5" y="675.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="396.5" y="686.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="393.5" y="659.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="396.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="394.2" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="394.2" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="394.2" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="394.2" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.05%)</title><rect x="394.2" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="397.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ParameterBag.resolve (1 samples, 0.05%)</title><rect x="394.2" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="394.2" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isSamePackage (1 samples, 0.05%)</title><rect x="394.8" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.8" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="394.8" y="899.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="397.8" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="394.8" y="883.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="397.8" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="394.8" y="867.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="397.8" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="394.8" y="851.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="397.8" y="862.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.05%)</title><rect x="394.8" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="397.8" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.05%)</title><rect x="394.8" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="397.8" y="830.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="394.8" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="397.8" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="394.8" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="397.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="395.5" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.05%)</title><rect x="396.1" y="1011.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="396.1" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.05%)</title><rect x="396.1" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.05%)</title><rect x="396.1" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="396.1" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="396.1" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="396.1" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="396.1" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="396.1" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="396.1" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (17 samples, 0.92%)</title><rect x="396.7" y="1203.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.7" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (17 samples, 0.92%)</title><rect x="396.7" y="1187.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.7" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default$1.resolve (1 samples, 0.05%)</title><rect x="396.7" y="1171.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="396.7" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="396.7" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="396.7" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="399.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="396.7" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.7" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.05%)</title><rect x="396.7" y="1091.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.7" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing.writeTo (1 samples, 0.05%)</title><rect x="397.4" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.4" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="397.4" y="1155.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.4" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (14 samples, 0.76%)</title><rect x="398.0" y="1171.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.0" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (14 samples, 0.76%)</title><rect x="398.0" y="1155.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.0" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.05%)</title><rect x="398.0" y="1139.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.0" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="398.0" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.0" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="398.0" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.0" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/TypeConstantAdjustment$TypeConstantDissolvingClassVisitor.visit (1 samples, 0.05%)</title><rect x="398.0" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="398.0" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.0" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector$1.visit (1 samples, 0.05%)</title><rect x="398.0" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (1 samples, 0.05%)</title><rect x="398.0" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.0" y="1054.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f81fc8b7080 (1 samples, 0.05%)</title><rect x="398.0" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (13 samples, 0.70%)</title><rect x="398.7" y="1139.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (11 samples, 0.59%)</title><rect x="398.7" y="1123.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1$1.visitMethodInsn (1 samples, 0.05%)</title><rect x="399.3" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="399.3" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="399.3" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="399.3" y="1059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitMethodInsn (1 samples, 0.05%)</title><rect x="399.3" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Symbol.getArgumentsAndReturnSizes (1 samples, 0.05%)</title><rect x="399.3" y="1027.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentsAndReturnSizes (1 samples, 0.05%)</title><rect x="399.3" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="399.3" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="399.3" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="402.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (5 samples, 0.27%)</title><rect x="399.9" y="1107.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (5 samples, 0.27%)</title><rect x="399.9" y="1091.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling.onUserReturn (2 samples, 0.11%)</title><rect x="399.9" y="1075.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod$Default.thrown (1 samples, 0.05%)</title><rect x="399.9" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getStackSize (1 samples, 0.05%)</title><rect x="399.9" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.9" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.05%)</title><rect x="399.9" y="1027.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="402.9" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.05%)</title><rect x="399.9" y="1011.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="402.9" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.05%)</title><rect x="399.9" y="995.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="402.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments.injectReturnFrame (1 samples, 0.05%)</title><rect x="400.6" y="1059.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default.injectFullFrame (1 samples, 0.05%)</title><rect x="400.6" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$Initialization$2.toFrame (1 samples, 0.05%)</title><rect x="400.6" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.represents (1 samples, 0.05%)</title><rect x="400.6" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.05%)</title><rect x="400.6" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.6" y="1006.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="400.6" y="979.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="403.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (3 samples, 0.16%)</title><rect x="401.2" y="1075.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.2" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.16%)</title><rect x="401.2" y="1059.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.2" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.16%)</title><rect x="401.2" y="1043.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.2" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.16%)</title><rect x="401.2" y="1027.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.2" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.05%)</title><rect x="401.2" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.2" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.05%)</title><rect x="401.2" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.05%)</title><rect x="401.2" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice$Default$ForMethodExit.mapped (1 samples, 0.05%)</title><rect x="401.2" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getReturnType (1 samples, 0.05%)</title><rect x="401.2" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="404.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$ForMethod$Tokenized.resolveReturnType (1 samples, 0.05%)</title><rect x="401.2" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.of (1 samples, 0.05%)</title><rect x="401.2" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="401.2" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitEnd (2 samples, 0.11%)</title><rect x="401.8" y="1011.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="404.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitEnd (2 samples, 0.11%)</title><rect x="401.8" y="995.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound.onEnd (1 samples, 0.05%)</title><rect x="402.5" y="979.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.5" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/ExceptionHandlers$1.apply (1 samples, 0.05%)</title><rect x="402.5" y="963.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/FramePaddingMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="405.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.5" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1$1.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="819.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitMethodInsn (1 samples, 0.05%)</title><rect x="402.5" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantMethodref (1 samples, 0.05%)</title><rect x="402.5" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantMemberReference (1 samples, 0.05%)</title><rect x="402.5" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.hash (1 samples, 0.05%)</title><rect x="402.5" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="402.5" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (4 samples, 0.22%)</title><rect x="403.1" y="1107.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.1" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (4 samples, 0.22%)</title><rect x="403.1" y="1091.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (4 samples, 0.22%)</title><rect x="403.1" y="1075.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (4 samples, 0.22%)</title><rect x="403.1" y="1059.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (4 samples, 0.22%)</title><rect x="403.1" y="1043.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.22%)</title><rect x="403.1" y="1027.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.22%)</title><rect x="403.1" y="1011.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (4 samples, 0.22%)</title><rect x="403.1" y="995.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.05%)</title><rect x="403.1" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.apply (1 samples, 0.05%)</title><rect x="403.1" y="963.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.doApply (1 samples, 0.05%)</title><rect x="403.1" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForInstrumentedMethod.resolve (1 samples, 0.05%)</title><rect x="403.1" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.1" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="403.1" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="403.1" y="899.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.1" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="403.1" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.1" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="403.1" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.1" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="403.1" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.1" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="403.1" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.1" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="403.1" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="403.1" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.05%)</title><rect x="403.1" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.1" y="798.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.05%)</title><rect x="403.1" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.1" y="782.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.05%)</title><rect x="403.1" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.1" y="766.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.05%)</title><rect x="403.1" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.05%)</title><rect x="403.1" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.05%)</title><rect x="403.1" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.1" y="718.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="403.1" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.1" y="702.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="403.1" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.1" y="686.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="403.1" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.05%)</title><rect x="403.1" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="403.1" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="403.1" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="403.1" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.1" y="606.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.05%)</title><rect x="403.1" y="579.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="406.1" y="590.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.05%)</title><rect x="403.1" y="563.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="406.1" y="574.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="403.1" y="547.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="406.1" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="403.1" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="406.1" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.05%)</title><rect x="403.1" y="515.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="406.1" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.05%)</title><rect x="403.8" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitInsn (1 samples, 0.05%)</title><rect x="403.8" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitInsn (1 samples, 0.05%)</title><rect x="403.8" y="947.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitJumpInsn (1 samples, 0.05%)</title><rect x="403.8" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitJumpInsn (1 samples, 0.05%)</title><rect x="403.8" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.8" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.05%)</title><rect x="403.8" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitEnd (2 samples, 0.11%)</title><rect x="404.4" y="979.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitEnd (2 samples, 0.11%)</title><rect x="404.4" y="963.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound.onEnd (1 samples, 0.05%)</title><rect x="404.4" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.4" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/ExceptionHandlers$1.apply (1 samples, 0.05%)</title><rect x="404.4" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="404.4" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.4" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="404.4" y="899.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="407.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$ForAdvice.injectReturnFrame (1 samples, 0.05%)</title><rect x="405.0" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (2 samples, 0.11%)</title><rect x="405.7" y="1123.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (2 samples, 0.11%)</title><rect x="405.7" y="1107.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.7" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (2 samples, 0.11%)</title><rect x="405.7" y="1091.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="405.7" y="1075.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="405.7" y="1059.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="405.7" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="405.7" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.05%)</title><rect x="406.3" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.05%)</title><rect x="406.3" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.05%)</title><rect x="406.3" y="1043.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithoutExceptionHandling.&lt;init&gt; (1 samples, 0.05%)</title><rect x="406.3" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.&lt;init&gt; (1 samples, 0.05%)</title><rect x="406.3" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="406.3" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default.of (1 samples, 0.05%)</title><rect x="406.3" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.toByteArray (1 samples, 0.05%)</title><rect x="406.9" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.9" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onComplete (3 samples, 0.16%)</title><rect x="407.6" y="1235.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.6" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.&lt;init&gt; (2 samples, 0.11%)</title><rect x="409.5" y="1235.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.5" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.&lt;init&gt; (2 samples, 0.11%)</title><rect x="409.5" y="1219.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.5" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="410.1" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClassSourceLocation (1 samples, 0.05%)</title><rect x="410.8" y="1395.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.8" y="1406.0"></text>
</g>
<g>
<title>java/net/URL.toString (1 samples, 0.05%)</title><rect x="410.8" y="1379.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.8" y="1390.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (1 samples, 0.05%)</title><rect x="410.8" y="1363.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.8" y="1374.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (1 samples, 0.05%)</title><rect x="410.8" y="1347.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (4 samples, 0.22%)</title><rect x="411.4" y="1395.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (3 samples, 0.16%)</title><rect x="411.4" y="1379.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/Class.getName (2 samples, 0.11%)</title><rect x="411.4" y="1363.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (2 samples, 0.11%)</title><rect x="411.4" y="1347.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.4" y="1358.0"></text>
</g>
<g>
<title>JVM_InitClassName (2 samples, 0.11%)</title><rect x="411.4" y="1331.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="414.4" y="1342.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (2 samples, 0.11%)</title><rect x="411.4" y="1315.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="414.4" y="1326.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (2 samples, 0.11%)</title><rect x="411.4" y="1299.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="414.4" y="1310.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="411.4" y="1283.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="414.4" y="1294.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.05%)</title><rect x="411.4" y="1267.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="414.4" y="1278.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="411.4" y="1251.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="414.4" y="1262.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.05%)</title><rect x="411.4" y="1235.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="414.4" y="1246.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.05%)</title><rect x="412.1" y="1283.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="415.1" y="1294.0"></text>
</g>
<g>
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (1 samples, 0.05%)</title><rect x="412.1" y="1267.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="415.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.05%)</title><rect x="412.7" y="1363.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.7" y="1374.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.05%)</title><rect x="412.7" y="1347.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="415.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getNamedPackage (1 samples, 0.05%)</title><rect x="413.3" y="1379.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="413.3" y="1363.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (3 samples, 0.16%)</title><rect x="414.0" y="1395.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.0" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (2 samples, 0.11%)</title><rect x="414.0" y="1379.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.0" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.05%)</title><rect x="414.6" y="1363.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.6" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="414.6" y="1347.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="414.6" y="1331.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkName (1 samples, 0.05%)</title><rect x="415.2" y="1379.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="415.2" y="1363.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="415.2" y="1347.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="415.2" y="1331.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.2" y="1342.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (1 samples, 0.05%)</title><rect x="415.9" y="1411.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.05%)</title><rect x="415.9" y="1395.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (3 samples, 0.16%)</title><rect x="416.5" y="1427.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.5" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (3 samples, 0.16%)</title><rect x="416.5" y="1411.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.getAndVerifyPackage (3 samples, 0.16%)</title><rect x="416.5" y="1395.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getDefinedPackage (1 samples, 0.05%)</title><rect x="416.5" y="1379.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.definePackage (1 samples, 0.05%)</title><rect x="416.5" y="1363.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.5" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.isSealed (2 samples, 0.11%)</title><rect x="417.2" y="1379.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.concat (1 samples, 0.05%)</title><rect x="417.2" y="1363.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.2" y="1374.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="417.2" y="1347.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="420.2" y="1358.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.getValue (1 samples, 0.05%)</title><rect x="417.8" y="1363.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.8" y="1374.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.get (1 samples, 0.05%)</title><rect x="417.8" y="1347.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.8" y="1358.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.05%)</title><rect x="417.8" y="1331.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.8" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="417.8" y="1315.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.8" y="1326.0"></text>
</g>
<g>
<title>java/util/jar/Attributes$Name.hashCode (1 samples, 0.05%)</title><rect x="417.8" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (2 samples, 0.11%)</title><rect x="418.4" y="1427.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (2 samples, 0.11%)</title><rect x="418.4" y="1411.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (2 samples, 0.11%)</title><rect x="418.4" y="1395.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.4" y="1406.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (2 samples, 0.11%)</title><rect x="418.4" y="1379.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.4" y="1390.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (2 samples, 0.11%)</title><rect x="418.4" y="1363.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.4" y="1374.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="419.1" y="1347.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (34 samples, 1.84%)</title><rect x="419.7" y="1427.0" width="21.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.7" y="1438.0">j..</text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (33 samples, 1.78%)</title><rect x="419.7" y="1411.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.7" y="1422.0">j..</text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (30 samples, 1.62%)</title><rect x="419.7" y="1395.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.7" y="1406.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (30 samples, 1.62%)</title><rect x="419.7" y="1379.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.7" y="1390.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (6 samples, 0.32%)</title><rect x="419.7" y="1363.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="422.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.97%)</title><rect x="423.5" y="1363.0" width="11.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="426.5" y="1374.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (17 samples, 0.92%)</title><rect x="423.5" y="1347.0" width="10.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="426.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="434.4" y="1347.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="437.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="434.4" y="1331.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="437.4" y="1342.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="434.4" y="1315.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="437.4" y="1326.0"></text>
</g>
<g>
<title>inflate (6 samples, 0.32%)</title><rect x="435.0" y="1363.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="438.0" y="1374.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (3 samples, 0.16%)</title><rect x="438.9" y="1395.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.9" y="1406.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (3 samples, 0.16%)</title><rect x="438.9" y="1379.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.9" y="1390.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (2 samples, 0.11%)</title><rect x="438.9" y="1363.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.9" y="1374.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.05%)</title><rect x="438.9" y="1347.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.9" y="1358.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.05%)</title><rect x="438.9" y="1331.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.9" y="1342.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.05%)</title><rect x="438.9" y="1315.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="441.9" y="1326.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.05%)</title><rect x="438.9" y="1299.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="441.9" y="1310.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.05%)</title><rect x="438.9" y="1283.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="441.9" y="1294.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek (1 samples, 0.05%)</title><rect x="439.5" y="1347.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.5" y="1358.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek0 (1 samples, 0.05%)</title><rect x="439.5" y="1331.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.5" y="1342.0"></text>
</g>
<g>
<title>__lseek (1 samples, 0.05%)</title><rect x="439.5" y="1315.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="442.5" y="1326.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.05%)</title><rect x="440.1" y="1363.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.1" y="1374.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.05%)</title><rect x="440.1" y="1347.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.1" y="1358.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.05%)</title><rect x="440.1" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.1" y="1342.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.05%)</title><rect x="440.1" y="1315.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.1" y="1326.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.05%)</title><rect x="440.1" y="1299.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.1" y="1310.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.05%)</title><rect x="440.1" y="1283.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="443.1" y="1294.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.05%)</title><rect x="440.1" y="1267.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="443.1" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.close (1 samples, 0.05%)</title><rect x="440.8" y="1411.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.8" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getManifest (2 samples, 0.11%)</title><rect x="441.4" y="1427.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.4" y="1438.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getManifest (1 samples, 0.05%)</title><rect x="442.0" y="1411.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="442.7" y="1443.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (10 samples, 0.54%)</title><rect x="443.3" y="1443.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (10 samples, 0.54%)</title><rect x="443.3" y="1427.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (10 samples, 0.54%)</title><rect x="443.3" y="1411.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.3" y="1422.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (9 samples, 0.49%)</title><rect x="443.3" y="1395.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.3" y="1406.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (8 samples, 0.43%)</title><rect x="444.0" y="1379.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.0" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="444.0" y="1363.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.0" y="1374.0"></text>
</g>
<g>
<title>java/net/URL.isValidProtocol (1 samples, 0.05%)</title><rect x="444.6" y="1363.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.6" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="444.6" y="1347.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="444.6" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.6" y="1342.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (6 samples, 0.32%)</title><rect x="445.2" y="1363.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="445.2" y="1347.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="445.2" y="1331.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.2" y="1342.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (1 samples, 0.05%)</title><rect x="445.9" y="1347.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.9" y="1358.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (1 samples, 0.05%)</title><rect x="445.9" y="1331.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.9" y="1342.0"></text>
</g>
<g>
<title>java/net/URL.isBuiltinStreamHandler (1 samples, 0.05%)</title><rect x="445.9" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.05%)</title><rect x="445.9" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.9" y="1310.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.checkNestedProtocol (2 samples, 0.11%)</title><rect x="446.5" y="1347.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="447.2" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="447.2" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.05%)</title><rect x="447.2" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.05%)</title><rect x="447.2" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.2" y="1294.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseContextSpec (2 samples, 0.11%)</title><rect x="447.8" y="1347.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.05%)</title><rect x="447.8" y="1331.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.05%)</title><rect x="447.8" y="1315.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="447.8" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="447.8" y="1283.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="448.4" y="1331.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="448.4" y="1315.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="448.4" y="1299.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.4" y="1310.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.encodePath (1 samples, 0.05%)</title><rect x="449.1" y="1395.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.1" y="1406.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.firstEncodeIndex (1 samples, 0.05%)</title><rect x="449.1" y="1379.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (10 samples, 0.54%)</title><rect x="449.7" y="1459.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (10 samples, 0.54%)</title><rect x="449.7" y="1443.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.7" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (2 samples, 0.11%)</title><rect x="449.7" y="1427.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (2 samples, 0.11%)</title><rect x="449.7" y="1411.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.7" y="1422.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass (2 samples, 0.11%)</title><rect x="449.7" y="1395.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="452.7" y="1406.0"></text>
</g>
<g>
<title>SystemDictionaryShared::find_or_load_shared_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="449.7" y="1379.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="452.7" y="1390.0"></text>
</g>
<g>
<title>java_lang_String::as_utf8_string(oopDesc*) (1 samples, 0.05%)</title><rect x="450.3" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="453.3" y="1390.0"></text>
</g>
<g>
<title>char* UNICODE::as_utf8&lt;signed char&gt;(signed char*, int&amp;) (1 samples, 0.05%)</title><rect x="450.3" y="1363.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="453.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 0.05%)</title><rect x="451.0" y="1427.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.0" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.05%)</title><rect x="451.0" y="1411.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.05%)</title><rect x="451.0" y="1395.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.0" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.05%)</title><rect x="451.0" y="1379.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.05%)</title><rect x="451.0" y="1363.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (7 samples, 0.38%)</title><rect x="451.6" y="1427.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (7 samples, 0.38%)</title><rect x="451.6" y="1411.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (7 samples, 0.38%)</title><rect x="451.6" y="1395.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (7 samples, 0.38%)</title><rect x="451.6" y="1379.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.6" y="1390.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (5 samples, 0.27%)</title><rect x="451.6" y="1363.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="454.6" y="1374.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (4 samples, 0.22%)</title><rect x="451.6" y="1347.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="454.6" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (4 samples, 0.22%)</title><rect x="451.6" y="1331.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="454.6" y="1342.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (2 samples, 0.11%)</title><rect x="451.6" y="1315.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="454.6" y="1326.0"></text>
</g>
<g>
<title>PerfTraceTime::~PerfTraceTime() (1 samples, 0.05%)</title><rect x="452.9" y="1315.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="455.9" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="453.5" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="456.5" y="1326.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="453.5" y="1299.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="456.5" y="1310.0"></text>
</g>
<g>
<title>EventMark::EventMark(char const*, ...) (1 samples, 0.05%)</title><rect x="453.5" y="1283.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="456.5" y="1294.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.05%)</title><rect x="453.5" y="1267.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="456.5" y="1278.0"></text>
</g>
<g>
<title>VerifyClassname (1 samples, 0.05%)</title><rect x="454.2" y="1347.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="457.2" y="1358.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (1 samples, 0.05%)</title><rect x="454.2" y="1331.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="457.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="454.8" y="1363.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="457.8" y="1374.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.05%)</title><rect x="454.8" y="1347.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="457.8" y="1358.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.05%)</title><rect x="455.5" y="1363.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="458.5" y="1374.0"></text>
</g>
<g>
<title>__strchrnul_avx2 (1 samples, 0.05%)</title><rect x="455.5" y="1347.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="458.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="456.1" y="1555.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="456.1" y="1539.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="456.1" y="1523.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.1" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.05%)</title><rect x="456.7" y="1555.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.7" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.05%)</title><rect x="456.7" y="1539.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.7" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.05%)</title><rect x="456.7" y="1523.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.7" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.05%)</title><rect x="456.7" y="1507.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/Thread.run (42 samples, 2.27%)</title><rect x="457.4" y="1571.0" width="26.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.4" y="1582.0">j..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.run (1 samples, 0.05%)</title><rect x="457.4" y="1555.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.4" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.runDutyCycle (1 samples, 0.05%)</title><rect x="457.4" y="1539.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.4" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.consumeFromPrimaryQueue (1 samples, 0.05%)</title><rect x="457.4" y="1523.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.4" y="1534.0"></text>
</g>
<g>
<title>org/jctools/queues/MpscBlockingConsumerArrayQueue.poll (1 samples, 0.05%)</title><rect x="457.4" y="1507.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.4" y="1518.0"></text>
</g>
<g>
<title>org/jctools/queues/MpscBlockingConsumerArrayQueue.parkUntilNext (1 samples, 0.05%)</title><rect x="457.4" y="1491.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.4" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Worker.run (41 samples, 2.22%)</title><rect x="458.0" y="1555.0" width="26.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.0" y="1566.0">d..</text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f81fc8b7080 (2 samples, 0.11%)</title><rect x="459.3" y="1539.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.3" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.run (27 samples, 1.46%)</title><rect x="460.6" y="1539.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.6" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$RunnableTask.run (27 samples, 1.46%)</title><rect x="460.6" y="1523.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.6" y="1534.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$RunnableTask.run (27 samples, 1.46%)</title><rect x="460.6" y="1507.0" width="17.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.6" y="1518.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask.run (27 samples, 1.46%)</title><rect x="460.6" y="1491.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.6" y="1502.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.performCleanUp (27 samples, 1.46%)</title><rect x="460.6" y="1475.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.6" y="1486.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.maintenance (7 samples, 0.38%)</title><rect x="460.6" y="1459.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.6" y="1470.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BLCHeader$DrainStatusRef.casDrainStatus (1 samples, 0.05%)</title><rect x="460.6" y="1443.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.6" y="1454.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapInt (1 samples, 0.05%)</title><rect x="460.6" y="1427.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.6" y="1438.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.drainReadBuffer (1 samples, 0.05%)</title><rect x="461.2" y="1443.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.2" y="1454.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/StripedBuffer.drainTo (1 samples, 0.05%)</title><rect x="461.2" y="1427.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.2" y="1438.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.drainWriteBuffer (1 samples, 0.05%)</title><rect x="461.8" y="1443.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.8" y="1454.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.evictEntries (2 samples, 0.11%)</title><rect x="462.5" y="1443.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.5" y="1454.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.evictFromMain (1 samples, 0.05%)</title><rect x="463.1" y="1427.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.1" y="1438.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireEntries (2 samples, 0.11%)</title><rect x="463.7" y="1443.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.7" y="1454.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireVariableEntries (1 samples, 0.05%)</title><rect x="464.4" y="1427.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.4" y="1438.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireAfterWriteEntries (1 samples, 0.05%)</title><rect x="464.4" y="1411.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (15 samples, 0.81%)</title><rect x="465.0" y="1459.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.0" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (15 samples, 0.81%)</title><rect x="465.0" y="1443.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.0" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (15 samples, 0.81%)</title><rect x="465.0" y="1427.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.0" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (15 samples, 0.81%)</title><rect x="465.0" y="1411.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.0" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (15 samples, 0.81%)</title><rect x="465.0" y="1395.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (15 samples, 0.81%)</title><rect x="465.0" y="1379.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.0" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (15 samples, 0.81%)</title><rect x="465.0" y="1363.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (15 samples, 0.81%)</title><rect x="465.0" y="1347.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (15 samples, 0.81%)</title><rect x="465.0" y="1331.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (15 samples, 0.81%)</title><rect x="465.0" y="1315.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (15 samples, 0.81%)</title><rect x="465.0" y="1299.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.0" y="1310.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (15 samples, 0.81%)</title><rect x="465.0" y="1283.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.0" y="1294.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (15 samples, 0.81%)</title><rect x="465.0" y="1267.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.0" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (15 samples, 0.81%)</title><rect x="465.0" y="1251.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.0" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (15 samples, 0.81%)</title><rect x="465.0" y="1235.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.0" y="1246.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.81%)</title><rect x="465.0" y="1219.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.0" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (15 samples, 0.81%)</title><rect x="465.0" y="1203.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.0" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (15 samples, 0.81%)</title><rect x="465.0" y="1187.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.0" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (15 samples, 0.81%)</title><rect x="465.0" y="1171.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.0" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (15 samples, 0.81%)</title><rect x="465.0" y="1155.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.0" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (15 samples, 0.81%)</title><rect x="465.0" y="1139.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.0" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (4 samples, 0.22%)</title><rect x="465.0" y="1123.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.0" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (2 samples, 0.11%)</title><rect x="465.0" y="1107.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.0" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.05%)</title><rect x="465.0" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.0" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.05%)</title><rect x="465.0" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.0" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="465.0" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.0" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="465.0" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.0" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.05%)</title><rect x="465.0" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.0" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.05%)</title><rect x="465.0" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.0" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.05%)</title><rect x="465.0" y="995.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="465.0" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="465.0" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="465.0" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="465.0" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="465.0" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.05%)</title><rect x="465.0" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="465.0" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.extract (1 samples, 0.05%)</title><rect x="465.0" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.05%)</title><rect x="465.0" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.05%)</title><rect x="465.0" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.visitInterface (1 samples, 0.05%)</title><rect x="465.0" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="465.0" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.0" y="814.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="465.0" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.0" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="465.0" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.0" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="465.0" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.0" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="465.0" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.0" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="465.0" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.0" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="465.0" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.0" y="718.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="465.0" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="465.0" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="465.0" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.0" y="670.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="465.0" y="643.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="468.0" y="654.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="465.0" y="627.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="468.0" y="638.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="465.0" y="611.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="468.0" y="622.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="465.0" y="595.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="468.0" y="606.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="465.0" y="579.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="468.0" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="465.0" y="563.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="468.0" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="465.0" y="547.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="468.0" y="558.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="465.0" y="531.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="468.0" y="542.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_and_type_ref_index_at(int, bool) (1 samples, 0.05%)</title><rect x="465.0" y="515.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="468.0" y="526.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/WrapRunnableAsNewTaskInstrumentation.getInstrumentationMuzzle (1 samples, 0.05%)</title><rect x="465.7" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.7" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/Reference$Builder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="465.7" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="465.7" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.7" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="465.7" y="1043.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.7" y="1054.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="465.7" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.7" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="465.7" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.7" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="465.7" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.7" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="465.7" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.7" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="465.7" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.7" y="974.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="465.7" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.7" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="465.7" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.7" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="465.7" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.7" y="926.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="465.7" y="899.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="468.7" y="910.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="465.7" y="883.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="468.7" y="894.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="465.7" y="867.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="468.7" y="878.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="465.7" y="851.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="468.7" y="862.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="465.7" y="835.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="468.7" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="465.7" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="468.7" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="465.7" y="803.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="468.7" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="465.7" y="787.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="468.7" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_field_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.05%)</title><rect x="465.7" y="771.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="468.7" y="782.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.05%)</title><rect x="465.7" y="755.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="468.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.11%)</title><rect x="466.3" y="1107.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (2 samples, 0.11%)</title><rect x="466.3" y="1091.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.11%)</title><rect x="466.3" y="1075.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.3" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="466.3" y="1059.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="466.3" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.3" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="466.3" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.3" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="466.3" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.3" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="466.3" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.05%)</title><rect x="466.3" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="466.3" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="466.3" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.05%)</title><rect x="466.3" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.3" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.05%)</title><rect x="466.3" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="466.9" y="1059.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="466.9" y="1043.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="466.9" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="466.9" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="466.9" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="466.9" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="466.9" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="466.9" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="466.9" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="466.9" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="466.9" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="466.9" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.05%)</title><rect x="466.9" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.05%)</title><rect x="466.9" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (1 samples, 0.05%)</title><rect x="466.9" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.05%)</title><rect x="466.9" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.resolve (1 samples, 0.05%)</title><rect x="466.9" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.resolve (1 samples, 0.05%)</title><rect x="466.9" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.9" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="466.9" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="466.9" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.9" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="466.9" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.9" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="466.9" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.9" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="466.9" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.9" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="466.9" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.9" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="466.9" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="466.9" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (4 samples, 0.22%)</title><rect x="467.6" y="1123.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.6" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (4 samples, 0.22%)</title><rect x="467.6" y="1107.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.6" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (4 samples, 0.22%)</title><rect x="467.6" y="1091.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (4 samples, 0.22%)</title><rect x="467.6" y="1075.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (2 samples, 0.11%)</title><rect x="467.6" y="1059.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="467.6" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.6" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="467.6" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.6" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="467.6" y="1011.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.6" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="467.6" y="995.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.6" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="467.6" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.6" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="467.6" y="963.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.6" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="467.6" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.6" y="958.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="467.6" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.6" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="467.6" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.6" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="467.6" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.6" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="467.6" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.6" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="467.6" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.6" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="467.6" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.6" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="467.6" y="835.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.6" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="467.6" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.6" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="467.6" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.6" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="467.6" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="467.6" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.05%)</title><rect x="467.6" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.6" y="766.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.05%)</title><rect x="467.6" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.05%)</title><rect x="467.6" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.6" y="734.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.05%)</title><rect x="467.6" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.6" y="718.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.05%)</title><rect x="467.6" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.05%)</title><rect x="467.6" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.6" y="686.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="467.6" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.6" y="670.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="467.6" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.6" y="654.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="467.6" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.05%)</title><rect x="467.6" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="467.6" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.6" y="606.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="467.6" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="467.6" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.6" y="574.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.05%)</title><rect x="467.6" y="547.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="470.6" y="558.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.05%)</title><rect x="467.6" y="531.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="470.6" y="542.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="467.6" y="515.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="470.6" y="526.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="467.6" y="499.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="470.6" y="510.0"></text>
</g>
<g>
<title>Method::bci_from(unsigned char*) const (1 samples, 0.05%)</title><rect x="467.6" y="483.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="470.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.05%)</title><rect x="468.2" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.2" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="468.2" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.2" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="468.2" y="1011.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.2" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.05%)</title><rect x="468.2" y="995.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.2" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="468.2" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory.make (1 samples, 0.05%)</title><rect x="468.2" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.05%)</title><rect x="468.2" y="947.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.05%)</title><rect x="468.2" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForEnumerationDescription.load (1 samples, 0.05%)</title><rect x="468.2" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.2" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="468.2" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.2" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="468.2" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.2" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="468.2" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.2" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="468.2" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.2" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="468.2" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.2" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="468.2" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.2" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="468.2" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.2" y="814.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="468.2" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.2" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="468.2" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="468.2" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.2" y="766.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="468.2" y="739.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="471.2" y="750.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="468.2" y="723.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="471.2" y="734.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="468.2" y="707.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="471.2" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="468.2" y="691.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="471.2" y="702.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="468.2" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="471.2" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="468.2" y="659.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="471.2" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="468.2" y="643.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="471.2" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.05%)</title><rect x="468.2" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="471.2" y="638.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="468.2" y="611.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="471.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.05%)</title><rect x="468.9" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="468.9" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.05%)</title><rect x="468.9" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.05%)</title><rect x="468.9" y="1011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.05%)</title><rect x="468.9" y="995.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="468.9" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="468.9" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="468.9" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="468.9" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="468.9" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="468.9" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="468.9" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.9" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="468.9" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.05%)</title><rect x="468.9" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="468.9" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="468.9" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="468.9" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1 samples, 0.05%)</title><rect x="468.9" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.05%)</title><rect x="468.9" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.05%)</title><rect x="468.9" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.05%)</title><rect x="468.9" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.9" y="750.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.05%)</title><rect x="468.9" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.9" y="734.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.05%)</title><rect x="468.9" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.9" y="718.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.05%)</title><rect x="468.9" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.9" y="702.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.05%)</title><rect x="468.9" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.9" y="686.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.05%)</title><rect x="468.9" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.9" y="670.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.05%)</title><rect x="468.9" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.05%)</title><rect x="469.5" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.5" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="469.5" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="469.5" y="1027.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="469.5" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="469.5" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="469.5" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="469.5" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="469.5" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="469.5" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readParameterAnnotations (1 samples, 0.05%)</title><rect x="469.5" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.05%)</title><rect x="469.5" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.05%)</title><rect x="469.5" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visit (1 samples, 0.05%)</title><rect x="469.5" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.05%)</title><rect x="469.5" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.05%)</title><rect x="469.5" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.5" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="469.5" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="469.5" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.5" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="469.5" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.5" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="469.5" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.5" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="469.5" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.5" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="469.5" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.5" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="469.5" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="734.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="469.5" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.5" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="469.5" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.5" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="469.5" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.5" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="469.5" y="659.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="472.5" y="670.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="469.5" y="643.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="472.5" y="654.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="469.5" y="627.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="472.5" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="469.5" y="611.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="472.5" y="622.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="469.5" y="595.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="472.5" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="469.5" y="579.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="472.5" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="469.5" y="563.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="472.5" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="469.5" y="547.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="472.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (7 samples, 0.38%)</title><rect x="470.1" y="1123.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.1" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (3 samples, 0.16%)</title><rect x="470.1" y="1107.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.1" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.05%)</title><rect x="470.1" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.05%)</title><rect x="470.8" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.05%)</title><rect x="470.8" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.05%)</title><rect x="470.8" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.05%)</title><rect x="470.8" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.05%)</title><rect x="470.8" y="1027.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.05%)</title><rect x="470.8" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.05%)</title><rect x="470.8" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.extendBy (1 samples, 0.05%)</title><rect x="470.8" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.05%)</title><rect x="470.8" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="470.8" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="470.8" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token.equals (1 samples, 0.05%)</title><rect x="470.8" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.8" y="926.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="470.8" y="899.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="473.8" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="470.8" y="883.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="473.8" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="470.8" y="867.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="473.8" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.05%)</title><rect x="470.8" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="473.8" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="470.8" y="835.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="473.8" y="846.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.05%)</title><rect x="470.8" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="473.8" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="470.8" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="473.8" y="814.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.05%)</title><rect x="470.8" y="787.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="473.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="471.4" y="1091.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="471.4" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="471.4" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.05%)</title><rect x="471.4" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.05%)</title><rect x="471.4" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="471.4" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="471.4" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="471.4" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="471.4" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.05%)</title><rect x="471.4" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.05%)</title><rect x="471.4" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="471.4" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="471.4" y="899.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="471.4" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="471.4" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="471.4" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="471.4" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="471.4" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (4 samples, 0.22%)</title><rect x="472.0" y="1107.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.0" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (4 samples, 0.22%)</title><rect x="472.0" y="1091.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.22%)</title><rect x="472.0" y="1075.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.0" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.22%)</title><rect x="472.0" y="1059.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.0" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.05%)</title><rect x="472.0" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.05%)</title><rect x="472.0" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.0" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (1 samples, 0.05%)</title><rect x="472.0" y="1011.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.05%)</title><rect x="472.0" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.0" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.05%)</title><rect x="472.0" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Explicit.size (1 samples, 0.05%)</title><rect x="472.0" y="963.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.16%)</title><rect x="472.7" y="1043.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (3 samples, 0.16%)</title><rect x="472.7" y="1027.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (2 samples, 0.11%)</title><rect x="472.7" y="1011.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (2 samples, 0.11%)</title><rect x="472.7" y="995.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (2 samples, 0.11%)</title><rect x="472.7" y="979.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (2 samples, 0.11%)</title><rect x="472.7" y="963.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.05%)</title><rect x="472.7" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="472.7" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="472.7" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="472.7" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.05%)</title><rect x="472.7" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.apply (1 samples, 0.05%)</title><rect x="472.7" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$ArgumentHandler$ForInstrumentedMethod$Default.bindEnter (1 samples, 0.05%)</title><rect x="472.7" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.7" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="472.7" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.7" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="472.7" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.7" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="472.7" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.7" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="472.7" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.7" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="472.7" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.7" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="472.7" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.7" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="472.7" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.7" y="750.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="472.7" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="472.7" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="472.7" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="472.7" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.7" y="686.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="472.7" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.7" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="472.7" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.7" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="472.7" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.7" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="472.7" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.7" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="472.7" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.7" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="472.7" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="472.7" y="563.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.7" y="574.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="472.7" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.7" y="558.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="472.7" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.7" y="542.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="472.7" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="472.7" y="499.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="475.7" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="472.7" y="483.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="475.7" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments$UsingArgumentCopy.injectStartFrame (1 samples, 0.05%)</title><rect x="473.3" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$Initialization$2.toFrame (1 samples, 0.05%)</title><rect x="473.3" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.represents (1 samples, 0.05%)</title><rect x="473.3" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.05%)</title><rect x="473.3" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.05%)</title><rect x="473.3" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLocalVariable (1 samples, 0.05%)</title><rect x="474.0" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLocalVariable (1 samples, 0.05%)</title><rect x="474.0" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitLocalVariable (1 samples, 0.05%)</title><rect x="474.0" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.&lt;clinit&gt; (4 samples, 0.22%)</title><rect x="474.6" y="1459.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.6" y="1470.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="474.6" y="1443.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.6" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$1.run (1 samples, 0.05%)</title><rect x="474.6" y="1427.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.6" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$1.run (1 samples, 0.05%)</title><rect x="474.6" y="1411.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.&lt;init&gt; (1 samples, 0.05%)</title><rect x="474.6" y="1395.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.6" y="1406.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="474.6" y="1379.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.6" y="1390.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="474.6" y="1363.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.6" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="474.6" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.6" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="474.6" y="1331.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.6" y="1342.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="474.6" y="1315.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="474.6" y="1299.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.6" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="474.6" y="1283.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.6" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="474.6" y="1267.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.6" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="474.6" y="1251.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="474.6" y="1235.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.6" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="474.6" y="1219.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.6" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="474.6" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.6" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.05%)</title><rect x="474.6" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.6" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="474.6" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.6" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="474.6" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.6" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="474.6" y="1139.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.6" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="474.6" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.6" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="474.6" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.6" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="474.6" y="1091.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="474.6" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="474.6" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="474.6" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="474.6" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="474.6" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="474.6" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="474.6" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.05%)</title><rect x="474.6" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.05%)</title><rect x="474.6" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfMethod.extract (1 samples, 0.05%)</title><rect x="474.6" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.05%)</title><rect x="474.6" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.05%)</title><rect x="474.6" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.parseType (1 samples, 0.05%)</title><rect x="474.6" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.6" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="474.6" y="867.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="477.6" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="474.6" y="851.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="477.6" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="474.6" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="477.6" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.05%)</title><rect x="474.6" y="819.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="477.6" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="474.6" y="803.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="477.6" y="814.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.05%)</title><rect x="474.6" y="787.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="477.6" y="798.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (3 samples, 0.16%)</title><rect x="475.2" y="1443.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.2" y="1454.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (3 samples, 0.16%)</title><rect x="475.2" y="1427.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.2" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (3 samples, 0.16%)</title><rect x="475.2" y="1411.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.16%)</title><rect x="475.2" y="1395.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.2" y="1406.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.16%)</title><rect x="475.2" y="1379.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.16%)</title><rect x="475.2" y="1363.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.16%)</title><rect x="475.2" y="1347.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (3 samples, 0.16%)</title><rect x="475.2" y="1331.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.2" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.16%)</title><rect x="475.2" y="1315.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.2" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (3 samples, 0.16%)</title><rect x="475.2" y="1299.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.2" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="475.2" y="1283.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.2" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.05%)</title><rect x="475.2" y="1267.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.2" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.05%)</title><rect x="475.2" y="1251.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.2" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.05%)</title><rect x="475.2" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.2" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="475.2" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.2" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="475.2" y="1203.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.2" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.05%)</title><rect x="475.2" y="1187.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.2" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.05%)</title><rect x="475.2" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.2" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.05%)</title><rect x="475.2" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.2" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="475.2" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.2" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="475.2" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.2" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="475.2" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.2" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="475.2" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.2" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="475.2" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.2" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="475.2" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.2" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="475.2" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.2" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (2 samples, 0.11%)</title><rect x="475.9" y="1283.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.05%)</title><rect x="475.9" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.9" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="475.9" y="1251.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.9" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="475.9" y="1235.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.9" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.9" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.9" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1171.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.9" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1155.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.9" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.9" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1123.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.9" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1059.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="475.9" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.05%)</title><rect x="475.9" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.05%)</title><rect x="475.9" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="475.9" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="475.9" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="475.9" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="475.9" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="475.9" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="475.9" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="475.9" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="475.9" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="475.9" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.9" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="475.9" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="475.9" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="475.9" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="475.9" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="475.9" y="787.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="475.9" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.05%)</title><rect x="475.9" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.05%)</title><rect x="475.9" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.05%)</title><rect x="475.9" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.05%)</title><rect x="475.9" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.05%)</title><rect x="475.9" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.9" y="702.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbaabb000)@0x00007f81fc8c3780 (1 samples, 0.05%)</title><rect x="475.9" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.05%)</title><rect x="476.5" y="1267.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.05%)</title><rect x="476.5" y="1251.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.5" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="476.5" y="1235.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.5" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="476.5" y="1219.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.5" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="476.5" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.5" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.05%)</title><rect x="476.5" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.5" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.05%)</title><rect x="476.5" y="1171.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.5" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.05%)</title><rect x="476.5" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.5" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.05%)</title><rect x="476.5" y="1139.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.5" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.05%)</title><rect x="476.5" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.5" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.05%)</title><rect x="476.5" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.5" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="476.5" y="1091.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="479.5" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="476.5" y="1075.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="479.5" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="476.5" y="1059.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="479.5" y="1070.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="476.5" y="1043.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="479.5" y="1054.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="476.5" y="1027.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="479.5" y="1038.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.05%)</title><rect x="476.5" y="1011.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="479.5" y="1022.0"></text>
</g>
<g>
<title>__strcpy_sse2_unaligned (1 samples, 0.05%)</title><rect x="476.5" y="995.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="479.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="477.1" y="1459.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.1" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="477.1" y="1443.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.1" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.05%)</title><rect x="477.1" y="1427.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.05%)</title><rect x="477.1" y="1411.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="477.1" y="1395.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.linkToStatic (1 samples, 0.05%)</title><rect x="477.1" y="1379.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.take (10 samples, 0.54%)</title><rect x="477.8" y="1539.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.8" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.getDelay (1 samples, 0.05%)</title><rect x="477.8" y="1523.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.8" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.convert (1 samples, 0.05%)</title><rect x="477.8" y="1507.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.8" y="1518.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="477.8" y="1491.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.8" y="1502.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="477.8" y="1475.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.8" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="477.8" y="1459.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.8" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="477.8" y="1443.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.8" y="1454.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="477.8" y="1427.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.8" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="477.8" y="1411.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="477.8" y="1395.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.8" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="477.8" y="1379.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.8" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="477.8" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="477.8" y="1347.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="477.8" y="1331.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="477.8" y="1315.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.8" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.05%)</title><rect x="477.8" y="1299.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="477.8" y="1283.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.8" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="477.8" y="1267.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.8" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="477.8" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.8" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="477.8" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="477.8" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.8" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="477.8" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.8" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="477.8" y="1187.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.8" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="477.8" y="1171.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.8" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="477.8" y="1155.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.8" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="477.8" y="1139.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.8" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="477.8" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.8" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="477.8" y="1107.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.8" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.05%)</title><rect x="477.8" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (1 samples, 0.05%)</title><rect x="477.8" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.&lt;init&gt; (1 samples, 0.05%)</title><rect x="477.8" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="477.8" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.8" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="477.8" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.8" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="477.8" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.8" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="477.8" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="477.8" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.8" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="477.8" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.8" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="477.8" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="477.8" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.8" y="942.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="477.8" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.8" y="926.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="477.8" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.8" y="910.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="477.8" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.8" y="894.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="477.8" y="867.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="480.8" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.peek (1 samples, 0.05%)</title><rect x="478.4" y="1523.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (6 samples, 0.32%)</title><rect x="479.1" y="1523.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.1" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.05%)</title><rect x="479.1" y="1507.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.1" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.05%)</title><rect x="479.1" y="1491.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.05%)</title><rect x="479.1" y="1475.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (5 samples, 0.27%)</title><rect x="479.7" y="1507.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.7" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.27%)</title><rect x="479.7" y="1491.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.7" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.22%)</title><rect x="480.3" y="1475.0" width="2.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="483.3" y="1486.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="480.3" y="1459.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="483.3" y="1470.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="481.0" y="1459.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="484.0" y="1470.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="481.6" y="1459.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="484.6" y="1470.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="482.3" y="1459.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="485.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.11%)</title><rect x="482.9" y="1523.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.11%)</title><rect x="482.9" y="1507.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.05%)</title><rect x="482.9" y="1491.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="482.9" y="1475.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.9" y="1486.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.05%)</title><rect x="482.9" y="1459.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="485.9" y="1470.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.05%)</title><rect x="482.9" y="1443.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="485.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.05%)</title><rect x="483.5" y="1491.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="483.5" y="1475.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="483.5" y="1459.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.5" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.05%)</title><rect x="483.5" y="1443.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.11%)</title><rect x="484.2" y="1571.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.2" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLL.make (1 samples, 0.05%)</title><rect x="484.2" y="1555.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.2" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="484.2" y="1539.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.2" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.05%)</title><rect x="484.2" y="1523.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 0.05%)</title><rect x="484.8" y="1555.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.8" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (1 samples, 0.05%)</title><rect x="484.8" y="1539.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.8" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (1 samples, 0.05%)</title><rect x="484.8" y="1523.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (1 samples, 0.05%)</title><rect x="484.8" y="1507.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.prepender (1 samples, 0.05%)</title><rect x="484.8" y="1491.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.8" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.05%)</title><rect x="484.8" y="1475.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy$1.apply (1 samples, 0.05%)</title><rect x="484.8" y="1459.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy$1.apply (1 samples, 0.05%)</title><rect x="484.8" y="1443.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.lookupStatic (1 samples, 0.05%)</title><rect x="484.8" y="1427.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findStatic (1 samples, 0.05%)</title><rect x="484.8" y="1411.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethod (1 samples, 0.05%)</title><rect x="484.8" y="1395.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.05%)</title><rect x="484.8" y="1379.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.05%)</title><rect x="484.8" y="1363.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.05%)</title><rect x="484.8" y="1347.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.05%)</title><rect x="484.8" y="1331.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.05%)</title><rect x="484.8" y="1315.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.05%)</title><rect x="484.8" y="1299.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (1 samples, 0.05%)</title><rect x="484.8" y="1283.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.05%)</title><rect x="484.8" y="1267.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 0.05%)</title><rect x="484.8" y="1251.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.8" y="1262.0"></text>
</g>
<g>
<title>MHN_resolve_Mem (1 samples, 0.05%)</title><rect x="484.8" y="1235.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="487.8" y="1246.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 0.05%)</title><rect x="484.8" y="1219.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="487.8" y="1230.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.05%)</title><rect x="484.8" y="1203.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="487.8" y="1214.0"></text>
</g>
<g>
<title>LinkResolver::lookup_polymorphic_method(LinkInfo const&amp;, Handle*, Handle*, Thread*) (1 samples, 0.05%)</title><rect x="484.8" y="1187.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="487.8" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::find_method_handle_intrinsic(vmIntrinsics::ID, Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="484.8" y="1171.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="487.8" y="1182.0"></text>
</g>
<g>
<title>Method::make_method_handle_intrinsic(vmIntrinsics::ID, Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="484.8" y="1155.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="487.8" y="1166.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="484.8" y="1139.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="487.8" y="1150.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="484.8" y="1123.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="487.8" y="1134.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="484.8" y="1107.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="487.8" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.05%)</title><rect x="485.4" y="1571.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.4" y="1582.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="485.4" y="1555.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="488.4" y="1566.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="485.4" y="1539.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="488.4" y="1550.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="485.4" y="1523.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="488.4" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.05%)</title><rect x="486.1" y="1571.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.1" y="1582.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.05%)</title><rect x="486.1" y="1555.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.1" y="1566.0"></text>
</g>
<g>
<title>start_thread (990 samples, 53.54%)</title><rect x="486.7" y="1571.0" width="631.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="489.7" y="1582.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (990 samples, 53.54%)</title><rect x="486.7" y="1555.0" width="631.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="489.7" y="1566.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (990 samples, 53.54%)</title><rect x="486.7" y="1539.0" width="631.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="489.7" y="1550.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (15 samples, 0.81%)</title><rect x="486.7" y="1523.0" width="9.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="489.7" y="1534.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (2 samples, 0.11%)</title><rect x="486.7" y="1507.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="489.7" y="1518.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (2 samples, 0.11%)</title><rect x="486.7" y="1491.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="489.7" y="1502.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (13 samples, 0.70%)</title><rect x="488.0" y="1507.0" width="8.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="491.0" y="1518.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.22%)</title><rect x="488.0" y="1491.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="491.0" y="1502.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.05%)</title><rect x="488.0" y="1475.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="491.0" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="488.0" y="1459.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="491.0" y="1470.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="488.0" y="1443.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="491.0" y="1454.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.16%)</title><rect x="488.6" y="1475.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="491.6" y="1486.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.16%)</title><rect x="490.6" y="1491.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="493.6" y="1502.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.16%)</title><rect x="490.6" y="1475.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="493.6" y="1486.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.16%)</title><rect x="490.6" y="1459.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="493.6" y="1470.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.16%)</title><rect x="490.6" y="1443.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="493.6" y="1454.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (3 samples, 0.16%)</title><rect x="490.6" y="1427.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="493.6" y="1438.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.16%)</title><rect x="490.6" y="1411.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="493.6" y="1422.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.16%)</title><rect x="490.6" y="1395.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="493.6" y="1406.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.32%)</title><rect x="492.5" y="1491.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="495.5" y="1502.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.32%)</title><rect x="492.5" y="1475.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="495.5" y="1486.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (4 samples, 0.22%)</title><rect x="492.5" y="1459.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="495.5" y="1470.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (4 samples, 0.22%)</title><rect x="492.5" y="1443.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="495.5" y="1454.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (4 samples, 0.22%)</title><rect x="492.5" y="1427.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="495.5" y="1438.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.22%)</title><rect x="492.5" y="1411.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="495.5" y="1422.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.11%)</title><rect x="493.1" y="1395.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="496.1" y="1406.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="494.4" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="497.4" y="1406.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.11%)</title><rect x="495.0" y="1459.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="498.0" y="1470.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.11%)</title><rect x="495.0" y="1443.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="498.0" y="1454.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (2 samples, 0.11%)</title><rect x="495.0" y="1427.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="498.0" y="1438.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.05%)</title><rect x="495.0" y="1411.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="498.0" y="1422.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="495.0" y="1395.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="498.0" y="1406.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.05%)</title><rect x="495.0" y="1379.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="498.0" y="1390.0"></text>
</g>
<g>
<title>G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="495.0" y="1363.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="498.0" y="1374.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="495.7" y="1411.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="498.7" y="1422.0"></text>
</g>
<g>
<title>JavaThread::run() (972 samples, 52.57%)</title><rect x="496.3" y="1523.0" width="620.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="499.3" y="1534.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (960 samples, 51.92%)</title><rect x="496.3" y="1507.0" width="612.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="499.3" y="1518.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (954 samples, 51.60%)</title><rect x="496.3" y="1491.0" width="608.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="499.3" y="1502.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (835 samples, 45.16%)</title><rect x="496.3" y="1475.0" width="532.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="499.3" y="1486.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (835 samples, 45.16%)</title><rect x="496.3" y="1459.0" width="532.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="499.3" y="1470.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, Di..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (3 samples, 0.16%)</title><rect x="496.3" y="1443.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="499.3" y="1454.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (3 samples, 0.16%)</title><rect x="496.3" y="1427.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="499.3" y="1438.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.16%)</title><rect x="496.3" y="1411.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="499.3" y="1422.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.16%)</title><rect x="496.3" y="1395.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="499.3" y="1406.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.16%)</title><rect x="496.3" y="1379.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="499.3" y="1390.0"></text>
</g>
<g>
<title>ciTypeFlow::clone_loop_heads(ciTypeFlow::Loop*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="496.3" y="1363.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="499.3" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::clone_loop_head(ciTypeFlow::Loop*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="496.3" y="1347.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="499.3" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="496.3" y="1331.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="499.3" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="496.3" y="1315.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="499.3" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.11%)</title><rect x="496.9" y="1363.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="499.9" y="1374.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.11%)</title><rect x="496.9" y="1347.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="499.9" y="1358.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.11%)</title><rect x="496.9" y="1331.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="499.9" y="1342.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="496.9" y="1315.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="499.9" y="1326.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="496.9" y="1299.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="499.9" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="496.9" y="1283.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="499.9" y="1294.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="496.9" y="1267.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="499.9" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="496.9" y="1251.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="499.9" y="1262.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.05%)</title><rect x="496.9" y="1235.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="499.9" y="1246.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="496.9" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="499.9" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.05%)</title><rect x="497.6" y="1315.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="500.6" y="1326.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="497.6" y="1299.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="500.6" y="1310.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.05%)</title><rect x="497.6" y="1283.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="500.6" y="1294.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (536 samples, 28.99%)</title><rect x="498.2" y="1443.0" width="342.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="501.2" y="1454.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (14 samples, 0.76%)</title><rect x="498.2" y="1427.0" width="8.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="501.2" y="1438.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (9 samples, 0.49%)</title><rect x="498.2" y="1411.0" width="5.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="501.2" y="1422.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.05%)</title><rect x="503.3" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="506.3" y="1406.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.05%)</title><rect x="503.3" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="506.3" y="1390.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (4 samples, 0.22%)</title><rect x="504.0" y="1411.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="507.0" y="1422.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (4 samples, 0.22%)</title><rect x="504.0" y="1395.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="507.0" y="1406.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (4 samples, 0.22%)</title><rect x="504.0" y="1379.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="507.0" y="1390.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.05%)</title><rect x="504.6" y="1363.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="507.6" y="1374.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, Address) (1 samples, 0.05%)</title><rect x="504.6" y="1347.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="507.6" y="1358.0"></text>
</g>
<g>
<title>Relocation::type() (1 samples, 0.05%)</title><rect x="504.6" y="1331.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="507.6" y="1342.0"></text>
</g>
<g>
<title>MachUEPNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.05%)</title><rect x="505.2" y="1363.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="508.2" y="1374.0"></text>
</g>
<g>
<title>MacroAssembler::load_klass(RegisterImpl*, RegisterImpl*) (1 samples, 0.05%)</title><rect x="505.2" y="1347.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="508.2" y="1358.0"></text>
</g>
<g>
<title>Assembler::movl(RegisterImpl*, Address) (1 samples, 0.05%)</title><rect x="505.2" y="1331.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="508.2" y="1342.0"></text>
</g>
<g>
<title>Relocation::type() (1 samples, 0.05%)</title><rect x="505.2" y="1315.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="508.2" y="1326.0"></text>
</g>
<g>
<title>string_equalsNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.05%)</title><rect x="505.9" y="1363.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="508.9" y="1374.0"></text>
</g>
<g>
<title>MacroAssembler::arrays_equals(bool, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, XMMRegisterImpl*, XMMRegisterImpl*, bool) (1 samples, 0.05%)</title><rect x="505.9" y="1347.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="508.9" y="1358.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="506.5" y="1411.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="509.5" y="1422.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (12 samples, 0.65%)</title><rect x="507.1" y="1427.0" width="7.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="510.1" y="1438.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (4 samples, 0.22%)</title><rect x="509.1" y="1411.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="512.1" y="1422.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.05%)</title><rect x="509.1" y="1395.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="512.1" y="1406.0"></text>
</g>
<g>
<title>DebugInformationRecorder::add_safepoint(int, OopMap*) (1 samples, 0.05%)</title><rect x="509.7" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="512.7" y="1406.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.05%)</title><rect x="510.3" y="1395.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="513.3" y="1406.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.05%)</title><rect x="510.3" y="1379.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="513.3" y="1390.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.05%)</title><rect x="511.0" y="1395.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="514.0" y="1406.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.05%)</title><rect x="511.0" y="1379.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="514.0" y="1390.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.05%)</title><rect x="511.6" y="1411.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="514.6" y="1422.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (3 samples, 0.16%)</title><rect x="512.2" y="1411.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="515.2" y="1422.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (3 samples, 0.16%)</title><rect x="512.2" y="1395.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="515.2" y="1406.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.11%)</title><rect x="512.9" y="1379.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="515.9" y="1390.0"></text>
</g>
<g>
<title>leaPCompressedOopOffsetNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.05%)</title><rect x="514.2" y="1411.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="517.2" y="1422.0"></text>
</g>
<g>
<title>encode_RegMem(CodeBuffer&amp;, int, int, int, int, int, relocInfo::relocType) (1 samples, 0.05%)</title><rect x="514.2" y="1395.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="517.2" y="1406.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.05%)</title><rect x="514.8" y="1427.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="517.8" y="1438.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.05%)</title><rect x="515.4" y="1427.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="518.4" y="1438.0"></text>
</g>
<g>
<title>Matcher::match() (40 samples, 2.16%)</title><rect x="516.1" y="1427.0" width="25.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="519.1" y="1438.0">M..</text>
</g>
<g>
<title>Matcher::find_shared(Node*) (5 samples, 0.27%)</title><rect x="516.7" y="1411.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="519.7" y="1422.0"></text>
</g>
<g>
<title>Matcher::is_bmi_pattern(Node*, Node*) [clone .part.134] (1 samples, 0.05%)</title><rect x="519.3" y="1395.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="522.3" y="1406.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (34 samples, 1.84%)</title><rect x="519.9" y="1411.0" width="21.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="522.9" y="1422.0">M..</text>
</g>
<g>
<title>Arena::contains(void const*) const (11 samples, 0.59%)</title><rect x="524.4" y="1395.0" width="7.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="527.4" y="1406.0"></text>
</g>
<g>
<title>CallNode::match(ProjNode const*, Matcher const*) (1 samples, 0.05%)</title><rect x="531.4" y="1395.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="534.4" y="1406.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.11%)</title><rect x="532.0" y="1395.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="535.0" y="1406.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.05%)</title><rect x="532.7" y="1379.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="535.7" y="1390.0"></text>
</g>
<g>
<title>safePoint_poll_tlsNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 0.05%)</title><rect x="532.7" y="1363.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="535.7" y="1374.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (9 samples, 0.49%)</title><rect x="533.3" y="1395.0" width="5.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="536.3" y="1406.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (4 samples, 0.22%)</title><rect x="533.3" y="1379.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="536.3" y="1390.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.11%)</title><rect x="533.3" y="1363.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="536.3" y="1374.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.05%)</title><rect x="533.3" y="1347.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="536.3" y="1358.0"></text>
</g>
<g>
<title>State::_sub_Op_LShiftI(Node const*) (1 samples, 0.05%)</title><rect x="533.3" y="1331.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="536.3" y="1342.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.05%)</title><rect x="533.9" y="1347.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="536.9" y="1358.0"></text>
</g>
<g>
<title>State::_sub_Op_ConP(Node const*) (1 samples, 0.05%)</title><rect x="533.9" y="1331.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="536.9" y="1342.0"></text>
</g>
<g>
<title>TypeRawPtr::get_con() const (1 samples, 0.05%)</title><rect x="533.9" y="1315.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="536.9" y="1326.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (2 samples, 0.11%)</title><rect x="534.6" y="1363.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="537.6" y="1374.0"></text>
</g>
<g>
<title>State::_sub_Op_AddI(Node const*) (1 samples, 0.05%)</title><rect x="534.6" y="1347.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="537.6" y="1358.0"></text>
</g>
<g>
<title>State::_sub_Op_StoreI(Node const*) (1 samples, 0.05%)</title><rect x="535.2" y="1347.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="538.2" y="1358.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (5 samples, 0.27%)</title><rect x="535.9" y="1379.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="538.9" y="1390.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.11%)</title><rect x="536.5" y="1363.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="539.5" y="1374.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.11%)</title><rect x="536.5" y="1347.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="539.5" y="1358.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.05%)</title><rect x="537.1" y="1331.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="540.1" y="1342.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.05%)</title><rect x="537.1" y="1315.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="540.1" y="1326.0"></text>
</g>
<g>
<title>Node::ins_req(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="537.8" y="1363.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="540.8" y="1374.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.05%)</title><rect x="538.4" y="1363.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="541.4" y="1374.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.05%)</title><rect x="538.4" y="1347.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="541.4" y="1358.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.11%)</title><rect x="539.1" y="1395.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="542.1" y="1406.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.05%)</title><rect x="539.7" y="1379.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="542.7" y="1390.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (2 samples, 0.11%)</title><rect x="540.3" y="1395.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="543.3" y="1406.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (3 samples, 0.16%)</title><rect x="541.6" y="1427.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="544.6" y="1438.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.11%)</title><rect x="541.6" y="1411.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="544.6" y="1422.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (2 samples, 0.11%)</title><rect x="541.6" y="1395.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="544.6" y="1406.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.05%)</title><rect x="542.9" y="1411.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="545.9" y="1422.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.05%)</title><rect x="542.9" y="1395.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="545.9" y="1406.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.05%)</title><rect x="542.9" y="1379.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="545.9" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (54 samples, 2.92%)</title><rect x="543.5" y="1427.0" width="34.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="546.5" y="1438.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (54 samples, 2.92%)</title><rect x="543.5" y="1411.0" width="34.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="546.5" y="1422.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (5 samples, 0.27%)</title><rect x="544.2" y="1395.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="547.2" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.05%)</title><rect x="546.7" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="549.7" y="1390.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.05%)</title><rect x="546.7" y="1363.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="549.7" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (12 samples, 0.65%)</title><rect x="547.3" y="1395.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="550.3" y="1406.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.11%)</title><rect x="548.0" y="1379.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="551.0" y="1390.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.11%)</title><rect x="549.3" y="1379.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="552.3" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (4 samples, 0.22%)</title><rect x="550.5" y="1379.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="553.5" y="1390.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.05%)</title><rect x="551.8" y="1363.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="554.8" y="1374.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.05%)</title><rect x="552.5" y="1363.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="555.5" y="1374.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.05%)</title><rect x="552.5" y="1347.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="555.5" y="1358.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="552.5" y="1331.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="555.5" y="1342.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="552.5" y="1315.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="555.5" y="1326.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (3 samples, 0.16%)</title><rect x="553.1" y="1379.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="556.1" y="1390.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (2 samples, 0.11%)</title><rect x="553.7" y="1363.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="556.7" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (13 samples, 0.70%)</title><rect x="555.0" y="1395.0" width="8.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="558.0" y="1406.0"></text>
</g>
<g>
<title>Node::is_iteratively_computed() (1 samples, 0.05%)</title><rect x="557.6" y="1379.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="560.6" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (2 samples, 0.11%)</title><rect x="558.2" y="1379.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="561.2" y="1390.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.05%)</title><rect x="558.8" y="1363.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="561.8" y="1374.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (2 samples, 0.11%)</title><rect x="559.5" y="1379.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="562.5" y="1390.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.05%)</title><rect x="560.1" y="1363.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="563.1" y="1374.0"></text>
</g>
<g>
<title>MachCallNode::bottom_type() const (1 samples, 0.05%)</title><rect x="560.1" y="1347.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="563.1" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (2 samples, 0.11%)</title><rect x="560.8" y="1379.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="563.8" y="1390.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.05%)</title><rect x="561.4" y="1363.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="564.4" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (1 samples, 0.05%)</title><rect x="562.0" y="1379.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="565.0" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_exit_block_pressure(Block*) (1 samples, 0.05%)</title><rect x="562.7" y="1379.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="565.7" y="1390.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.05%)</title><rect x="562.7" y="1363.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="565.7" y="1374.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (7 samples, 0.38%)</title><rect x="563.3" y="1395.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="566.3" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.11%)</title><rect x="565.9" y="1379.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="568.9" y="1390.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.05%)</title><rect x="567.1" y="1379.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="570.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.16%)</title><rect x="567.8" y="1395.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="570.8" y="1406.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.11%)</title><rect x="568.4" y="1379.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="571.4" y="1390.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (9 samples, 0.49%)</title><rect x="569.7" y="1395.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="572.7" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (7 samples, 0.38%)</title><rect x="571.0" y="1379.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="574.0" y="1390.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.11%)</title><rect x="574.2" y="1363.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="577.2" y="1374.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.05%)</title><rect x="575.4" y="1395.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="578.4" y="1406.0"></text>
</g>
<g>
<title>loadINode::oper_input_base() const (1 samples, 0.05%)</title><rect x="576.1" y="1395.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="579.1" y="1406.0"></text>
</g>
<g>
<title>loadNNode::ideal_Opcode() const (1 samples, 0.05%)</title><rect x="576.7" y="1395.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="579.7" y="1406.0"></text>
</g>
<g>
<title>overflowMulI_rReg_immNode::out_RegMask() const (1 samples, 0.05%)</title><rect x="577.3" y="1395.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="580.3" y="1406.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.05%)</title><rect x="578.0" y="1427.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="581.0" y="1438.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (408 samples, 22.07%)</title><rect x="578.6" y="1427.0" width="260.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="581.6" y="1438.0">PhaseChaitin::Register_Allocate()</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.11%)</title><rect x="579.3" y="1411.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="582.3" y="1422.0"></text>
</g>
<g>
<title>MachNode::oper_input_base() const (1 samples, 0.05%)</title><rect x="580.5" y="1411.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="583.5" y="1422.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.05%)</title><rect x="581.2" y="1411.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="584.2" y="1422.0"></text>
</g>
<g>
<title>MachSpillCopyNode::oper_input_base() const (1 samples, 0.05%)</title><rect x="581.8" y="1411.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="584.8" y="1422.0"></text>
</g>
<g>
<title>Node::rematerialize() const (2 samples, 0.11%)</title><rect x="582.4" y="1411.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="585.4" y="1422.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (17 samples, 0.92%)</title><rect x="583.7" y="1411.0" width="10.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="586.7" y="1422.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.05%)</title><rect x="593.9" y="1395.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="596.9" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (27 samples, 1.46%)</title><rect x="594.6" y="1411.0" width="17.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="597.6" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.11%)</title><rect x="600.3" y="1395.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="603.3" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.22%)</title><rect x="601.6" y="1395.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="604.6" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.05%)</title><rect x="604.1" y="1395.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="607.1" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (9 samples, 0.49%)</title><rect x="604.8" y="1395.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="607.8" y="1406.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.05%)</title><rect x="607.3" y="1379.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="610.3" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.22%)</title><rect x="608.0" y="1379.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="611.0" y="1390.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (2 samples, 0.11%)</title><rect x="610.5" y="1395.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="613.5" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (18 samples, 0.97%)</title><rect x="611.8" y="1411.0" width="11.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="614.8" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.16%)</title><rect x="612.4" y="1395.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="615.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (14 samples, 0.76%)</title><rect x="614.4" y="1395.0" width="8.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="617.4" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.43%)</title><rect x="618.2" y="1379.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="621.2" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (46 samples, 2.49%)</title><rect x="623.3" y="1411.0" width="29.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="626.3" y="1422.0">Ph..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.05%)</title><rect x="642.4" y="1395.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="645.4" y="1406.0"></text>
</g>
<g>
<title>JVMState::debug_end() const (1 samples, 0.05%)</title><rect x="643.1" y="1395.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="646.1" y="1406.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (3 samples, 0.16%)</title><rect x="643.7" y="1395.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="646.7" y="1406.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.05%)</title><rect x="645.0" y="1379.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.0" y="1390.0"></text>
</g>
<g>
<title>Node::disconnect_inputs(Node*, Compile*) (1 samples, 0.05%)</title><rect x="645.6" y="1395.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="648.6" y="1406.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.05%)</title><rect x="646.3" y="1395.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="649.3" y="1406.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (3 samples, 0.16%)</title><rect x="646.9" y="1395.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="649.9" y="1406.0"></text>
</g>
<g>
<title>Node_Array::remove(unsigned int) (1 samples, 0.05%)</title><rect x="648.8" y="1395.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="651.8" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (3 samples, 0.16%)</title><rect x="649.5" y="1395.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="652.5" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.05%)</title><rect x="650.1" y="1379.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="653.1" y="1390.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="650.7" y="1379.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="653.7" y="1390.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="651.4" y="1395.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="654.4" y="1406.0"></text>
</g>
<g>
<title>loadINode::rule() const (1 samples, 0.05%)</title><rect x="652.0" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="655.0" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (107 samples, 5.79%)</title><rect x="652.7" y="1411.0" width="68.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="655.7" y="1422.0">PhaseCh..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (3 samples, 0.16%)</title><rect x="666.1" y="1395.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="669.1" y="1406.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="667.3" y="1379.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="670.3" y="1390.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="667.3" y="1363.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="670.3" y="1374.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="667.3" y="1347.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="670.3" y="1358.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.11%)</title><rect x="668.0" y="1395.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="671.0" y="1406.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.11%)</title><rect x="669.2" y="1395.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="672.2" y="1406.0"></text>
</g>
<g>
<title>MachIdealNode::rule() const (1 samples, 0.05%)</title><rect x="669.9" y="1379.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="672.9" y="1390.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.05%)</title><rect x="670.5" y="1395.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="673.5" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (8 samples, 0.43%)</title><rect x="671.2" y="1395.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="674.2" y="1406.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.05%)</title><rect x="673.1" y="1379.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="676.1" y="1390.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.05%)</title><rect x="673.1" y="1363.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="676.1" y="1374.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (3 samples, 0.16%)</title><rect x="673.7" y="1379.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="676.7" y="1390.0"></text>
</g>
<g>
<title>testP_regNode::rule() const (1 samples, 0.05%)</title><rect x="675.6" y="1379.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="678.6" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::adjust_high_pressure_index(Block*, unsigned int&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.05%)</title><rect x="676.3" y="1395.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="679.3" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (46 samples, 2.49%)</title><rect x="676.9" y="1395.0" width="29.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="679.9" y="1406.0">Ph..</text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.11%)</title><rect x="700.5" y="1379.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="703.5" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.32%)</title><rect x="701.8" y="1379.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="704.8" y="1390.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="705.6" y="1379.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="708.6" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (21 samples, 1.14%)</title><rect x="706.3" y="1395.0" width="13.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="709.3" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.16%)</title><rect x="708.2" y="1379.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="711.2" y="1390.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.11%)</title><rect x="710.1" y="1379.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="713.1" y="1390.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (13 samples, 0.70%)</title><rect x="711.4" y="1379.0" width="8.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="714.4" y="1390.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="719.7" y="1395.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="722.7" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.05%)</title><rect x="720.3" y="1395.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="723.3" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (7 samples, 0.38%)</title><rect x="720.9" y="1411.0" width="4.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="723.9" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (6 samples, 0.32%)</title><rect x="721.6" y="1395.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="724.6" y="1406.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.11%)</title><rect x="724.1" y="1379.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="727.1" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (2 samples, 0.11%)</title><rect x="725.4" y="1411.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="728.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (2 samples, 0.11%)</title><rect x="726.7" y="1411.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="729.7" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (1 samples, 0.05%)</title><rect x="728.0" y="1411.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="731.0" y="1422.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.05%)</title><rect x="728.0" y="1395.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="731.0" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (22 samples, 1.19%)</title><rect x="728.6" y="1411.0" width="14.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="731.6" y="1422.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.05%)</title><rect x="735.0" y="1395.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="738.0" y="1406.0"></text>
</g>
<g>
<title>RegMask::Size() const (7 samples, 0.38%)</title><rect x="735.6" y="1395.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="738.6" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.05%)</title><rect x="740.1" y="1395.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="743.1" y="1406.0"></text>
</g>
<g>
<title>TypeInt::make(int) (1 samples, 0.05%)</title><rect x="740.7" y="1395.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="743.7" y="1406.0"></text>
</g>
<g>
<title>cmpOpOper::num_edges() const (1 samples, 0.05%)</title><rect x="741.4" y="1395.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="744.4" y="1406.0"></text>
</g>
<g>
<title>subL_rRegNode::cisc_operand() const (1 samples, 0.05%)</title><rect x="742.0" y="1395.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="745.0" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.85] (9 samples, 0.49%)</title><rect x="742.6" y="1411.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="745.6" y="1422.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.22%)</title><rect x="745.2" y="1395.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="748.2" y="1406.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.05%)</title><rect x="747.7" y="1395.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="750.7" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (7 samples, 0.38%)</title><rect x="748.4" y="1411.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="751.4" y="1422.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (44 samples, 2.38%)</title><rect x="752.8" y="1411.0" width="28.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.8" y="1422.0">Ph..</text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.05%)</title><rect x="761.8" y="1395.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="764.8" y="1406.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.05%)</title><rect x="762.4" y="1395.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="765.4" y="1406.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="762.4" y="1379.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="765.4" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (25 samples, 1.35%)</title><rect x="763.1" y="1395.0" width="15.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="766.1" y="1406.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.05%)</title><rect x="778.4" y="1379.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="781.4" y="1390.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.42] (1 samples, 0.05%)</title><rect x="779.0" y="1395.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="782.0" y="1406.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.11%)</title><rect x="779.6" y="1395.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="782.6" y="1406.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.11%)</title><rect x="780.9" y="1411.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="783.9" y="1422.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.05%)</title><rect x="781.6" y="1395.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="784.6" y="1406.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (24 samples, 1.30%)</title><rect x="782.2" y="1411.0" width="15.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="785.2" y="1422.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.05%)</title><rect x="782.2" y="1395.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="785.2" y="1406.0"></text>
</g>
<g>
<title>PhaseCoalesce::combine_these_two(Node*, Node*) (1 samples, 0.05%)</title><rect x="782.2" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="785.2" y="1390.0"></text>
</g>
<g>
<title>PhaseIFG::Union(unsigned int, unsigned int) (1 samples, 0.05%)</title><rect x="782.2" y="1363.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="785.2" y="1374.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="782.2" y="1347.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="785.2" y="1358.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.05%)</title><rect x="782.8" y="1395.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="785.8" y="1406.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (21 samples, 1.14%)</title><rect x="783.5" y="1395.0" width="13.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="786.5" y="1406.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (9 samples, 0.49%)</title><rect x="784.1" y="1379.0" width="5.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="787.1" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="789.2" y="1363.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="792.2" y="1374.0"></text>
</g>
<g>
<title>LRG::compute_degree(LRG&amp;) const (1 samples, 0.05%)</title><rect x="789.9" y="1379.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="792.9" y="1390.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (8 samples, 0.43%)</title><rect x="790.5" y="1379.0" width="5.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="793.5" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.11%)</title><rect x="794.3" y="1363.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="797.3" y="1374.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.05%)</title><rect x="795.6" y="1379.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="798.6" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="795.6" y="1363.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="798.6" y="1374.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="796.2" y="1379.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="799.2" y="1390.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="796.9" y="1395.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="799.9" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (15 samples, 0.81%)</title><rect x="797.5" y="1411.0" width="9.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="800.5" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.27%)</title><rect x="803.9" y="1395.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="806.9" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (13 samples, 0.70%)</title><rect x="807.1" y="1411.0" width="8.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="810.1" y="1422.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.22%)</title><rect x="812.8" y="1395.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="815.8" y="1406.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.11%)</title><rect x="815.4" y="1411.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="818.4" y="1422.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.05%)</title><rect x="816.0" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="819.0" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (27 samples, 1.46%)</title><rect x="816.7" y="1411.0" width="17.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="819.7" y="1422.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.05%)</title><rect x="824.3" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="827.3" y="1406.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.05%)</title><rect x="825.0" y="1395.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="828.0" y="1406.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (13 samples, 0.70%)</title><rect x="825.6" y="1395.0" width="8.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="828.6" y="1406.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.05%)</title><rect x="830.7" y="1379.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="833.7" y="1390.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (1 samples, 0.05%)</title><rect x="831.3" y="1379.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="834.3" y="1390.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.16%)</title><rect x="832.0" y="1379.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="835.0" y="1390.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.05%)</title><rect x="833.9" y="1411.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="836.9" y="1422.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.05%)</title><rect x="834.5" y="1411.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="837.5" y="1422.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.05%)</title><rect x="835.2" y="1411.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="838.2" y="1422.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.05%)</title><rect x="835.8" y="1411.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="838.8" y="1422.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.05%)</title><rect x="836.4" y="1411.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="839.4" y="1422.0"></text>
</g>
<g>
<title>loadBNode::oper_input_base() const (1 samples, 0.05%)</title><rect x="837.1" y="1411.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="840.1" y="1422.0"></text>
</g>
<g>
<title>rFlagsRegOper::type() const (1 samples, 0.05%)</title><rect x="837.7" y="1411.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="840.7" y="1422.0"></text>
</g>
<g>
<title>storeImmNKlassNode::oper_input_base() const (1 samples, 0.05%)</title><rect x="838.4" y="1411.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="841.4" y="1422.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (2 samples, 0.11%)</title><rect x="839.0" y="1427.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="842.0" y="1438.0"></text>
</g>
<g>
<title>Compile::Optimize() (235 samples, 12.71%)</title><rect x="840.3" y="1443.0" width="149.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="843.3" y="1454.0">Compile::Optimize()</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (4 samples, 0.22%)</title><rect x="840.3" y="1427.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="843.3" y="1438.0"></text>
</g>
<g>
<title>CallNode::has_non_debug_use(Node*) (1 samples, 0.05%)</title><rect x="840.3" y="1411.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="843.3" y="1422.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (3 samples, 0.16%)</title><rect x="840.9" y="1411.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="843.9" y="1422.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.258] (3 samples, 0.16%)</title><rect x="840.9" y="1395.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="843.9" y="1406.0"></text>
</g>
<g>
<title>Node::disconnect_inputs(Node*, Compile*) (1 samples, 0.05%)</title><rect x="842.2" y="1379.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="845.2" y="1390.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (74 samples, 4.00%)</title><rect x="842.8" y="1427.0" width="47.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="845.8" y="1438.0">Comp..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (73 samples, 3.95%)</title><rect x="842.8" y="1411.0" width="46.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="845.8" y="1422.0">Phas..</text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="842.8" y="1395.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="845.8" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="842.8" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="845.8" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::replace_parallel_iv(IdealLoopTree*) (1 samples, 0.05%)</title><rect x="842.8" y="1363.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="845.8" y="1374.0"></text>
</g>
<g>
<title>LoopNode::is_valid_counted_loop() const [clone .part.136] (1 samples, 0.05%)</title><rect x="842.8" y="1347.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="845.8" y="1358.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.22%)</title><rect x="843.5" y="1395.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="846.5" y="1406.0"></text>
</g>
<g>
<title>CountedLoopNode::stride_con() const (1 samples, 0.05%)</title><rect x="843.5" y="1379.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="846.5" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::adjust_loop_exit_prob(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="844.1" y="1379.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="847.1" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="844.7" y="1379.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="847.7" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="844.7" y="1363.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="847.7" y="1374.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="844.7" y="1347.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="847.7" y="1358.0"></text>
</g>
<g>
<title>IdealLoopTree::policy_unroll(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="844.7" y="1331.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="847.7" y="1342.0"></text>
</g>
<g>
<title>IdealLoopTree::policy_unroll_slp_analysis(CountedLoopNode*, PhaseIdealLoop*, int) (1 samples, 0.05%)</title><rect x="844.7" y="1315.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="847.7" y="1326.0"></text>
</g>
<g>
<title>SuperWord::unrolling_analysis(int&amp;) (1 samples, 0.05%)</title><rect x="844.7" y="1299.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="847.7" y="1310.0"></text>
</g>
<g>
<title>SWPointer::SWPointer(MemNode*, SuperWord*, Node_Stack*, bool) (1 samples, 0.05%)</title><rect x="844.7" y="1283.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="847.7" y="1294.0"></text>
</g>
<g>
<title>SWPointer::scaled_iv_plus_offset(Node*) (1 samples, 0.05%)</title><rect x="844.7" y="1267.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="847.7" y="1278.0"></text>
</g>
<g>
<title>SWPointer::offset_plus_k(Node*, bool) (1 samples, 0.05%)</title><rect x="844.7" y="1251.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="847.7" y="1262.0"></text>
</g>
<g>
<title>TypeLong::make(long, long, int) (1 samples, 0.05%)</title><rect x="844.7" y="1235.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="847.7" y="1246.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="845.4" y="1379.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="848.4" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::policy_unswitching(PhaseIdealLoop*) const (1 samples, 0.05%)</title><rect x="845.4" y="1363.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="848.4" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::find_unswitching_candidate(IdealLoopTree const*) const (1 samples, 0.05%)</title><rect x="845.4" y="1347.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="848.4" y="1358.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.11%)</title><rect x="846.0" y="1395.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="849.0" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="846.0" y="1379.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="849.0" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.05%)</title><rect x="846.0" y="1363.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="849.0" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.05%)</title><rect x="846.0" y="1347.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="849.0" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.05%)</title><rect x="846.0" y="1331.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="849.0" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.05%)</title><rect x="846.7" y="1379.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="849.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.05%)</title><rect x="846.7" y="1363.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="849.7" y="1374.0"></text>
</g>
<g>
<title>IdealLoopTree::policy_range_check(PhaseIdealLoop*) const [clone .part.136] (1 samples, 0.05%)</title><rect x="847.3" y="1395.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="850.3" y="1406.0"></text>
</g>
<g>
<title>RangeCheckNode::Opcode() const (1 samples, 0.05%)</title><rect x="847.3" y="1379.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="850.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (10 samples, 0.54%)</title><rect x="847.9" y="1395.0" width="6.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="850.9" y="1406.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.05%)</title><rect x="852.4" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="855.4" y="1390.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.11%)</title><rect x="853.0" y="1379.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="856.0" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (13 samples, 0.70%)</title><rect x="854.3" y="1395.0" width="8.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="857.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (4 samples, 0.22%)</title><rect x="859.4" y="1379.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="862.4" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.126] (1 samples, 0.05%)</title><rect x="860.7" y="1363.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="863.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.05%)</title><rect x="861.3" y="1363.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="864.3" y="1374.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.05%)</title><rect x="862.0" y="1379.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="865.0" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (17 samples, 0.92%)</title><rect x="862.6" y="1395.0" width="10.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="865.6" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (11 samples, 0.59%)</title><rect x="866.4" y="1379.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="869.4" y="1390.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.05%)</title><rect x="868.4" y="1363.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="871.4" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (6 samples, 0.32%)</title><rect x="869.0" y="1363.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="872.0" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (6 samples, 0.32%)</title><rect x="869.0" y="1347.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="872.0" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.05%)</title><rect x="872.8" y="1363.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="875.8" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.16%)</title><rect x="873.5" y="1395.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="876.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.05%)</title><rect x="874.1" y="1379.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="877.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::sort(IdealLoopTree*, IdealLoopTree*) (1 samples, 0.05%)</title><rect x="874.7" y="1379.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="877.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (15 samples, 0.81%)</title><rect x="875.4" y="1395.0" width="9.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="878.4" y="1406.0"></text>
</g>
<g>
<title>CmpINode::Opcode() const (1 samples, 0.05%)</title><rect x="877.3" y="1379.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="880.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (2 samples, 0.11%)</title><rect x="877.9" y="1379.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="880.9" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="878.6" y="1363.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="881.6" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (9 samples, 0.49%)</title><rect x="879.2" y="1379.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="882.2" y="1390.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.05%)</title><rect x="880.5" y="1363.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="883.5" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.05%)</title><rect x="881.1" y="1363.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="884.1" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (2 samples, 0.11%)</title><rect x="881.8" y="1363.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="884.8" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.05%)</title><rect x="881.8" y="1347.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="884.8" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.05%)</title><rect x="882.4" y="1347.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="885.4" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (3 samples, 0.16%)</title><rect x="883.0" y="1363.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.0" y="1374.0"></text>
</g>
<g>
<title>NodeHash::hash_find(Node const*) (1 samples, 0.05%)</title><rect x="883.0" y="1347.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="886.0" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_internal(Node*, Node*) const [clone .part.142] (1 samples, 0.05%)</title><rect x="883.7" y="1347.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="886.7" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.05%)</title><rect x="884.3" y="1347.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="887.3" y="1358.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.22%)</title><rect x="884.9" y="1395.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="887.9" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.22%)</title><rect x="884.9" y="1379.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="887.9" y="1390.0"></text>
</g>
<g>
<title>AddINode::Identity(PhaseGVN*) (1 samples, 0.05%)</title><rect x="884.9" y="1363.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="887.9" y="1374.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="884.9" y="1347.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="887.9" y="1358.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="884.9" y="1331.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="887.9" y="1342.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="885.6" y="1363.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="888.6" y="1374.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.05%)</title><rect x="885.6" y="1347.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="888.6" y="1358.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="885.6" y="1331.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="888.6" y="1342.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="885.6" y="1315.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="888.6" y="1326.0"></text>
</g>
<g>
<title>AddPNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="886.2" y="1363.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="889.2" y="1374.0"></text>
</g>
<g>
<title>PhaseTransform::longcon(long) (1 samples, 0.05%)</title><rect x="886.2" y="1347.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="889.2" y="1358.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="886.2" y="1331.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="889.2" y="1342.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="886.2" y="1315.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="889.2" y="1326.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="886.9" y="1363.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="889.9" y="1374.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.05%)</title><rect x="886.9" y="1347.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="889.9" y="1358.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="886.9" y="1331.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="889.9" y="1342.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="886.9" y="1315.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="889.9" y="1326.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.05%)</title><rect x="887.5" y="1395.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="890.5" y="1406.0"></text>
</g>
<g>
<title>SuperWord::transform_loop(IdealLoopTree*, bool) (2 samples, 0.11%)</title><rect x="888.1" y="1395.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="891.1" y="1406.0"></text>
</g>
<g>
<title>SuperWord::SLP_extract() (2 samples, 0.11%)</title><rect x="888.1" y="1379.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="891.1" y="1390.0"></text>
</g>
<g>
<title>SuperWord::output() (2 samples, 0.11%)</title><rect x="888.1" y="1363.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="891.1" y="1374.0"></text>
</g>
<g>
<title>CountedLoopReserveKit::CountedLoopReserveKit(PhaseIdealLoop*, IdealLoopTree*, bool) (2 samples, 0.11%)</title><rect x="888.1" y="1347.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="891.1" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::create_reserve_version_of_loop(IdealLoopTree*, CountedLoopReserveKit*) (2 samples, 0.11%)</title><rect x="888.1" y="1331.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="891.1" y="1342.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (2 samples, 0.11%)</title><rect x="888.1" y="1315.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="891.1" y="1326.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.05%)</title><rect x="889.4" y="1411.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="892.4" y="1422.0"></text>
</g>
<g>
<title>Compile::print_method(CompilerPhaseType, int) [clone .isra.343] (1 samples, 0.05%)</title><rect x="890.1" y="1427.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.1" y="1438.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (1 samples, 0.05%)</title><rect x="890.1" y="1411.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="893.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="890.1" y="1395.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="893.1" y="1406.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="890.1" y="1379.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="893.1" y="1390.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="890.1" y="1363.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="893.1" y="1374.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="890.1" y="1347.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="893.1" y="1358.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.261] (3 samples, 0.16%)</title><rect x="890.7" y="1427.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="893.7" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.11%)</title><rect x="891.3" y="1411.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="894.3" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="891.3" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="894.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="891.3" y="1379.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="894.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.05%)</title><rect x="891.3" y="1363.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="894.3" y="1374.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.05%)</title><rect x="891.3" y="1347.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="894.3" y="1358.0"></text>
</g>
<g>
<title>TypeInt::singleton() const (1 samples, 0.05%)</title><rect x="892.0" y="1395.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="895.0" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (7 samples, 0.38%)</title><rect x="892.6" y="1427.0" width="4.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="895.6" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (6 samples, 0.32%)</title><rect x="892.6" y="1411.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="895.6" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (5 samples, 0.27%)</title><rect x="893.2" y="1395.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="896.2" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (5 samples, 0.27%)</title><rect x="893.2" y="1379.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="896.2" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.16%)</title><rect x="893.2" y="1363.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="896.2" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1347.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="896.2" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1331.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="896.2" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1315.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.2" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1299.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.2" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1283.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="896.2" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1267.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="896.2" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1251.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="896.2" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1235.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="896.2" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1219.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.2" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1203.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="896.2" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1187.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.2" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1171.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="896.2" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1155.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="896.2" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="896.2" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="896.2" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="896.2" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="896.2" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1075.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.2" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="896.2" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1043.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.2" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1027.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="896.2" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="1011.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="896.2" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="995.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.2" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="979.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="896.2" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="896.2" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="947.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="896.2" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="931.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="896.2" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="896.2" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="899.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="896.2" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="896.2" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="896.2" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="896.2" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="835.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="896.2" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="819.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="896.2" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="896.2" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="787.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="896.2" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="771.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="896.2" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="896.2" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.05%)</title><rect x="893.2" y="739.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.2" y="750.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.05%)</title><rect x="893.2" y="723.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="896.2" y="734.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.05%)</title><rect x="893.2" y="707.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="896.2" y="718.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="893.2" y="691.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="896.2" y="702.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="893.2" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.2" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.11%)</title><rect x="893.9" y="1347.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="896.9" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.11%)</title><rect x="893.9" y="1331.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="896.9" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.9" y="1315.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="896.9" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.9" y="1299.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="896.9" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.9" y="1283.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="896.9" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.9" y="1267.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.9" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="893.9" y="1251.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.9" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.05%)</title><rect x="893.9" y="1235.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="896.9" y="1246.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.05%)</title><rect x="893.9" y="1219.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="896.9" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="894.5" y="1315.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="897.5" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="894.5" y="1299.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="897.5" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="894.5" y="1283.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="897.5" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="894.5" y="1267.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="897.5" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="894.5" y="1251.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="897.5" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.05%)</title><rect x="894.5" y="1235.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="897.5" y="1246.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.05%)</title><rect x="894.5" y="1219.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="897.5" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.11%)</title><rect x="895.2" y="1363.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.2" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.05%)</title><rect x="895.2" y="1347.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="898.2" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1347.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.8" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1331.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="898.8" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1315.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.8" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1299.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="898.8" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1283.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="898.8" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1267.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="898.8" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1251.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.8" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1235.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="898.8" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1219.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="898.8" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1203.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="898.8" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1187.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="898.8" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1171.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="898.8" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1155.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="898.8" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1139.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="898.8" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1123.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="898.8" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1107.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="898.8" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1091.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="898.8" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1075.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="898.8" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1059.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.8" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.05%)</title><rect x="895.8" y="1043.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="898.8" y="1054.0"></text>
</g>
<g>
<title>ProjNode::Opcode() const (1 samples, 0.05%)</title><rect x="896.4" y="1411.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="899.4" y="1422.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.27%)</title><rect x="897.1" y="1427.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="900.1" y="1438.0"></text>
</g>
<g>
<title>CmpUNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="899.0" y="1411.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="902.0" y="1422.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.05%)</title><rect x="899.6" y="1411.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.6" y="1422.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (4 samples, 0.22%)</title><rect x="900.3" y="1427.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="903.3" y="1438.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (4 samples, 0.22%)</title><rect x="900.3" y="1411.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="903.3" y="1422.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.05%)</title><rect x="901.5" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="904.5" y="1406.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.05%)</title><rect x="901.5" y="1379.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="904.5" y="1390.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.05%)</title><rect x="901.5" y="1363.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="904.5" y="1374.0"></text>
</g>
<g>
<title>TypeVect::singleton() const (1 samples, 0.05%)</title><rect x="902.2" y="1395.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="905.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (74 samples, 4.00%)</title><rect x="902.8" y="1427.0" width="47.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="905.8" y="1438.0">Phas..</text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.11%)</title><rect x="902.8" y="1411.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="905.8" y="1422.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.11%)</title><rect x="902.8" y="1395.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="905.8" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.11%)</title><rect x="902.8" y="1379.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="905.8" y="1390.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="902.8" y="1363.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="905.8" y="1374.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="902.8" y="1347.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="905.8" y="1358.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="902.8" y="1331.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="905.8" y="1342.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="902.8" y="1315.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="905.8" y="1326.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="902.8" y="1299.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="905.8" y="1310.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="902.8" y="1283.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="905.8" y="1294.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="902.8" y="1267.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="905.8" y="1278.0"></text>
</g>
<g>
<title>IdealLoopTree::remove_safepoints(PhaseIdealLoop*, bool) (1 samples, 0.05%)</title><rect x="902.8" y="1251.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="905.8" y="1262.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="902.8" y="1235.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="905.8" y="1246.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.05%)</title><rect x="902.8" y="1219.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="905.8" y="1230.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.05%)</title><rect x="902.8" y="1203.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="905.8" y="1214.0"></text>
</g>
<g>
<title>IdealLoopTree::remove_safepoints(PhaseIdealLoop*, bool) (1 samples, 0.05%)</title><rect x="903.5" y="1363.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.5" y="1374.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="904.1" y="1411.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="907.1" y="1422.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="904.1" y="1395.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="907.1" y="1406.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="904.1" y="1379.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="907.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.05%)</title><rect x="904.1" y="1363.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="907.1" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_post_loop(IdealLoopTree*, Node_List&amp;, CountedLoopNode*, CountedLoopEndNode*, Node*, Node*, CountedLoopNode*&amp;) (1 samples, 0.05%)</title><rect x="904.1" y="1347.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="907.1" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.05%)</title><rect x="904.1" y="1331.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="907.1" y="1342.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.05%)</title><rect x="904.1" y="1315.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="907.1" y="1326.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.05%)</title><rect x="904.1" y="1299.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="907.1" y="1310.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.05%)</title><rect x="904.7" y="1411.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="907.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.05%)</title><rect x="904.7" y="1395.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="907.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.05%)</title><rect x="904.7" y="1379.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="907.7" y="1390.0"></text>
</g>
<g>
<title>Invariance::is_invariant(Node*) (1 samples, 0.05%)</title><rect x="904.7" y="1363.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="907.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.22%)</title><rect x="905.4" y="1411.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="908.4" y="1422.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.05%)</title><rect x="907.3" y="1395.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="910.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (12 samples, 0.65%)</title><rect x="907.9" y="1411.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="910.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (2 samples, 0.11%)</title><rect x="913.0" y="1395.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="916.0" y="1406.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (2 samples, 0.11%)</title><rect x="914.3" y="1395.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="917.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (30 samples, 1.62%)</title><rect x="915.6" y="1411.0" width="19.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="918.6" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (22 samples, 1.19%)</title><rect x="920.0" y="1395.0" width="14.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="923.0" y="1406.0"></text>
</g>
<g>
<title>MemBarVolatileNode::Opcode() const (1 samples, 0.05%)</title><rect x="922.6" y="1379.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="925.6" y="1390.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.05%)</title><rect x="923.2" y="1379.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.2" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.05%)</title><rect x="923.9" y="1379.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.9" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (10 samples, 0.54%)</title><rect x="924.5" y="1379.0" width="6.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="927.5" y="1390.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.05%)</title><rect x="925.8" y="1363.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="928.8" y="1374.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.05%)</title><rect x="925.8" y="1347.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="928.8" y="1358.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="925.8" y="1331.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="928.8" y="1342.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="925.8" y="1315.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="928.8" y="1326.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.05%)</title><rect x="926.4" y="1363.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="929.4" y="1374.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="926.4" y="1347.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="929.4" y="1358.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="926.4" y="1331.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="929.4" y="1342.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="926.4" y="1315.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="929.4" y="1326.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.05%)</title><rect x="926.4" y="1299.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="929.4" y="1310.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (4 samples, 0.22%)</title><rect x="927.1" y="1363.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.1" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.11%)</title><rect x="928.3" y="1347.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="931.3" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.11%)</title><rect x="929.6" y="1363.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="932.6" y="1374.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (4 samples, 0.22%)</title><rect x="930.9" y="1379.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="933.9" y="1390.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.05%)</title><rect x="933.5" y="1379.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="936.5" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.05%)</title><rect x="934.1" y="1395.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="937.1" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (8 samples, 0.43%)</title><rect x="934.7" y="1411.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="937.7" y="1422.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.05%)</title><rect x="939.2" y="1395.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="942.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.05%)</title><rect x="939.8" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="942.8" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (6 samples, 0.32%)</title><rect x="940.5" y="1411.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="943.5" y="1422.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.05%)</title><rect x="941.7" y="1395.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="944.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::handle_use(Node*, Node*, small_cache*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="941.7" y="1379.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="944.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::spinup(Node*, Node*, Node*, Node*, Node*, small_cache*) [clone .part.43] (1 samples, 0.05%)</title><rect x="941.7" y="1363.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="944.7" y="1374.0"></text>
</g>
<g>
<title>Dict::operator[](void const*) const (1 samples, 0.05%)</title><rect x="941.7" y="1347.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="944.7" y="1358.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.05%)</title><rect x="942.4" y="1395.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="945.4" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.11%)</title><rect x="943.0" y="1395.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="946.0" y="1406.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.05%)</title><rect x="943.0" y="1379.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="946.0" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.05%)</title><rect x="943.7" y="1379.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="946.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.05%)</title><rect x="943.7" y="1363.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="946.7" y="1374.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.38%)</title><rect x="944.3" y="1411.0" width="4.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.3" y="1422.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.05%)</title><rect x="944.3" y="1395.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="947.3" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.32%)</title><rect x="944.9" y="1395.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="947.9" y="1406.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="944.9" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.9" y="1390.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.05%)</title><rect x="944.9" y="1363.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="947.9" y="1374.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="944.9" y="1347.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="947.9" y="1358.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="944.9" y="1331.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="947.9" y="1342.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="945.6" y="1379.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="948.6" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="946.2" y="1379.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="949.2" y="1390.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.11%)</title><rect x="946.9" y="1379.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.9" y="1390.0"></text>
</g>
<g>
<title>Node::set_req_X(unsigned int, Node*, PhaseIterGVN*) (1 samples, 0.05%)</title><rect x="946.9" y="1363.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.9" y="1374.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="947.5" y="1363.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="950.5" y="1374.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="948.1" y="1379.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="951.1" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (1 samples, 0.05%)</title><rect x="948.1" y="1363.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="951.1" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1347.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.1" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1331.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="951.1" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1315.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="951.1" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1299.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="951.1" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1283.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="951.1" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1267.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="951.1" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1251.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="951.1" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1235.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="951.1" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1219.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="951.1" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1203.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="951.1" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1187.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="951.1" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1171.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="951.1" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="951.1" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="951.1" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1123.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="951.1" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1107.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.1" y="1118.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="948.1" y="1091.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="951.1" y="1102.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="948.1" y="1075.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="951.1" y="1086.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.05%)</title><rect x="948.8" y="1411.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="951.8" y="1422.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.05%)</title><rect x="949.4" y="1411.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="952.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (4 samples, 0.22%)</title><rect x="950.0" y="1427.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="953.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (3 samples, 0.16%)</title><rect x="950.7" y="1411.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="953.7" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (42 samples, 2.27%)</title><rect x="952.6" y="1427.0" width="26.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="955.6" y="1438.0">P..</text>
</g>
<g>
<title>IfProjNode::Identity(PhaseGVN*) (1 samples, 0.05%)</title><rect x="952.6" y="1411.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="955.6" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.05%)</title><rect x="953.2" y="1411.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="956.2" y="1422.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.05%)</title><rect x="953.2" y="1395.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="956.2" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (40 samples, 2.16%)</title><rect x="953.9" y="1411.0" width="25.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="956.9" y="1422.0">P..</text>
</g>
<g>
<title>CheckCastPPNode::Identity(PhaseGVN*) (1 samples, 0.05%)</title><rect x="953.9" y="1395.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="956.9" y="1406.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.05%)</title><rect x="953.9" y="1379.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.9" y="1390.0"></text>
</g>
<g>
<title>CmpINode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="954.5" y="1395.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.5" y="1406.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.05%)</title><rect x="954.5" y="1379.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="957.5" y="1390.0"></text>
</g>
<g>
<title>ConvI2LNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="955.1" y="1395.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="958.1" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="955.1" y="1379.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="958.1" y="1390.0"></text>
</g>
<g>
<title>PhaseTransform::makecon(Type const*) (1 samples, 0.05%)</title><rect x="955.1" y="1363.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="958.1" y="1374.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.05%)</title><rect x="955.1" y="1347.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="958.1" y="1358.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.05%)</title><rect x="955.1" y="1331.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="958.1" y="1342.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (6 samples, 0.32%)</title><rect x="955.8" y="1395.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="958.8" y="1406.0"></text>
</g>
<g>
<title>IfNode::search_identical(int) (1 samples, 0.05%)</title><rect x="955.8" y="1379.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="958.8" y="1390.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="956.4" y="1379.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="959.4" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.11%)</title><rect x="957.1" y="1379.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="960.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.11%)</title><rect x="957.1" y="1363.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="960.1" y="1374.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.11%)</title><rect x="957.1" y="1347.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="960.1" y="1358.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (2 samples, 0.11%)</title><rect x="958.3" y="1379.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="961.3" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.11%)</title><rect x="958.3" y="1363.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="961.3" y="1374.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.05%)</title><rect x="959.0" y="1347.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="962.0" y="1358.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="959.6" y="1395.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="962.6" y="1406.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.05%)</title><rect x="960.3" y="1395.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="963.3" y="1406.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (3 samples, 0.16%)</title><rect x="960.9" y="1395.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="963.9" y="1406.0"></text>
</g>
<g>
<title>NodeHash::grow() (2 samples, 0.11%)</title><rect x="961.5" y="1379.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="964.5" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (6 samples, 0.32%)</title><rect x="962.8" y="1395.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="965.8" y="1406.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.05%)</title><rect x="964.1" y="1379.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="967.1" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.11%)</title><rect x="964.7" y="1379.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="967.7" y="1390.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.05%)</title><rect x="964.7" y="1363.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="967.7" y="1374.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.05%)</title><rect x="965.4" y="1363.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="968.4" y="1374.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.05%)</title><rect x="966.0" y="1379.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="969.0" y="1390.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.05%)</title><rect x="966.0" y="1363.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="969.0" y="1374.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (5 samples, 0.27%)</title><rect x="966.6" y="1395.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="969.6" y="1406.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (2 samples, 0.11%)</title><rect x="967.3" y="1379.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="970.3" y="1390.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (2 samples, 0.11%)</title><rect x="968.6" y="1379.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="971.6" y="1390.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.05%)</title><rect x="969.8" y="1395.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="972.8" y="1406.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="970.5" y="1395.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="973.5" y="1406.0"></text>
</g>
<g>
<title>RangeCheckNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="971.1" y="1395.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="974.1" y="1406.0"></text>
</g>
<g>
<title>RangeCheckNode::is_range_check(Node*&amp;, Node*&amp;, int&amp;) (1 samples, 0.05%)</title><rect x="971.1" y="1379.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="974.1" y="1390.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.05%)</title><rect x="971.1" y="1363.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="974.1" y="1374.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (7 samples, 0.38%)</title><rect x="971.7" y="1395.0" width="4.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="974.7" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (4 samples, 0.22%)</title><rect x="971.7" y="1379.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="974.7" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (4 samples, 0.22%)</title><rect x="971.7" y="1363.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="974.7" y="1374.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (4 samples, 0.22%)</title><rect x="971.7" y="1347.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="974.7" y="1358.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.05%)</title><rect x="974.3" y="1379.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="977.3" y="1390.0"></text>
</g>
<g>
<title>VectorSet::VectorSet(Arena*) (1 samples, 0.05%)</title><rect x="974.3" y="1363.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.3" y="1374.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.11%)</title><rect x="974.9" y="1379.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="977.9" y="1390.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.05%)</title><rect x="975.6" y="1363.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="978.6" y="1374.0"></text>
</g>
<g>
<title>RootNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="976.2" y="1395.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="979.2" y="1406.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.16%)</title><rect x="976.8" y="1395.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="979.8" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (3 samples, 0.16%)</title><rect x="976.8" y="1379.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="979.8" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1363.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.8" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1347.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="979.8" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1331.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="979.8" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1315.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="979.8" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1299.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.8" y="1310.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1283.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="979.8" y="1294.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1267.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="979.8" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1251.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.8" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1235.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="979.8" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1219.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="979.8" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.16%)</title><rect x="976.8" y="1203.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="979.8" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.11%)</title><rect x="976.8" y="1187.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="979.8" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="976.8" y="1171.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.8" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="976.8" y="1155.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="979.8" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="976.8" y="1139.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="979.8" y="1150.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="976.8" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.8" y="1134.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="976.8" y="1107.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="979.8" y="1118.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="977.5" y="1171.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="980.5" y="1182.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="977.5" y="1155.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="980.5" y="1166.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="978.1" y="1187.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="981.1" y="1198.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="978.1" y="1171.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="981.1" y="1182.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.05%)</title><rect x="978.8" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="981.8" y="1406.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.05%)</title><rect x="979.4" y="1427.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="982.4" y="1438.0"></text>
</g>
<g>
<title>PhaseMacroExpand::process_users_of_allocation(CallNode*) (1 samples, 0.05%)</title><rect x="979.4" y="1411.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="982.4" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="979.4" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="982.4" y="1406.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (9 samples, 0.49%)</title><rect x="980.0" y="1427.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="983.0" y="1438.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.32%)</title><rect x="980.0" y="1411.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="983.0" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.22%)</title><rect x="980.7" y="1395.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="983.7" y="1406.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.11%)</title><rect x="980.7" y="1379.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="983.7" y="1390.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="982.0" y="1379.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.0" y="1390.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.05%)</title><rect x="982.0" y="1363.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.0" y="1374.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="982.6" y="1379.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.6" y="1390.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="982.6" y="1363.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="985.6" y="1374.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.05%)</title><rect x="983.2" y="1395.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="986.2" y="1406.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (3 samples, 0.16%)</title><rect x="983.9" y="1411.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="986.9" y="1422.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.05%)</title><rect x="983.9" y="1395.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="986.9" y="1406.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.05%)</title><rect x="983.9" y="1379.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="986.9" y="1390.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.11%)</title><rect x="984.5" y="1395.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.5" y="1406.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.11%)</title><rect x="984.5" y="1379.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="987.5" y="1390.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (2 samples, 0.11%)</title><rect x="984.5" y="1363.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="987.5" y="1374.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.22%)</title><rect x="985.8" y="1427.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="988.8" y="1438.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.05%)</title><rect x="985.8" y="1411.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="988.8" y="1422.0"></text>
</g>
<g>
<title>CastIINode::Opcode() const (1 samples, 0.05%)</title><rect x="985.8" y="1395.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="988.8" y="1406.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.16%)</title><rect x="986.4" y="1411.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="989.4" y="1422.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.11%)</title><rect x="986.4" y="1395.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="989.4" y="1406.0"></text>
</g>
<g>
<title>Compile::update_dead_node_list(Unique_Node_List&amp;) (1 samples, 0.05%)</title><rect x="987.7" y="1395.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.7" y="1406.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (3 samples, 0.16%)</title><rect x="988.3" y="1427.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="991.3" y="1438.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (2 samples, 0.11%)</title><rect x="990.2" y="1443.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.2" y="1454.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.05%)</title><rect x="990.2" y="1427.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.2" y="1438.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (1 samples, 0.05%)</title><rect x="990.9" y="1427.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="993.9" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="990.9" y="1411.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="993.9" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="990.9" y="1395.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="993.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="990.9" y="1379.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="993.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="990.9" y="1363.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.9" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="990.9" y="1347.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="993.9" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="990.9" y="1331.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="993.9" y="1342.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="990.9" y="1315.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="993.9" y="1326.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="990.9" y="1299.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="993.9" y="1310.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="990.9" y="1283.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="993.9" y="1294.0"></text>
</g>
<g>
<title>ciMethod::has_compiled_code() (1 samples, 0.05%)</title><rect x="990.9" y="1267.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="993.9" y="1278.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.11%)</title><rect x="991.5" y="1443.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="994.5" y="1454.0"></text>
</g>
<g>
<title>Node::has_special_unique_user() const (1 samples, 0.05%)</title><rect x="992.2" y="1427.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.2" y="1438.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.05%)</title><rect x="992.8" y="1443.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="995.8" y="1454.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.05%)</title><rect x="992.8" y="1427.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="995.8" y="1438.0"></text>
</g>
<g>
<title>DictI::operator++() (1 samples, 0.05%)</title><rect x="992.8" y="1411.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="995.8" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (55 samples, 2.97%)</title><rect x="993.4" y="1443.0" width="35.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.4" y="1454.0">Par..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (55 samples, 2.97%)</title><rect x="993.4" y="1427.0" width="35.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="996.4" y="1438.0">Par..</text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.05%)</title><rect x="993.4" y="1411.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="996.4" y="1422.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.05%)</title><rect x="993.4" y="1395.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="996.4" y="1406.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.05%)</title><rect x="993.4" y="1379.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="996.4" y="1390.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.05%)</title><rect x="993.4" y="1363.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="996.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (54 samples, 2.92%)</title><rect x="994.1" y="1411.0" width="34.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.1" y="1422.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (54 samples, 2.92%)</title><rect x="994.1" y="1395.0" width="34.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="997.1" y="1406.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (54 samples, 2.92%)</title><rect x="994.1" y="1379.0" width="34.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="997.1" y="1390.0">Pa..</text>
</g>
<g>
<title>Parse::add_safepoint() (1 samples, 0.05%)</title><rect x="994.1" y="1363.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="997.1" y="1374.0"></text>
</g>
<g>
<title>AddPNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="994.1" y="1347.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="997.1" y="1358.0"></text>
</g>
<g>
<title>Parse::do_call() (49 samples, 2.65%)</title><rect x="994.7" y="1363.0" width="31.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="997.7" y="1374.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.16%)</title><rect x="994.7" y="1347.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.7" y="1358.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.16%)</title><rect x="994.7" y="1331.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="997.7" y="1342.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.16%)</title><rect x="994.7" y="1315.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="997.7" y="1326.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="994.7" y="1299.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="997.7" y="1310.0"></text>
</g>
<g>
<title>is_init_with_ea(ciMethod*, ciMethod*, Compile*) (1 samples, 0.05%)</title><rect x="994.7" y="1283.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="997.7" y="1294.0"></text>
</g>
<g>
<title>ciMethod::is_initializer() const (1 samples, 0.05%)</title><rect x="994.7" y="1267.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="997.7" y="1278.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.11%)</title><rect x="995.4" y="1299.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.4" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.11%)</title><rect x="995.4" y="1283.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="998.4" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="995.4" y="1267.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="998.4" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="995.4" y="1251.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="998.4" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="995.4" y="1235.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="998.4" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="995.4" y="1219.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="998.4" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.05%)</title><rect x="995.4" y="1203.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="998.4" y="1214.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="995.4" y="1187.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="998.4" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="995.4" y="1171.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="998.4" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="995.4" y="1155.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="998.4" y="1166.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="995.4" y="1139.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="998.4" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) (1 samples, 0.05%)</title><rect x="996.0" y="1267.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="999.0" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (27 samples, 1.46%)</title><rect x="996.6" y="1347.0" width="17.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="999.6" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (27 samples, 1.46%)</title><rect x="996.6" y="1331.0" width="17.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="999.6" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (26 samples, 1.41%)</title><rect x="996.6" y="1315.0" width="16.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="999.6" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (26 samples, 1.41%)</title><rect x="996.6" y="1299.0" width="16.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="999.6" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (26 samples, 1.41%)</title><rect x="996.6" y="1283.0" width="16.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="999.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (26 samples, 1.41%)</title><rect x="996.6" y="1267.0" width="16.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="999.6" y="1278.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="996.6" y="1251.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="999.6" y="1262.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="996.6" y="1235.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="999.6" y="1246.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="996.6" y="1219.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="999.6" y="1230.0"></text>
</g>
<g>
<title>is_init_with_ea(ciMethod*, ciMethod*, Compile*) (1 samples, 0.05%)</title><rect x="996.6" y="1203.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="999.6" y="1214.0"></text>
</g>
<g>
<title>ciMethod::is_initializer() const (1 samples, 0.05%)</title><rect x="996.6" y="1187.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="999.6" y="1198.0"></text>
</g>
<g>
<title>Method::is_initializer() const (1 samples, 0.05%)</title><rect x="996.6" y="1171.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="999.6" y="1182.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="997.3" y="1251.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1000.3" y="1262.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.05%)</title><rect x="997.3" y="1235.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1000.3" y="1246.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.181] (1 samples, 0.05%)</title><rect x="997.3" y="1219.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1000.3" y="1230.0"></text>
</g>
<g>
<title>CatchNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="997.3" y="1203.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1000.3" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (20 samples, 1.08%)</title><rect x="997.9" y="1251.0" width="12.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1000.9" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 1.08%)</title><rect x="997.9" y="1235.0" width="12.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1000.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 1.08%)</title><rect x="997.9" y="1219.0" width="12.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 1.08%)</title><rect x="997.9" y="1203.0" width="12.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1000.9" y="1214.0"></text>
</g>
<g>
<title>GraphKit::stopped() (1 samples, 0.05%)</title><rect x="997.9" y="1187.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.05%)</title><rect x="998.5" y="1187.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1001.5" y="1198.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.05%)</title><rect x="998.5" y="1171.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1001.5" y="1182.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.05%)</title><rect x="998.5" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.5" y="1166.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.05%)</title><rect x="998.5" y="1139.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 0.97%)</title><rect x="999.2" y="1187.0" width="11.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1002.2" y="1198.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.05%)</title><rect x="999.2" y="1171.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1002.2" y="1182.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.05%)</title><rect x="999.8" y="1171.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.8" y="1182.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const*&amp;) (1 samples, 0.05%)</title><rect x="999.8" y="1155.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1002.8" y="1166.0"></text>
</g>
<g>
<title>GraphKit::load_array_length(Node*) (1 samples, 0.05%)</title><rect x="999.8" y="1139.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.8" y="1150.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="999.8" y="1123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.8" y="1134.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.05%)</title><rect x="999.8" y="1107.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1002.8" y="1118.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="999.8" y="1091.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.8" y="1102.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="999.8" y="1075.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.8" y="1086.0"></text>
</g>
<g>
<title>TypeLong::eq(Type const*) const (1 samples, 0.05%)</title><rect x="999.8" y="1059.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1002.8" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.70%)</title><rect x="1000.5" y="1171.0" width="8.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1003.5" y="1182.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1000.5" y="1155.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1003.5" y="1166.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1000.5" y="1139.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1003.5" y="1150.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1000.5" y="1123.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1003.5" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.05%)</title><rect x="1000.5" y="1107.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1003.5" y="1118.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.05%)</title><rect x="1000.5" y="1091.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.5" y="1102.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.05%)</title><rect x="1000.5" y="1075.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1003.5" y="1086.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.05%)</title><rect x="1000.5" y="1059.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1003.5" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.49%)</title><rect x="1001.1" y="1155.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1004.1" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.49%)</title><rect x="1001.1" y="1139.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1004.1" y="1150.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.05%)</title><rect x="1001.1" y="1123.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1004.1" y="1134.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.05%)</title><rect x="1001.1" y="1107.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1004.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.43%)</title><rect x="1001.7" y="1123.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1004.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.43%)</title><rect x="1001.7" y="1107.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1004.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.43%)</title><rect x="1001.7" y="1091.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1004.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.43%)</title><rect x="1001.7" y="1075.0" width="5.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.7" y="1086.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1001.7" y="1059.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1004.7" y="1070.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1001.7" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1004.7" y="1054.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1001.7" y="1027.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1004.7" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.05%)</title><rect x="1001.7" y="1011.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1004.7" y="1022.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.05%)</title><rect x="1001.7" y="995.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1004.7" y="1006.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.05%)</title><rect x="1001.7" y="979.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1004.7" y="990.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.05%)</title><rect x="1001.7" y="963.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1004.7" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.27%)</title><rect x="1002.4" y="1059.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1005.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.27%)</title><rect x="1002.4" y="1043.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1005.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.22%)</title><rect x="1002.4" y="1027.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1005.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.22%)</title><rect x="1002.4" y="1011.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1005.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.16%)</title><rect x="1003.0" y="995.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1006.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.16%)</title><rect x="1003.0" y="979.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1006.0" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1003.0" y="963.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.0" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.16%)</title><rect x="1003.0" y="947.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1006.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.16%)</title><rect x="1003.0" y="931.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1006.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.16%)</title><rect x="1003.0" y="915.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.16%)</title><rect x="1003.0" y="899.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1006.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.11%)</title><rect x="1003.0" y="883.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1003.0" y="867.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1006.0" y="878.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1003.0" y="851.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1006.0" y="862.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1003.0" y="835.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1006.0" y="846.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1003.0" y="819.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.0" y="830.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1003.0" y="803.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1006.0" y="814.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1003.0" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1006.0" y="798.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1003.0" y="771.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.0" y="782.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.05%)</title><rect x="1003.0" y="755.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1006.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1003.7" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.7" y="878.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1003.7" y="851.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.7" y="862.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1003.7" y="835.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1006.7" y="846.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1003.7" y="819.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1006.7" y="830.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1003.7" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.7" y="814.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1003.7" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.7" y="798.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1003.7" y="771.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1006.7" y="782.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (1 samples, 0.05%)</title><rect x="1003.7" y="755.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1006.7" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1003.7" y="739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1006.7" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1003.7" y="723.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1006.7" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1003.7" y="707.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1006.7" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1003.7" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1006.7" y="702.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="1003.7" y="675.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1006.7" y="686.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="1003.7" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.7" y="670.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.05%)</title><rect x="1004.3" y="883.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1007.3" y="894.0"></text>
</g>
<g>
<title>Parse::call_register_finalizer() (1 samples, 0.05%)</title><rect x="1004.3" y="867.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1007.3" y="878.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.05%)</title><rect x="1004.3" y="851.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1007.3" y="862.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.05%)</title><rect x="1004.3" y="835.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1007.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.05%)</title><rect x="1004.9" y="1027.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1007.9" y="1038.0"></text>
</g>
<g>
<title>GraphKit::use_exception_state(SafePointNode*) (1 samples, 0.05%)</title><rect x="1004.9" y="1011.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1007.9" y="1022.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1004.9" y="995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1007.9" y="1006.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.05%)</title><rect x="1004.9" y="979.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1007.9" y="990.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1005.6" y="1059.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1008.6" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1005.6" y="1043.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1008.6" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1005.6" y="1027.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1008.6" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1005.6" y="1011.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.6" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1005.6" y="995.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1008.6" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1005.6" y="979.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.6" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1005.6" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1008.6" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1005.6" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.6" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1005.6" y="931.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1008.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1005.6" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1008.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1005.6" y="899.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1008.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1005.6" y="883.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1008.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1005.6" y="867.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1008.6" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1005.6" y="851.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1008.6" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1005.6" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1008.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1005.6" y="819.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1008.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1005.6" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1008.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1005.6" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1008.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1005.6" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1008.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1005.6" y="755.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1008.6" y="766.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1005.6" y="739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1008.6" y="750.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1005.6" y="723.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.6" y="734.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1005.6" y="707.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.6" y="718.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.05%)</title><rect x="1005.6" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1008.6" y="702.0"></text>
</g>
<g>
<title>GraphKit::sync_kit(IdealKit&amp;) (1 samples, 0.05%)</title><rect x="1005.6" y="675.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.6" y="686.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.05%)</title><rect x="1005.6" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1008.6" y="670.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.05%)</title><rect x="1005.6" y="643.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1008.6" y="654.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.05%)</title><rect x="1005.6" y="627.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1008.6" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.2" y="1043.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1009.2" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.2" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1009.2" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1006.2" y="1011.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1006.2" y="995.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1006.2" y="979.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1006.2" y="963.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1009.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1006.2" y="947.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1009.2" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.2" y="931.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1009.2" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1006.2" y="915.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1009.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1006.2" y="899.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1006.2" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1006.2" y="867.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1006.2" y="851.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.2" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.2" y="835.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1009.2" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.2" y="819.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.2" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1006.2" y="803.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1006.2" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1006.2" y="771.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1009.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1006.2" y="755.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1006.2" y="739.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.2" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.2" y="723.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.2" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1009.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1006.2" y="691.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1006.2" y="675.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1006.2" y="659.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1006.2" y="643.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.2" y="654.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1006.2" y="627.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.2" y="638.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.05%)</title><rect x="1006.2" y="611.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1009.2" y="622.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.05%)</title><rect x="1006.2" y="595.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.2" y="606.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.05%)</title><rect x="1006.2" y="579.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.2" y="590.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1006.8" y="1155.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.8" y="1166.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1006.8" y="1139.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1009.8" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1006.8" y="1123.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1009.8" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1006.8" y="1107.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1006.8" y="1091.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1006.8" y="1075.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.8" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1006.8" y="1059.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.8" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1006.8" y="1043.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.8" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1006.8" y="1027.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.8" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1006.8" y="1011.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1006.8" y="995.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1009.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1006.8" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1006.8" y="963.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.05%)</title><rect x="1006.8" y="947.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1009.8" y="958.0"></text>
</g>
<g>
<title>Parse::Block::successor_for_bci(int) (1 samples, 0.05%)</title><rect x="1006.8" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1009.8" y="942.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1007.5" y="1027.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1010.5" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1007.5" y="1011.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1010.5" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1007.5" y="995.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1007.5" y="979.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1010.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1007.5" y="963.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1007.5" y="947.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1010.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1007.5" y="931.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1010.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1007.5" y="915.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.5" y="926.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.05%)</title><rect x="1007.5" y="899.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1010.5" y="910.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="1007.5" y="883.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1010.5" y="894.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1007.5" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1010.5" y="878.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1007.5" y="851.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.5" y="862.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.05%)</title><rect x="1007.5" y="835.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1010.5" y="846.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.05%)</title><rect x="1008.1" y="1155.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1011.1" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1008.1" y="1139.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.1" y="1150.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.05%)</title><rect x="1008.1" y="1123.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.11%)</title><rect x="1008.8" y="1171.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1011.8" y="1182.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1008.8" y="1155.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.8" y="1166.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.05%)</title><rect x="1008.8" y="1139.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1011.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1009.4" y="1155.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1012.4" y="1166.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1009.4" y="1139.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1012.4" y="1150.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1009.4" y="1123.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1012.4" y="1134.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1009.4" y="1107.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.4" y="1118.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.05%)</title><rect x="1009.4" y="1091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1012.4" y="1102.0"></text>
</g>
<g>
<title>TypeTuple::xdual() const (1 samples, 0.05%)</title><rect x="1009.4" y="1075.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1012.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.05%)</title><rect x="1010.0" y="1171.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1013.0" y="1182.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.05%)</title><rect x="1010.0" y="1155.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1013.0" y="1166.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1010.0" y="1139.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1013.0" y="1150.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="1010.0" y="1123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1013.0" y="1134.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1010.0" y="1107.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1013.0" y="1118.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1010.0" y="1091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1013.0" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1010.7" y="1251.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1013.7" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1010.7" y="1235.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1013.7" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1010.7" y="1219.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1013.7" y="1230.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.05%)</title><rect x="1010.7" y="1203.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1013.7" y="1214.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1010.7" y="1187.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1013.7" y="1198.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1010.7" y="1171.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1013.7" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1010.7" y="1155.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1013.7" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1010.7" y="1139.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1013.7" y="1150.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.05%)</title><rect x="1010.7" y="1123.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1013.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1011.3" y="1203.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1014.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1011.3" y="1187.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1011.3" y="1171.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1014.3" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1011.3" y="1155.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.3" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1011.3" y="1139.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1014.3" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1011.3" y="1123.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1014.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1011.3" y="1107.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1011.3" y="1091.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1011.3" y="1075.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1011.3" y="1059.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.3" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1011.3" y="1043.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1014.3" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1011.3" y="1027.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1014.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1011.3" y="1011.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1011.3" y="995.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1014.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1011.3" y="979.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1011.3" y="963.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1014.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1011.3" y="947.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.3" y="958.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1011.3" y="931.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.3" y="942.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1011.3" y="915.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1014.3" y="926.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1011.3" y="899.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.3" y="910.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1011.3" y="883.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1014.3" y="894.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1011.3" y="867.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.3" y="878.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1011.3" y="851.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.3" y="862.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1011.3" y="835.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1014.3" y="846.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.05%)</title><rect x="1011.3" y="819.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1014.3" y="830.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="1011.3" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.3" y="814.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1011.3" y="787.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1014.3" y="798.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1011.3" y="771.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1014.3" y="782.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_boxed_value_offset(int) const (1 samples, 0.05%)</title><rect x="1011.3" y="755.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1014.3" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::box_klass_type(Klass*) (1 samples, 0.05%)</title><rect x="1011.3" y="739.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.3" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1011.9" y="1235.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1014.9" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1011.9" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1014.9" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1011.9" y="1203.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1014.9" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1011.9" y="1187.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1014.9" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1011.9" y="1171.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1014.9" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1011.9" y="1155.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1011.9" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.9" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1011.9" y="1123.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1014.9" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1011.9" y="1107.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1014.9" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1011.9" y="1091.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1011.9" y="1075.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1014.9" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1011.9" y="1059.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1014.9" y="1070.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1011.9" y="1043.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1014.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1011.9" y="1027.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.9" y="1038.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1011.9" y="1011.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1014.9" y="1022.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1011.9" y="995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.9" y="1006.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1011.9" y="979.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.9" y="990.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1011.9" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.9" y="974.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1011.9" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.9" y="958.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1011.9" y="931.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.9" y="942.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1011.9" y="915.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1014.9" y="926.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (1 samples, 0.05%)</title><rect x="1011.9" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.9" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="883.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.9" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="867.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1014.9" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="851.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.9" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1014.9" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1014.9" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="803.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1014.9" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="787.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.9" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="771.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1014.9" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="755.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1014.9" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="739.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.9" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="723.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1014.9" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="707.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.9" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="691.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1014.9" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="675.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.9" y="686.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="1011.9" y="659.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1014.9" y="670.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.05%)</title><rect x="1011.9" y="643.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1014.9" y="654.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.05%)</title><rect x="1012.6" y="1251.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1015.6" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1012.6" y="1235.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1015.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_method_entry() (1 samples, 0.05%)</title><rect x="1013.2" y="1315.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1016.2" y="1326.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_parameters_for_speculation() (1 samples, 0.05%)</title><rect x="1013.2" y="1299.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1016.2" y="1310.0"></text>
</g>
<g>
<title>ciMethod::parameter_profiled_type(int, ciKlass*&amp;, ProfilePtrKind&amp;) (1 samples, 0.05%)</title><rect x="1013.2" y="1283.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1016.2" y="1294.0"></text>
</g>
<g>
<title>MethodData::profile_parameters() (1 samples, 0.05%)</title><rect x="1013.2" y="1267.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1016.2" y="1278.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (16 samples, 0.87%)</title><rect x="1013.9" y="1347.0" width="10.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1016.9" y="1358.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.05%)</title><rect x="1013.9" y="1331.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1016.9" y="1342.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.05%)</title><rect x="1013.9" y="1315.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1016.9" y="1326.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1013.9" y="1299.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1016.9" y="1310.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1013.9" y="1283.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1016.9" y="1294.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1013.9" y="1267.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.9" y="1278.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.05%)</title><rect x="1013.9" y="1251.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1016.9" y="1262.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.05%)</title><rect x="1013.9" y="1235.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1016.9" y="1246.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1013.9" y="1219.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1016.9" y="1230.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.05%)</title><rect x="1013.9" y="1203.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1016.9" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.49%)</title><rect x="1014.5" y="1331.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.5" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.49%)</title><rect x="1014.5" y="1315.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.5" y="1326.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.05%)</title><rect x="1014.5" y="1299.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1017.5" y="1310.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1014.5" y="1283.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1017.5" y="1294.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1014.5" y="1267.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1017.5" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1014.5" y="1251.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.5" y="1262.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1014.5" y="1235.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.5" y="1246.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1014.5" y="1219.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1017.5" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1014.5" y="1203.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.43%)</title><rect x="1015.1" y="1299.0" width="5.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1018.1" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.43%)</title><rect x="1015.1" y="1283.0" width="5.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1018.1" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.43%)</title><rect x="1015.1" y="1267.0" width="5.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1018.1" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.43%)</title><rect x="1015.1" y="1251.0" width="5.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.1" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1015.1" y="1235.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.1" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.16%)</title><rect x="1015.1" y="1219.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1018.1" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.16%)</title><rect x="1015.1" y="1203.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1018.1" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.16%)</title><rect x="1015.1" y="1187.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1018.1" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.16%)</title><rect x="1015.1" y="1171.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1018.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1015.1" y="1155.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1018.1" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1015.1" y="1139.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1018.1" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1015.1" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1018.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1015.1" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1015.1" y="1091.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1018.1" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1015.1" y="1075.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1015.1" y="1059.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1018.1" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1015.1" y="1043.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.1" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1015.1" y="1027.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1018.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1015.1" y="1011.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1018.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1015.1" y="995.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1018.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1015.1" y="979.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_newarray(BasicType) (1 samples, 0.05%)</title><rect x="1015.1" y="963.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.1" y="974.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.05%)</title><rect x="1015.1" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1018.1" y="958.0"></text>
</g>
<g>
<title>TypeKlassPtr::as_instance_type() const (1 samples, 0.05%)</title><rect x="1015.1" y="931.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1018.1" y="942.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1015.1" y="915.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1018.1" y="926.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1015.1" y="899.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.1" y="910.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1015.1" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1018.1" y="894.0"></text>
</g>
<g>
<title>TypeAryPtr::hash() const (1 samples, 0.05%)</title><rect x="1015.1" y="867.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.11%)</title><rect x="1015.8" y="1155.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1018.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1015.8" y="1139.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1018.8" y="1150.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1015.8" y="1123.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1018.8" y="1134.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1015.8" y="1107.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1018.8" y="1118.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1015.8" y="1091.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.8" y="1102.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.05%)</title><rect x="1015.8" y="1075.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1018.8" y="1086.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1015.8" y="1059.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1018.8" y="1070.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1015.8" y="1043.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.8" y="1054.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="1015.8" y="1027.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1018.8" y="1038.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.05%)</title><rect x="1015.8" y="1011.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1018.8" y="1022.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.05%)</title><rect x="1015.8" y="995.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1018.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1016.4" y="1139.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1019.4" y="1150.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1016.4" y="1123.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1019.4" y="1134.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1016.4" y="1107.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1019.4" y="1118.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1016.4" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1019.4" y="1102.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.05%)</title><rect x="1016.4" y="1075.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1019.4" y="1086.0"></text>
</g>
<g>
<title>IdealKit::end_if() (1 samples, 0.05%)</title><rect x="1016.4" y="1059.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1019.4" y="1070.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.05%)</title><rect x="1016.4" y="1043.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1019.4" y="1054.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.27%)</title><rect x="1017.1" y="1235.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1020.1" y="1246.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.05%)</title><rect x="1017.1" y="1219.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1020.1" y="1230.0"></text>
</g>
<g>
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.05%)</title><rect x="1017.1" y="1203.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1020.1" y="1214.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.05%)</title><rect x="1017.1" y="1187.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.1" y="1198.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.05%)</title><rect x="1017.1" y="1171.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.1" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.22%)</title><rect x="1017.7" y="1219.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1020.7" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.22%)</title><rect x="1017.7" y="1203.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.22%)</title><rect x="1017.7" y="1187.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1020.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.22%)</title><rect x="1017.7" y="1171.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1020.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.22%)</title><rect x="1017.7" y="1155.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1020.7" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.16%)</title><rect x="1017.7" y="1139.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.7" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1017.7" y="1123.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1020.7" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1017.7" y="1107.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1020.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1017.7" y="1091.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1017.7" y="1075.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1017.7" y="1059.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1020.7" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1017.7" y="1043.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1020.7" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1017.7" y="1027.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1020.7" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1017.7" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1020.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1017.7" y="995.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1020.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1017.7" y="979.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1020.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1017.7" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1020.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1017.7" y="947.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.7" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1017.7" y="931.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1020.7" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1017.7" y="915.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1020.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.05%)</title><rect x="1017.7" y="899.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1020.7" y="910.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1017.7" y="883.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1020.7" y="894.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.05%)</title><rect x="1017.7" y="867.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1020.7" y="878.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1018.3" y="1027.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1021.3" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1018.3" y="1011.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1021.3" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1018.3" y="995.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1021.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1018.3" y="979.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1021.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1018.3" y="963.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1021.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1018.3" y="947.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1021.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1018.3" y="931.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1021.3" y="942.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1018.3" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1021.3" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1018.3" y="899.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1021.3" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1018.3" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1021.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1018.3" y="867.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1021.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1018.3" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1021.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1018.3" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1021.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1018.3" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1021.3" y="830.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.05%)</title><rect x="1018.3" y="803.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1021.3" y="814.0"></text>
</g>
<g>
<title>SafePointNode::set_local(JVMState*, unsigned int, Node*) (1 samples, 0.05%)</title><rect x="1018.3" y="787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1021.3" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1019.0" y="1123.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1022.0" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1019.0" y="1107.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1022.0" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1019.0" y="1091.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1022.0" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1019.0" y="1075.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1022.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1019.0" y="1059.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1022.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1019.0" y="1043.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1022.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1019.0" y="1027.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1022.0" y="1038.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1019.0" y="1011.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1022.0" y="1022.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1019.0" y="995.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1022.0" y="1006.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1019.0" y="979.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1022.0" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1019.0" y="963.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1022.0" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1019.0" y="947.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1022.0" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1019.0" y="931.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1022.0" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1019.0" y="915.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1022.0" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1019.0" y="899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1022.0" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.05%)</title><rect x="1019.0" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1022.0" y="894.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1019.0" y="867.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1022.0" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1019.0" y="851.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1022.0" y="862.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.05%)</title><rect x="1019.0" y="835.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1022.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.05%)</title><rect x="1019.6" y="1139.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1022.6" y="1150.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1019.6" y="1123.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1022.6" y="1134.0"></text>
</g>
<g>
<title>CProjNode::hash() const (1 samples, 0.05%)</title><rect x="1019.6" y="1107.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1022.6" y="1118.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.32%)</title><rect x="1020.2" y="1331.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1023.2" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.32%)</title><rect x="1020.2" y="1315.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1023.2" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.32%)</title><rect x="1020.2" y="1299.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.32%)</title><rect x="1020.2" y="1283.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.32%)</title><rect x="1020.2" y="1267.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.32%)</title><rect x="1020.2" y="1251.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.2" y="1262.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.32%)</title><rect x="1020.2" y="1235.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.2" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.32%)</title><rect x="1020.2" y="1219.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1023.2" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.32%)</title><rect x="1020.2" y="1203.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.2" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.32%)</title><rect x="1020.2" y="1187.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1023.2" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.32%)</title><rect x="1020.2" y="1171.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1023.2" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.32%)</title><rect x="1020.2" y="1155.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.2" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.32%)</title><rect x="1020.2" y="1139.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.2" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.32%)</title><rect x="1020.2" y="1123.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1023.2" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.32%)</title><rect x="1020.2" y="1107.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1023.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.32%)</title><rect x="1020.2" y="1091.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1023.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.32%)</title><rect x="1020.2" y="1075.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.32%)</title><rect x="1020.2" y="1059.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1023.2" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.32%)</title><rect x="1020.2" y="1043.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1020.2" y="1027.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1023.2" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.16%)</title><rect x="1020.2" y="1011.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1023.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.16%)</title><rect x="1020.2" y="995.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.16%)</title><rect x="1020.2" y="979.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1023.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.16%)</title><rect x="1020.2" y="963.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1023.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.16%)</title><rect x="1020.2" y="947.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1023.2" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1020.2" y="931.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.2" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.16%)</title><rect x="1020.2" y="915.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1023.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.16%)</title><rect x="1020.2" y="899.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1023.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.16%)</title><rect x="1020.2" y="883.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.16%)</title><rect x="1020.2" y="867.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1023.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.16%)</title><rect x="1020.2" y="851.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1023.2" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1020.2" y="835.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1023.2" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1020.2" y="819.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1023.2" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1020.2" y="803.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1020.2" y="787.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1023.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1020.2" y="771.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1023.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1020.2" y="755.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1023.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.11%)</title><rect x="1020.2" y="739.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1023.2" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1020.2" y="723.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.2" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1020.2" y="707.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1020.2" y="691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1020.2" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1023.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1020.2" y="659.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1020.2" y="643.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1023.2" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1020.2" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1023.2" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1020.2" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1020.2" y="595.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1023.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1020.2" y="579.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1020.2" y="563.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1020.2" y="547.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1023.2" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1020.2" y="531.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.2" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1020.2" y="515.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1020.2" y="499.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1023.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1020.2" y="483.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1023.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1020.2" y="467.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1020.2" y="451.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1023.2" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1020.2" y="435.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1023.2" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1020.2" y="419.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1023.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1020.2" y="403.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1023.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1020.2" y="387.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1023.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1020.2" y="371.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1023.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1020.2" y="355.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1023.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1020.2" y="339.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1023.2" y="350.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1020.2" y="323.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1023.2" y="334.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1020.2" y="307.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1023.2" y="318.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1020.2" y="291.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1023.2" y="302.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1020.2" y="275.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1023.2" y="286.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1020.2" y="259.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1023.2" y="270.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1020.2" y="243.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="254.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1020.2" y="227.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1023.2" y="238.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (1 samples, 0.05%)</title><rect x="1020.2" y="211.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1023.2" y="222.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1020.2" y="195.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.2" y="206.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.05%)</title><rect x="1020.2" y="179.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1023.2" y="190.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.05%)</title><rect x="1020.2" y="163.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1023.2" y="174.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1020.9" y="723.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1023.9" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1020.9" y="707.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1023.9" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1020.9" y="691.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1023.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1020.9" y="675.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1020.9" y="659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1023.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1020.9" y="643.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1023.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1020.9" y="627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1023.9" y="638.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1020.9" y="611.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1023.9" y="622.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1020.9" y="595.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1023.9" y="606.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1020.9" y="579.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.9" y="590.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.05%)</title><rect x="1020.9" y="563.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.9" y="574.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.05%)</title><rect x="1020.9" y="547.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1023.9" y="558.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="1020.9" y="531.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1023.9" y="542.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.05%)</title><rect x="1020.9" y="515.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1023.9" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1021.5" y="819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1024.5" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1021.5" y="803.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1024.5" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1021.5" y="787.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1024.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1021.5" y="771.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1024.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1021.5" y="755.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1024.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1021.5" y="739.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1024.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1021.5" y="723.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1024.5" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1021.5" y="707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1024.5" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1021.5" y="691.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1024.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1021.5" y="675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1021.5" y="659.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1024.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1021.5" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1024.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1021.5" y="627.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1024.5" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1021.5" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.5" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1021.5" y="595.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1024.5" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1021.5" y="579.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1024.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1021.5" y="563.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1024.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1021.5" y="547.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1021.5" y="531.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.05%)</title><rect x="1021.5" y="515.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1024.5" y="526.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.05%)</title><rect x="1021.5" y="499.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1024.5" y="510.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.05%)</title><rect x="1021.5" y="483.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1024.5" y="494.0"></text>
</g>
<g>
<title>Node::find_edge(Node*) (1 samples, 0.05%)</title><rect x="1021.5" y="467.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1024.5" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1022.2" y="1027.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1025.2" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.16%)</title><rect x="1022.2" y="1011.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.2" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.16%)</title><rect x="1022.2" y="995.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1025.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.16%)</title><rect x="1022.2" y="979.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1025.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.16%)</title><rect x="1022.2" y="963.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1025.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.16%)</title><rect x="1022.2" y="947.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1025.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.16%)</title><rect x="1022.2" y="931.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1025.2" y="942.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1022.2" y="915.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1025.2" y="926.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1022.2" y="899.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1025.2" y="910.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1022.2" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1025.2" y="894.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1022.2" y="867.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1025.2" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1022.2" y="851.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1025.2" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1022.2" y="835.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1025.2" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1022.2" y="819.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.2" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1022.2" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1025.2" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1022.2" y="787.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1025.2" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1022.2" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1025.2" y="782.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="1022.2" y="755.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.2" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1022.2" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1025.2" y="750.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1022.2" y="723.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1025.2" y="734.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1022.2" y="707.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1025.2" y="718.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.05%)</title><rect x="1022.2" y="691.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1025.2" y="702.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.05%)</title><rect x="1022.2" y="675.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.2" y="686.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.05%)</title><rect x="1022.2" y="659.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1025.2" y="670.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1022.8" y="915.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1025.8" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.11%)</title><rect x="1022.8" y="899.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1025.8" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.11%)</title><rect x="1022.8" y="883.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1025.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.11%)</title><rect x="1022.8" y="867.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1025.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.11%)</title><rect x="1022.8" y="851.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1025.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.11%)</title><rect x="1022.8" y="835.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1025.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1022.8" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1025.8" y="830.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1022.8" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.8" y="814.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1022.8" y="787.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.8" y="798.0"></text>
</g>
<g>
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.05%)</title><rect x="1022.8" y="771.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1025.8" y="782.0"></text>
</g>
<g>
<title>ciMethod::interpreter_call_site_count(int) (1 samples, 0.05%)</title><rect x="1022.8" y="755.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1025.8" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1023.4" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1026.4" y="830.0"></text>
</g>
<g>
<title>VirtualCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1024.1" y="1347.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1027.1" y="1358.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.05%)</title><rect x="1024.1" y="1331.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1027.1" y="1342.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1024.1" y="1315.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1027.1" y="1326.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.05%)</title><rect x="1024.1" y="1299.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1027.1" y="1310.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.05%)</title><rect x="1024.1" y="1283.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1027.1" y="1294.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.11%)</title><rect x="1024.7" y="1347.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1027.7" y="1358.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.11%)</title><rect x="1024.7" y="1331.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1027.7" y="1342.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.11%)</title><rect x="1024.7" y="1315.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1027.7" y="1326.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1024.7" y="1299.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1027.7" y="1310.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.05%)</title><rect x="1024.7" y="1283.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1027.7" y="1294.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.05%)</title><rect x="1025.3" y="1299.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1028.3" y="1310.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.05%)</title><rect x="1025.3" y="1283.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1028.3" y="1294.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.05%)</title><rect x="1025.3" y="1267.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1028.3" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="1025.3" y="1251.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1028.3" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="1025.3" y="1235.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1028.3" y="1246.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1026.0" y="1363.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1029.0" y="1374.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1026.0" y="1347.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.0" y="1358.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.05%)</title><rect x="1026.0" y="1331.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1029.0" y="1342.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1026.0" y="1315.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.0" y="1326.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.05%)</title><rect x="1026.0" y="1299.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1029.0" y="1310.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.05%)</title><rect x="1026.0" y="1283.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1029.0" y="1294.0"></text>
</g>
<g>
<title>G1BarrierSetC2::g1_mark_card(GraphKit*, IdealKit&amp;, Node*, Node*, unsigned int, Node*, Node*, Node*, TypeFunc const*) const (1 samples, 0.05%)</title><rect x="1026.0" y="1267.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1029.0" y="1278.0"></text>
</g>
<g>
<title>IdealKit::store(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool) (1 samples, 0.05%)</title><rect x="1026.0" y="1251.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1029.0" y="1262.0"></text>
</g>
<g>
<title>IdealKit::delay_transform(Node*) (1 samples, 0.05%)</title><rect x="1026.0" y="1235.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.05%)</title><rect x="1026.6" y="1363.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1029.6" y="1374.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.05%)</title><rect x="1026.6" y="1347.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1029.6" y="1358.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicates(int) (1 samples, 0.05%)</title><rect x="1026.6" y="1331.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1029.6" y="1342.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.189] (1 samples, 0.05%)</title><rect x="1026.6" y="1315.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1029.6" y="1326.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.05%)</title><rect x="1026.6" y="1299.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1029.6" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::uncommon_trap_Type() (1 samples, 0.05%)</title><rect x="1026.6" y="1283.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1029.6" y="1294.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1026.6" y="1267.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1029.6" y="1278.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1026.6" y="1251.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.6" y="1262.0"></text>
</g>
<g>
<title>Parse::do_new() (2 samples, 0.11%)</title><rect x="1027.3" y="1363.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1030.3" y="1374.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (2 samples, 0.11%)</title><rect x="1027.3" y="1347.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1030.3" y="1358.0"></text>
</g>
<g>
<title>Arena::Amalloc_D(unsigned long, AllocFailStrategy::AllocFailEnum) [clone .constprop.202] (1 samples, 0.05%)</title><rect x="1027.3" y="1331.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1030.3" y="1342.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1027.9" y="1331.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1030.9" y="1342.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1027.9" y="1315.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1030.9" y="1326.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.05%)</title><rect x="1028.5" y="1443.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1031.5" y="1454.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.05%)</title><rect x="1028.5" y="1427.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1031.5" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::collect_statistics(CompilerThread*, elapsedTimer, CompileTask*) (1 samples, 0.05%)</title><rect x="1029.2" y="1475.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1032.2" y="1486.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.05%)</title><rect x="1029.2" y="1459.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1032.2" y="1470.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (3 samples, 0.16%)</title><rect x="1029.8" y="1475.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1032.8" y="1486.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (1 samples, 0.05%)</title><rect x="1029.8" y="1459.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1032.8" y="1470.0"></text>
</g>
<g>
<title>os::strdup(char const*, MemoryType) (1 samples, 0.05%)</title><rect x="1029.8" y="1443.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1032.8" y="1454.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.05%)</title><rect x="1030.5" y="1459.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1033.5" y="1470.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.05%)</title><rect x="1031.1" y="1459.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1034.1" y="1470.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.05%)</title><rect x="1031.1" y="1443.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1034.1" y="1454.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (114 samples, 6.17%)</title><rect x="1031.7" y="1475.0" width="72.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1034.7" y="1486.0">Compiler..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (113 samples, 6.11%)</title><rect x="1031.7" y="1459.0" width="72.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1034.7" y="1470.0">Compilat..</text>
</g>
<g>
<title>Compilation::compile_method() (112 samples, 6.06%)</title><rect x="1032.4" y="1443.0" width="71.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1035.4" y="1454.0">Compilat..</text>
</g>
<g>
<title>Compilation::compile_java_method() (106 samples, 5.73%)</title><rect x="1032.4" y="1427.0" width="67.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1035.4" y="1438.0">Compila..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (47 samples, 2.54%)</title><rect x="1032.4" y="1411.0" width="30.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1035.4" y="1422.0">Co..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (4 samples, 0.22%)</title><rect x="1032.4" y="1395.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1035.4" y="1406.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.11%)</title><rect x="1032.4" y="1379.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1035.4" y="1390.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.11%)</title><rect x="1032.4" y="1363.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1035.4" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1032.4" y="1347.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1035.4" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1032.4" y="1331.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1035.4" y="1342.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.05%)</title><rect x="1032.4" y="1315.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1035.4" y="1326.0"></text>
</g>
<g>
<title>Invoke::state_values_do(ValueVisitor*) (1 samples, 0.05%)</title><rect x="1032.4" y="1299.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1035.4" y="1310.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.05%)</title><rect x="1032.4" y="1283.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1035.4" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.05%)</title><rect x="1033.0" y="1347.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1036.0" y="1358.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (2 samples, 0.11%)</title><rect x="1033.6" y="1379.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1036.6" y="1390.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1034.3" y="1363.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1037.3" y="1374.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (32 samples, 1.73%)</title><rect x="1034.9" y="1395.0" width="20.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1037.9" y="1406.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (32 samples, 1.73%)</title><rect x="1034.9" y="1379.0" width="20.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1037.9" y="1390.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) [clone .constprop.382] (1 samples, 0.05%)</title><rect x="1034.9" y="1363.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1037.9" y="1374.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.05%)</title><rect x="1035.6" y="1363.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1038.6" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (30 samples, 1.62%)</title><rect x="1036.2" y="1363.0" width="19.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1039.2" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.05%)</title><rect x="1036.2" y="1347.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1039.2" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1036.2" y="1331.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1039.2" y="1342.0"></text>
</g>
<g>
<title>Phi::as_Phi() (1 samples, 0.05%)</title><rect x="1036.2" y="1315.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1039.2" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (29 samples, 1.57%)</title><rect x="1036.8" y="1347.0" width="18.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1039.8" y="1358.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (29 samples, 1.57%)</title><rect x="1036.8" y="1331.0" width="18.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1039.8" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.05%)</title><rect x="1036.8" y="1315.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1039.8" y="1326.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.05%)</title><rect x="1036.8" y="1299.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1039.8" y="1310.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.05%)</title><rect x="1036.8" y="1283.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1039.8" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::ScopeData::add_to_work_list(BlockBegin*) (1 samples, 0.05%)</title><rect x="1037.5" y="1315.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.5" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.11%)</title><rect x="1038.1" y="1315.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1041.1" y="1326.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::grow(int) (1 samples, 0.05%)</title><rect x="1038.1" y="1299.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1041.1" y="1310.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="1038.8" y="1299.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.8" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1038.8" y="1283.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1041.8" y="1294.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1038.8" y="1267.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.8" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.05%)</title><rect x="1038.8" y="1251.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1041.8" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.05%)</title><rect x="1038.8" y="1235.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.8" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (25 samples, 1.35%)</title><rect x="1039.4" y="1315.0" width="15.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1042.4" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::print_inlining(ciMethod*, char const*, bool) (1 samples, 0.05%)</title><rect x="1039.4" y="1299.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1042.4" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (19 samples, 1.03%)</title><rect x="1040.0" y="1299.0" width="12.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1043.0" y="1310.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (19 samples, 1.03%)</title><rect x="1040.0" y="1283.0" width="12.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.0" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.05%)</title><rect x="1040.0" y="1267.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.0" y="1278.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.05%)</title><rect x="1040.0" y="1251.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1043.0" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (14 samples, 0.76%)</title><rect x="1040.7" y="1267.0" width="8.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.7" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (14 samples, 0.76%)</title><rect x="1040.7" y="1251.0" width="8.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1043.7" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (2 samples, 0.11%)</title><rect x="1040.7" y="1235.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.7" y="1246.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.05%)</title><rect x="1040.7" y="1219.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1043.7" y="1230.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1040.7" y="1203.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1043.7" y="1214.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.05%)</title><rect x="1041.3" y="1219.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1044.3" y="1230.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.05%)</title><rect x="1041.3" y="1203.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1044.3" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1041.9" y="1235.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1044.9" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="1041.9" y="1219.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1044.9" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1041.9" y="1203.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1044.9" y="1214.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.05%)</title><rect x="1041.9" y="1187.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1044.9" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1041.9" y="1171.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1044.9" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.05%)</title><rect x="1041.9" y="1155.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1044.9" y="1166.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.05%)</title><rect x="1041.9" y="1139.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1044.9" y="1150.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.05%)</title><rect x="1041.9" y="1123.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1044.9" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (10 samples, 0.54%)</title><rect x="1042.6" y="1235.0" width="6.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1045.6" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.38%)</title><rect x="1043.2" y="1219.0" width="4.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1046.2" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.38%)</title><rect x="1043.2" y="1203.0" width="4.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.2" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.05%)</title><rect x="1043.2" y="1187.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1046.2" y="1198.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.05%)</title><rect x="1043.2" y="1171.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.2" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.32%)</title><rect x="1043.9" y="1187.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1046.9" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.32%)</title><rect x="1043.9" y="1171.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.9" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1044.5" y="1155.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1047.5" y="1166.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.05%)</title><rect x="1044.5" y="1139.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1047.5" y="1150.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.05%)</title><rect x="1044.5" y="1123.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.5" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.22%)</title><rect x="1045.1" y="1155.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1048.1" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.11%)</title><rect x="1045.1" y="1139.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1048.1" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.11%)</title><rect x="1045.1" y="1123.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.1" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1045.1" y="1107.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.1" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1045.1" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1048.1" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1045.1" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1048.1" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1045.1" y="1059.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1048.1" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1045.1" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.1" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1045.1" y="1027.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1048.1" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1045.1" y="1011.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1048.1" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1045.1" y="995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1048.1" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1045.1" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1048.1" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1045.1" y="963.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.1" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1045.1" y="947.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.1" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1045.1" y="931.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.1" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1045.1" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1048.1" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1045.1" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1048.1" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1045.1" y="883.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1048.1" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1045.1" y="867.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.1" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1045.1" y="851.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.1" y="862.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.05%)</title><rect x="1045.1" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.1" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.05%)</title><rect x="1045.8" y="1107.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.8" y="1118.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.05%)</title><rect x="1045.8" y="1091.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1048.8" y="1102.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long, bool) (1 samples, 0.05%)</title><rect x="1045.8" y="1075.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.8" y="1086.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.11%)</title><rect x="1046.4" y="1139.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1049.4" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.11%)</title><rect x="1046.4" y="1123.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1049.4" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.11%)</title><rect x="1046.4" y="1107.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.4" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1046.4" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.4" y="1102.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.05%)</title><rect x="1046.4" y="1075.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.4" y="1086.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.05%)</title><rect x="1046.4" y="1059.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1049.4" y="1070.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.05%)</title><rect x="1047.0" y="1091.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1050.0" y="1102.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.05%)</title><rect x="1047.0" y="1075.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1050.0" y="1086.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.05%)</title><rect x="1047.0" y="1059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.0" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="1047.0" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1050.0" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="1047.0" y="1027.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.0" y="1038.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1047.0" y="1011.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1050.0" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.11%)</title><rect x="1047.7" y="1219.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.7" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.11%)</title><rect x="1047.7" y="1203.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.7" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.11%)</title><rect x="1047.7" y="1187.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1050.7" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.11%)</title><rect x="1047.7" y="1171.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.7" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.11%)</title><rect x="1047.7" y="1155.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.7" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.11%)</title><rect x="1047.7" y="1139.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.7" y="1150.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.11%)</title><rect x="1047.7" y="1123.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1050.7" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.11%)</title><rect x="1047.7" y="1107.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.7" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (2 samples, 0.11%)</title><rect x="1047.7" y="1091.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.7" y="1102.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (2 samples, 0.11%)</title><rect x="1047.7" y="1075.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.7" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.05%)</title><rect x="1049.0" y="1235.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.0" y="1246.0"></text>
</g>
<g>
<title>Goto::Goto(BlockBegin*, bool) (1 samples, 0.05%)</title><rect x="1049.0" y="1219.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1052.0" y="1230.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1049.0" y="1203.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1052.0" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (3 samples, 0.16%)</title><rect x="1049.6" y="1267.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1052.6" y="1278.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.11%)</title><rect x="1050.2" y="1251.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1053.2" y="1262.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.11%)</title><rect x="1050.2" y="1235.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.2" y="1246.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.11%)</title><rect x="1050.2" y="1219.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1053.2" y="1230.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.11%)</title><rect x="1050.2" y="1203.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1053.2" y="1214.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.11%)</title><rect x="1050.2" y="1187.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.2" y="1198.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int) (1 samples, 0.05%)</title><rect x="1050.9" y="1171.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1053.9" y="1182.0"></text>
</g>
<g>
<title>ArenaBitMap::ArenaBitMap(Arena*, unsigned long) (1 samples, 0.05%)</title><rect x="1050.9" y="1155.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1053.9" y="1166.0"></text>
</g>
<g>
<title>ciKlass::is_subclass_of(ciKlass*) (1 samples, 0.05%)</title><rect x="1051.5" y="1267.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1054.5" y="1278.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.16%)</title><rect x="1052.2" y="1299.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.2" y="1310.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.16%)</title><rect x="1052.2" y="1283.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1055.2" y="1294.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.16%)</title><rect x="1052.2" y="1267.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.2" y="1278.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.05%)</title><rect x="1052.2" y="1251.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.2" y="1262.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.05%)</title><rect x="1052.2" y="1235.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1055.2" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.11%)</title><rect x="1052.8" y="1251.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1055.8" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1052.8" y="1235.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1055.8" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1053.4" y="1235.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1056.4" y="1246.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1053.4" y="1219.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1056.4" y="1230.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.05%)</title><rect x="1053.4" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1056.4" y="1214.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.05%)</title><rect x="1053.4" y="1187.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1056.4" y="1198.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1053.4" y="1171.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.4" y="1182.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="1053.4" y="1155.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.4" y="1166.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (2 samples, 0.11%)</title><rect x="1054.1" y="1299.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1057.1" y="1310.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.05%)</title><rect x="1054.1" y="1283.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.1" y="1294.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.05%)</title><rect x="1054.1" y="1267.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1057.1" y="1278.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.05%)</title><rect x="1054.1" y="1251.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1057.1" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::find_method(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*) (1 samples, 0.05%)</title><rect x="1054.1" y="1235.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.1" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="1054.1" y="1219.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1057.1" y="1230.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.05%)</title><rect x="1054.7" y="1283.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.7" y="1294.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (4 samples, 0.22%)</title><rect x="1055.3" y="1395.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1058.3" y="1406.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (2 samples, 0.11%)</title><rect x="1056.0" y="1379.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1059.0" y="1390.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (2 samples, 0.11%)</title><rect x="1056.0" y="1363.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1059.0" y="1374.0"></text>
</g>
<g>
<title>Constant::input_values_do(ValueVisitor*) (1 samples, 0.05%)</title><rect x="1056.0" y="1347.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1059.0" y="1358.0"></text>
</g>
<g>
<title>Invoke::input_values_do(ValueVisitor*) (1 samples, 0.05%)</title><rect x="1056.6" y="1347.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1059.6" y="1358.0"></text>
</g>
<g>
<title>Local::input_values_do(ValueVisitor*) (1 samples, 0.05%)</title><rect x="1056.6" y="1331.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1059.6" y="1342.0"></text>
</g>
<g>
<title>ValueStack::pin_stack_for_linear_scan() (1 samples, 0.05%)</title><rect x="1057.3" y="1379.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.3" y="1390.0"></text>
</g>
<g>
<title>Instruction::as_Constant() (1 samples, 0.05%)</title><rect x="1057.3" y="1363.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1060.3" y="1374.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (4 samples, 0.22%)</title><rect x="1057.9" y="1395.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1060.9" y="1406.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (4 samples, 0.22%)</title><rect x="1057.9" y="1379.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1060.9" y="1390.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (1 samples, 0.05%)</title><rect x="1059.2" y="1363.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1062.2" y="1374.0"></text>
</g>
<g>
<title>Phi::as_Phi() (1 samples, 0.05%)</title><rect x="1059.8" y="1363.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1062.8" y="1374.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (2 samples, 0.11%)</title><rect x="1060.4" y="1395.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1063.4" y="1406.0"></text>
</g>
<g>
<title>Optimizer::eliminate_blocks() (1 samples, 0.05%)</title><rect x="1060.4" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1063.4" y="1390.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.05%)</title><rect x="1060.4" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1063.4" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1060.4" y="1347.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1063.4" y="1358.0"></text>
</g>
<g>
<title>Goto::as_Goto() (1 samples, 0.05%)</title><rect x="1060.4" y="1331.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.4" y="1342.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (1 samples, 0.05%)</title><rect x="1061.1" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1064.1" y="1390.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.05%)</title><rect x="1061.1" y="1363.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.1" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1061.1" y="1347.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1064.1" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1061.1" y="1331.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1064.1" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1061.1" y="1315.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1064.1" y="1326.0"></text>
</g>
<g>
<title>non-virtual thunk to SubstitutionResolver::visit(Instruction**) (1 samples, 0.05%)</title><rect x="1061.1" y="1299.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.1" y="1310.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.05%)</title><rect x="1061.7" y="1395.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.7" y="1406.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.05%)</title><rect x="1061.7" y="1379.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1064.7" y="1390.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.05%)</title><rect x="1061.7" y="1363.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1064.7" y="1374.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (12 samples, 0.65%)</title><rect x="1062.4" y="1411.0" width="7.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1065.4" y="1422.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (11 samples, 0.59%)</title><rect x="1062.4" y="1395.0" width="7.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.4" y="1406.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (5 samples, 0.27%)</title><rect x="1062.4" y="1379.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1065.4" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.05%)</title><rect x="1062.4" y="1363.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1065.4" y="1374.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.05%)</title><rect x="1062.4" y="1347.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1065.4" y="1358.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.05%)</title><rect x="1062.4" y="1331.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1065.4" y="1342.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.05%)</title><rect x="1062.4" y="1315.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1065.4" y="1326.0"></text>
</g>
<g>
<title>Location::write_on(DebugInfoWriteStream*) (1 samples, 0.05%)</title><rect x="1062.4" y="1299.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1065.4" y="1310.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (3 samples, 0.16%)</title><rect x="1063.0" y="1363.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1066.0" y="1374.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (3 samples, 0.16%)</title><rect x="1063.0" y="1347.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1066.0" y="1358.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.05%)</title><rect x="1063.0" y="1331.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1066.0" y="1342.0"></text>
</g>
<g>
<title>OopMap::deep_copy() (1 samples, 0.05%)</title><rect x="1063.0" y="1315.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1066.0" y="1326.0"></text>
</g>
<g>
<title>OopMap::OopMap(OopMap::DeepCopyToken, OopMap*) (1 samples, 0.05%)</title><rect x="1063.0" y="1299.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1066.0" y="1310.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (2 samples, 0.11%)</title><rect x="1063.6" y="1331.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1066.6" y="1342.0"></text>
</g>
<g>
<title>DebugInformationRecorder::add_non_safepoint(int) (1 samples, 0.05%)</title><rect x="1063.6" y="1315.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1066.6" y="1326.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.05%)</title><rect x="1064.3" y="1315.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1067.3" y="1326.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.05%)</title><rect x="1064.3" y="1299.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1067.3" y="1310.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_static_call_stub() (1 samples, 0.05%)</title><rect x="1064.9" y="1363.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1067.9" y="1374.0"></text>
</g>
<g>
<title>static_stub_Relocation::pack_data_to(CodeSection*) (1 samples, 0.05%)</title><rect x="1064.9" y="1347.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1067.9" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.05%)</title><rect x="1065.6" y="1379.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1068.6" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::check_icache() (1 samples, 0.05%)</title><rect x="1065.6" y="1363.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1068.6" y="1374.0"></text>
</g>
<g>
<title>Assembler::nop(int) (1 samples, 0.05%)</title><rect x="1065.6" y="1347.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1068.6" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (1 samples, 0.05%)</title><rect x="1066.2" y="1379.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1069.2" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::stack2reg(LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.05%)</title><rect x="1066.2" y="1363.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1069.2" y="1374.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, Address) (1 samples, 0.05%)</title><rect x="1066.2" y="1347.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1069.2" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (1 samples, 0.05%)</title><rect x="1066.8" y="1379.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1069.8" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::logic_op(LIR_Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*) (1 samples, 0.05%)</title><rect x="1067.5" y="1379.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1070.5" y="1390.0"></text>
</g>
<g>
<title>Assembler::andl(RegisterImpl*, int) (1 samples, 0.05%)</title><rect x="1067.5" y="1363.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1070.5" y="1374.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (2 samples, 0.11%)</title><rect x="1068.1" y="1379.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1071.1" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (2 samples, 0.11%)</title><rect x="1068.1" y="1363.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1071.1" y="1374.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.11%)</title><rect x="1068.1" y="1347.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1071.1" y="1358.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.05%)</title><rect x="1068.1" y="1331.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1071.1" y="1342.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_initialize() (1 samples, 0.05%)</title><rect x="1068.7" y="1331.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1071.7" y="1342.0"></text>
</g>
<g>
<title>LIR_Op1::emit_code(LIR_Assembler*) (1 samples, 0.05%)</title><rect x="1069.4" y="1395.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.4" y="1406.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (47 samples, 2.54%)</title><rect x="1070.0" y="1411.0" width="30.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1073.0" y="1422.0">Co..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (5 samples, 0.27%)</title><rect x="1070.0" y="1395.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1073.0" y="1406.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (5 samples, 0.27%)</title><rect x="1070.0" y="1379.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1073.0" y="1390.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.05%)</title><rect x="1070.0" y="1363.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1073.0" y="1374.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.05%)</title><rect x="1070.7" y="1363.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.7" y="1374.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.05%)</title><rect x="1070.7" y="1347.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1073.7" y="1358.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.05%)</title><rect x="1070.7" y="1331.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1073.7" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (1 samples, 0.05%)</title><rect x="1071.3" y="1363.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1074.3" y="1374.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_load_arguments(Invoke*, GrowableArray&lt;LIRItem*&gt;*, GrowableArray&lt;LIR_OprDesc*&gt; const*) (1 samples, 0.05%)</title><rect x="1071.3" y="1347.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1074.3" y="1358.0"></text>
</g>
<g>
<title>LIRItem::load_item_force(LIR_OprDesc*) (1 samples, 0.05%)</title><rect x="1071.3" y="1331.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.3" y="1342.0"></text>
</g>
<g>
<title>LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.263] (1 samples, 0.05%)</title><rect x="1071.3" y="1315.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1074.3" y="1326.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileCall(ProfileCall*) (1 samples, 0.05%)</title><rect x="1071.9" y="1363.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1074.9" y="1374.0"></text>
</g>
<g>
<title>LIRGenerator::profile_parameters_at_call(ProfileCall*) (1 samples, 0.05%)</title><rect x="1071.9" y="1347.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1074.9" y="1358.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (1 samples, 0.05%)</title><rect x="1072.6" y="1363.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1075.6" y="1374.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1072.6" y="1347.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1075.6" y="1358.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (42 samples, 2.27%)</title><rect x="1073.2" y="1395.0" width="26.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1076.2" y="1406.0">L..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (12 samples, 0.65%)</title><rect x="1073.2" y="1379.0" width="7.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.2" y="1390.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (11 samples, 0.59%)</title><rect x="1073.9" y="1363.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1076.9" y="1374.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (1 samples, 0.05%)</title><rect x="1074.5" y="1347.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1077.5" y="1358.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (9 samples, 0.49%)</title><rect x="1075.1" y="1347.0" width="5.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1078.1" y="1358.0"></text>
</g>
<g>
<title>LIRGenerator::is_vreg_flag_set(int, LIRGenerator::VregFlag) (1 samples, 0.05%)</title><rect x="1075.1" y="1331.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1078.1" y="1342.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (8 samples, 0.43%)</title><rect x="1075.8" y="1331.0" width="5.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1078.8" y="1342.0"></text>
</g>
<g>
<title>Interval::split(int) (1 samples, 0.05%)</title><rect x="1075.8" y="1315.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1078.8" y="1326.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (1 samples, 0.05%)</title><rect x="1076.4" y="1315.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1079.4" y="1326.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (5 samples, 0.27%)</title><rect x="1077.0" y="1315.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1080.0" y="1326.0"></text>
</g>
<g>
<title>Range::intersects_at(Range*) const (2 samples, 0.11%)</title><rect x="1079.0" y="1299.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1082.0" y="1310.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (1 samples, 0.05%)</title><rect x="1080.2" y="1315.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1083.2" y="1326.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (9 samples, 0.49%)</title><rect x="1080.9" y="1379.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1083.9" y="1390.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (8 samples, 0.43%)</title><rect x="1080.9" y="1363.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1083.9" y="1374.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.05%)</title><rect x="1082.1" y="1347.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.1" y="1358.0"></text>
</g>
<g>
<title>LIR_OprPtr::as_address() (1 samples, 0.05%)</title><rect x="1082.1" y="1331.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1085.1" y="1342.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.05%)</title><rect x="1082.8" y="1347.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1085.8" y="1358.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.16%)</title><rect x="1083.4" y="1347.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1086.4" y="1358.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.05%)</title><rect x="1083.4" y="1331.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1086.4" y="1342.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.11%)</title><rect x="1084.1" y="1331.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1087.1" y="1342.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.05%)</title><rect x="1084.7" y="1315.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1087.7" y="1326.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.05%)</title><rect x="1084.7" y="1299.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.7" y="1310.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.05%)</title><rect x="1084.7" y="1283.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1087.7" y="1294.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.05%)</title><rect x="1084.7" y="1267.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.7" y="1278.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.05%)</title><rect x="1084.7" y="1251.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1087.7" y="1262.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.05%)</title><rect x="1084.7" y="1235.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1087.7" y="1246.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 0.05%)</title><rect x="1085.3" y="1347.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1088.3" y="1358.0"></text>
</g>
<g>
<title>LIR_Op1::is_patching() (1 samples, 0.05%)</title><rect x="1085.3" y="1331.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1088.3" y="1342.0"></text>
</g>
<g>
<title>LinearScan::init_compute_oop_maps() (1 samples, 0.05%)</title><rect x="1086.0" y="1363.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.0" y="1374.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (11 samples, 0.59%)</title><rect x="1086.6" y="1379.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.6" y="1390.0"></text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.194] (1 samples, 0.05%)</title><rect x="1090.4" y="1363.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1093.4" y="1374.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.05%)</title><rect x="1091.1" y="1363.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.1" y="1374.0"></text>
</g>
<g>
<title>LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind) (1 samples, 0.05%)</title><rect x="1091.7" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1094.7" y="1374.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (1 samples, 0.05%)</title><rect x="1092.4" y="1363.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1095.4" y="1374.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (1 samples, 0.05%)</title><rect x="1092.4" y="1347.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1095.4" y="1358.0"></text>
</g>
<g>
<title>Interval::Interval(int) (1 samples, 0.05%)</title><rect x="1092.4" y="1331.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1095.4" y="1342.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.05%)</title><rect x="1092.4" y="1315.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1095.4" y="1326.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1093.0" y="1363.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1096.0" y="1374.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (3 samples, 0.16%)</title><rect x="1093.6" y="1379.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1096.6" y="1390.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (2 samples, 0.11%)</title><rect x="1094.3" y="1363.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.3" y="1374.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (1 samples, 0.05%)</title><rect x="1095.5" y="1379.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1098.5" y="1390.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (3 samples, 0.16%)</title><rect x="1096.2" y="1379.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1099.2" y="1390.0"></text>
</g>
<g>
<title>MoveResolver::resolve_and_append_moves() (1 samples, 0.05%)</title><rect x="1096.8" y="1363.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1099.8" y="1374.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.05%)</title><rect x="1096.8" y="1347.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1099.8" y="1358.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="1097.5" y="1363.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1100.5" y="1374.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_handlers() (1 samples, 0.05%)</title><rect x="1098.1" y="1379.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1101.1" y="1390.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_edge(XHandler*, int, MoveResolver&amp;) (1 samples, 0.05%)</title><rect x="1098.1" y="1363.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.1" y="1374.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_edge(XHandler*, int, int, Phi*, MoveResolver&amp;) [clone .part.224] (1 samples, 0.05%)</title><rect x="1098.1" y="1347.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.1" y="1358.0"></text>
</g>
<g>
<title>LIR_OprFact::value_type(ValueType*) (1 samples, 0.05%)</title><rect x="1098.1" y="1331.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1101.1" y="1342.0"></text>
</g>
<g>
<title>ciObject::constant_encoding() (1 samples, 0.05%)</title><rect x="1098.1" y="1315.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.1" y="1326.0"></text>
</g>
<g>
<title>LinearScan::sort_intervals_after_allocation() (1 samples, 0.05%)</title><rect x="1098.7" y="1379.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1101.7" y="1390.0"></text>
</g>
<g>
<title>LinearScan::sort_intervals_before_allocation() (1 samples, 0.05%)</title><rect x="1099.4" y="1379.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1102.4" y="1390.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (6 samples, 0.32%)</title><rect x="1100.0" y="1427.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.0" y="1438.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (5 samples, 0.27%)</title><rect x="1100.0" y="1411.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.0" y="1422.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1100.0" y="1395.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1103.0" y="1406.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (4 samples, 0.22%)</title><rect x="1100.7" y="1395.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.7" y="1406.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (3 samples, 0.16%)</title><rect x="1100.7" y="1379.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1103.7" y="1390.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (2 samples, 0.11%)</title><rect x="1100.7" y="1363.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1103.7" y="1374.0"></text>
</g>
<g>
<title>RelocIterator::reloc() (1 samples, 0.05%)</title><rect x="1100.7" y="1347.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.7" y="1358.0"></text>
</g>
<g>
<title>Relocation::pd_set_data_value(unsigned char*, long, bool) (1 samples, 0.05%)</title><rect x="1101.3" y="1347.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1104.3" y="1358.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.05%)</title><rect x="1101.3" y="1331.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1104.3" y="1342.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="1101.9" y="1363.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1104.9" y="1374.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.05%)</title><rect x="1102.6" y="1379.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.6" y="1390.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.05%)</title><rect x="1102.6" y="1363.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.6" y="1374.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event(JvmtiThreadState*) (1 samples, 0.05%)</title><rect x="1103.2" y="1411.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.2" y="1422.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="1103.2" y="1395.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.2" y="1406.0"></text>
</g>
<g>
<title>ciMethod::method_data_or_null() (1 samples, 0.05%)</title><rect x="1103.8" y="1459.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.8" y="1470.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.05%)</title><rect x="1104.5" y="1475.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1107.5" y="1486.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.05%)</title><rect x="1104.5" y="1459.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1107.5" y="1470.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.05%)</title><rect x="1104.5" y="1443.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1107.5" y="1454.0"></text>
</g>
<g>
<title>ciObject::ciObject(Handle) (1 samples, 0.05%)</title><rect x="1104.5" y="1427.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.5" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.05%)</title><rect x="1105.1" y="1491.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1108.1" y="1502.0"></text>
</g>
<g>
<title>__GI_sysinfo (1 samples, 0.05%)</title><rect x="1105.1" y="1475.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1108.1" y="1486.0"></text>
</g>
<g>
<title>CompileQueue::get() (4 samples, 0.22%)</title><rect x="1105.8" y="1491.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1108.8" y="1502.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="1106.4" y="1475.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1109.4" y="1486.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.11%)</title><rect x="1107.0" y="1475.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.0" y="1486.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.11%)</title><rect x="1107.0" y="1459.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1107.0" y="1443.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.0" y="1454.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.05%)</title><rect x="1107.0" y="1427.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1110.0" y="1438.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="1107.0" y="1411.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1110.0" y="1422.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="1107.0" y="1395.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1110.0" y="1406.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="1107.7" y="1443.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1110.7" y="1454.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.05%)</title><rect x="1108.3" y="1491.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1111.3" y="1502.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (12 samples, 0.65%)</title><rect x="1109.0" y="1507.0" width="7.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1112.0" y="1518.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (11 samples, 0.59%)</title><rect x="1109.0" y="1491.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.0" y="1502.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (9 samples, 0.49%)</title><rect x="1109.6" y="1475.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.6" y="1486.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.11%)</title><rect x="1109.6" y="1459.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.6" y="1470.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1109.6" y="1443.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1112.6" y="1454.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.05%)</title><rect x="1110.2" y="1443.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1113.2" y="1454.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1110.2" y="1427.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1113.2" y="1438.0"></text>
</g>
<g>
<title>ScopeDesc::is_top() const (1 samples, 0.05%)</title><rect x="1110.9" y="1459.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1113.9" y="1470.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (6 samples, 0.32%)</title><rect x="1111.5" y="1459.0" width="3.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1114.5" y="1470.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (3 samples, 0.16%)</title><rect x="1112.1" y="1443.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.1" y="1454.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, int, bool, bool, bool) (1 samples, 0.05%)</title><rect x="1112.1" y="1427.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1115.1" y="1438.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.11%)</title><rect x="1112.8" y="1427.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.8" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1114.1" y="1443.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1117.1" y="1454.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.05%)</title><rect x="1114.7" y="1443.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.7" y="1454.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1114.7" y="1427.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.7" y="1438.0"></text>
</g>
<g>
<title>Profiler::CompiledMethodLoad(_jvmtiEnv*, _jmethodID*, int, void const*, int, _jvmtiAddrLocationMap const*, void const*) (1 samples, 0.05%)</title><rect x="1115.3" y="1475.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.3" y="1486.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.05%)</title><rect x="1116.0" y="1491.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1119.0" y="1502.0"></text>
</g>
<g>
<title>Thread::muxRelease(long volatile*) (1 samples, 0.05%)</title><rect x="1116.0" y="1475.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1119.0" y="1486.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.16%)</title><rect x="1116.6" y="1523.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.6" y="1534.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.16%)</title><rect x="1116.6" y="1507.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1119.6" y="1518.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.05%)</title><rect x="1116.6" y="1491.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1119.6" y="1502.0"></text>
</g>
<g>
<title>StrongRootsScope::StrongRootsScope(unsigned int) (1 samples, 0.05%)</title><rect x="1116.6" y="1475.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1119.6" y="1486.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.67] (2 samples, 0.11%)</title><rect x="1117.2" y="1491.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1120.2" y="1502.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.11%)</title><rect x="1117.2" y="1475.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.2" y="1486.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit() (2 samples, 0.11%)</title><rect x="1117.2" y="1459.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1120.2" y="1470.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::classes_do(KlassClosure*) (1 samples, 0.05%)</title><rect x="1117.2" y="1443.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.2" y="1454.0"></text>
</g>
<g>
<title>VM_RedefineClasses::MethodDataCleaner::do_klass(Klass*) (1 samples, 0.05%)</title><rect x="1117.2" y="1427.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.2" y="1438.0"></text>
</g>
<g>
<title>MethodData::clean_weak_method_links() (1 samples, 0.05%)</title><rect x="1117.2" y="1411.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.2" y="1422.0"></text>
</g>
<g>
<title>DataLayout::data_in() (1 samples, 0.05%)</title><rect x="1117.2" y="1395.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1120.2" y="1406.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1117.2" y="1379.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1120.2" y="1390.0"></text>
</g>
<g>
<title>VM_RedefineClasses::redefine_single_class(_jclass*, InstanceKlass*, Thread*) (1 samples, 0.05%)</title><rect x="1117.9" y="1443.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.9" y="1454.0"></text>
</g>
<g>
<title>CodeCache::flush_evol_dependents_on(InstanceKlass*) (1 samples, 0.05%)</title><rect x="1117.9" y="1427.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1120.9" y="1438.0"></text>
</g>
<g>
<title>nmethod::is_alive() const (1 samples, 0.05%)</title><rect x="1117.9" y="1411.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1120.9" y="1422.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (112 samples, 6.06%)</title><rect x="1118.5" y="1571.0" width="71.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.5" y="1582.0">sun/inst..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (112 samples, 6.06%)</title><rect x="1118.5" y="1555.0" width="71.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.5" y="1566.0">sun/inst..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.16%)</title><rect x="1118.5" y="1539.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.5" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.16%)</title><rect x="1118.5" y="1523.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.5" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.16%)</title><rect x="1118.5" y="1507.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.16%)</title><rect x="1118.5" y="1491.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.5" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.16%)</title><rect x="1118.5" y="1475.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.5" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1118.5" y="1459.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.5" y="1470.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1118.5" y="1443.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1118.5" y="1427.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1118.5" y="1411.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.5" y="1422.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1118.5" y="1395.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1121.5" y="1406.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1118.5" y="1379.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1121.5" y="1390.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1118.5" y="1363.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1121.5" y="1374.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1118.5" y="1347.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.5" y="1358.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1118.5" y="1331.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1121.5" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1118.5" y="1315.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.5" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1118.5" y="1299.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.5" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.05%)</title><rect x="1118.5" y="1283.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.5" y="1294.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="1118.5" y="1267.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1121.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.11%)</title><rect x="1119.2" y="1459.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.2" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.11%)</title><rect x="1119.2" y="1443.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.2" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.11%)</title><rect x="1119.2" y="1427.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.2" y="1438.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.11%)</title><rect x="1119.2" y="1411.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.11%)</title><rect x="1119.2" y="1395.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.11%)</title><rect x="1119.2" y="1379.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1119.2" y="1363.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (2 samples, 0.11%)</title><rect x="1119.2" y="1347.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.2" y="1358.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.11%)</title><rect x="1119.2" y="1331.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.11%)</title><rect x="1119.2" y="1315.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.11%)</title><rect x="1119.2" y="1299.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (2 samples, 0.11%)</title><rect x="1119.2" y="1283.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.2" y="1294.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1119.2" y="1267.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.2" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1119.2" y="1251.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.2" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1119.2" y="1235.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.2" y="1246.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (2 samples, 0.11%)</title><rect x="1119.2" y="1219.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.2" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1119.2" y="1203.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.2" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (2 samples, 0.11%)</title><rect x="1119.2" y="1187.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.2" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1119.2" y="1171.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.2" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (2 samples, 0.11%)</title><rect x="1119.2" y="1155.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.2" y="1166.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.CENNAM (1 samples, 0.05%)</title><rect x="1119.8" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.8" y="1150.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.SH (1 samples, 0.05%)</title><rect x="1119.8" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (109 samples, 5.90%)</title><rect x="1120.4" y="1539.0" width="69.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.4" y="1550.0">java/la..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (109 samples, 5.90%)</title><rect x="1120.4" y="1523.0" width="69.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.4" y="1534.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (109 samples, 5.90%)</title><rect x="1120.4" y="1507.0" width="69.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.4" y="1518.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (109 samples, 5.90%)</title><rect x="1120.4" y="1491.0" width="69.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.4" y="1502.0">jdk/int..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.premain (109 samples, 5.90%)</title><rect x="1120.4" y="1475.0" width="69.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.4" y="1486.0">datadog..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.agentmain (109 samples, 5.90%)</title><rect x="1120.4" y="1459.0" width="69.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.4" y="1470.0">datadog..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (109 samples, 5.90%)</title><rect x="1120.4" y="1443.0" width="69.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.4" y="1454.0">java/la..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (109 samples, 5.90%)</title><rect x="1120.4" y="1427.0" width="69.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.4" y="1438.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (109 samples, 5.90%)</title><rect x="1120.4" y="1411.0" width="69.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.4" y="1422.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (109 samples, 5.90%)</title><rect x="1120.4" y="1395.0" width="69.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.4" y="1406.0">jdk/int..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.&lt;clinit&gt; (2 samples, 0.11%)</title><rect x="1120.4" y="1379.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.4" y="1390.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1363.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.4" y="1374.0"></text>
</g>
<g>
<title>datadog/slf4j/helpers/SubstituteLoggerFactory.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1347.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1315.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1299.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1283.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findVarHandle (1 samples, 0.05%)</title><rect x="1120.4" y="1267.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getFieldVarHandle (1 samples, 0.05%)</title><rect x="1120.4" y="1251.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getFieldVarHandleCommon (1 samples, 0.05%)</title><rect x="1120.4" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandles.makeFieldHandle (1 samples, 0.05%)</title><rect x="1120.4" y="1219.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1120.4" y="1187.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.linkFromStatic (1 samples, 0.05%)</title><rect x="1120.4" y="1171.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.4" y="1182.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.05%)</title><rect x="1121.1" y="1363.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.1" y="1374.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.05%)</title><rect x="1121.1" y="1347.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.1" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getLogger (1 samples, 0.05%)</title><rect x="1121.1" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.1" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getHelperFactory (1 samples, 0.05%)</title><rect x="1121.1" y="1315.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.1" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.getSettingsDescription (1 samples, 0.05%)</title><rect x="1121.1" y="1299.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.1" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettingsDescription (1 samples, 0.05%)</title><rect x="1121.1" y="1283.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.1" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettings (1 samples, 0.05%)</title><rect x="1121.1" y="1267.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.1" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.1" y="1251.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.1" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.1" y="1235.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.1" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.1" y="1219.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.1" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$DTFormatter.create (1 samples, 0.05%)</title><rect x="1121.1" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.1" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$NewDTFormatter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.1" y="1187.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1124.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2065951873.invoke_MT (1 samples, 0.05%)</title><rect x="1121.1" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="1121.1" y="1155.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (1 samples, 0.05%)</title><rect x="1121.1" y="1139.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberNameEnsureInit (1 samples, 0.05%)</title><rect x="1121.1" y="1123.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.ensureInitialized (1 samples, 0.05%)</title><rect x="1121.1" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.checkInitialized (1 samples, 0.05%)</title><rect x="1121.1" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1124.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassValue.get (1 samples, 0.05%)</title><rect x="1121.1" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassValue.getFromBackup (1 samples, 0.05%)</title><rect x="1121.1" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassValue.getFromHashMap (1 samples, 0.05%)</title><rect x="1121.1" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$EnsureInitialized.computeValue (1 samples, 0.05%)</title><rect x="1121.1" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$EnsureInitialized.computeValue (1 samples, 0.05%)</title><rect x="1121.1" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.ensureClassInitialized (1 samples, 0.05%)</title><rect x="1121.1" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1124.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.ensureClassInitialized0 (1 samples, 0.05%)</title><rect x="1121.1" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.1" y="990.0"></text>
</g>
<g>
<title>java/time/format/DateTimeFormatter.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1121.1" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.1" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1121.1" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1124.1" y="958.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1121.1" y="931.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1124.1" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="915.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1124.1" y="926.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="899.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.1" y="910.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.1" y="894.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="867.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.1" y="878.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="851.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1124.1" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::load_shared_class(InstanceKlass*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="835.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1124.1" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::restore_unshareable_info(ClassLoaderData*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.1" y="830.0"></text>
</g>
<g>
<title>Klass::restore_unshareable_info(ClassLoaderData*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1121.1" y="803.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.1" y="814.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.05%)</title><rect x="1121.1" y="787.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.1" y="798.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.start (107 samples, 5.79%)</title><rect x="1121.7" y="1379.0" width="68.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.7" y="1390.0">datadog..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createParentClassloader (3 samples, 0.16%)</title><rect x="1121.7" y="1363.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.7" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDatadogClassLoader (1 samples, 0.05%)</title><rect x="1121.7" y="1347.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.05%)</title><rect x="1121.7" y="1331.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1121.7" y="1315.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1121.7" y="1299.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.05%)</title><rect x="1121.7" y="1283.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.7" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.7" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.7" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1121.7" y="1251.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.7" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.05%)</title><rect x="1121.7" y="1235.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.7" y="1246.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.05%)</title><rect x="1121.7" y="1219.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.7" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.05%)</title><rect x="1121.7" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.7" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.05%)</title><rect x="1121.7" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.7" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/ZipCoder$UTF8.toString (1 samples, 0.05%)</title><rect x="1121.7" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/System$2.newStringUTF8NoRepl (1 samples, 0.05%)</title><rect x="1121.7" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringCoding.newStringUTF8NoRepl (1 samples, 0.05%)</title><rect x="1121.7" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringCoding.hasNegatives (1 samples, 0.05%)</title><rect x="1121.7" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getPlatformClassLoader (1 samples, 0.05%)</title><rect x="1122.4" y="1347.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="1122.4" y="1331.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.05%)</title><rect x="1122.4" y="1315.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.05%)</title><rect x="1122.4" y="1299.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.05%)</title><rect x="1122.4" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.05%)</title><rect x="1122.4" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.05%)</title><rect x="1122.4" y="1251.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.05%)</title><rect x="1122.4" y="1235.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.05%)</title><rect x="1122.4" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.05%)</title><rect x="1122.4" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.05%)</title><rect x="1122.4" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.4" y="1198.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.05%)</title><rect x="1122.4" y="1171.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.4" y="1182.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.05%)</title><rect x="1122.4" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.4" y="1166.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.05%)</title><rect x="1122.4" y="1139.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.4" y="1150.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.05%)</title><rect x="1122.4" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.4" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1122.4" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.4" y="1118.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.05%)</title><rect x="1122.4" y="1091.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.4" y="1102.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.05%)</title><rect x="1122.4" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="1122.4" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.05%)</title><rect x="1122.4" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.05%)</title><rect x="1122.4" y="1027.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.05%)</title><rect x="1122.4" y="1011.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.05%)</title><rect x="1122.4" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.05%)</title><rect x="1122.4" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.4" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.05%)</title><rect x="1122.4" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.4" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.defineProxyClass (1 samples, 0.05%)</title><rect x="1122.4" y="947.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.4" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateProxyClass (1 samples, 0.05%)</title><rect x="1122.4" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.4" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateClassFile (1 samples, 0.05%)</title><rect x="1122.4" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.4" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateStaticInitializer (1 samples, 0.05%)</title><rect x="1122.4" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.4" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ProxyMethod.codeFieldInitialization (1 samples, 0.05%)</title><rect x="1122.4" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.4" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getMethodRef (1 samples, 0.05%)</title><rect x="1122.4" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.4" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getClass (1 samples, 0.05%)</title><rect x="1122.4" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.4" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getIndirect (1 samples, 0.05%)</title><rect x="1122.4" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.4" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1123.0" y="1347.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1123.0" y="1331.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1123.0" y="1315.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1123.0" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1123.0" y="1283.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1123.0" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1123.0" y="1251.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1123.0" y="1235.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1123.0" y="1219.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.05%)</title><rect x="1123.0" y="1203.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.0" y="1214.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.05%)</title><rect x="1123.0" y="1187.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1126.0" y="1198.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.05%)</title><rect x="1123.0" y="1171.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1126.0" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1155.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1126.0" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1139.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1126.0" y="1150.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1123.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1126.0" y="1134.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1107.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.0" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1091.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1126.0" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1075.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.0" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1059.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1126.0" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1043.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1126.0" y="1054.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1126.0" y="1038.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="1011.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.0" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="995.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1126.0" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1123.0" y="979.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1126.0" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.05%)</title><rect x="1123.0" y="963.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.0" y="974.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="1123.0" y="947.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1126.0" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.installDatadogTracer (24 samples, 1.30%)</title><rect x="1123.6" y="1363.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.6" y="1374.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (24 samples, 1.30%)</title><rect x="1123.6" y="1347.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (24 samples, 1.30%)</title><rect x="1123.6" y="1331.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (24 samples, 1.30%)</title><rect x="1123.6" y="1315.0" width="15.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (24 samples, 1.30%)</title><rect x="1123.6" y="1299.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.6" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/TracerInstaller.installGlobalTracer (24 samples, 1.30%)</title><rect x="1123.6" y="1283.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.6" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.build (23 samples, 1.24%)</title><rect x="1123.6" y="1267.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.6" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (23 samples, 1.24%)</title><rect x="1123.6" y="1251.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.6" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (23 samples, 1.24%)</title><rect x="1123.6" y="1235.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.6" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/MetricsAggregatorFactory.createMetricsAggregator (6 samples, 0.32%)</title><rect x="1123.6" y="1219.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.6" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (6 samples, 0.32%)</title><rect x="1123.6" y="1203.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.6" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.6" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="1171.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.6" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="1155.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1123.6" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.6" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1123.6" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.6" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1123.6" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.6" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1123.6" y="1091.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.6" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1123.6" y="1075.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.6" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1123.6" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.6" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1123.6" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.6" y="1054.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1123.6" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1123.6" y="1011.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1123.6" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1123.6" y="979.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1123.6" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.6" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1123.6" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.6" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1123.6" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.6" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1123.6" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.6" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1123.6" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.6" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1123.6" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="1123.6" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.05%)</title><rect x="1123.6" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.6" y="862.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.05%)</title><rect x="1123.6" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.6" y="846.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.05%)</title><rect x="1123.6" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.6" y="830.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.05%)</title><rect x="1123.6" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.05%)</title><rect x="1123.6" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.05%)</title><rect x="1123.6" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.6" y="782.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.6" y="766.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.6" y="750.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.6" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1123.6" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="1123.6" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.05%)</title><rect x="1123.6" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.6" y="670.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.05%)</title><rect x="1123.6" y="643.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1126.6" y="654.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.05%)</title><rect x="1123.6" y="627.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1126.6" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1123.6" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1126.6" y="622.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="1123.6" y="595.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1126.6" y="606.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.getWellKnownTags (5 samples, 0.27%)</title><rect x="1124.3" y="1187.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.3" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.getHostName (5 samples, 0.27%)</title><rect x="1124.3" y="1171.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/Runtime.exec (5 samples, 0.27%)</title><rect x="1124.3" y="1155.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/Runtime.exec (5 samples, 0.27%)</title><rect x="1124.3" y="1139.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/Runtime.exec (5 samples, 0.27%)</title><rect x="1124.3" y="1123.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/ProcessBuilder.start (5 samples, 0.27%)</title><rect x="1124.3" y="1107.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/ProcessBuilder.start (5 samples, 0.27%)</title><rect x="1124.3" y="1091.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.start (5 samples, 0.27%)</title><rect x="1124.3" y="1075.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.&lt;init&gt; (5 samples, 0.27%)</title><rect x="1124.3" y="1059.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/ProcessHandleImpl.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1124.3" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.3" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1124.3" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/ProcessHandleImpl$$Lambda$50/1482166692.run (1 samples, 0.05%)</title><rect x="1124.3" y="1011.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/ProcessHandleImpl.lambda$static$1 (1 samples, 0.05%)</title><rect x="1124.3" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.05%)</title><rect x="1124.3" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.05%)</title><rect x="1124.3" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.linkToTargetMethod (1 samples, 0.05%)</title><rect x="1124.3" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.callSiteForm (1 samples, 0.05%)</title><rect x="1124.3" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.05%)</title><rect x="1124.3" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.3" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.05%)</title><rect x="1124.3" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.05%)</title><rect x="1124.3" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.05%)</title><rect x="1124.3" y="867.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.isStaticallyInvocable (1 samples, 0.05%)</title><rect x="1124.3" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.05%)</title><rect x="1124.3" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.3" y="846.0"></text>
</g>
<g>
<title>jni_IsAssignableFrom (1 samples, 0.05%)</title><rect x="1124.3" y="819.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1127.3" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.22%)</title><rect x="1124.9" y="1043.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl$$Lambda$52/145455292.run (4 samples, 0.22%)</title><rect x="1124.9" y="1027.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.lambda$new$0 (4 samples, 0.22%)</title><rect x="1124.9" y="1011.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.initStreams (4 samples, 0.22%)</title><rect x="1124.9" y="995.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/ProcessHandleImpl.completion (1 samples, 0.05%)</title><rect x="1124.9" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1124.9" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.9" y="974.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1124.9" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.9" y="958.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="1124.9" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="1124.9" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1124.9" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.9" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1124.9" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1124.9" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1124.9" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="1124.9" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1124.9" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="1124.9" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.05%)</title><rect x="1124.9" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.05%)</title><rect x="1124.9" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.05%)</title><rect x="1124.9" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.05%)</title><rect x="1124.9" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.05%)</title><rect x="1124.9" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.05%)</title><rect x="1124.9" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDefaultValue (1 samples, 0.05%)</title><rect x="1124.9" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.9" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDefaultValue (1 samples, 0.05%)</title><rect x="1124.9" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.16%)</title><rect x="1125.5" y="979.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.16%)</title><rect x="1125.5" y="963.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.5" y="974.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (3 samples, 0.16%)</title><rect x="1125.5" y="947.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.5" y="958.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (3 samples, 0.16%)</title><rect x="1125.5" y="931.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (3 samples, 0.16%)</title><rect x="1125.5" y="915.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.16%)</title><rect x="1125.5" y="899.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.5" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.16%)</title><rect x="1125.5" y="883.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.16%)</title><rect x="1125.5" y="867.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.16%)</title><rect x="1125.5" y="851.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (3 samples, 0.16%)</title><rect x="1125.5" y="835.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.16%)</title><rect x="1125.5" y="819.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (3 samples, 0.16%)</title><rect x="1125.5" y="803.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="1125.5" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="1125.5" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.05%)</title><rect x="1125.5" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="1125.5" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1125.5" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.5" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1125.5" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.5" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1125.5" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.5" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1125.5" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.5" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="1125.5" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.5" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1125.5" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.5" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1125.5" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="1125.5" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="1125.5" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="1125.5" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="1125.5" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.5" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="1125.5" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="1125.5" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.5" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="1125.5" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.5" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="1125.5" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="1125.5" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.5" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="1125.5" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.5" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="1125.5" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.5" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="1125.5" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.5" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="1125.5" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.5" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="1125.5" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.5" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.05%)</title><rect x="1125.5" y="387.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.5" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1125.5" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.5" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.05%)</title><rect x="1126.2" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.05%)</title><rect x="1126.2" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.05%)</title><rect x="1126.2" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.05%)</title><rect x="1126.2" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.05%)</title><rect x="1126.2" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1126.2" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.05%)</title><rect x="1126.2" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.05%)</title><rect x="1126.2" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.2" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="1126.2" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.2" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.05%)</title><rect x="1126.2" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.05%)</title><rect x="1126.2" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.05%)</title><rect x="1126.2" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.2" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.05%)</title><rect x="1126.2" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.2" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.05%)</title><rect x="1126.2" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.2" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.05%)</title><rect x="1126.2" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.2" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.defineProxyClass (1 samples, 0.05%)</title><rect x="1126.2" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.2" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateProxyClass (1 samples, 0.05%)</title><rect x="1126.2" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.2" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateClassFile (1 samples, 0.05%)</title><rect x="1126.2" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.2" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ProxyMethod.generateMethod (1 samples, 0.05%)</title><rect x="1126.2" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getFieldRef (1 samples, 0.05%)</title><rect x="1126.2" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.2" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getNameAndType (1 samples, 0.05%)</title><rect x="1126.2" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.2" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getUtf8 (1 samples, 0.05%)</title><rect x="1126.2" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.2" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getValue (1 samples, 0.05%)</title><rect x="1126.2" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="1126.2" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="1126.2" y="403.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.05%)</title><rect x="1126.2" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.2" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.05%)</title><rect x="1126.8" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.05%)</title><rect x="1126.8" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.05%)</title><rect x="1126.8" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1126.8" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1126.8" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitEnd (1 samples, 0.05%)</title><rect x="1126.8" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitEnd (1 samples, 0.05%)</title><rect x="1126.8" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitEnd (1 samples, 0.05%)</title><rect x="1126.8" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitEnd (1 samples, 0.05%)</title><rect x="1126.8" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitEnd (1 samples, 0.05%)</title><rect x="1126.8" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.8" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector$1.visitEnd (1 samples, 0.05%)</title><rect x="1126.8" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.8" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector$SerialVersionUIDInjector.injectSerialVersionUID (1 samples, 0.05%)</title><rect x="1126.8" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.8" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/asm/SerialVersionUIDAdder.computeSVUID (1 samples, 0.05%)</title><rect x="1126.8" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.05%)</title><rect x="1126.8" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.8" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1126.8" y="563.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1129.8" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1126.8" y="547.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.8" y="558.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="531.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.8" y="542.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="515.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.8" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="499.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1129.8" y="510.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="483.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1129.8" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="467.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.8" y="478.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="451.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.8" y="462.0"></text>
</g>
<g>
<title>ClassPathImageEntry::open_stream(char const*, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="435.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1129.8" y="446.0"></text>
</g>
<g>
<title>ClassLoader::get_package_entry(char const*, ClassLoaderData*, Thread*) (1 samples, 0.05%)</title><rect x="1126.8" y="419.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.8" y="430.0"></text>
</g>
<g>
<title>PackageEntryTable::lookup_only(Symbol*) (1 samples, 0.05%)</title><rect x="1126.8" y="403.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1129.8" y="414.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (4 samples, 0.22%)</title><rect x="1127.5" y="1219.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.5" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (4 samples, 0.22%)</title><rect x="1127.5" y="1203.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.5" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (1 samples, 0.05%)</title><rect x="1127.5" y="1187.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.5" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (1 samples, 0.05%)</title><rect x="1127.5" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1127.5" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.5" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1127.5" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.5" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1127.5" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.5" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1127.5" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.5" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1127.5" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.5" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1127.5" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="1127.5" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.05%)</title><rect x="1127.5" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.5" y="1054.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1127.5" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.5" y="1038.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1127.5" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1128.1" y="1187.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.1" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1128.1" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.1" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1128.1" y="1155.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.1" y="1166.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl.get (2 samples, 0.11%)</title><rect x="1128.7" y="1187.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.7" y="1198.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.parse (2 samples, 0.11%)</title><rect x="1128.7" y="1171.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.7" y="1182.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.canonicalizeHost (1 samples, 0.05%)</title><rect x="1128.7" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.7" y="1166.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.canonicalizeHost (1 samples, 0.05%)</title><rect x="1128.7" y="1139.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.7" y="1150.0"></text>
</g>
<g>
<title>java/net/IDN.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1128.7" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.7" y="1134.0"></text>
</g>
<g>
<title>sun/net/idn/StringPrep.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1128.7" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.7" y="1118.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacter.getUnicodeVersion (1 samples, 0.05%)</title><rect x="1128.7" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.7" y="1102.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1128.7" y="1075.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.7" y="1086.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1128.7" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1131.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.05%)</title><rect x="1128.7" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.7" y="1054.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1129.4" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1129.4" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1129.4" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1129.4" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1129.4" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1129.4" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1129.4" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1129.4" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.05%)</title><rect x="1129.4" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.4" y="1038.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.05%)</title><rect x="1129.4" y="1011.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1132.4" y="1022.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.05%)</title><rect x="1129.4" y="995.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1132.4" y="1006.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="979.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.4" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.4" y="974.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="947.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.4" y="958.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="931.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1132.4" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="915.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.4" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1129.4" y="899.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1132.4" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="883.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1132.4" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="867.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.4" y="878.0"></text>
</g>
<g>
<title>ClassFileParser::parse_linenumber_table(unsigned int, unsigned int, CompressedLineNumberWriteStream**, Thread*) (1 samples, 0.05%)</title><rect x="1129.4" y="851.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.createStatsDClient (8 samples, 0.43%)</title><rect x="1130.0" y="1219.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.0" y="1230.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (8 samples, 0.43%)</title><rect x="1130.0" y="1203.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.0" y="1214.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (8 samples, 0.43%)</title><rect x="1130.0" y="1187.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.0" y="1198.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (7 samples, 0.38%)</title><rect x="1130.0" y="1171.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.0" y="1182.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.createSender (1 samples, 0.05%)</title><rect x="1130.0" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1130.0" y="1139.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1130.0" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.0" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1130.0" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.0" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1130.0" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.0" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1130.0" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.0" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1130.0" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="1130.0" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.05%)</title><rect x="1130.0" y="1027.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.0" y="1038.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1130.0" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.0" y="1022.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1130.0" y="995.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.0" y="1006.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.05%)</title><rect x="1130.0" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.05%)</title><rect x="1130.0" y="963.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1133.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="1130.0" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="1130.0" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.submit (2 samples, 0.11%)</title><rect x="1130.6" y="1155.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (2 samples, 0.11%)</title><rect x="1130.6" y="1139.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.05%)</title><rect x="1130.6" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.6" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1130.6" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.6" y="1118.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="1130.6" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="1130.6" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1130.6" y="1059.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.6" y="1070.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1130.6" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1130.6" y="1027.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1130.6" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="1130.6" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1130.6" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="1130.6" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.05%)</title><rect x="1130.6" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.05%)</title><rect x="1130.6" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.05%)</title><rect x="1130.6" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1130.6" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1130.6" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.05%)</title><rect x="1130.6" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="1130.6" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="1130.6" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="1130.6" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="1130.6" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/TypeConstantAdjustment$TypeConstantDissolvingClassVisitor.visit (1 samples, 0.05%)</title><rect x="1130.6" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.05%)</title><rect x="1130.6" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector$1.visit (1 samples, 0.05%)</title><rect x="1130.6" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector.injectContextStore (1 samples, 0.05%)</title><rect x="1130.6" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.6" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.05%)</title><rect x="1130.6" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.05%)</title><rect x="1130.6" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.6" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.05%)</title><rect x="1130.6" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.6" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.05%)</title><rect x="1130.6" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="1131.3" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.05%)</title><rect x="1131.3" y="1107.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.3" y="1118.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1131.3" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.3" y="1102.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="1131.3" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="1131.3" y="1059.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1131.3" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.3" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1131.3" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1131.3" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1131.3" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="1131.3" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1131.3" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="1131.3" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.05%)</title><rect x="1131.3" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.05%)</title><rect x="1131.3" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.05%)</title><rect x="1131.3" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.05%)</title><rect x="1131.3" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.05%)</title><rect x="1131.3" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.05%)</title><rect x="1131.3" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1131.3" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1131.3" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1131.3" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1131.3" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory.make (1 samples, 0.05%)</title><rect x="1131.3" y="771.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.05%)</title><rect x="1131.3" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.05%)</title><rect x="1131.3" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.3" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="1131.3" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.3" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="1131.3" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.3" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.05%)</title><rect x="1131.3" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1131.3" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1131.3" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.setDelegate (1 samples, 0.05%)</title><rect x="1131.3" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.3" y="654.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.05%)</title><rect x="1131.3" y="627.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1134.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.newSingleThreadExecutor (4 samples, 0.22%)</title><rect x="1131.9" y="1155.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1131.9" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.9" y="1150.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1131.9" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.9" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="1131.9" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="1131.9" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.9" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1131.9" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.9" y="1086.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1131.9" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1131.9" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1131.9" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="1131.9" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1131.9" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="1131.9" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.05%)</title><rect x="1131.9" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (1 samples, 0.05%)</title><rect x="1131.9" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.takesArguments (1 samples, 0.05%)</title><rect x="1131.9" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.takesGenericArguments (1 samples, 0.05%)</title><rect x="1131.9" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.9" y="926.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (3 samples, 0.16%)</title><rect x="1132.6" y="1139.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.6" y="1150.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (3 samples, 0.16%)</title><rect x="1132.6" y="1123.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.6" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (3 samples, 0.16%)</title><rect x="1132.6" y="1107.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.6" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.16%)</title><rect x="1132.6" y="1091.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.6" y="1102.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.16%)</title><rect x="1132.6" y="1075.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.16%)</title><rect x="1132.6" y="1059.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.16%)</title><rect x="1132.6" y="1043.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (3 samples, 0.16%)</title><rect x="1132.6" y="1027.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.16%)</title><rect x="1132.6" y="1011.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (3 samples, 0.16%)</title><rect x="1132.6" y="995.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation.getMatcher (1 samples, 0.05%)</title><rect x="1132.6" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.05%)</title><rect x="1133.2" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.05%)</title><rect x="1133.2" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.05%)</title><rect x="1133.2" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.05%)</title><rect x="1133.2" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.05%)</title><rect x="1133.2" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.05%)</title><rect x="1133.2" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1133.2" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1133.2" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1133.2" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1133.2" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved$Factory.make (1 samples, 0.05%)</title><rect x="1133.2" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.05%)</title><rect x="1133.2" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.05%)</title><rect x="1133.2" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.2" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDefaultValue (1 samples, 0.05%)</title><rect x="1133.2" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.2" y="782.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.05%)</title><rect x="1133.2" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.2" y="766.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseConst (1 samples, 0.05%)</title><rect x="1133.2" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getShort (1 samples, 0.05%)</title><rect x="1133.2" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getShortUnaligned (1 samples, 0.05%)</title><rect x="1133.2" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getShortUnaligned (1 samples, 0.05%)</title><rect x="1133.2" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.05%)</title><rect x="1133.8" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.05%)</title><rect x="1133.8" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.05%)</title><rect x="1133.8" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1133.8" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1133.8" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.05%)</title><rect x="1133.8" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitField (1 samples, 0.05%)</title><rect x="1133.8" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitField (1 samples, 0.05%)</title><rect x="1133.8" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.05%)</title><rect x="1133.8" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.05%)</title><rect x="1133.8" y="835.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.05%)</title><rect x="1133.8" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.05%)</title><rect x="1133.8" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.05%)</title><rect x="1133.8" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1136.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor.visitField (1 samples, 0.05%)</title><rect x="1133.8" y="771.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$Constraint$Compound.assertField (1 samples, 0.05%)</title><rect x="1133.8" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.8" y="766.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticStatsDAddressResolution (1 samples, 0.05%)</title><rect x="1134.5" y="1171.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.5" y="1182.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticAddressResolution (1 samples, 0.05%)</title><rect x="1134.5" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.5" y="1166.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.05%)</title><rect x="1134.5" y="1139.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.5" y="1150.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.05%)</title><rect x="1134.5" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.5" y="1134.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.05%)</title><rect x="1134.5" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.5" y="1118.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.05%)</title><rect x="1134.5" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.5" y="1102.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.05%)</title><rect x="1134.5" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.5" y="1086.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.05%)</title><rect x="1134.5" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.05%)</title><rect x="1134.5" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.navigableKeySet (1 samples, 0.05%)</title><rect x="1134.5" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.5" y="1038.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1134.5" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.5" y="1022.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="1134.5" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="1134.5" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1134.5" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.5" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1134.5" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1134.5" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1134.5" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="1134.5" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1134.5" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="1134.5" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="1134.5" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="1134.5" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.05%)</title><rect x="1134.5" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.05%)</title><rect x="1134.5" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.05%)</title><rect x="1134.5" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.05%)</title><rect x="1134.5" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.5" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1134.5" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1134.5" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1134.5" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.5" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1134.5" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.5" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1134.5" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.5" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1134.5" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.5" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1134.5" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.5" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="1134.5" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.5" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1134.5" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.5" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1134.5" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="1134.5" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="1134.5" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="1134.5" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.5" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="1134.5" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="1134.5" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.5" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="1134.5" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.5" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (1 samples, 0.05%)</title><rect x="1134.5" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingType (1 samples, 0.05%)</title><rect x="1134.5" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getEnclosingType (1 samples, 0.05%)</title><rect x="1134.5" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.5" y="478.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.logStatus (2 samples, 0.11%)</title><rect x="1135.1" y="1219.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.1" y="1230.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.05%)</title><rect x="1135.1" y="1203.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.1" y="1214.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.05%)</title><rect x="1135.1" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.1" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger$ConfigAdapter.toJson (1 samples, 0.05%)</title><rect x="1135.1" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.1" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger$ConfigAdapter.toJson (1 samples, 0.05%)</title><rect x="1135.1" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.1" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.access$100 (1 samples, 0.05%)</title><rect x="1135.1" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.1" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.agentServiceCheck (1 samples, 0.05%)</title><rect x="1135.1" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.1" y="1134.0"></text>
</g>
<g>
<title>java/net/Socket.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1135.1" y="1107.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.1" y="1118.0"></text>
</g>
<g>
<title>java/net/Socket.setImpl (1 samples, 0.05%)</title><rect x="1135.1" y="1091.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.1" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1135.1" y="1075.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.1" y="1086.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="1059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.1" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1138.1" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="1027.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.1" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="1011.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.1" y="1022.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.1" y="1006.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="979.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.1" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="963.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1138.1" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1135.1" y="947.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1138.1" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.139] (1 samples, 0.05%)</title><rect x="1135.1" y="931.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1138.1" y="942.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="915.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1138.1" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="899.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.1" y="910.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="883.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.1" y="894.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="867.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1138.1" y="878.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="851.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.1" y="862.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.1" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1135.1" y="819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.1" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.05%)</title><rect x="1135.1" y="803.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.1" y="814.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.05%)</title><rect x="1135.1" y="787.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.1" y="798.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.info (1 samples, 0.05%)</title><rect x="1135.8" y="1203.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.8" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.formatLog (1 samples, 0.05%)</title><rect x="1135.8" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1138.8" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.alwaysLog (1 samples, 0.05%)</title><rect x="1135.8" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.8" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory$Helper.log (1 samples, 0.05%)</title><rect x="1135.8" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.8" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.log (1 samples, 0.05%)</title><rect x="1135.8" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.8" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.log (1 samples, 0.05%)</title><rect x="1135.8" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.8" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.log (1 samples, 0.05%)</title><rect x="1135.8" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.8" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$NewDTFormatter.appendFormattedDate (1 samples, 0.05%)</title><rect x="1135.8" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/234223040.invoke_MT (1 samples, 0.05%)</title><rect x="1135.8" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2050275256.invoke (1 samples, 0.05%)</title><rect x="1135.8" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/284720968.invokeSpecial (1 samples, 0.05%)</title><rect x="1135.8" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.8" y="1054.0"></text>
</g>
<g>
<title>java/time/format/DateTimeFormatter.formatTo (1 samples, 0.05%)</title><rect x="1135.8" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.8" y="1038.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1135.8" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.11%)</title><rect x="1136.4" y="1219.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.4" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (2 samples, 0.11%)</title><rect x="1136.4" y="1203.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.4" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.05%)</title><rect x="1136.4" y="1187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1136.4" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1136.4" y="1155.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1136.4" y="1139.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1136.4" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1136.4" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1136.4" y="1091.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1136.4" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.05%)</title><rect x="1136.4" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.4" y="1070.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1136.4" y="1043.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.4" y="1054.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="1136.4" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="1136.4" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1136.4" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.4" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1136.4" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1136.4" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.05%)</title><rect x="1136.4" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.05%)</title><rect x="1136.4" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1136.4" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.05%)</title><rect x="1136.4" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="1136.4" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.05%)</title><rect x="1136.4" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.05%)</title><rect x="1136.4" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="1136.4" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.4" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1136.4" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.4" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1136.4" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.4" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1136.4" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.4" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1136.4" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.4" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="1136.4" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1136.4" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.4" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1136.4" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="1136.4" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (1 samples, 0.05%)</title><rect x="1136.4" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.05%)</title><rect x="1136.4" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="1136.4" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="1136.4" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="1136.4" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="1136.4" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="1136.4" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.4" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="1136.4" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.4" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="1136.4" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.4" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="1136.4" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.4" y="558.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.05%)</title><rect x="1136.4" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.4" y="542.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.05%)</title><rect x="1136.4" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.4" y="526.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.05%)</title><rect x="1136.4" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.4" y="510.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.05%)</title><rect x="1136.4" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.4" y="494.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1136.4" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.4" y="478.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1136.4" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.4" y="462.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1136.4" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.4" y="446.0"></text>
</g>
<g>
<title>java/net/URL.isValidProtocol (1 samples, 0.05%)</title><rect x="1136.4" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.isLetter (1 samples, 0.05%)</title><rect x="1136.4" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.isLetter (1 samples, 0.05%)</title><rect x="1136.4" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Character.getType (1 samples, 0.05%)</title><rect x="1136.4" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.4" y="382.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="1136.4" y="355.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1139.4" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="1136.4" y="339.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.4" y="350.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.05%)</title><rect x="1136.4" y="323.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.4" y="334.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="1136.4" y="307.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.4" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1137.0" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.0" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1137.0" y="1171.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.0" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1137.0" y="1155.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.0" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1137.0" y="1139.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.0" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1137.0" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="1137.0" y="1107.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.0" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.close (1 samples, 0.05%)</title><rect x="1137.0" y="1091.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.05%)</title><rect x="1137.0" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.05%)</title><rect x="1137.0" y="1059.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.0" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$InflaterCleanupAction.run (1 samples, 0.05%)</title><rect x="1137.0" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.0" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.releaseInflater (1 samples, 0.05%)</title><rect x="1137.0" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.05%)</title><rect x="1137.0" y="1011.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.05%)</title><rect x="1137.0" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1137.7" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1137.7" y="1203.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.7" y="1214.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.05%)</title><rect x="1137.7" y="1187.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.7" y="1198.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.05%)</title><rect x="1137.7" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.05%)</title><rect x="1137.7" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.05%)</title><rect x="1137.7" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Default.acquire (1 samples, 0.05%)</title><rect x="1137.7" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1140.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1138.3" y="1267.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.3" y="1278.0"></text>
</g>
<g>
<title>java/math/BigInteger.pow (1 samples, 0.05%)</title><rect x="1138.3" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.3" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1138.3" y="1235.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.3" y="1246.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1138.3" y="1219.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.3" y="1230.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="1138.3" y="1203.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.3" y="1214.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.05%)</title><rect x="1138.3" y="1187.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.3" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startDatadogAgent (77 samples, 4.16%)</title><rect x="1138.9" y="1363.0" width="49.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.9" y="1374.0">datad..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (77 samples, 4.16%)</title><rect x="1138.9" y="1347.0" width="49.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.9" y="1358.0">java/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (77 samples, 4.16%)</title><rect x="1138.9" y="1331.0" width="49.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.9" y="1342.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (77 samples, 4.16%)</title><rect x="1138.9" y="1315.0" width="49.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.9" y="1326.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (77 samples, 4.16%)</title><rect x="1138.9" y="1299.0" width="49.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.9" y="1310.0">jdk/i..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.&lt;clinit&gt; (5 samples, 0.27%)</title><rect x="1138.9" y="1283.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.9" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.&lt;clinit&gt; (5 samples, 0.27%)</title><rect x="1138.9" y="1267.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.9" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.&lt;init&gt; (4 samples, 0.22%)</title><rect x="1138.9" y="1251.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.9" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (2 samples, 0.11%)</title><rect x="1138.9" y="1235.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.9" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache$Provider.newWeakCache (2 samples, 0.11%)</title><rect x="1138.9" y="1219.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.9" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1138.9" y="1203.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.9" y="1214.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.build (2 samples, 0.11%)</title><rect x="1138.9" y="1187.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.9" y="1198.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1138.9" y="1171.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.9" y="1182.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1138.9" y="1155.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.9" y="1166.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache (2 samples, 0.11%)</title><rect x="1138.9" y="1139.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.9" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="1107.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.9" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1138.9" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.9" y="1102.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1138.9" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.9" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.9" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="1043.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.9" y="1054.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.9" y="1038.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1138.9" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.9" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.9" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.9" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1138.9" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.9" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1138.9" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.9" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.9" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.9" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.9" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.9" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1138.9" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.9" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.9" y="814.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.9" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1138.9" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.9" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1138.9" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.9" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.9" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.9" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.9" y="718.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.9" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1138.9" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.9" y="654.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1138.9" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.9" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1138.9" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.9" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1138.9" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.9" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.9" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1138.9" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.9" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.9" y="558.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.9" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1138.9" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.9" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1138.9" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.9" y="510.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1138.9" y="483.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1141.9" y="494.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1138.9" y="467.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1141.9" y="478.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1138.9" y="451.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1141.9" y="462.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1138.9" y="435.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.9" y="446.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1138.9" y="419.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.9" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1138.9" y="403.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.9" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1138.9" y="387.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.9" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="1138.9" y="371.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.9" y="382.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.05%)</title><rect x="1138.9" y="355.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1141.9" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.05%)</title><rect x="1139.6" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1139.6" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1139.6" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.05%)</title><rect x="1139.6" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.6" y="1086.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1139.6" y="1059.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.6" y="1070.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMS.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1139.6" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.6" y="1054.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WS.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1139.6" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.6" y="1038.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1139.6" y="1011.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1139.6" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1139.6" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.6" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1139.6" y="963.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.6" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1139.6" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.6" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1139.6" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.6" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1139.6" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.6" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1139.6" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.6" y="910.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1139.6" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.6" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1139.6" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.6" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1139.6" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.6" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1139.6" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1139.6" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.6" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1139.6" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.6" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1139.6" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.6" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1139.6" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.6" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1139.6" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="1139.6" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.05%)</title><rect x="1139.6" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.6" y="734.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.05%)</title><rect x="1139.6" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.6" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.05%)</title><rect x="1139.6" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.6" y="702.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.05%)</title><rect x="1139.6" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.6" y="686.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.05%)</title><rect x="1139.6" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.6" y="670.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1139.6" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.6" y="654.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1139.6" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.05%)</title><rect x="1139.6" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1139.6" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.6" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1140.2" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.2" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1140.2" y="1219.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.2" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.2" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.2" y="1187.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.2" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1140.2" y="1171.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.2" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1140.2" y="1155.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.2" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1140.2" y="1139.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.2" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1140.2" y="1123.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.2" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1140.2" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.2" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1140.2" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1140.2" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1140.2" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.2" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.2" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.2" y="1027.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.9" y="1235.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.9" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.9" y="1219.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.9" y="1230.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1140.9" y="1203.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.9" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1140.9" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.9" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1140.9" y="1171.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.9" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1140.9" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.9" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1140.9" y="1139.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.9" y="1150.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1140.9" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1140.9" y="1107.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1140.9" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.9" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.9" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1140.9" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.9" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1140.9" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.9" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1140.9" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.9" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1140.9" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.9" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1140.9" y="995.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.9" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1140.9" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="1140.9" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.9" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="1140.9" y="947.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.9" y="958.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.05%)</title><rect x="1140.9" y="931.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.9" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1140.9" y="915.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.9" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1140.9" y="899.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.9" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1140.9" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1143.9" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1140.9" y="867.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.9" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="1140.9" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1143.9" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="1140.9" y="835.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.9" y="846.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.05%)</title><rect x="1140.9" y="819.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1143.9" y="830.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.05%)</title><rect x="1140.9" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.9" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1141.5" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.5" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1141.5" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.5" y="1246.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1141.5" y="1219.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.5" y="1230.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1141.5" y="1203.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.5" y="1214.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1141.5" y="1187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.5" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1141.5" y="1171.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.5" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1141.5" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.5" y="1166.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1141.5" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.5" y="1150.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (1 samples, 0.05%)</title><rect x="1141.5" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.05%)</title><rect x="1141.5" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1144.5" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader$CodeSourceKey.equals (1 samples, 0.05%)</title><rect x="1141.5" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.5" y="1102.0"></text>
</g>
<g>
<title>java/security/CodeSource.matchCerts (1 samples, 0.05%)</title><rect x="1141.5" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.5" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (72 samples, 3.89%)</title><rect x="1142.1" y="1283.0" width="46.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.1" y="1294.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (72 samples, 3.89%)</title><rect x="1142.1" y="1267.0" width="46.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.1" y="1278.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.instrument (4 samples, 0.22%)</title><rect x="1142.1" y="1251.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.1" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.applyInstrumentationTransformers (2 samples, 0.11%)</title><rect x="1142.1" y="1235.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.1" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/hibernate/core/v3_3/SessionInstrumentation.transformers (1 samples, 0.05%)</title><rect x="1142.1" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.1" y="1230.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_ldc(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1142.1" y="1203.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.1" y="1214.0"></text>
</g>
<g>
<title>Bytecode_loadconstant::resolve_constant(Thread*) const (1 samples, 0.05%)</title><rect x="1142.1" y="1187.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.1" y="1198.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (1 samples, 0.05%)</title><rect x="1142.1" y="1171.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.1" y="1182.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle const&amp;, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1142.1" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1145.1" y="1166.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="1142.1" y="1139.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.1" y="1150.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1142.1" y="1123.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.1" y="1134.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="1142.1" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.1" y="1118.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.05%)</title><rect x="1142.1" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1142.8" y="1219.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1142.8" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.8" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1142.8" y="1187.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.8" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1142.8" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.8" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1142.8" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.8" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1142.8" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.8" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1142.8" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.8" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1142.8" y="1107.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.8" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1142.8" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1142.8" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1142.8" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.8" y="1070.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1142.8" y="1043.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1145.8" y="1054.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1142.8" y="1027.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1145.8" y="1038.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1142.8" y="1011.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1145.8" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1142.8" y="995.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.8" y="1006.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1142.8" y="979.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.8" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1142.8" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.8" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1142.8" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1145.8" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="1142.8" y="931.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1145.8" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.05%)</title><rect x="1142.8" y="915.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.8" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.injectHelperClasses (1 samples, 0.05%)</title><rect x="1143.4" y="1235.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.4" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/netty40/NettyChannelHandlerContextInstrumentation.helperClassNames (1 samples, 0.05%)</title><rect x="1143.4" y="1219.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.4" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextProvider.additionalInstrumentation (1 samples, 0.05%)</title><rect x="1144.1" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.1" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/DDElementMatchers.safeHasSuperType (1 samples, 0.05%)</title><rect x="1144.1" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1147.1" y="1230.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1144.1" y="1203.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.1" y="1214.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1144.1" y="1187.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.1" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1144.1" y="1171.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1147.1" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1144.1" y="1155.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.1" y="1166.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.05%)</title><rect x="1144.1" y="1139.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1144.7" y="1251.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.7" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1144.7" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.7" y="1246.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1144.7" y="1219.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.7" y="1230.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1144.7" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.7" y="1214.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1144.7" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.7" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1144.7" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="1144.7" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.05%)</title><rect x="1144.7" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.7" y="1150.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.05%)</title><rect x="1144.7" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.05%)</title><rect x="1144.7" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.7" y="1118.0"></text>
</g>
<g>
<title>java/net/URL.getFile (1 samples, 0.05%)</title><rect x="1144.7" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (14 samples, 0.76%)</title><rect x="1145.3" y="1251.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.3" y="1262.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (13 samples, 0.70%)</title><rect x="1146.0" y="1235.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.0" y="1246.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (13 samples, 0.70%)</title><rect x="1146.0" y="1219.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.0" y="1230.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (13 samples, 0.70%)</title><rect x="1146.0" y="1203.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.0" y="1214.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (4 samples, 0.22%)</title><rect x="1146.0" y="1187.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.forName (4 samples, 0.22%)</title><rect x="1146.0" y="1171.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (4 samples, 0.22%)</title><rect x="1146.0" y="1155.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.0" y="1166.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.05%)</title><rect x="1146.0" y="1139.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1149.0" y="1150.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.05%)</title><rect x="1146.0" y="1123.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1149.0" y="1134.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="1107.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1149.0" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="1091.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.0" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="1075.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.0" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="1059.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.0" y="1070.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="1043.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.0" y="1054.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="1027.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.0" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="1011.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.0" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1146.0" y="995.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.0" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1146.0" y="979.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.0" y="990.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="1146.0" y="963.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1149.0" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.16%)</title><rect x="1146.6" y="1139.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.6" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (3 samples, 0.16%)</title><rect x="1146.6" y="1123.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.6" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (3 samples, 0.16%)</title><rect x="1146.6" y="1107.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.6" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.16%)</title><rect x="1146.6" y="1091.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.6" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (3 samples, 0.16%)</title><rect x="1146.6" y="1075.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.6" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (3 samples, 0.16%)</title><rect x="1146.6" y="1059.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.6" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (3 samples, 0.16%)</title><rect x="1146.6" y="1043.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.6" y="1054.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.11%)</title><rect x="1146.6" y="1027.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.11%)</title><rect x="1146.6" y="1011.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1146.6" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1146.6" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1146.6" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.6" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1146.6" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.6" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1146.6" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.6" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1146.6" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.6" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1146.6" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.6" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1146.6" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.6" y="894.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1146.6" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.6" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1146.6" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.6" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1146.6" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.6" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1146.6" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1146.6" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.6" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1146.6" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.6" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1146.6" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.6" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1146.6" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.6" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1146.6" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1146.6" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.6" y="734.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1146.6" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.6" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1146.6" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.6" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1146.6" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.6" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1146.6" y="659.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1149.6" y="670.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1146.6" y="643.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1149.6" y="654.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1146.6" y="627.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1149.6" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1146.6" y="611.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1149.6" y="622.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1146.6" y="595.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.6" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1146.6" y="579.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.6" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1146.6" y="563.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.6" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.05%)</title><rect x="1146.6" y="547.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.6" y="558.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.05%)</title><rect x="1146.6" y="531.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.05%)</title><rect x="1147.2" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.05%)</title><rect x="1147.2" y="979.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.05%)</title><rect x="1147.2" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.05%)</title><rect x="1147.2" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.05%)</title><rect x="1147.2" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.05%)</title><rect x="1147.2" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="1147.9" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.9" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="1147.9" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.9" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="1147.9" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.9" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="1147.9" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1147.9" y="963.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1150.9" y="974.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="1147.9" y="947.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1150.9" y="958.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (9 samples, 0.49%)</title><rect x="1148.5" y="1187.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1151.5" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.49%)</title><rect x="1148.5" y="1171.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1151.5" y="1182.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 0.49%)</title><rect x="1148.5" y="1155.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.5" y="1166.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 0.49%)</title><rect x="1148.5" y="1139.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 0.49%)</title><rect x="1148.5" y="1123.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (9 samples, 0.49%)</title><rect x="1148.5" y="1107.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (9 samples, 0.49%)</title><rect x="1148.5" y="1091.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (9 samples, 0.49%)</title><rect x="1148.5" y="1075.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.5" y="1086.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (9 samples, 0.49%)</title><rect x="1148.5" y="1059.0" width="5.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1151.5" y="1070.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (9 samples, 0.49%)</title><rect x="1148.5" y="1043.0" width="5.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1151.5" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (9 samples, 0.49%)</title><rect x="1148.5" y="1027.0" width="5.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.5" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.05%)</title><rect x="1148.5" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.5" y="1022.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="1148.5" y="995.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.5" y="1006.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1148.5" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.5" y="990.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1148.5" y="963.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.5" y="974.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (3 samples, 0.16%)</title><rect x="1149.2" y="1011.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.2" y="1022.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (3 samples, 0.16%)</title><rect x="1149.2" y="995.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.2" y="1006.0"></text>
</g>
<g>
<title>ConstantPoolCache::allocate(ClassLoaderData*, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="1149.2" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.2" y="990.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.05%)</title><rect x="1149.2" y="963.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.2" y="974.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (2 samples, 0.11%)</title><rect x="1149.8" y="979.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.8" y="990.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (2 samples, 0.11%)</title><rect x="1149.8" y="963.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.8" y="974.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (5 samples, 0.27%)</title><rect x="1151.1" y="1011.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.1" y="1022.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (5 samples, 0.27%)</title><rect x="1151.1" y="995.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.1" y="1006.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (5 samples, 0.27%)</title><rect x="1151.1" y="979.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.1" y="990.0"></text>
</g>
<g>
<title>ClassVerifier::verify_anewarray(unsigned short, unsigned short, constantPoolHandle const&amp;, StackMapFrame*, Thread*) (1 samples, 0.05%)</title><rect x="1152.3" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.3" y="974.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.05%)</title><rect x="1153.0" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.0" y="974.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.05%)</title><rect x="1153.0" y="947.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.0" y="958.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.05%)</title><rect x="1153.0" y="931.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.0" y="942.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1153.0" y="915.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.0" y="926.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.05%)</title><rect x="1153.6" y="963.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.6" y="974.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.05%)</title><rect x="1153.6" y="947.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.6" y="958.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.05%)</title><rect x="1153.6" y="931.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.6" y="942.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1153.6" y="915.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.6" y="926.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (4 samples, 0.22%)</title><rect x="1154.3" y="1251.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.3" y="1262.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (3 samples, 0.16%)</title><rect x="1154.9" y="1235.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.9" y="1246.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (3 samples, 0.16%)</title><rect x="1154.9" y="1219.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.16%)</title><rect x="1154.9" y="1203.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1157.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.11%)</title><rect x="1154.9" y="1187.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.11%)</title><rect x="1154.9" y="1171.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (2 samples, 0.11%)</title><rect x="1154.9" y="1155.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.9" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/netty38/ChannelFutureListenerInstrumentation.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1154.9" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.9" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1154.9" y="1123.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.9" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1154.9" y="1107.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.9" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="1154.9" y="1091.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.9" y="1102.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.05%)</title><rect x="1154.9" y="1075.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.9" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1154.9" y="1059.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.9" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1154.9" y="1043.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.9" y="1054.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="1154.9" y="1027.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.9" y="1038.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.05%)</title><rect x="1154.9" y="1011.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.9" y="1022.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="1154.9" y="995.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.9" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/scala/concurrent/PromiseObjectInstrumentation213.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1155.5" y="1139.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.5" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1155.5" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.5" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1155.5" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.5" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.05%)</title><rect x="1155.5" y="1091.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1158.5" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.05%)</title><rect x="1155.5" y="1075.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1158.5" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.05%)</title><rect x="1155.5" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.5" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.05%)</title><rect x="1155.5" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.5" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.05%)</title><rect x="1155.5" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.5" y="1038.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="1155.5" y="1011.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1158.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.05%)</title><rect x="1156.2" y="1187.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.2" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.installOn (30 samples, 1.62%)</title><rect x="1156.8" y="1251.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.8" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.installOn (30 samples, 1.62%)</title><rect x="1156.8" y="1235.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.doInstall (30 samples, 1.62%)</title><rect x="1156.8" y="1219.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.8" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.makeRaw (4 samples, 0.22%)</title><rect x="1156.8" y="1203.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1156.8" y="1187.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.8" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1156.8" y="1171.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.8" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1156.8" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.8" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1156.8" y="1139.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.8" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1156.8" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.8" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1156.8" y="1107.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.8" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1156.8" y="1091.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="1156.8" y="1075.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.8" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="1156.8" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.8" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.05%)</title><rect x="1156.8" y="1043.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.8" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.setInput (1 samples, 0.05%)</title><rect x="1156.8" y="1027.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.8" y="1038.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.05%)</title><rect x="1156.8" y="1011.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1159.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.&lt;clinit&gt; (3 samples, 0.16%)</title><rect x="1157.5" y="1187.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.5" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.16%)</title><rect x="1157.5" y="1171.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.5" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 0.16%)</title><rect x="1157.5" y="1155.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.5" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 0.16%)</title><rect x="1157.5" y="1139.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.5" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (3 samples, 0.16%)</title><rect x="1157.5" y="1123.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.5" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (3 samples, 0.16%)</title><rect x="1157.5" y="1107.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.5" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (3 samples, 0.16%)</title><rect x="1157.5" y="1091.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.5" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (3 samples, 0.16%)</title><rect x="1157.5" y="1075.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.5" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Prepared.compile (1 samples, 0.05%)</title><rect x="1157.5" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.5" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation.compile (1 samples, 0.05%)</title><rect x="1157.5" y="1043.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.5" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation.compile (1 samples, 0.05%)</title><rect x="1157.5" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.5" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.appender (1 samples, 0.05%)</title><rect x="1157.5" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$Appender.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1157.5" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$MethodInvoker$ForSuperMethodInvocation$Factory.make (1 samples, 0.05%)</title><rect x="1157.5" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.5" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1157.5" y="963.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.5" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1157.5" y="947.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.5" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1157.5" y="931.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.5" y="942.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="1157.5" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.5" y="926.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1157.5" y="899.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.5" y="910.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.05%)</title><rect x="1157.5" y="883.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1160.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.05%)</title><rect x="1158.1" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1161.1" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (1 samples, 0.05%)</title><rect x="1158.1" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.1" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.05%)</title><rect x="1158.1" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyBody (1 samples, 0.05%)</title><rect x="1158.1" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyCode (1 samples, 0.05%)</title><rect x="1158.1" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/SuperMethodCall$Appender.apply (1 samples, 0.05%)</title><rect x="1158.1" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/member/MethodVariableAccess.allArgumentsOf (1 samples, 0.05%)</title><rect x="1158.1" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1161.1" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1158.1" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1161.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1158.1" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.1" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1158.1" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.1" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1158.1" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.1" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1158.1" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.1" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1158.1" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="1158.1" y="851.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1161.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.05%)</title><rect x="1158.1" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.1" y="846.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.05%)</title><rect x="1158.1" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.1" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.05%)</title><rect x="1158.1" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.1" y="814.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.05%)</title><rect x="1158.1" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.1" y="798.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.05%)</title><rect x="1158.1" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.1" y="782.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.05%)</title><rect x="1158.1" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="766.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.05%)</title><rect x="1158.1" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.1" y="750.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.05%)</title><rect x="1158.1" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.1" y="734.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.05%)</title><rect x="1158.1" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1161.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.applyConstructorStrategy (1 samples, 0.05%)</title><rect x="1158.7" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default.extractConstructors (1 samples, 0.05%)</title><rect x="1158.7" y="1043.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default$5.doExtractConstructors (1 samples, 0.05%)</title><rect x="1158.7" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$AbstractBase.asTokenList (1 samples, 0.05%)</title><rect x="1158.7" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asToken (1 samples, 0.05%)</title><rect x="1158.7" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asToken (1 samples, 0.05%)</title><rect x="1158.7" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTokenList (1 samples, 0.05%)</title><rect x="1158.7" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$AbstractBase.asToken (1 samples, 0.05%)</title><rect x="1158.7" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$AbstractBase.asToken (1 samples, 0.05%)</title><rect x="1158.7" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.hasModifiers (1 samples, 0.05%)</title><rect x="1158.7" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter.hasModifiers (1 samples, 0.05%)</title><rect x="1158.7" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter.getModifiers (1 samples, 0.05%)</title><rect x="1158.7" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$Dispatcher$ForJava8CapableVm.getModifiers (1 samples, 0.05%)</title><rect x="1158.7" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1161.7" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="1158.7" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="1158.7" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="1158.7" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generateMethod (1 samples, 0.05%)</title><rect x="1158.7" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generate (1 samples, 0.05%)</title><rect x="1158.7" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1161.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ClassFileAssembler.emitConstantPoolUTF8 (1 samples, 0.05%)</title><rect x="1158.7" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1161.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/UTF8.encode (1 samples, 0.05%)</title><rect x="1158.7" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy.apply (26 samples, 1.41%)</title><rect x="1159.4" y="1203.0" width="16.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.4" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (2 samples, 0.11%)</title><rect x="1160.0" y="1187.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.0" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (2 samples, 0.11%)</title><rect x="1160.0" y="1171.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.0" y="1182.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (2 samples, 0.11%)</title><rect x="1160.0" y="1155.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.0" y="1166.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (2 samples, 0.11%)</title><rect x="1160.0" y="1139.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.0" y="1150.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (1 samples, 0.05%)</title><rect x="1160.0" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.0" y="1134.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/StripedBuffer.offer (1 samples, 0.05%)</title><rect x="1160.0" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.0" y="1118.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedBuffer$RingBuffer.offer (1 samples, 0.05%)</title><rect x="1160.0" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.0" y="1102.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BBHeader$ReadAndWriteCounterRef.relaxedWriteCounter (1 samples, 0.05%)</title><rect x="1160.0" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="1160.6" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.6" y="1134.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.equals (1 samples, 0.05%)</title><rect x="1160.6" y="1107.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.6" y="1118.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$InternalReference.referenceEquals (1 samples, 0.05%)</title><rect x="1160.6" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.05%)</title><rect x="1161.3" y="1187.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.3" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="1161.3" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.3" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Empty.describe (1 samples, 0.05%)</title><rect x="1161.3" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.3" y="1166.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.05%)</title><rect x="1161.3" y="1139.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1164.3" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.apply (9 samples, 0.49%)</title><rect x="1161.9" y="1187.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.9" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation.doApply (9 samples, 0.49%)</title><rect x="1161.9" y="1171.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.9" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.retransformClasses (9 samples, 0.49%)</title><rect x="1161.9" y="1155.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.49%)</title><rect x="1161.9" y="1139.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1164.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.49%)</title><rect x="1161.9" y="1123.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (9 samples, 0.49%)</title><rect x="1161.9" y="1107.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (9 samples, 0.49%)</title><rect x="1161.9" y="1091.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.9" y="1102.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses (9 samples, 0.49%)</title><rect x="1161.9" y="1075.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.9" y="1086.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses0 (9 samples, 0.49%)</title><rect x="1161.9" y="1059.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.9" y="1070.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (9 samples, 0.49%)</title><rect x="1161.9" y="1043.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.9" y="1054.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (9 samples, 0.49%)</title><rect x="1161.9" y="1027.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (9 samples, 0.49%)</title><rect x="1161.9" y="1011.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (9 samples, 0.49%)</title><rect x="1161.9" y="995.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.9" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.49%)</title><rect x="1161.9" y="979.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (9 samples, 0.49%)</title><rect x="1161.9" y="963.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (9 samples, 0.49%)</title><rect x="1161.9" y="947.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (9 samples, 0.49%)</title><rect x="1161.9" y="931.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (9 samples, 0.49%)</title><rect x="1161.9" y="915.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (9 samples, 0.49%)</title><rect x="1161.9" y="899.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (3 samples, 0.16%)</title><rect x="1161.9" y="883.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (3 samples, 0.16%)</title><rect x="1161.9" y="867.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (3 samples, 0.16%)</title><rect x="1161.9" y="851.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (3 samples, 0.16%)</title><rect x="1161.9" y="835.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (1 samples, 0.05%)</title><rect x="1161.9" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (1 samples, 0.05%)</title><rect x="1161.9" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1161.9" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1161.9" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1161.9" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1161.9" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForEnterValue$Factory.make (1 samples, 0.05%)</title><rect x="1161.9" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.05%)</title><rect x="1161.9" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.05%)</title><rect x="1161.9" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.9" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="1161.9" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.9" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.05%)</title><rect x="1161.9" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.05%)</title><rect x="1161.9" y="643.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.05%)</title><rect x="1161.9" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.9" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.05%)</title><rect x="1161.9" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.9" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.05%)</title><rect x="1161.9" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.9" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.05%)</title><rect x="1161.9" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.05%)</title><rect x="1161.9" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.05%)</title><rect x="1161.9" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.9" y="558.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.05%)</title><rect x="1161.9" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (1 samples, 0.05%)</title><rect x="1161.9" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.9" y="526.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (1 samples, 0.05%)</title><rect x="1161.9" y="499.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1164.9" y="510.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 0.05%)</title><rect x="1161.9" y="483.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1164.9" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1161.9" y="467.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.9" y="478.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="1161.9" y="451.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.9" y="462.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1161.9" y="435.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.9" y="446.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.05%)</title><rect x="1161.9" y="419.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1164.9" y="430.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.05%)</title><rect x="1161.9" y="403.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1164.9" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (2 samples, 0.11%)</title><rect x="1162.6" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1165.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1162.6" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.05%)</title><rect x="1162.6" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="1162.6" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.05%)</title><rect x="1162.6" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="1162.6" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (1 samples, 0.05%)</title><rect x="1162.6" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1165.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.05%)</title><rect x="1162.6" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1165.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.05%)</title><rect x="1162.6" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.05%)</title><rect x="1162.6" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="1162.6" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="1162.6" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="1162.6" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="1162.6" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="1162.6" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="1162.6" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="1162.6" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.6" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="1162.6" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.6" y="558.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.05%)</title><rect x="1162.6" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="1162.6" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.6" y="526.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.05%)</title><rect x="1162.6" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1165.6" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="1162.6" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.6" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.05%)</title><rect x="1162.6" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.6" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1162.6" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.6" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="1162.6" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.6" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.05%)</title><rect x="1162.6" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1165.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.05%)</title><rect x="1162.6" y="403.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.05%)</title><rect x="1162.6" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.6" y="398.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1162.6" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1165.6" y="382.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1162.6" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.6" y="366.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.05%)</title><rect x="1162.6" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.6" y="350.0"></text>
</g>
<g>
<title>java/net/URL.getPort (1 samples, 0.05%)</title><rect x="1162.6" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.6" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (1 samples, 0.05%)</title><rect x="1163.2" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.05%)</title><rect x="1163.2" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.05%)</title><rect x="1163.2" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.05%)</title><rect x="1163.2" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.05%)</title><rect x="1163.2" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="1163.2" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="1163.2" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="1163.2" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="1163.2" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1163.2" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1163.2" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1166.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitInnerClass (1 samples, 0.05%)</title><rect x="1163.2" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (6 samples, 0.32%)</title><rect x="1163.8" y="883.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (2 samples, 0.11%)</title><rect x="1163.8" y="867.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.11%)</title><rect x="1163.8" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1166.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.11%)</title><rect x="1163.8" y="835.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="1163.8" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1163.8" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1163.8" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="691.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="675.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.05%)</title><rect x="1164.5" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.05%)</title><rect x="1164.5" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.05%)</title><rect x="1164.5" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.05%)</title><rect x="1164.5" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.05%)</title><rect x="1164.5" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="1164.5" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.5" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="1164.5" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="1164.5" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.5" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="1164.5" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.5" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="1164.5" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="1164.5" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1167.5" y="494.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="1164.5" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.5" y="478.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="1164.5" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.5" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="1164.5" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.5" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="1164.5" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="1164.5" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="1164.5" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1167.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="1164.5" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="1164.5" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.5" y="366.0"></text>
</g>
<g>
<title>java/net/URI.toURL (1 samples, 0.05%)</title><rect x="1164.5" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.5" y="350.0"></text>
</g>
<g>
<title>java/net/URL.fromURI (1 samples, 0.05%)</title><rect x="1164.5" y="323.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.5" y="334.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/classes.jsa (1 samples, 0.05%)</title><rect x="1164.5" y="307.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1167.5" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (4 samples, 0.22%)</title><rect x="1165.1" y="867.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (4 samples, 0.22%)</title><rect x="1165.1" y="851.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.05%)</title><rect x="1165.1" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.1" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="1165.1" y="819.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.1" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.05%)</title><rect x="1165.1" y="803.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.1" y="814.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="1165.1" y="787.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.1" y="798.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.05%)</title><rect x="1165.1" y="771.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.1" y="782.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_predicate(int, int, CompLevel, Method*) (1 samples, 0.05%)</title><rect x="1165.1" y="755.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.16%)</title><rect x="1165.7" y="835.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.16%)</title><rect x="1165.7" y="819.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.16%)</title><rect x="1165.7" y="803.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (3 samples, 0.16%)</title><rect x="1165.7" y="787.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (1 samples, 0.05%)</title><rect x="1165.7" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (1 samples, 0.05%)</title><rect x="1165.7" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.05%)</title><rect x="1165.7" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1165.7" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1165.7" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="1165.7" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.05%)</title><rect x="1165.7" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.05%)</title><rect x="1165.7" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.05%)</title><rect x="1165.7" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$ArgumentHandler$ForAdvice$Default$ForMethodExit.mapped (1 samples, 0.05%)</title><rect x="1165.7" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (2 samples, 0.11%)</title><rect x="1166.4" y="771.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1169.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLabel (1 samples, 0.05%)</title><rect x="1166.4" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLabel (1 samples, 0.05%)</title><rect x="1166.4" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.05%)</title><rect x="1167.0" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1170.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.05%)</title><rect x="1167.0" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1170.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.05%)</title><rect x="1167.0" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.05%)</title><rect x="1167.0" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1170.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1167.0" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1167.0" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="1167.0" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.05%)</title><rect x="1167.0" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1170.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1170.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/FramePaddingMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1170.0" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1170.0" y="510.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1$1.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.0" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1170.0" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.0" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1170.0" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitMethodInsn (1 samples, 0.05%)</title><rect x="1167.0" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.0" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantMethodref (1 samples, 0.05%)</title><rect x="1167.0" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.0" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantMemberReference (1 samples, 0.05%)</title><rect x="1167.0" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.0" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantNameAndType (1 samples, 0.05%)</title><rect x="1167.0" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.0" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8 (1 samples, 0.05%)</title><rect x="1167.0" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.0" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.put (1 samples, 0.05%)</title><rect x="1167.0" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.0" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.consider (12 samples, 0.65%)</title><rect x="1167.7" y="1187.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.7" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher.matches (12 samples, 0.65%)</title><rect x="1167.7" y="1171.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (12 samples, 0.65%)</title><rect x="1167.7" y="1155.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1170.7" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.05%)</title><rect x="1168.3" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1171.3" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.05%)</title><rect x="1168.3" y="1123.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1171.3" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.05%)</title><rect x="1168.3" y="1107.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.3" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="1168.3" y="1091.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.3" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.05%)</title><rect x="1168.3" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.3" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.05%)</title><rect x="1168.3" y="1059.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.05%)</title><rect x="1168.3" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1171.3" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.05%)</title><rect x="1168.3" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.3" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.05%)</title><rect x="1168.3" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.3" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.traverseHierarchy (1 samples, 0.05%)</title><rect x="1168.3" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findMethodsForType (1 samples, 0.05%)</title><rect x="1168.3" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.05%)</title><rect x="1168.3" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1168.3" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.3" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1168.3" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1171.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (10 samples, 0.54%)</title><rect x="1168.9" y="1139.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.9" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (10 samples, 0.54%)</title><rect x="1168.9" y="1123.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.9" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (2 samples, 0.11%)</title><rect x="1168.9" y="1107.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.9" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.05%)</title><rect x="1169.6" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1169.6" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.6" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.05%)</title><rect x="1169.6" y="1059.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.6" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1169.6" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.6" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1169.6" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.6" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.05%)</title><rect x="1169.6" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.6" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="1169.6" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1169.6" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1169.6" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="1169.6" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1172.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.05%)</title><rect x="1169.6" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="1169.6" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.05%)</title><rect x="1169.6" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.05%)</title><rect x="1169.6" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1172.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.05%)</title><rect x="1169.6" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getOwnerType (1 samples, 0.05%)</title><rect x="1169.6" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="1169.6" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="1169.6" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="1169.6" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.6" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="1169.6" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.6" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="1169.6" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.6" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="1169.6" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.6" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.05%)</title><rect x="1169.6" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1172.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.tryLock (1 samples, 0.05%)</title><rect x="1169.6" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.05%)</title><rect x="1169.6" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.6" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="1170.2" y="1107.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1173.2" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (7 samples, 0.38%)</title><rect x="1170.9" y="1107.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.9" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (6 samples, 0.32%)</title><rect x="1170.9" y="1091.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.9" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (6 samples, 0.32%)</title><rect x="1170.9" y="1075.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.9" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (6 samples, 0.32%)</title><rect x="1170.9" y="1059.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.9" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (5 samples, 0.27%)</title><rect x="1170.9" y="1043.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1173.9" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 0.16%)</title><rect x="1170.9" y="1027.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.9" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.05%)</title><rect x="1170.9" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.asErasure (1 samples, 0.05%)</title><rect x="1170.9" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.05%)</title><rect x="1170.9" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.05%)</title><rect x="1170.9" y="963.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="1170.9" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="1170.9" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1173.9" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="1170.9" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.9" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="1170.9" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.9" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.05%)</title><rect x="1170.9" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1173.9" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.05%)</title><rect x="1170.9" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.11%)</title><rect x="1171.5" y="1011.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1174.5" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1171.5" y="995.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.5" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1171.5" y="979.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.11%)</title><rect x="1171.5" y="963.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1174.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (2 samples, 0.11%)</title><rect x="1171.5" y="947.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (2 samples, 0.11%)</title><rect x="1171.5" y="931.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (2 samples, 0.11%)</title><rect x="1171.5" y="915.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (2 samples, 0.11%)</title><rect x="1171.5" y="899.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1174.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (2 samples, 0.11%)</title><rect x="1171.5" y="883.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.05%)</title><rect x="1171.5" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="1171.5" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1174.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.05%)</title><rect x="1171.5" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.05%)</title><rect x="1171.5" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1174.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="1171.5" y="803.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.05%)</title><rect x="1171.5" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.05%)</title><rect x="1171.5" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1174.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.05%)</title><rect x="1171.5" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.05%)</title><rect x="1171.5" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.05%)</title><rect x="1171.5" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1174.5" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.05%)</title><rect x="1171.5" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.5" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.05%)</title><rect x="1171.5" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.5" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.05%)</title><rect x="1171.5" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.5" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.tabAt (1 samples, 0.05%)</title><rect x="1171.5" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.getTypeArguments (1 samples, 0.05%)</title><rect x="1172.1" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1175.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1172.1" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1172.1" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.1" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1172.1" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.1" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1172.1" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.1" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1172.1" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.1" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1172.1" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.1" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1172.1" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.05%)</title><rect x="1172.1" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1175.1" y="750.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="1172.1" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.1" y="734.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="1172.1" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="1172.1" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.1" y="702.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.05%)</title><rect x="1172.1" y="675.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1175.1" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.11%)</title><rect x="1172.8" y="1027.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.8" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1172.8" y="1011.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.8" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1172.8" y="995.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (2 samples, 0.11%)</title><rect x="1172.8" y="979.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.05%)</title><rect x="1172.8" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.8" y="974.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f81fc8b7080 (1 samples, 0.05%)</title><rect x="1172.8" y="947.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (1 samples, 0.05%)</title><rect x="1173.4" y="963.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.05%)</title><rect x="1173.4" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="1173.4" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="1173.4" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="1173.4" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="1173.4" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.4" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="1173.4" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="1173.4" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="1173.4" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.4" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="1173.4" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="1173.4" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1176.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="1173.4" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="1173.4" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="1173.4" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="1173.4" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.4" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.05%)</title><rect x="1174.0" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.0" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1174.0" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.0" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1174.0" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1177.0" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.05%)</title><rect x="1174.0" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.05%)</title><rect x="1174.0" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.05%)</title><rect x="1174.0" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.0" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="1174.0" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.0" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="1174.0" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="1174.0" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="1174.0" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.05%)</title><rect x="1174.0" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1174.0" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.0" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.05%)</title><rect x="1174.0" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.05%)</title><rect x="1174.0" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (1 samples, 0.05%)</title><rect x="1174.0" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1174.0" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1174.0" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1174.0" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.05%)</title><rect x="1174.7" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.7" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="1174.7" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.7" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.05%)</title><rect x="1174.7" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.05%)</title><rect x="1174.7" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.05%)</title><rect x="1174.7" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.05%)</title><rect x="1174.7" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.05%)</title><rect x="1174.7" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.05%)</title><rect x="1174.7" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.7" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.05%)</title><rect x="1174.7" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.7" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.05%)</title><rect x="1174.7" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.7" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.05%)</title><rect x="1174.7" y="931.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.7" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.05%)</title><rect x="1174.7" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.05%)</title><rect x="1174.7" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.05%)</title><rect x="1174.7" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.05%)</title><rect x="1174.7" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.05%)</title><rect x="1174.7" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="1174.7" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1177.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterator.hasNext (1 samples, 0.05%)</title><rect x="1175.3" y="1187.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.3" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (18 samples, 0.97%)</title><rect x="1176.0" y="1251.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.0" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (3 samples, 0.16%)</title><rect x="1176.0" y="1235.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.0" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1176.0" y="1219.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1176.0" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.0" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1176.0" y="1187.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.0" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1176.0" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.0" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1176.0" y="1155.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.0" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1176.0" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.0" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1176.0" y="1123.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.0" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.0" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.0" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.0" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.0" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1179.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1176.0" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1176.0" y="1043.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.0" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1176.0" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.0" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1176.0" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.0" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1176.0" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.0" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1176.0" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.0" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1176.0" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.0" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.0" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.0" y="958.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.0" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.0" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.0" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.0" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1176.0" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.0" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1176.0" y="883.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1179.0" y="894.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1176.0" y="867.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1179.0" y="878.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1176.0" y="851.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1179.0" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1176.0" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.0" y="846.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1176.0" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.0" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.05%)</title><rect x="1176.0" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.0" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1176.0" y="787.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.0" y="798.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.05%)</title><rect x="1176.0" y="771.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.0" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::find_method(Symbol const*, Symbol const*) const (1 samples, 0.05%)</title><rect x="1176.0" y="755.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.0" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="1176.0" y="739.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isDefaultFinalizer (1 samples, 0.05%)</title><rect x="1176.6" y="1203.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.6" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isFinalizer (1 samples, 0.05%)</title><rect x="1176.6" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.6" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.named (1 samples, 0.05%)</title><rect x="1176.6" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1176.6" y="1155.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.6" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1176.6" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.6" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1176.6" y="1123.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.6" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1176.6" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.6" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1176.6" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.6" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1176.6" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.6" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.6" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.6" y="1070.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.6" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1176.6" y="1027.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1176.6" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.6" y="1022.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1176.6" y="995.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1179.6" y="1006.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (1 samples, 0.05%)</title><rect x="1176.6" y="979.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1179.6" y="990.0"></text>
</g>
<g>
<title>int UNICODE::utf8_length&lt;signed char&gt;(signed char*, int) (1 samples, 0.05%)</title><rect x="1176.6" y="963.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion.ofThisVm (1 samples, 0.05%)</title><rect x="1177.2" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion.ofThisVm (1 samples, 0.05%)</title><rect x="1177.2" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.2" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion$VersionLocator$ForJava9CapableVm.locate (1 samples, 0.05%)</title><rect x="1177.2" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="1177.2" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.05%)</title><rect x="1177.2" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.05%)</title><rect x="1177.2" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.05%)</title><rect x="1177.2" y="1123.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.05%)</title><rect x="1177.2" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.05%)</title><rect x="1177.2" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.05%)</title><rect x="1177.2" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.05%)</title><rect x="1177.2" y="1059.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.05%)</title><rect x="1177.2" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.05%)</title><rect x="1177.2" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.2" y="1038.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.05%)</title><rect x="1177.2" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.2" y="1022.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.05%)</title><rect x="1177.2" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1180.2" y="1006.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.05%)</title><rect x="1177.2" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.2" y="990.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.05%)</title><rect x="1177.2" y="963.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.2" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1177.2" y="947.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.2" y="958.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.05%)</title><rect x="1177.2" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.2" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.05%)</title><rect x="1177.2" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.2" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.05%)</title><rect x="1177.2" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.2" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.05%)</title><rect x="1177.2" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.05%)</title><rect x="1177.2" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.05%)</title><rect x="1177.2" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.2" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.05%)</title><rect x="1177.2" y="835.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.2" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.05%)</title><rect x="1177.2" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.2" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.05%)</title><rect x="1177.2" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.2" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.defineProxyClass (1 samples, 0.05%)</title><rect x="1177.2" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.2" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateProxyClass (1 samples, 0.05%)</title><rect x="1177.2" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.2" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateClassFile (1 samples, 0.05%)</title><rect x="1177.2" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.2" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ProxyMethod.generateMethod (1 samples, 0.05%)</title><rect x="1177.2" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.2" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ProxyMethod.codeUnwrapReturnValue (1 samples, 0.05%)</title><rect x="1177.2" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.2" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getClass (1 samples, 0.05%)</title><rect x="1177.2" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.2" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getUtf8 (1 samples, 0.05%)</title><rect x="1177.2" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.2" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getValue (1 samples, 0.05%)</title><rect x="1177.2" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.2" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.addEntry (1 samples, 0.05%)</title><rect x="1177.2" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (15 samples, 0.81%)</title><rect x="1177.9" y="1235.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split.&lt;init&gt; (15 samples, 0.81%)</title><rect x="1177.9" y="1219.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.9" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor.&lt;clinit&gt; (15 samples, 0.81%)</title><rect x="1177.9" y="1203.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.9" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.81%)</title><rect x="1177.9" y="1187.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.9" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (15 samples, 0.81%)</title><rect x="1177.9" y="1171.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.9" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (15 samples, 0.81%)</title><rect x="1177.9" y="1155.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.9" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.read (1 samples, 0.05%)</title><rect x="1177.9" y="1139.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.9" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.05%)</title><rect x="1177.9" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.9" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.05%)</title><rect x="1177.9" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.9" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.05%)</title><rect x="1177.9" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.9" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.05%)</title><rect x="1177.9" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.9" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.05%)</title><rect x="1177.9" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.9" y="1070.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.05%)</title><rect x="1177.9" y="1043.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1180.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.&lt;clinit&gt; (14 samples, 0.76%)</title><rect x="1178.5" y="1139.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.5" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.76%)</title><rect x="1178.5" y="1123.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.5" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (14 samples, 0.76%)</title><rect x="1178.5" y="1107.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.5" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (14 samples, 0.76%)</title><rect x="1178.5" y="1091.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.5" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection.make (13 samples, 0.70%)</title><rect x="1178.5" y="1075.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.5" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.11%)</title><rect x="1178.5" y="1059.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.5" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.11%)</title><rect x="1178.5" y="1043.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.11%)</title><rect x="1178.5" y="1027.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.5" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (2 samples, 0.11%)</title><rect x="1178.5" y="1011.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.5" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.05%)</title><rect x="1178.5" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1178.5" y="979.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.5" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1178.5" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1178.5" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1178.5" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.05%)</title><rect x="1178.5" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.5" y="926.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1178.5" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.5" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.05%)</title><rect x="1178.5" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.05%)</title><rect x="1178.5" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.5" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.05%)</title><rect x="1178.5" y="851.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1181.5" y="862.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.05%)</title><rect x="1178.5" y="835.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1181.5" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1178.5" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.5" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1178.5" y="803.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.5" y="814.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1178.5" y="787.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.5" y="798.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1178.5" y="771.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.5" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.05%)</title><rect x="1178.5" y="755.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.5" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1178.5" y="739.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.5" y="750.0"></text>
</g>
<g>
<title>JfrTraceId::assign(Klass const*) (1 samples, 0.05%)</title><rect x="1178.5" y="723.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.5" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1179.2" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.2" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1179.2" y="979.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.2" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1179.2" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.2" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1179.2" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.2" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1179.2" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.2" y="942.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1179.2" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1182.2" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1179.2" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.2" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1179.2" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.2" y="894.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1179.2" y="867.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1182.2" y="878.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1179.2" y="851.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1182.2" y="862.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1179.2" y="835.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1182.2" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1179.2" y="819.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.2" y="830.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1179.2" y="803.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1179.2" y="787.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.2" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1179.2" y="771.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_fields(ClassFileStream const*, bool, ClassFileParser::FieldAllocationCount*, ConstantPool*, int, unsigned short*, Thread*) (1 samples, 0.05%)</title><rect x="1179.2" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.05%)</title><rect x="1179.2" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (8 samples, 0.43%)</title><rect x="1179.8" y="1059.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (8 samples, 0.43%)</title><rect x="1179.8" y="1043.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (8 samples, 0.43%)</title><rect x="1179.8" y="1027.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1182.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (8 samples, 0.43%)</title><rect x="1179.8" y="1011.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (4 samples, 0.22%)</title><rect x="1179.8" y="995.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1182.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="1179.8" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="1179.8" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.05%)</title><rect x="1179.8" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1182.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.05%)</title><rect x="1179.8" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.8" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="1179.8" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.05%)</title><rect x="1179.8" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.05%)</title><rect x="1179.8" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$Latent.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1179.8" y="867.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$Token.getAnnotations (1 samples, 0.05%)</title><rect x="1179.8" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$Explicit.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1179.8" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="1180.4" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="1180.4" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="1180.4" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation.hashCode (1 samples, 0.05%)</title><rect x="1180.4" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.hashCode (1 samples, 0.05%)</title><rect x="1180.4" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$MethodLocator$ForExplicitMethod.hashCode (1 samples, 0.05%)</title><rect x="1180.4" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.05%)</title><rect x="1180.4" y="883.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getReturnType (1 samples, 0.05%)</title><rect x="1180.4" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.4" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1180.4" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1180.4" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1180.4" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.4" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1180.4" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1180.4" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.4" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1180.4" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.4" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1180.4" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.4" y="766.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1180.4" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1183.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1180.4" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1180.4" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.4" y="718.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1180.4" y="691.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1183.4" y="702.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1180.4" y="675.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1183.4" y="686.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="659.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1183.4" y="670.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="643.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.4" y="654.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.4" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="611.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.4" y="622.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="595.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.4" y="606.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="579.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.4" y="590.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="563.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.4" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="547.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.4" y="558.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="531.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.4" y="542.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="1180.4" y="515.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.4" y="526.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.05%)</title><rect x="1180.4" y="499.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.4" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="1180.4" y="483.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.4" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.05%)</title><rect x="1180.4" y="467.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.4" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (2 samples, 0.11%)</title><rect x="1181.1" y="979.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1184.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (2 samples, 0.11%)</title><rect x="1181.1" y="963.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.11%)</title><rect x="1181.1" y="947.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1184.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (2 samples, 0.11%)</title><rect x="1181.1" y="931.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (2 samples, 0.11%)</title><rect x="1181.1" y="915.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.11%)</title><rect x="1181.1" y="899.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.05%)</title><rect x="1181.1" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.05%)</title><rect x="1181.1" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.05%)</title><rect x="1181.1" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getReturnType (1 samples, 0.05%)</title><rect x="1181.1" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.05%)</title><rect x="1181.1" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$ForLoadedReturnType.resolve (1 samples, 0.05%)</title><rect x="1181.1" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDefinition$Sort.describe (1 samples, 0.05%)</title><rect x="1181.1" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.1" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1181.1" y="771.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.1" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1181.1" y="755.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.1" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1181.1" y="739.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.1" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1181.1" y="723.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.1" y="734.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="1181.1" y="707.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.1" y="718.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1181.1" y="691.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.1" y="702.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.05%)</title><rect x="1181.1" y="675.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1184.1" y="686.0"></text>
</g>
<g>
<title>JVM_GetMethodIxExceptionsCount (1 samples, 0.05%)</title><rect x="1181.1" y="659.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1184.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.05%)</title><rect x="1181.7" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.7" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1181.7" y="867.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.7" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1181.7" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.7" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1181.7" y="835.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.7" y="846.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="1181.7" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.7" y="830.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1181.7" y="803.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.7" y="814.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.05%)</title><rect x="1181.7" y="787.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1184.7" y="798.0"></text>
</g>
<g>
<title>JVM_GetCPMethodSignatureUTF (1 samples, 0.05%)</title><rect x="1181.7" y="771.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1184.7" y="782.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.05%)</title><rect x="1181.7" y="755.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.forCreation (1 samples, 0.05%)</title><rect x="1182.3" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1182.3" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.3" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1182.3" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.3" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1182.3" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.3" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1182.3" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1182.3" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.3" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1182.3" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.3" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1182.3" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.3" y="894.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1182.3" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1182.3" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.3" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1182.3" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.3" y="846.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1182.3" y="819.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1185.3" y="830.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1182.3" y="803.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1185.3" y="814.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1182.3" y="787.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1185.3" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1182.3" y="771.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.3" y="782.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1182.3" y="755.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.3" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1182.3" y="739.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.3" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1182.3" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.3" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="1182.3" y="707.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.3" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.05%)</title><rect x="1182.3" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 0.16%)</title><rect x="1183.0" y="995.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.0" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (3 samples, 0.16%)</title><rect x="1183.0" y="979.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.0" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1183.0" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.0" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1183.0" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.0" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1183.0" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.0" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1183.0" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1186.0" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1183.0" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.0" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1183.0" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.0" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1183.0" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.0" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1183.0" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1183.0" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1186.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1183.0" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.0" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1183.0" y="803.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1186.0" y="814.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1183.0" y="787.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1186.0" y="798.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1183.0" y="771.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1186.0" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1183.0" y="755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.0" y="766.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1183.0" y="739.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.0" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1183.0" y="723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.0" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1183.0" y="707.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.0" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.05%)</title><rect x="1183.0" y="691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.0" y="702.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.05%)</title><rect x="1183.0" y="675.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (2 samples, 0.11%)</title><rect x="1183.6" y="963.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyBody (2 samples, 0.11%)</title><rect x="1183.6" y="947.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyAttributes (1 samples, 0.05%)</title><rect x="1183.6" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/attribute/MethodAttributeAppender$ForInstrumentedMethod.apply (1 samples, 0.05%)</title><rect x="1183.6" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.6" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1183.6" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1183.6" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1183.6" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1183.6" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1183.6" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1183.6" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.6" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1183.6" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1186.6" y="814.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1183.6" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1183.6" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1183.6" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.6" y="766.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1183.6" y="739.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1186.6" y="750.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1183.6" y="723.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1183.6" y="707.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1186.6" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1183.6" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.6" y="702.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1183.6" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.6" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="1183.6" y="659.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyCode (1 samples, 0.05%)</title><rect x="1184.3" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$Appender.apply (1 samples, 0.05%)</title><rect x="1184.3" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$Appender.toStackManipulation (1 samples, 0.05%)</title><rect x="1184.3" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable.size (1 samples, 0.05%)</title><rect x="1184.3" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1187.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm.getParameterCount (1 samples, 0.05%)</title><rect x="1184.3" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.05%)</title><rect x="1184.3" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.05%)</title><rect x="1184.3" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor1.invoke (1 samples, 0.05%)</title><rect x="1184.3" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.05%)</title><rect x="1184.3" y="803.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.3" y="814.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1184.3" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (2 samples, 0.11%)</title><rect x="1184.9" y="1059.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (2 samples, 0.11%)</title><rect x="1184.9" y="1043.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (2 samples, 0.11%)</title><rect x="1184.9" y="1027.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter.defineMethod (1 samples, 0.05%)</title><rect x="1184.9" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1187.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1184.9" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.9" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1184.9" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.9" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1184.9" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.9" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1184.9" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.9" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1184.9" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.9" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1184.9" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.9" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.9" y="910.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1187.9" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.9" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1184.9" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1184.9" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1184.9" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1184.9" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1187.9" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1184.9" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1187.9" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1184.9" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1184.9" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1187.9" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.9" y="750.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1187.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1184.9" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1184.9" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.9" y="686.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1184.9" y="659.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.9" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1184.9" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.9" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1184.9" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1187.9" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1184.9" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.9" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1184.9" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.9" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.9" y="590.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.9" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.05%)</title><rect x="1184.9" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1187.9" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.05%)</title><rect x="1184.9" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.9" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.05%)</title><rect x="1184.9" y="515.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1187.9" y="526.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.05%)</title><rect x="1184.9" y="499.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1187.9" y="510.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.05%)</title><rect x="1184.9" y="483.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1187.9" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.05%)</title><rect x="1184.9" y="467.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.9" y="478.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1184.9" y="451.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.05%)</title><rect x="1184.9" y="435.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.9" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.05%)</title><rect x="1184.9" y="419.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.9" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.139] (1 samples, 0.05%)</title><rect x="1184.9" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="414.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="1184.9" y="387.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.9" y="398.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.05%)</title><rect x="1184.9" y="371.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="382.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.05%)</title><rect x="1184.9" y="355.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.defineMethod (1 samples, 0.05%)</title><rect x="1185.5" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.5" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter$AnnotationAdapter.materialize (1 samples, 0.05%)</title><rect x="1185.5" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Default.withMethod (1 samples, 0.05%)</title><rect x="1185.5" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$Token.accept (1 samples, 0.05%)</title><rect x="1185.5" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ByteCodeElement$Token$TokenList.accept (1 samples, 0.05%)</title><rect x="1185.5" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$Token.accept (1 samples, 0.05%)</title><rect x="1185.5" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$Token.accept (1 samples, 0.05%)</title><rect x="1185.5" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.05%)</title><rect x="1185.5" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForDetachment.onNonGenericType (1 samples, 0.05%)</title><rect x="1185.5" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onNonGenericType (1 samples, 0.05%)</title><rect x="1185.5" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1188.5" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1185.5" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1185.5" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1185.5" y="819.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.5" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1185.5" y="803.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.5" y="814.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="1185.5" y="787.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.5" y="798.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1185.5" y="771.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="782.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.05%)</title><rect x="1185.5" y="755.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1188.5" y="766.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.05%)</title><rect x="1185.5" y="739.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1188.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.invoke (1 samples, 0.05%)</title><rect x="1186.2" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.2" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1186.2" y="1043.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1186.2" y="1027.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1186.2" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1186.2" y="995.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1186.2" y="979.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.2" y="990.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.05%)</title><rect x="1186.2" y="963.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="974.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 0.05%)</title><rect x="1186.2" y="947.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="958.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.05%)</title><rect x="1186.2" y="931.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1189.2" y="942.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.05%)</title><rect x="1186.2" y="915.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1186.2" y="899.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="910.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.05%)</title><rect x="1186.2" y="883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="1186.2" y="867.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1186.8" y="1075.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.8" y="1086.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1186.8" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule$Dispatcher$CreationAction.run (1 samples, 0.05%)</title><rect x="1186.8" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule$Dispatcher$CreationAction.run (1 samples, 0.05%)</title><rect x="1186.8" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1186.8" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.8" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.05%)</title><rect x="1186.8" y="995.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.05%)</title><rect x="1186.8" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.8" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1186.8" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.8" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1186.8" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.8" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.05%)</title><rect x="1186.8" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.05%)</title><rect x="1186.8" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.05%)</title><rect x="1186.8" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.8" y="910.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.05%)</title><rect x="1186.8" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.05%)</title><rect x="1186.8" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.8" y="878.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.05%)</title><rect x="1186.8" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.8" y="862.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.05%)</title><rect x="1186.8" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.8" y="846.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1186.8" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.8" y="830.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1186.8" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.05%)</title><rect x="1186.8" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.05%)</title><rect x="1186.8" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.with (1 samples, 0.05%)</title><rect x="1187.4" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.4" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.05%)</title><rect x="1187.4" y="1235.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1187.4" y="1219.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1187.4" y="1203.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="1214.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.05%)</title><rect x="1187.4" y="1187.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.4" y="1198.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1187.4" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.4" y="1182.0"></text>
</g>
<g>
<title>JVM_GetMethodIxExceptionTableLength@plt (1 samples, 0.05%)</title><rect x="1187.4" y="1155.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.4" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startProfilingAgent (3 samples, 0.16%)</title><rect x="1188.1" y="1363.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.16%)</title><rect x="1188.1" y="1347.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.16%)</title><rect x="1188.1" y="1331.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.16%)</title><rect x="1188.1" y="1315.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.16%)</title><rect x="1188.1" y="1299.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.1" y="1310.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.run (3 samples, 0.16%)</title><rect x="1188.1" y="1283.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.1" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;clinit&gt; (3 samples, 0.16%)</title><rect x="1188.1" y="1267.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.1" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (3 samples, 0.16%)</title><rect x="1188.1" y="1251.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.1" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1188.1" y="1235.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.1" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.05%)</title><rect x="1188.1" y="1219.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.1" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.05%)</title><rect x="1188.1" y="1203.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.1" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.05%)</title><rect x="1188.1" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.1" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.05%)</title><rect x="1188.1" y="1171.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/System.getenv (1 samples, 0.05%)</title><rect x="1188.1" y="1155.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment.getenv (1 samples, 0.05%)</title><rect x="1188.1" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.1" y="1150.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="1188.1" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="1188.1" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.05%)</title><rect x="1188.1" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="1188.1" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.05%)</title><rect x="1188.1" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.05%)</title><rect x="1188.1" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.05%)</title><rect x="1188.1" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.05%)</title><rect x="1188.1" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.05%)</title><rect x="1188.7" y="1219.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.7" y="1230.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1188.7" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.7" y="1214.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1188.7" y="1187.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.7" y="1198.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.05%)</title><rect x="1188.7" y="1171.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.7" y="1182.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.05%)</title><rect x="1188.7" y="1155.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.7" y="1166.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.05%)</title><rect x="1188.7" y="1139.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.7" y="1150.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.findAdapter (1 samples, 0.05%)</title><rect x="1188.7" y="1123.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.7" y="1134.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.forType (1 samples, 0.05%)</title><rect x="1188.7" y="1107.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/Class.newInstance (1 samples, 0.05%)</title><rect x="1188.7" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.05%)</title><rect x="1188.7" y="1075.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1188.7" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="1188.7" y="1043.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.05%)</title><rect x="1188.7" y="1027.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.7" y="1038.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1188.7" y="1011.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.7" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="1188.7" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.7" y="1006.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.05%)</title><rect x="1188.7" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.7" y="990.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.05%)</title><rect x="1188.7" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.7" y="974.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (1 samples, 0.05%)</title><rect x="1188.7" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.7" y="958.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (1 samples, 0.05%)</title><rect x="1188.7" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.7" y="942.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (1 samples, 0.05%)</title><rect x="1188.7" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.7" y="926.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (1 samples, 0.05%)</title><rect x="1188.7" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.7" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1188.7" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1188.7" y="867.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="1188.7" y="851.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="862.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_virtual_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1188.7" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (1 samples, 0.05%)</title><rect x="1189.4" y="1235.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="1246.0"></text>
</g>
<g>
<title>java/util/UUID$Holder.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="1219.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.4" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureRandom.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureRandom.getDefaultPRNG (1 samples, 0.05%)</title><rect x="1189.4" y="1187.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.05%)</title><rect x="1189.4" y="1171.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1192.4" y="1182.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.05%)</title><rect x="1189.4" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.4" y="1166.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.05%)</title><rect x="1189.4" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="1150.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getProvider (1 samples, 0.05%)</title><rect x="1189.4" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="1134.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderConfig.getProvider (1 samples, 0.05%)</title><rect x="1189.4" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.4" y="1118.0"></text>
</g>
<g>
<title>sun/security/provider/Sun.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="1102.0"></text>
</g>
<g>
<title>sun/security/provider/SunEntries.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.4" y="1086.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG.&lt;clinit&gt; (1 samples, 0.05%)</title><rect x="1189.4" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.4" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1189.4" y="1043.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="1054.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1189.4" y="1027.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.4" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="1011.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="995.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="979.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="963.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="931.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.05%)</title><rect x="1189.4" y="915.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>Rewriter::compute_index_maps() (1 samples, 0.05%)</title><rect x="1189.4" y="899.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
</g>
</svg>
