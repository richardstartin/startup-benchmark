<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1365"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1365"> </text>
<g id="frames">
<g>
<title>all (1,668 samples, 100.00%)</title><rect x="10.0" y="1331.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1342.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (2 samples, 0.12%)</title><rect x="10.0" y="1315.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1326.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (2 samples, 0.12%)</title><rect x="10.0" y="1299.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1310.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="10.7" y="1283.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="1294.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.06%)</title><rect x="10.7" y="1267.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.7" y="1278.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.06%)</title><rect x="10.7" y="1251.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.7" y="1262.0"></text>
</g>
<g>
<title>ConstantPool::resolve_string_constants_impl(constantPoolHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="10.7" y="1235.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.7" y="1246.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.06%)</title><rect x="10.7" y="1219.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.7" y="1230.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.06%)</title><rect x="10.7" y="1203.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.7" y="1214.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.12%)</title><rect x="11.4" y="1315.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="12.8" y="1315.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.8" y="1326.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.06%)</title><rect x="12.8" y="1299.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="15.8" y="1310.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.06%)</title><rect x="13.5" y="1299.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="16.5" y="1310.0"></text>
</g>
<g>
<title>[unknown_Java] (18 samples, 1.08%)</title><rect x="14.2" y="1315.0" width="12.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="17.2" y="1326.0"></text>
</g>
<g>
<title>Interpreter (16 samples, 0.96%)</title><rect x="14.2" y="1299.0" width="11.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="17.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="25.6" y="1299.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="28.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="25.6" y="1283.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="28.6" y="1294.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="25.6" y="1267.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="28.6" y="1278.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="26.3" y="1283.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="29.3" y="1294.0"></text>
</g>
<g>
<title>_IO_no_init (1 samples, 0.06%)</title><rect x="27.0" y="1315.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="30.0" y="1326.0"></text>
</g>
<g>
<title>__GI__IO_default_xsputn (1 samples, 0.06%)</title><rect x="27.7" y="1315.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="30.7" y="1326.0"></text>
</g>
<g>
<title>__mempcpy_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="28.4" y="1315.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="31.4" y="1326.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.06%)</title><rect x="29.1" y="1315.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="32.1" y="1326.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (1 samples, 0.06%)</title><rect x="29.1" y="1299.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="32.1" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.12%)</title><rect x="29.8" y="1315.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.8" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="29.8" y="1299.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="29.8" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.8" y="1294.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="29.8" y="1267.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="32.8" y="1278.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="29.8" y="1251.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="32.8" y="1262.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="29.8" y="1235.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="32.8" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="30.5" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.5" y="1310.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.06%)</title><rect x="30.5" y="1283.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="33.5" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/benchmark/LoadClasses.main (597 samples, 35.79%)</title><rect x="31.2" y="1315.0" width="422.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.2" y="1326.0">datadog/trace/benchmark/LoadClasses.main</text>
</g>
<g>
<title>java/lang/Class.forName (595 samples, 35.67%)</title><rect x="32.6" y="1299.0" width="421.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.6" y="1310.0">java/lang/Class.forName</text>
</g>
<g>
<title>java/lang/Class.forName0 (594 samples, 35.61%)</title><rect x="33.3" y="1283.0" width="420.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.3" y="1294.0">java/lang/Class.forName0</text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (8 samples, 0.48%)</title><rect x="33.3" y="1267.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="36.3" y="1278.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (5 samples, 0.30%)</title><rect x="33.3" y="1251.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="36.3" y="1262.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (3 samples, 0.18%)</title><rect x="33.3" y="1235.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.3" y="1246.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(int, unsigned char*, int, unsigned int, bool, Thread*) (2 samples, 0.12%)</title><rect x="33.3" y="1219.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="36.3" y="1230.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.06%)</title><rect x="34.1" y="1203.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="37.1" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="34.8" y="1219.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.8" y="1230.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (2 samples, 0.12%)</title><rect x="35.5" y="1235.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="38.5" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (2 samples, 0.12%)</title><rect x="35.5" y="1219.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="38.5" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::query_lock_ownership(JavaThread*, Handle) (1 samples, 0.06%)</title><rect x="35.5" y="1203.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.5" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="36.2" y="1203.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="39.2" y="1214.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="36.2" y="1187.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.2" y="1198.0"></text>
</g>
<g>
<title>VerifyClassname (2 samples, 0.12%)</title><rect x="36.9" y="1251.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="39.9" y="1262.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (2 samples, 0.12%)</title><rect x="36.9" y="1235.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="39.9" y="1246.0"></text>
</g>
<g>
<title>java_lang_String::utf8_length(oopDesc*) (1 samples, 0.06%)</title><rect x="38.3" y="1251.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (586 samples, 35.13%)</title><rect x="39.0" y="1267.0" width="414.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.0" y="1278.0">java/lang/ClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (586 samples, 35.13%)</title><rect x="39.0" y="1251.0" width="414.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.0" y="1262.0">jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (586 samples, 35.13%)</title><rect x="39.0" y="1235.0" width="414.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.0" y="1246.0">jdk/internal/loader/BuiltinClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (585 samples, 35.07%)</title><rect x="39.7" y="1219.0" width="413.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.7" y="1230.0">jdk/internal/loader/BuiltinClassLoader.loadClassOrNull</text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (3 samples, 0.18%)</title><rect x="39.7" y="1203.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (3 samples, 0.18%)</title><rect x="39.7" y="1187.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (3 samples, 0.18%)</title><rect x="39.7" y="1171.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (2 samples, 0.12%)</title><rect x="40.4" y="1155.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.06%)</title><rect x="41.1" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (562 samples, 33.69%)</title><rect x="41.8" y="1203.0" width="397.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.8" y="1214.0">jdk/internal/loader/BuiltinClassLoader.findClassOnClas..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (557 samples, 33.39%)</title><rect x="41.8" y="1187.0" width="394.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.8" y="1198.0">jdk/internal/loader/BuiltinClassLoader.defineClass</text>
</g>
<g>
<title>java/security/CodeSource.&lt;init&gt; (1 samples, 0.06%)</title><rect x="43.2" y="1171.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.2" y="1182.0"></text>
</g>
<g>
<title>sun/net/util/URLUtil.urlNoFragString (1 samples, 0.06%)</title><rect x="43.2" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="43.2" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="43.2" y="1123.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="43.2" y="1107.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.2" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (510 samples, 30.58%)</title><rect x="44.0" y="1171.0" width="360.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.0" y="1182.0">java/security/SecureClassLoader.defineClass</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (510 samples, 30.58%)</title><rect x="44.0" y="1155.0" width="360.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.0" y="1166.0">java/lang/ClassLoader.defineClass</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (507 samples, 30.40%)</title><rect x="44.0" y="1139.0" width="358.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.0" y="1150.0">java/lang/ClassLoader.defineClass1</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (95 samples, 5.70%)</title><rect x="44.0" y="1123.0" width="67.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="47.0" y="1134.0">Java_ja..</text>
</g>
<g>
<title>JVM_DefineClassWithSource (92 samples, 5.52%)</title><rect x="44.7" y="1107.0" width="65.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="47.7" y="1118.0">JVM_Def..</text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (92 samples, 5.52%)</title><rect x="44.7" y="1091.0" width="65.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="47.7" y="1102.0">jvm_def..</text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (92 samples, 5.52%)</title><rect x="44.7" y="1075.0" width="65.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="47.7" y="1086.0">SystemD..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (85 samples, 5.10%)</title><rect x="44.7" y="1059.0" width="60.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="47.7" y="1070.0">KlassF..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (53 samples, 3.18%)</title><rect x="44.7" y="1043.0" width="37.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="47.7" y="1054.0">Cla..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="44.7" y="1027.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="47.7" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (52 samples, 3.12%)</title><rect x="45.4" y="1027.0" width="36.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="48.4" y="1038.0">Cla..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (9 samples, 0.54%)</title><rect x="46.8" y="1011.0" width="6.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="49.8" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (3 samples, 0.18%)</title><rect x="50.3" y="995.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="53.3" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.06%)</title><rect x="50.3" y="979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="53.3" y="990.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.06%)</title><rect x="51.0" y="979.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="54.0" y="990.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.06%)</title><rect x="51.7" y="979.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="54.7" y="990.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.06%)</title><rect x="52.4" y="995.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="55.4" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (28 samples, 1.68%)</title><rect x="53.2" y="1011.0" width="19.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="56.2" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (3 samples, 0.18%)</title><rect x="53.9" y="995.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="56.9" y="1006.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.06%)</title><rect x="53.9" y="979.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="56.9" y="990.0"></text>
</g>
<g>
<title>Symbol::Symbol(unsigned char const*, int, int) (1 samples, 0.06%)</title><rect x="53.9" y="963.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="56.9" y="974.0"></text>
</g>
<g>
<title>os::random() (1 samples, 0.06%)</title><rect x="53.9" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="56.9" y="958.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.06%)</title><rect x="54.6" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="57.6" y="990.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="55.3" y="979.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="58.3" y="990.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (22 samples, 1.32%)</title><rect x="56.0" y="995.0" width="15.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="59.0" y="1006.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (2 samples, 0.12%)</title><rect x="71.5" y="995.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="74.5" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="73.0" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="76.0" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="73.0" y="995.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="76.0" y="1006.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_remove(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Thread*) (1 samples, 0.06%)</title><rect x="73.0" y="979.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="76.0" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (10 samples, 0.60%)</title><rect x="73.7" y="1011.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="76.7" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (10 samples, 0.60%)</title><rect x="73.7" y="995.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="76.7" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (6 samples, 0.36%)</title><rect x="74.4" y="979.0" width="4.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="77.4" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (2 samples, 0.12%)</title><rect x="75.8" y="963.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="78.8" y="974.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.06%)</title><rect x="77.2" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="80.2" y="974.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.06%)</title><rect x="77.9" y="963.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="80.9" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="78.6" y="979.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="81.6" y="990.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.06%)</title><rect x="78.6" y="963.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.6" y="974.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="79.3" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="82.3" y="990.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="79.3" y="963.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="82.3" y="974.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.06%)</title><rect x="79.3" y="947.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="82.3" y="958.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.06%)</title><rect x="79.3" y="931.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="82.3" y="942.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="79.3" y="915.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="82.3" y="926.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.06%)</title><rect x="80.0" y="979.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="83.0" y="990.0"></text>
</g>
<g>
<title>ConstantPool::allocate(ClassLoaderData*, int, Thread*) (1 samples, 0.06%)</title><rect x="80.7" y="1011.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="83.7" y="1022.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="80.7" y="995.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="83.7" y="1006.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.06%)</title><rect x="81.5" y="1011.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="84.5" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (15 samples, 0.90%)</title><rect x="82.2" y="1043.0" width="10.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="85.2" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (13 samples, 0.78%)</title><rect x="82.2" y="1027.0" width="9.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="85.2" y="1038.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (9 samples, 0.54%)</title><rect x="82.2" y="1011.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="85.2" y="1022.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.06%)</title><rect x="82.9" y="995.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="85.9" y="1006.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.06%)</title><rect x="82.9" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="85.9" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::find_method(Symbol const*, Symbol const*) const (2 samples, 0.12%)</title><rect x="83.6" y="995.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="86.6" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (2 samples, 0.12%)</title><rect x="83.6" y="979.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="86.6" y="990.0"></text>
</g>
<g>
<title>MethodFamily::generate_method_message(Symbol*, Method*, Thread*) const (1 samples, 0.06%)</title><rect x="85.0" y="995.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="88.0" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="85.7" y="995.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="88.7" y="1006.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.18%)</title><rect x="86.4" y="995.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="89.4" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::package_from_name(Symbol const*, Thread*) (1 samples, 0.06%)</title><rect x="88.5" y="1011.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="91.5" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::set_package(ClassLoaderData*, Thread*) (1 samples, 0.06%)</title><rect x="89.2" y="1011.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="92.2" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::package_from_name(Symbol const*, Thread*) (1 samples, 0.06%)</title><rect x="89.2" y="995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="92.2" y="1006.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.06%)</title><rect x="89.2" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="92.2" y="990.0"></text>
</g>
<g>
<title>Klass::can_be_primary_super_slow() const (1 samples, 0.06%)</title><rect x="89.9" y="1011.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="92.9" y="1022.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="90.6" y="1011.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="93.6" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::package() const (1 samples, 0.06%)</title><rect x="91.4" y="1027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="94.4" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="92.1" y="1027.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="95.1" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::layout_fields(ConstantPool*, ClassFileParser::FieldAllocationCount const*, ClassFileParser::ClassAnnotationCollector const*, ClassFileParser::FieldLayoutInfo*, Thread*) (1 samples, 0.06%)</title><rect x="92.8" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="95.8" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (7 samples, 0.42%)</title><rect x="93.5" y="1043.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="96.5" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (4 samples, 0.24%)</title><rect x="93.5" y="1027.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="96.5" y="1038.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.06%)</title><rect x="93.5" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="96.5" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (3 samples, 0.18%)</title><rect x="94.2" y="1011.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="97.2" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (2 samples, 0.12%)</title><rect x="94.2" y="995.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="97.2" y="1006.0"></text>
</g>
<g>
<title>oopDesc::is_oop(oopDesc*, bool) (1 samples, 0.06%)</title><rect x="95.6" y="995.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="98.6" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::is_oop(oopDesc*) const (1 samples, 0.06%)</title><rect x="95.6" y="979.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="98.6" y="990.0"></text>
</g>
<g>
<title>klassVtable::add_new_mirandas_to_lists(GrowableArray&lt;Method*&gt;*, GrowableArray&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.06%)</title><rect x="96.3" y="1027.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="99.3" y="1038.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;Klass*&gt;*, Thread*) (2 samples, 0.12%)</title><rect x="97.0" y="1027.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="100.0" y="1038.0"></text>
</g>
<g>
<title>ConstantPool::klass_name_at(int) const (1 samples, 0.06%)</title><rect x="98.4" y="1043.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="101.4" y="1054.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (7 samples, 0.42%)</title><rect x="99.1" y="1043.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="102.1" y="1054.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (6 samples, 0.36%)</title><rect x="99.8" y="1027.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="102.8" y="1038.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (6 samples, 0.36%)</title><rect x="99.8" y="1011.0" width="4.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="102.8" y="1022.0"></text>
</g>
<g>
<title>JPLISAssertCondition (1 samples, 0.06%)</title><rect x="99.8" y="995.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="102.8" y="1006.0"></text>
</g>
<g>
<title>checkForAndClearThrowable (1 samples, 0.06%)</title><rect x="100.6" y="995.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="103.6" y="1006.0"></text>
</g>
<g>
<title>getJPLISEnvironment (1 samples, 0.06%)</title><rect x="101.3" y="995.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="104.3" y="1006.0"></text>
</g>
<g>
<title>Thread::is_Named_thread() const (1 samples, 0.06%)</title><rect x="101.3" y="979.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="104.3" y="990.0"></text>
</g>
<g>
<title>transformClassFile (3 samples, 0.18%)</title><rect x="102.0" y="995.0" width="2.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="105.0" y="1006.0"></text>
</g>
<g>
<title>checkForAndClearThrowable (1 samples, 0.06%)</title><rect x="102.0" y="979.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="105.0" y="990.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.06%)</title><rect x="102.0" y="963.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="105.0" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.06%)</title><rect x="102.0" y="947.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="105.0" y="958.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (1 samples, 0.06%)</title><rect x="102.7" y="979.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="105.7" y="990.0"></text>
</g>
<g>
<title>jni_NewStringUTF (1 samples, 0.06%)</title><rect x="103.4" y="979.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="106.4" y="990.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, bool) (1 samples, 0.06%)</title><rect x="104.1" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="107.1" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (7 samples, 0.42%)</title><rect x="104.8" y="1059.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="107.8" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (7 samples, 0.42%)</title><rect x="104.8" y="1043.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="107.8" y="1054.0"></text>
</g>
<g>
<title>BiasedLocking::enabled() (1 samples, 0.06%)</title><rect x="104.8" y="1027.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="107.8" y="1038.0"></text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (2 samples, 0.12%)</title><rect x="105.5" y="1027.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="108.5" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::mark_dependent_nmethods(KlassDepChange&amp;) (1 samples, 0.06%)</title><rect x="105.5" y="1011.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="108.5" y="1022.0"></text>
</g>
<g>
<title>DependencyContext::mark_dependent_nmethods(DepChange&amp;) (1 samples, 0.06%)</title><rect x="105.5" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="108.5" y="1006.0"></text>
</g>
<g>
<title>KlassDepChange::is_klass_change() const (1 samples, 0.06%)</title><rect x="106.2" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.2" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (1 samples, 0.06%)</title><rect x="106.9" y="1027.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.9" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::process_interfaces(Thread*) (1 samples, 0.06%)</title><rect x="107.6" y="1027.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="110.6" y="1038.0"></text>
</g>
<g>
<title>KlassDepChange::~KlassDepChange() (1 samples, 0.06%)</title><rect x="108.3" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="111.3" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::check_constraints(unsigned int, InstanceKlass*, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="109.0" y="1027.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="112.0" y="1038.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.06%)</title><rect x="109.0" y="1011.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="112.0" y="1022.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="109.7" y="1107.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="112.7" y="1118.0"></text>
</g>
<g>
<title>jni_GetStringUTFRegion (1 samples, 0.06%)</title><rect x="110.5" y="1107.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="113.5" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="110.5" y="1091.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="111.2" y="1123.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="114.2" y="1134.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.06%)</title><rect x="111.2" y="1107.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="114.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.addClass (1 samples, 0.06%)</title><rect x="111.9" y="1123.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (61 samples, 3.66%)</title><rect x="112.6" y="1123.0" width="43.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.6" y="1134.0">java..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (61 samples, 3.66%)</title><rect x="112.6" y="1107.0" width="43.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.6" y="1118.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (61 samples, 3.66%)</title><rect x="112.6" y="1091.0" width="43.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.6" y="1102.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (61 samples, 3.66%)</title><rect x="112.6" y="1075.0" width="43.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.6" y="1086.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (55 samples, 3.30%)</title><rect x="112.6" y="1059.0" width="38.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="1070.0">jdk..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (54 samples, 3.24%)</title><rect x="112.6" y="1043.0" width="38.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.6" y="1054.0">jdk..</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (50 samples, 3.00%)</title><rect x="112.6" y="1027.0" width="35.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.6" y="1038.0">jav..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (50 samples, 3.00%)</title><rect x="112.6" y="1011.0" width="35.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.6" y="1022.0">jav..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (49 samples, 2.94%)</title><rect x="112.6" y="995.0" width="34.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.6" y="1006.0">ja..</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (6 samples, 0.36%)</title><rect x="112.6" y="979.0" width="4.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="115.6" y="990.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (5 samples, 0.30%)</title><rect x="112.6" y="963.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="115.6" y="974.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (5 samples, 0.30%)</title><rect x="112.6" y="947.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="115.6" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (5 samples, 0.30%)</title><rect x="112.6" y="931.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="115.6" y="942.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (4 samples, 0.24%)</title><rect x="112.6" y="915.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="115.6" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="112.6" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="115.6" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="112.6" y="883.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="115.6" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="112.6" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="115.6" y="878.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="112.6" y="851.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="115.6" y="862.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (2 samples, 0.12%)</title><rect x="113.3" y="899.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="116.3" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (2 samples, 0.12%)</title><rect x="113.3" y="883.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="116.3" y="894.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (2 samples, 0.12%)</title><rect x="113.3" y="867.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="116.3" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="114.0" y="851.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="117.0" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="114.0" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="117.0" y="846.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.06%)</title><rect x="114.7" y="899.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="117.7" y="910.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.06%)</title><rect x="114.7" y="883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="117.7" y="894.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (1 samples, 0.06%)</title><rect x="114.7" y="867.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="117.7" y="878.0"></text>
</g>
<g>
<title>transformClassFile (1 samples, 0.06%)</title><rect x="114.7" y="851.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="117.7" y="862.0"></text>
</g>
<g>
<title>jvmti_GetNamedModule (1 samples, 0.06%)</title><rect x="114.7" y="835.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="117.7" y="846.0"></text>
</g>
<g>
<title>JvmtiEnv::GetNamedModule(_jobject*, char const*, _jobject**) (1 samples, 0.06%)</title><rect x="114.7" y="819.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="117.7" y="830.0"></text>
</g>
<g>
<title>ModuleEntry::module() const (1 samples, 0.06%)</title><rect x="114.7" y="803.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="117.7" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="115.4" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="118.4" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="115.4" y="899.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="118.4" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="115.4" y="883.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="118.4" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.06%)</title><rect x="116.1" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="116.8" y="979.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="119.8" y="990.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.06%)</title><rect x="116.8" y="963.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="119.8" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.addClass (1 samples, 0.06%)</title><rect x="117.5" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.5" y="990.0"></text>
</g>
<g>
<title>java/util/Vector.addElement (1 samples, 0.06%)</title><rect x="117.5" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.5" y="974.0"></text>
</g>
<g>
<title>java/util/Vector.add (1 samples, 0.06%)</title><rect x="117.5" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.5" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (15 samples, 0.90%)</title><rect x="118.2" y="979.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (15 samples, 0.90%)</title><rect x="118.2" y="963.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (15 samples, 0.90%)</title><rect x="118.2" y="947.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (15 samples, 0.90%)</title><rect x="118.2" y="931.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (14 samples, 0.84%)</title><rect x="118.2" y="915.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (14 samples, 0.84%)</title><rect x="118.2" y="899.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.2" y="910.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (11 samples, 0.66%)</title><rect x="118.2" y="883.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (11 samples, 0.66%)</title><rect x="118.2" y="867.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.2" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (10 samples, 0.60%)</title><rect x="118.2" y="851.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.2" y="862.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (4 samples, 0.24%)</title><rect x="118.2" y="835.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="121.2" y="846.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (4 samples, 0.24%)</title><rect x="118.2" y="819.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="121.2" y="830.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (4 samples, 0.24%)</title><rect x="118.2" y="803.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="121.2" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (4 samples, 0.24%)</title><rect x="118.2" y="787.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="121.2" y="798.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (4 samples, 0.24%)</title><rect x="118.2" y="771.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="121.2" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (3 samples, 0.18%)</title><rect x="118.2" y="755.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="121.2" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::create_combined_annotations(Thread*) (1 samples, 0.06%)</title><rect x="118.2" y="739.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="121.2" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (2 samples, 0.12%)</title><rect x="118.9" y="739.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="121.9" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="118.9" y="723.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="121.9" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="119.7" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="122.7" y="734.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="119.7" y="707.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="122.7" y="718.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.06%)</title><rect x="120.4" y="755.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.4" y="766.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.06%)</title><rect x="120.4" y="739.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="123.4" y="750.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.06%)</title><rect x="120.4" y="723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="123.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 0.24%)</title><rect x="121.1" y="835.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (4 samples, 0.24%)</title><rect x="121.1" y="819.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 0.24%)</title><rect x="121.1" y="803.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 0.24%)</title><rect x="121.1" y="787.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (4 samples, 0.24%)</title><rect x="121.1" y="771.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (4 samples, 0.24%)</title><rect x="121.1" y="755.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.1" y="766.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (3 samples, 0.18%)</title><rect x="121.1" y="739.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (3 samples, 0.18%)</title><rect x="121.1" y="723.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.1" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (3 samples, 0.18%)</title><rect x="121.1" y="707.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.18%)</title><rect x="121.1" y="691.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.18%)</title><rect x="121.1" y="675.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.18%)</title><rect x="121.1" y="659.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.18%)</title><rect x="121.1" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.18%)</title><rect x="121.1" y="627.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.18%)</title><rect x="121.1" y="611.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.1" y="622.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.12%)</title><rect x="121.1" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.12%)</title><rect x="121.1" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.12%)</title><rect x="121.1" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="121.1" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.06%)</title><rect x="121.1" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="121.1" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="121.1" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.06%)</title><rect x="121.1" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="121.1" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.1" y="478.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="121.1" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="121.1" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.1" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="121.1" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.1" y="430.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="121.1" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="414.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="121.1" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="121.1" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.1" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="121.1" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.1" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="121.1" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.1" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="121.1" y="323.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.1" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="121.1" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.1" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="121.1" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="121.1" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.1" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="121.1" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.1" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="121.1" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.1" y="254.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.06%)</title><rect x="121.1" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="238.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.06%)</title><rect x="121.1" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="222.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="121.1" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="121.1" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.1" y="190.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.06%)</title><rect x="121.1" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.1" y="174.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/FieldVisitor.visitTypeAnnotation (1 samples, 0.06%)</title><rect x="121.1" y="147.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.1" y="158.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/FieldWriter.visitTypeAnnotation (1 samples, 0.06%)</title><rect x="121.1" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.1" y="142.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/AnnotationWriter.create (1 samples, 0.06%)</title><rect x="121.1" y="115.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.1" y="126.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/TypeReference.putTarget (1 samples, 0.06%)</title><rect x="121.1" y="99.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.1" y="110.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ByteVector.putByte (1 samples, 0.06%)</title><rect x="121.1" y="83.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.1" y="94.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="121.8" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.8" y="558.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="121.8" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.8" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="121.8" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="121.8" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.8" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="121.8" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.8" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="121.8" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.8" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="121.8" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.8" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="121.8" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.8" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="121.8" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.8" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="121.8" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.8" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="121.8" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.8" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="121.8" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.8" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="121.8" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.8" y="366.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.06%)</title><rect x="121.8" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.8" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="121.8" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.8" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="121.8" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.8" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="121.8" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (1 samples, 0.06%)</title><rect x="122.5" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (1 samples, 0.06%)</title><rect x="122.5" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (1 samples, 0.06%)</title><rect x="122.5" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.5" y="574.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.06%)</title><rect x="122.5" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.5" y="558.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="122.5" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.5" y="542.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="122.5" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.5" y="526.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="122.5" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.06%)</title><rect x="122.5" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.06%)</title><rect x="122.5" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="122.5" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="123.2" y="739.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.2" y="750.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="123.2" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.2" y="734.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="123.2" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.2" y="718.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="123.2" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="123.2" y="675.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="126.2" y="686.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="123.2" y="659.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="126.2" y="670.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="123.9" y="835.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.9" y="846.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="123.9" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="123.9" y="803.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="123.9" y="787.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.9" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="123.9" y="771.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="123.9" y="755.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="123.9" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="123.9" y="723.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="123.9" y="707.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="123.9" y="691.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="124.6" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="124.6" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="124.6" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.6" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="124.6" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.6" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="124.6" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.06%)</title><rect x="125.3" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.06%)</title><rect x="125.3" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="125.3" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.06%)</title><rect x="125.3" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.3" y="814.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.06%)</title><rect x="125.3" y="787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="128.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (3 samples, 0.18%)</title><rect x="126.0" y="883.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.0" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="126.0" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.0" y="878.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.12%)</title><rect x="126.7" y="867.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.7" y="878.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="126.7" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.7" y="862.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="126.7" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.7" y="846.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="126.7" y="819.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="129.7" y="830.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.needsInput (1 samples, 0.06%)</title><rect x="127.4" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="128.1" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="128.1" y="899.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="128.1" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="894.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="128.1" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="128.1" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="128.1" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.1" y="846.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="128.1" y="819.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="131.1" y="830.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="128.1" y="803.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="131.1" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="787.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="131.1" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="771.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="131.1" y="782.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="755.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="131.1" y="766.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_stream(char const*, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="131.1" y="750.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_entry(char const*, int*, bool, Thread*) (1 samples, 0.06%)</title><rect x="128.1" y="723.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="131.1" y="734.0"></text>
</g>
<g>
<title>ZIP_FindEntry (1 samples, 0.06%)</title><rect x="128.1" y="707.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="131.1" y="718.0"></text>
</g>
<g>
<title>JVM_RawMonitorExit@plt (1 samples, 0.06%)</title><rect x="128.1" y="691.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="131.1" y="702.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (26 samples, 1.56%)</title><rect x="128.8" y="979.0" width="18.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.8" y="990.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (26 samples, 1.56%)</title><rect x="128.8" y="963.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (26 samples, 1.56%)</title><rect x="128.8" y="947.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (25 samples, 1.50%)</title><rect x="129.6" y="931.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.6" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 1.50%)</title><rect x="129.6" y="915.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="129.6" y="899.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="132.6" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="129.6" y="883.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="132.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (24 samples, 1.44%)</title><rect x="130.3" y="899.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (24 samples, 1.44%)</title><rect x="130.3" y="883.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (24 samples, 1.44%)</title><rect x="130.3" y="867.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (24 samples, 1.44%)</title><rect x="130.3" y="851.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (24 samples, 1.44%)</title><rect x="130.3" y="835.0" width="16.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onIgnored (1 samples, 0.06%)</title><rect x="130.3" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (15 samples, 0.90%)</title><rect x="131.0" y="819.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.0" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (2 samples, 0.12%)</title><rect x="131.0" y="803.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.0" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (2 samples, 0.12%)</title><rect x="131.0" y="787.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.0" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (2 samples, 0.12%)</title><rect x="131.0" y="771.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.0" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.12%)</title><rect x="131.0" y="755.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.0" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.12%)</title><rect x="131.0" y="739.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.0" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (2 samples, 0.12%)</title><rect x="131.0" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.0" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (2 samples, 0.12%)</title><rect x="131.0" y="707.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.0" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.12%)</title><rect x="131.0" y="691.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.12%)</title><rect x="131.0" y="675.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="131.0" y="659.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.0" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="131.0" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.0" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="131.0" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.0" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="131.0" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.0" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="131.0" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="606.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="131.0" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="131.0" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="131.7" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="131.7" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.7" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="131.7" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="131.7" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.7" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="131.7" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="131.7" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="131.7" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="131.7" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.06%)</title><rect x="131.7" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="131.7" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="131.7" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="131.7" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.7" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="131.7" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.7" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (13 samples, 0.78%)</title><rect x="132.4" y="803.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (13 samples, 0.78%)</title><rect x="132.4" y="787.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.4" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="132.4" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.4" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="132.4" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="132.4" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.4" y="750.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="132.4" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.4" y="734.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="132.4" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="132.4" y="691.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.4" y="702.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.equals (1 samples, 0.06%)</title><rect x="132.4" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.4" y="686.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$InternalReference.referenceEquals (1 samples, 0.06%)</title><rect x="132.4" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.4" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (8 samples, 0.48%)</title><rect x="133.1" y="771.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="133.1" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.1" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.06%)</title><rect x="133.1" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.1" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="133.1" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.1" y="734.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="133.1" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.1" y="718.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="133.1" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.1" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.12%)</title><rect x="133.8" y="755.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.8" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="134.5" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.06%)</title><rect x="134.5" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="134.5" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="134.5" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="134.5" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.5" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="135.2" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.2" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="135.2" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.2" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="135.2" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="135.2" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="135.2" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="135.2" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.2" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.06%)</title><rect x="135.2" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.2" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (1 samples, 0.06%)</title><rect x="135.2" y="643.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.2" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="135.2" y="627.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="138.2" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="135.9" y="755.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="138.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (3 samples, 0.18%)</title><rect x="136.6" y="755.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.6" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.6" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.6" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="136.6" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="136.6" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.6" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="136.6" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="136.6" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="136.6" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="136.6" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.6" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="136.6" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="136.6" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="136.6" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="136.6" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="136.6" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="136.6" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="136.6" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="137.3" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.3" y="750.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.06%)</title><rect x="137.3" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.3" y="734.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (1 samples, 0.06%)</title><rect x="137.3" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.3" y="718.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.isDebugEnabled (1 samples, 0.06%)</title><rect x="137.3" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.3" y="702.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory$Helper.enabled (1 samples, 0.06%)</title><rect x="137.3" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.3" y="686.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.enabled (1 samples, 0.06%)</title><rect x="137.3" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.3" y="670.0"></text>
</g>
<g>
<title>datadog/trace/logging/LogLevel.isEnabled (1 samples, 0.06%)</title><rect x="137.3" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Enum.compareTo (1 samples, 0.06%)</title><rect x="137.3" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="138.0" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="138.0" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="138.0" y="707.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.0" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="138.0" y="691.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="141.0" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="138.8" y="771.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="141.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.12%)</title><rect x="139.5" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.5" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="139.5" y="755.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.5" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="139.5" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.12%)</title><rect x="139.5" y="723.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.5" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (2 samples, 0.12%)</title><rect x="139.5" y="707.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.5" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.12%)</title><rect x="139.5" y="691.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.12%)</title><rect x="139.5" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.12%)</title><rect x="139.5" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="139.5" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="139.5" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="140.2" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="140.2" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="140.2" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="140.2" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="140.9" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="140.9" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.9" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="140.9" y="739.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="143.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.06%)</title><rect x="141.6" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.06%)</title><rect x="141.6" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.06%)</title><rect x="141.6" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.06%)</title><rect x="141.6" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.06%)</title><rect x="141.6" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (1 samples, 0.06%)</title><rect x="141.6" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="141.6" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="141.6" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="141.6" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="141.6" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (1 samples, 0.06%)</title><rect x="141.6" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="141.6" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="141.6" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="141.6" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="141.6" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="141.6" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="141.6" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="141.6" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.6" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="141.6" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="141.6" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="141.6" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.6" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="141.6" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.6" y="494.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="141.6" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.6" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="141.6" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.6" y="462.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="141.6" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.6" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="141.6" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.6" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="141.6" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="141.6" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="141.6" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1 samples, 0.06%)</title><rect x="141.6" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="141.6" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.06%)</title><rect x="141.6" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.6" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (7 samples, 0.42%)</title><rect x="142.3" y="819.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (2 samples, 0.12%)</title><rect x="142.3" y="803.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.12%)</title><rect x="142.3" y="787.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.12%)</title><rect x="142.3" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="142.3" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.06%)</title><rect x="142.3" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.06%)</title><rect x="142.3" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.06%)</title><rect x="142.3" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.06%)</title><rect x="142.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="142.3" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.06%)</title><rect x="142.3" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.06%)</title><rect x="142.3" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.06%)</title><rect x="142.3" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="142.3" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="142.3" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="142.3" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="142.3" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="142.3" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.3" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="142.3" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="142.3" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.3" y="526.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="142.3" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="510.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="142.3" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.3" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="142.3" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="478.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="142.3" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.3" y="462.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.06%)</title><rect x="142.3" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.06%)</title><rect x="142.3" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.06%)</title><rect x="142.3" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageBufferCache.releaseBuffer (1 samples, 0.06%)</title><rect x="142.3" y="387.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="142.3" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.3" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="142.3" y="355.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="143.0" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="143.0" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="143.0" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="143.0" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (5 samples, 0.30%)</title><rect x="143.7" y="803.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (5 samples, 0.30%)</title><rect x="143.7" y="787.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.24%)</title><rect x="143.7" y="771.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.24%)</title><rect x="143.7" y="755.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.06%)</title><rect x="143.7" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.06%)</title><rect x="143.7" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (1 samples, 0.06%)</title><rect x="143.7" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.06%)</title><rect x="143.7" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getDescriptor (1 samples, 0.06%)</title><rect x="143.7" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="143.7" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.appendDescriptor (1 samples, 0.06%)</title><rect x="143.7" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.06%)</title><rect x="143.7" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.7" y="638.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (1 samples, 0.06%)</title><rect x="143.7" y="611.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="146.7" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.06%)</title><rect x="143.7" y="595.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="146.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.12%)</title><rect x="144.4" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (2 samples, 0.12%)</title><rect x="144.4" y="723.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (1 samples, 0.06%)</title><rect x="144.4" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.06%)</title><rect x="144.4" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.06%)</title><rect x="144.4" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.06%)</title><rect x="144.4" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitFrame (1 samples, 0.06%)</title><rect x="145.1" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onVisitFrame (1 samples, 0.06%)</title><rect x="145.1" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments$UsingArgumentCopy.translateFrame (1 samples, 0.06%)</title><rect x="145.1" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$Initialization$2.toFrame (1 samples, 0.06%)</title><rect x="145.1" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.represents (1 samples, 0.06%)</title><rect x="145.1" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="145.1" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.asErasure (1 samples, 0.06%)</title><rect x="145.1" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.of (1 samples, 0.06%)</title><rect x="145.1" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitInnerClass (1 samples, 0.06%)</title><rect x="145.8" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitInnerClass (1 samples, 0.06%)</title><rect x="145.8" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isMemberType (1 samples, 0.06%)</title><rect x="145.8" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.isLocalType (1 samples, 0.06%)</title><rect x="145.8" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="145.8" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="145.8" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="145.8" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="145.8" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="145.8" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="145.8" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.8" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="145.8" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.8" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="145.8" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.8" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitTypeAnnotation (1 samples, 0.06%)</title><rect x="145.8" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForTypeVariable$WithIndex.&lt;init&gt; (1 samples, 0.06%)</title><rect x="145.8" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.8" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable$WithIndex.&lt;init&gt; (1 samples, 0.06%)</title><rect x="145.8" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.toByteArray (1 samples, 0.06%)</title><rect x="146.5" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.putMethodInfo (1 samples, 0.06%)</title><rect x="146.5" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ByteVector.putByteArray (1 samples, 0.06%)</title><rect x="146.5" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClassSourceLocation (1 samples, 0.06%)</title><rect x="147.2" y="995.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.2" y="1006.0"></text>
</g>
<g>
<title>java/net/URL.toString (1 samples, 0.06%)</title><rect x="147.2" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.2" y="990.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (1 samples, 0.06%)</title><rect x="147.2" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.2" y="974.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (1 samples, 0.06%)</title><rect x="147.2" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="147.2" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.2" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.06%)</title><rect x="147.2" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (1 samples, 0.06%)</title><rect x="147.9" y="1027.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (1 samples, 0.06%)</title><rect x="147.9" y="1011.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.getAndVerifyPackage (1 samples, 0.06%)</title><rect x="147.9" y="995.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.isSealed (1 samples, 0.06%)</title><rect x="147.9" y="979.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (1 samples, 0.06%)</title><rect x="148.7" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (1 samples, 0.06%)</title><rect x="148.7" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (1 samples, 0.06%)</title><rect x="148.7" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.7" y="1006.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.06%)</title><rect x="148.7" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.7" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="148.7" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.7" y="974.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="148.7" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.7" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.getInflater (1 samples, 0.06%)</title><rect x="148.7" y="931.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.7" y="942.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.&lt;init&gt; (1 samples, 0.06%)</title><rect x="148.7" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (2 samples, 0.12%)</title><rect x="149.4" y="1027.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.4" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.12%)</title><rect x="149.4" y="1011.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.4" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.12%)</title><rect x="149.4" y="995.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.4" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.12%)</title><rect x="149.4" y="979.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="149.4" y="963.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="152.4" y="974.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="149.4" y="947.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="152.4" y="958.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="150.1" y="963.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="153.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="150.8" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="150.8" y="1027.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.06%)</title><rect x="150.8" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="150.8" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="150.8" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.8" y="990.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (1 samples, 0.06%)</title><rect x="150.8" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.8" y="974.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseContextSpec (1 samples, 0.06%)</title><rect x="150.8" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="150.8" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.8" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="150.8" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.8" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="150.8" y="899.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.12%)</title><rect x="151.5" y="1059.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.12%)</title><rect x="151.5" y="1043.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (2 samples, 0.12%)</title><rect x="151.5" y="1027.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (2 samples, 0.12%)</title><rect x="151.5" y="1011.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (2 samples, 0.12%)</title><rect x="151.5" y="995.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (2 samples, 0.12%)</title><rect x="151.5" y="979.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.5" y="990.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (2 samples, 0.12%)</title><rect x="151.5" y="963.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="154.5" y="974.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (2 samples, 0.12%)</title><rect x="151.5" y="947.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="154.5" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.12%)</title><rect x="151.5" y="931.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="154.5" y="942.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (2 samples, 0.12%)</title><rect x="151.5" y="915.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="154.5" y="926.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (2 samples, 0.12%)</title><rect x="151.5" y="899.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="154.5" y="910.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_stream(char const*, Thread*) (1 samples, 0.06%)</title><rect x="151.5" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="154.5" y="894.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_entry(char const*, int*, bool, Thread*) (1 samples, 0.06%)</title><rect x="151.5" y="867.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="154.5" y="878.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.06%)</title><rect x="152.2" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="155.2" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="152.2" y="867.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="155.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (4 samples, 0.24%)</title><rect x="152.9" y="1059.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (4 samples, 0.24%)</title><rect x="152.9" y="1043.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (4 samples, 0.24%)</title><rect x="152.9" y="1027.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (4 samples, 0.24%)</title><rect x="152.9" y="1011.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.9" y="1022.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (2 samples, 0.12%)</title><rect x="152.9" y="995.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="155.9" y="1006.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (2 samples, 0.12%)</title><rect x="152.9" y="979.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="155.9" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.12%)</title><rect x="152.9" y="963.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="155.9" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (2 samples, 0.12%)</title><rect x="152.9" y="947.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="155.9" y="958.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (2 samples, 0.12%)</title><rect x="152.9" y="931.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="155.9" y="942.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 0.12%)</title><rect x="152.9" y="915.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="155.9" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (2 samples, 0.12%)</title><rect x="152.9" y="899.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="155.9" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (2 samples, 0.12%)</title><rect x="152.9" y="883.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="155.9" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="152.9" y="867.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="155.9" y="878.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="152.9" y="851.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="155.9" y="862.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="153.6" y="867.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="156.6" y="878.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="153.6" y="851.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="156.6" y="862.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="154.3" y="995.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.3" y="1006.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="154.3" y="979.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="154.3" y="963.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="154.3" y="947.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.3" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="154.3" y="931.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="154.3" y="915.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="154.3" y="899.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="154.3" y="883.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="154.3" y="867.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="154.3" y="851.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.12%)</title><rect x="154.3" y="835.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.12%)</title><rect x="154.3" y="819.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (2 samples, 0.12%)</title><rect x="154.3" y="803.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (2 samples, 0.12%)</title><rect x="154.3" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.3" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="154.3" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.3" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="154.3" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.3" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="154.3" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.3" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="154.3" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.3" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="154.3" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="154.3" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="154.3" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="154.3" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="154.3" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="154.3" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="154.3" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.3" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="154.3" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.3" y="606.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="154.3" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.3" y="590.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="154.3" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.3" y="574.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="154.3" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.3" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="155.0" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.0" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.0" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.0" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.0" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="155.0" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.0" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="155.0" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="155.0" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="155.0" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="155.0" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="155.0" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="155.0" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="155.0" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="155.0" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="155.0" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="155.0" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="155.0" y="467.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.0" y="478.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.06%)</title><rect x="155.7" y="1123.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="158.7" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (348 samples, 20.86%)</title><rect x="156.4" y="1123.0" width="246.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.4" y="1134.0">sun/instrument/InstrumentationImp..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (348 samples, 20.86%)</title><rect x="156.4" y="1107.0" width="246.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.4" y="1118.0">sun/instrument/TransformerManager..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (348 samples, 20.86%)</title><rect x="156.4" y="1091.0" width="246.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.4" y="1102.0">net/bytebuddy/agent/builder/Agent..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (348 samples, 20.86%)</title><rect x="156.4" y="1075.0" width="246.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.4" y="1086.0">net/bytebuddy/agent/builder/Agent..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (347 samples, 20.80%)</title><rect x="156.4" y="1059.0" width="245.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.4" y="1070.0">java/security/AccessController.do..</text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.18%)</title><rect x="157.1" y="1043.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="160.1" y="1054.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="157.9" y="1027.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="160.9" y="1038.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="158.6" y="1027.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="161.6" y="1038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="158.6" y="1011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="161.6" y="1022.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.06%)</title><rect x="158.6" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="161.6" y="1006.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="158.6" y="979.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="161.6" y="990.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="158.6" y="963.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="161.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (343 samples, 20.56%)</title><rect x="159.3" y="1043.0" width="242.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.3" y="1054.0">net/bytebuddy/agent/builder/Agen..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (343 samples, 20.56%)</title><rect x="159.3" y="1027.0" width="242.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.3" y="1038.0">net/bytebuddy/agent/builder/Agen..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (343 samples, 20.56%)</title><rect x="159.3" y="1011.0" width="242.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.3" y="1022.0">net/bytebuddy/agent/builder/Agen..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (343 samples, 20.56%)</title><rect x="159.3" y="995.0" width="242.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.3" y="1006.0">net/bytebuddy/agent/builder/Agen..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDLocationStrategy.classFileLocator (1 samples, 0.06%)</title><rect x="160.0" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.0" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default$1.resolve (2 samples, 0.12%)</title><rect x="160.7" y="979.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Simple.of (2 samples, 0.12%)</title><rect x="160.7" y="963.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.7" y="974.0"></text>
</g>
<g>
<title>java/util/Collections.singletonMap (2 samples, 0.12%)</title><rect x="160.7" y="947.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default$1.typePool (2 samples, 0.12%)</title><rect x="162.1" y="979.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.1" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (2 samples, 0.12%)</title><rect x="162.1" y="963.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.1" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (2 samples, 0.12%)</title><rect x="162.1" y="947.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (2 samples, 0.12%)</title><rect x="162.1" y="931.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.1" y="942.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (2 samples, 0.12%)</title><rect x="162.1" y="915.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.1" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="162.8" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="162.8" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.8" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.equals (1 samples, 0.06%)</title><rect x="162.8" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.8" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$InternalReference.referenceEquals (1 samples, 0.06%)</title><rect x="162.8" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (337 samples, 20.20%)</title><rect x="163.5" y="979.0" width="238.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.5" y="990.0">net/bytebuddy/agent/builder/Agen..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="168.5" y="963.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="171.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onIgnored (7 samples, 0.42%)</title><rect x="169.2" y="963.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (248 samples, 14.87%)</title><rect x="174.1" y="963.0" width="175.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.1" y="974.0">net/bytebuddy/agent/bui..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (3 samples, 0.18%)</title><rect x="174.1" y="947.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.06%)</title><rect x="174.8" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.8" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="174.8" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.8" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="174.8" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.8" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="174.8" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.06%)</title><rect x="174.8" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.8" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.06%)</title><rect x="174.8" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.8" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.06%)</title><rect x="174.8" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.06%)</title><rect x="174.8" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="177.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.traverseHierarchy (1 samples, 0.06%)</title><rect x="174.8" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.8" y="814.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbbb0000)@0x00007f30246acc80 (1 samples, 0.06%)</title><rect x="174.8" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.8" y="798.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/logback/LoggingEventInstrumentation.getInstrumentationMuzzle (1 samples, 0.06%)</title><rect x="175.5" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.5" y="942.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_ldc(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="175.5" y="915.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="178.5" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="175.5" y="899.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="178.5" y="910.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="175.5" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="178.5" y="894.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="175.5" y="867.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="178.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (245 samples, 14.69%)</title><rect x="176.2" y="947.0" width="173.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.2" y="958.0">net/bytebuddy/agent/bu..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (245 samples, 14.69%)</title><rect x="176.2" y="931.0" width="173.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.2" y="942.0">net/bytebuddy/agent/bu..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (2 samples, 0.12%)</title><rect x="176.2" y="915.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.2" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (2 samples, 0.12%)</title><rect x="176.2" y="899.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.2" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (2 samples, 0.12%)</title><rect x="176.2" y="883.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.2" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (2 samples, 0.12%)</title><rect x="176.2" y="867.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.2" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (2 samples, 0.12%)</title><rect x="176.2" y="851.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.2" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.getValue (1 samples, 0.06%)</title><rect x="176.2" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.2" y="846.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getObject (1 samples, 0.06%)</title><rect x="176.2" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="177.0" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.0" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (118 samples, 7.07%)</title><rect x="177.7" y="915.0" width="83.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.7" y="926.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (26 samples, 1.56%)</title><rect x="178.4" y="899.0" width="18.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.4" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (25 samples, 1.50%)</title><rect x="179.1" y="883.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (22 samples, 1.32%)</title><rect x="179.8" y="867.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="182.8" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (21 samples, 1.26%)</title><rect x="180.5" y="851.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.5" y="862.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f30246a5080 (1 samples, 0.06%)</title><rect x="180.5" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.5" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (20 samples, 1.20%)</title><rect x="181.2" y="835.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.2" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (9 samples, 0.54%)</title><rect x="183.3" y="819.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.3" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (9 samples, 0.54%)</title><rect x="183.3" y="803.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (7 samples, 0.42%)</title><rect x="183.3" y="787.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.3" y="798.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (7 samples, 0.42%)</title><rect x="183.3" y="771.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.3" y="782.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (7 samples, 0.42%)</title><rect x="183.3" y="755.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.offer (7 samples, 0.42%)</title><rect x="183.3" y="739.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.3" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.12%)</title><rect x="183.3" y="723.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.3" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.12%)</title><rect x="183.3" y="707.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.3" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpComparable (1 samples, 0.06%)</title><rect x="184.0" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.24%)</title><rect x="184.7" y="723.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.24%)</title><rect x="184.7" y="707.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.12%)</title><rect x="184.7" y="691.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.06%)</title><rect x="184.7" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="184.7" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.06%)</title><rect x="184.7" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="184.7" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.06%)</title><rect x="185.4" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="185.4" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="185.4" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="188.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.12%)</title><rect x="186.2" y="691.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.12%)</title><rect x="186.2" y="675.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.06%)</title><rect x="186.9" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="187.6" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="187.6" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="187.6" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="187.6" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="187.6" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.6" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="187.6" y="643.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="190.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.12%)</title><rect x="188.3" y="787.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.12%)</title><rect x="188.3" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="189.0" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="189.0" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="189.0" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.0" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="189.0" y="707.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="192.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.246] (1 samples, 0.06%)</title><rect x="189.0" y="691.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="192.0" y="702.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.setAccessTime (1 samples, 0.06%)</title><rect x="189.7" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.7" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FSA.setAccessTime (1 samples, 0.06%)</title><rect x="189.7" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.7" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.getValue (1 samples, 0.06%)</title><rect x="190.4" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.4" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.newLookupKey (5 samples, 0.30%)</title><rect x="191.1" y="819.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.1" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.&lt;init&gt; (5 samples, 0.30%)</title><rect x="191.1" y="803.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="193.2" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.2" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.06%)</title><rect x="193.9" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.9" y="798.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.expiry (1 samples, 0.06%)</title><rect x="194.6" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.getCache (1 samples, 0.06%)</title><rect x="195.3" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.3" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.hasResources (1 samples, 0.06%)</title><rect x="196.1" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="196.1" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="196.1" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1 samples, 0.06%)</title><rect x="196.1" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="196.1" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.06%)</title><rect x="196.1" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="196.1" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.1" y="782.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="196.1" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.1" y="766.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="196.1" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.1" y="750.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="196.1" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.1" y="734.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="196.1" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.1" y="718.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="196.1" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.1" y="702.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.06%)</title><rect x="196.1" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.1" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (9 samples, 0.54%)</title><rect x="196.8" y="899.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.8" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (7 samples, 0.42%)</title><rect x="198.2" y="883.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="201.2" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (5 samples, 0.30%)</title><rect x="198.2" y="867.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (5 samples, 0.30%)</title><rect x="198.2" y="851.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (5 samples, 0.30%)</title><rect x="198.2" y="835.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="198.2" y="819.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="198.9" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="198.9" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.18%)</title><rect x="199.6" y="819.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.18%)</title><rect x="199.6" y="803.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.6" y="814.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.18%)</title><rect x="199.6" y="787.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="202.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (2 samples, 0.12%)</title><rect x="201.7" y="867.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.getName (1 samples, 0.06%)</title><rect x="202.4" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="203.1" y="899.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="203.1" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="203.1" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="203.1" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.1" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="203.1" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="203.1" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="203.1" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="203.1" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="203.1" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="203.1" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.06%)</title><rect x="203.1" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (75 samples, 4.50%)</title><rect x="203.8" y="899.0" width="53.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.8" y="910.0">net/b..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (2 samples, 0.12%)</title><rect x="203.8" y="883.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (2 samples, 0.12%)</title><rect x="203.8" y="867.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.8" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="204.5" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.5" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="204.5" y="835.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.5" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="204.5" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="204.5" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.5" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.06%)</title><rect x="204.5" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="204.5" y="771.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="204.5" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="204.5" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="204.5" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.5" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="204.5" y="707.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="207.5" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (64 samples, 3.84%)</title><rect x="205.3" y="883.0" width="45.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.3" y="894.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (64 samples, 3.84%)</title><rect x="205.3" y="867.0" width="45.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.3" y="878.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (39 samples, 2.34%)</title><rect x="205.3" y="851.0" width="27.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.3" y="862.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (39 samples, 2.34%)</title><rect x="205.3" y="835.0" width="27.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.3" y="846.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="205.3" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.3" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="205.3" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="208.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.06%)</title><rect x="205.3" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="205.3" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="205.3" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (13 samples, 0.78%)</title><rect x="206.0" y="819.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (13 samples, 0.78%)</title><rect x="206.0" y="803.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (13 samples, 0.78%)</title><rect x="206.0" y="787.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (13 samples, 0.78%)</title><rect x="206.0" y="771.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.0" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (8 samples, 0.48%)</title><rect x="206.0" y="755.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.get (1 samples, 0.06%)</title><rect x="206.0" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (7 samples, 0.42%)</title><rect x="206.7" y="739.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (7 samples, 0.42%)</title><rect x="206.7" y="723.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (7 samples, 0.42%)</title><rect x="206.7" y="707.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (7 samples, 0.42%)</title><rect x="206.7" y="691.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (7 samples, 0.42%)</title><rect x="206.7" y="675.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (7 samples, 0.42%)</title><rect x="206.7" y="659.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="207.4" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="208.1" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="208.1" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="208.1" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="208.1" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.12%)</title><rect x="208.8" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="208.8" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="208.8" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="209.5" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="210.2" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="210.9" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="210.9" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="210.9" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (5 samples, 0.30%)</title><rect x="211.6" y="755.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (5 samples, 0.30%)</title><rect x="211.6" y="739.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="211.6" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.6" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="211.6" y="707.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.6" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="211.6" y="691.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.6" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="211.6" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.6" y="686.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (1 samples, 0.06%)</title><rect x="212.3" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.3" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.06%)</title><rect x="212.3" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.3" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="212.3" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.3" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="212.3" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.3" y="638.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.06%)</title><rect x="212.3" y="611.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="215.3" y="622.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, Thread*) (1 samples, 0.06%)</title><rect x="212.3" y="595.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="215.3" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="212.3" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="215.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="213.0" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="213.0" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.06%)</title><rect x="213.0" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.06%)</title><rect x="213.0" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.0" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="213.0" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.0" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="213.0" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="213.0" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.06%)</title><rect x="213.0" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.06%)</title><rect x="213.0" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="213.0" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="213.0" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="213.0" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="213.7" y="723.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (2 samples, 0.12%)</title><rect x="213.7" y="707.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.06%)</title><rect x="214.4" y="691.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.06%)</title><rect x="214.4" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (25 samples, 1.50%)</title><rect x="215.2" y="819.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (3 samples, 0.18%)</title><rect x="215.2" y="803.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (3 samples, 0.18%)</title><rect x="215.2" y="787.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="215.2" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.2" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="215.2" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="215.2" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="215.2" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="215.2" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="215.2" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="215.2" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="215.2" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="215.2" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="215.2" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="215.2" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="215.2" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="215.2" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="215.2" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="215.2" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visit (1 samples, 0.06%)</title><rect x="215.2" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.06%)</title><rect x="215.2" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.2" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="215.9" y="771.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="215.9" y="755.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.9" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.06%)</title><rect x="216.6" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.6" y="750.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="216.6" y="723.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="219.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (22 samples, 1.32%)</title><rect x="217.3" y="803.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (22 samples, 1.32%)</title><rect x="217.3" y="787.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (22 samples, 1.32%)</title><rect x="217.3" y="771.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (22 samples, 1.32%)</title><rect x="217.3" y="755.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.3" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (13 samples, 0.78%)</title><rect x="217.3" y="739.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (12 samples, 0.72%)</title><rect x="218.0" y="723.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (12 samples, 0.72%)</title><rect x="218.0" y="707.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (10 samples, 0.60%)</title><rect x="219.4" y="691.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (10 samples, 0.60%)</title><rect x="219.4" y="675.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (10 samples, 0.60%)</title><rect x="219.4" y="659.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (10 samples, 0.60%)</title><rect x="219.4" y="643.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.12%)</title><rect x="220.8" y="627.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.12%)</title><rect x="220.8" y="611.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="220.8" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="220.8" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.8" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="221.5" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (4 samples, 0.24%)</title><rect x="222.2" y="627.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="225.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.18%)</title><rect x="222.2" y="611.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.18%)</title><rect x="222.2" y="595.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.2" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="222.9" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="225.9" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="222.9" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="225.9" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="222.9" y="547.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="225.9" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="222.9" y="531.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="225.9" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="222.9" y="515.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="225.9" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="222.9" y="499.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="225.9" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="222.9" y="483.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="225.9" y="494.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="222.9" y="467.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="225.9" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.06%)</title><rect x="222.9" y="451.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="225.9" y="462.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="222.9" y="435.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="225.9" y="446.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.06%)</title><rect x="222.9" y="419.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="225.9" y="430.0"></text>
</g>
<g>
<title>G1Analytics::predict_young_other_time_ms(unsigned long) const (1 samples, 0.06%)</title><rect x="222.9" y="403.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="225.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="223.6" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="224.4" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.4" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="224.4" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.4" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="224.4" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.4" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="224.4" y="563.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="227.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (2 samples, 0.12%)</title><rect x="225.1" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (2 samples, 0.12%)</title><rect x="225.1" y="611.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="228.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (1 samples, 0.06%)</title><rect x="225.8" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="225.8" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="225.8" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.8" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (9 samples, 0.54%)</title><rect x="226.5" y="739.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (8 samples, 0.48%)</title><rect x="227.2" y="723.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedConstructor.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="227.2" y="707.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.2" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="227.2" y="691.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.2" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="227.2" y="675.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.2" y="686.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (2 samples, 0.12%)</title><rect x="227.2" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.2" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="227.2" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.2" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.06%)</title><rect x="227.9" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.9" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.06%)</title><rect x="227.9" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.9" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (1 samples, 0.06%)</title><rect x="227.9" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.9" y="622.0"></text>
</g>
<g>
<title>JVM_NewArray (1 samples, 0.06%)</title><rect x="227.9" y="595.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="230.9" y="606.0"></text>
</g>
<g>
<title>Reflection::reflect_new_array(oopDesc*, int, Thread*) (1 samples, 0.06%)</title><rect x="227.9" y="579.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="230.9" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="227.9" y="563.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="230.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="228.6" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.6" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="228.6" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.6" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="228.6" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.6" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="228.6" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.18%)</title><rect x="229.3" y="707.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.18%)</title><rect x="229.3" y="691.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.3" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="229.3" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.06%)</title><rect x="229.3" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (2 samples, 0.12%)</title><rect x="230.0" y="675.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (2 samples, 0.12%)</title><rect x="230.0" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.0" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.12%)</title><rect x="230.0" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.0" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.12%)</title><rect x="230.0" y="627.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.0" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.06%)</title><rect x="230.0" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="230.0" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="230.7" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.7" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.06%)</title><rect x="230.7" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="231.4" y="707.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (2 samples, 0.12%)</title><rect x="231.4" y="691.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (2 samples, 0.12%)</title><rect x="231.4" y="675.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (2 samples, 0.12%)</title><rect x="231.4" y="659.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="231.4" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="231.4" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.4" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="231.4" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="231.4" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="231.4" y="579.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="231.4" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="232.1" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="232.1" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="232.1" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="232.1" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="232.1" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.1" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="232.1" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.1" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="232.1" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.1" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="232.1" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.1" y="542.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="232.1" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.1" y="526.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="232.1" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.1" y="510.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="232.1" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.1" y="494.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (19 samples, 1.14%)</title><rect x="232.8" y="851.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.8" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (5 samples, 0.30%)</title><rect x="232.8" y="835.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (5 samples, 0.30%)</title><rect x="232.8" y="819.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (3 samples, 0.18%)</title><rect x="232.8" y="803.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (3 samples, 0.18%)</title><rect x="232.8" y="787.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.18%)</title><rect x="232.8" y="771.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.18%)</title><rect x="232.8" y="755.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.8" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.12%)</title><rect x="232.8" y="739.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (2 samples, 0.12%)</title><rect x="232.8" y="723.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (2 samples, 0.12%)</title><rect x="232.8" y="707.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="233.5" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="233.5" y="675.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="233.5" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="233.5" y="643.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="233.5" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="233.5" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.06%)</title><rect x="233.5" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.5" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="233.5" y="579.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="236.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="234.3" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="234.3" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="234.3" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="234.3" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="234.3" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="234.3" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.getBinaryName (1 samples, 0.06%)</title><rect x="234.3" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="234.3" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="234.3" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="234.3" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.12%)</title><rect x="235.0" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="235.0" y="787.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="235.0" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.0" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="235.7" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="235.7" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="235.7" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="235.7" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="238.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="235.7" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="235.7" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="235.7" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="235.7" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="235.7" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="235.7" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.7" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="235.7" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.7" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="235.7" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.7" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="235.7" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.7" y="574.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="235.7" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.7" y="558.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.06%)</title><rect x="235.7" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.06%)</title><rect x="235.7" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.06%)</title><rect x="235.7" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getBufferBytes (1 samples, 0.06%)</title><rect x="235.7" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.06%)</title><rect x="235.7" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="235.7" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.7" y="462.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (5 samples, 0.30%)</title><rect x="236.4" y="835.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.4" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (5 samples, 0.30%)</title><rect x="236.4" y="819.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (5 samples, 0.30%)</title><rect x="236.4" y="803.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (5 samples, 0.30%)</title><rect x="236.4" y="787.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="239.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (4 samples, 0.24%)</title><rect x="237.1" y="771.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (4 samples, 0.24%)</title><rect x="237.1" y="755.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.06%)</title><rect x="237.1" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="237.1" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.06%)</title><rect x="237.1" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (3 samples, 0.18%)</title><rect x="237.8" y="739.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (3 samples, 0.18%)</title><rect x="237.8" y="723.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.8" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.06%)</title><rect x="238.5" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.5" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.06%)</title><rect x="238.5" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.5" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.06%)</title><rect x="238.5" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.5" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.06%)</title><rect x="238.5" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.5" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="238.5" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.5" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.06%)</title><rect x="238.5" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.5" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.06%)</title><rect x="238.5" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.5" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.06%)</title><rect x="238.5" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.06%)</title><rect x="238.5" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.06%)</title><rect x="238.5" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.06%)</title><rect x="238.5" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="241.5" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="239.2" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="239.2" y="691.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="239.2" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.2" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (5 samples, 0.30%)</title><rect x="239.9" y="835.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.9" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="239.9" y="819.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.9" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (2 samples, 0.12%)</title><rect x="239.9" y="803.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="239.9" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="239.9" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="239.9" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="239.9" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.9" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="239.9" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="239.9" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="239.9" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="239.9" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="239.9" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="239.9" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="239.9" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="239.9" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="239.9" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="242.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (1 samples, 0.06%)</title><rect x="239.9" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="239.9" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="239.9" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="240.6" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="240.6" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="240.6" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="240.6" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="240.6" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.6" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.06%)</title><rect x="240.6" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.6" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="240.6" y="691.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="243.6" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="241.3" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="244.3" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="241.3" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="241.3" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="241.3" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="241.3" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="241.3" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.3" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.12%)</title><rect x="242.0" y="819.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.0" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="242.0" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.0" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="242.0" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="242.0" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="242.0" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="242.0" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="242.0" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.0" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="242.0" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="242.0" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="242.0" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="242.0" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="242.0" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="242.0" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="242.0" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="242.0" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="242.0" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="242.0" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.size (1 samples, 0.06%)</title><rect x="242.7" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.24%)</title><rect x="243.5" y="835.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.24%)</title><rect x="243.5" y="819.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.24%)</title><rect x="243.5" y="803.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="244.2" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (1 samples, 0.06%)</title><rect x="244.2" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.2" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (2 samples, 0.12%)</title><rect x="244.9" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.9" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (2 samples, 0.12%)</title><rect x="244.9" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.9" y="782.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.12%)</title><rect x="244.9" y="755.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="247.9" y="766.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.18%)</title><rect x="246.3" y="851.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="249.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (3 samples, 0.18%)</title><rect x="248.4" y="851.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (3 samples, 0.18%)</title><rect x="248.4" y="835.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="248.4" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="248.4" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.4" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="248.4" y="787.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="251.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.getModifiers (2 samples, 0.12%)</title><rect x="249.1" y="819.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.1" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="249.1" y="803.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="252.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="249.8" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 0.30%)</title><rect x="250.5" y="883.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.5" y="894.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (2 samples, 0.12%)</title><rect x="250.5" y="867.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.5" y="878.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AbstractExecutorInstrumentation$1.matches (2 samples, 0.12%)</title><rect x="250.5" y="851.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.5" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.hasNext (1 samples, 0.06%)</title><rect x="251.2" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.12%)</title><rect x="251.9" y="867.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="251.9" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.9" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.06%)</title><rect x="251.9" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.9" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.06%)</title><rect x="251.9" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="251.9" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="251.9" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="251.9" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="251.9" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="251.9" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="252.6" y="851.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="252.6" y="835.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.6" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="252.6" y="819.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="255.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="253.4" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="253.4" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="253.4" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="253.4" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (4 samples, 0.24%)</title><rect x="254.1" y="883.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (2 samples, 0.12%)</title><rect x="254.1" y="867.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (2 samples, 0.12%)</title><rect x="254.1" y="851.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="254.8" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (2 samples, 0.12%)</title><rect x="255.5" y="867.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="256.2" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="256.2" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="256.2" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.2" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="256.2" y="803.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="259.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.06%)</title><rect x="256.9" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (5 samples, 0.30%)</title><rect x="257.6" y="899.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (5 samples, 0.30%)</title><rect x="257.6" y="883.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.6" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (4 samples, 0.24%)</title><rect x="258.3" y="867.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.3" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (4 samples, 0.24%)</title><rect x="258.3" y="851.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.3" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (3 samples, 0.18%)</title><rect x="259.0" y="835.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.0" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (3 samples, 0.18%)</title><rect x="259.0" y="819.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.0" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (1 samples, 0.06%)</title><rect x="259.0" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.0" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/FS.newLookupKey (1 samples, 0.06%)</title><rect x="259.7" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.7" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/References$LookupKeyReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="259.7" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.06%)</title><rect x="260.4" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.4" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="261.1" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="261.1" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.1" y="910.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.18%)</title><rect x="261.8" y="915.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="264.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (117 samples, 7.01%)</title><rect x="264.0" y="915.0" width="82.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.0" y="926.0">net/byteb..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (89 samples, 5.34%)</title><rect x="264.0" y="899.0" width="62.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.0" y="910.0">datado..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (87 samples, 5.22%)</title><rect x="265.4" y="883.0" width="61.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.4" y="894.0">datado..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (6 samples, 0.36%)</title><rect x="266.1" y="867.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (6 samples, 0.36%)</title><rect x="266.1" y="851.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (6 samples, 0.36%)</title><rect x="266.1" y="835.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (4 samples, 0.24%)</title><rect x="267.5" y="819.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.5" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="267.5" y="803.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="270.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="268.2" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.2" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.06%)</title><rect x="268.2" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (2 samples, 0.12%)</title><rect x="268.9" y="803.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (2 samples, 0.12%)</title><rect x="268.9" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher$Mode$1.matches (2 samples, 0.12%)</title><rect x="268.9" y="771.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.12%)</title><rect x="268.9" y="755.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.9" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (67 samples, 4.02%)</title><rect x="270.3" y="867.0" width="47.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.3" y="878.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (14 samples, 0.84%)</title><rect x="270.3" y="851.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (14 samples, 0.84%)</title><rect x="270.3" y="835.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (14 samples, 0.84%)</title><rect x="270.3" y="819.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (14 samples, 0.84%)</title><rect x="270.3" y="803.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="270.3" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="270.3" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (13 samples, 0.78%)</title><rect x="271.0" y="787.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (13 samples, 0.78%)</title><rect x="271.0" y="771.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="271.0" y="755.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="274.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (2 samples, 0.12%)</title><rect x="271.8" y="755.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="271.8" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.06%)</title><rect x="271.8" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="271.8" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="271.8" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="272.5" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="272.5" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="272.5" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.5" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.06%)</title><rect x="272.5" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="272.5" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getType (2 samples, 0.12%)</title><rect x="273.2" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (2 samples, 0.12%)</title><rect x="273.2" y="739.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (8 samples, 0.48%)</title><rect x="274.6" y="755.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.6" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="274.6" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="277.6" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="274.6" y="723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="277.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (7 samples, 0.42%)</title><rect x="275.3" y="739.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.3" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (5 samples, 0.30%)</title><rect x="275.3" y="723.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.3" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (5 samples, 0.30%)</title><rect x="275.3" y="707.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.3" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (5 samples, 0.30%)</title><rect x="275.3" y="691.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.3" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (5 samples, 0.30%)</title><rect x="275.3" y="675.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.3" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (3 samples, 0.18%)</title><rect x="276.7" y="659.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.7" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (3 samples, 0.18%)</title><rect x="276.7" y="643.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.7" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (3 samples, 0.18%)</title><rect x="276.7" y="627.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.7" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (3 samples, 0.18%)</title><rect x="276.7" y="611.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (2 samples, 0.12%)</title><rect x="277.4" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.12%)</title><rect x="277.4" y="579.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (2 samples, 0.12%)</title><rect x="277.4" y="563.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.4" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.12%)</title><rect x="278.8" y="723.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="278.8" y="707.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="278.8" y="691.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.12%)</title><rect x="278.8" y="675.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.8" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (27 samples, 1.62%)</title><rect x="280.2" y="851.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.2" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (3 samples, 0.18%)</title><rect x="280.2" y="835.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.2" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (3 samples, 0.18%)</title><rect x="280.2" y="819.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (3 samples, 0.18%)</title><rect x="280.2" y="803.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="283.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (3 samples, 0.18%)</title><rect x="280.2" y="787.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="280.2" y="771.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="280.2" y="755.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="280.9" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="281.7" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="281.7" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="281.7" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="281.7" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.7" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="281.7" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.7" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 0.18%)</title><rect x="282.4" y="835.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.4" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="282.4" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.4" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="282.4" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="282.4" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="282.4" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.4" y="782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="282.4" y="755.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="285.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="283.1" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.1" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="283.1" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="283.1" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="283.1" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="283.1" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="283.1" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="283.1" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="283.1" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.1" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="283.1" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.1" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="283.8" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="283.8" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.8" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="283.8" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="283.8" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="283.8" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="283.8" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="283.8" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="283.8" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="283.8" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="283.8" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.8" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="283.8" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.8" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="283.8" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.8" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="283.8" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.8" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="283.8" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.8" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.06%)</title><rect x="283.8" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.06%)</title><rect x="283.8" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.06%)</title><rect x="283.8" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getBufferBytes (1 samples, 0.06%)</title><rect x="283.8" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.06%)</title><rect x="283.8" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.8" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="283.8" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.8" y="526.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (21 samples, 1.26%)</title><rect x="284.5" y="835.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.5" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (21 samples, 1.26%)</title><rect x="284.5" y="819.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (21 samples, 1.26%)</title><rect x="284.5" y="803.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (21 samples, 1.26%)</title><rect x="284.5" y="787.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.5" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="284.5" y="771.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="287.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (20 samples, 1.20%)</title><rect x="285.2" y="771.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (19 samples, 1.14%)</title><rect x="285.9" y="755.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.9" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="285.9" y="739.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="288.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (18 samples, 1.08%)</title><rect x="286.6" y="739.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.6" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="286.6" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.6" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="286.6" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.6" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="286.6" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.6" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="286.6" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.6" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="286.6" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="286.6" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="286.6" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (17 samples, 1.02%)</title><rect x="287.3" y="723.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="290.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (17 samples, 1.02%)</title><rect x="287.3" y="707.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (17 samples, 1.02%)</title><rect x="287.3" y="691.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.3" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (17 samples, 1.02%)</title><rect x="287.3" y="675.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.3" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (16 samples, 0.96%)</title><rect x="287.3" y="659.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (6 samples, 0.36%)</title><rect x="287.3" y="643.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (4 samples, 0.24%)</title><rect x="287.3" y="627.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="287.3" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="287.3" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="287.3" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.3" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="287.3" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="287.3" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="287.3" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="287.3" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="287.3" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="287.3" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="287.3" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="287.3" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="287.3" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="287.3" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="287.3" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="287.3" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (3 samples, 0.18%)</title><rect x="288.0" y="611.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="288.0" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.0" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="288.0" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="288.0" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="288.0" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="288.0" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="288.0" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="288.0" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="288.0" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getAttributes (1 samples, 0.06%)</title><rect x="288.0" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.decompress (1 samples, 0.06%)</title><rect x="288.0" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (2 samples, 0.12%)</title><rect x="288.7" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="291.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (2 samples, 0.12%)</title><rect x="288.7" y="579.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (2 samples, 0.12%)</title><rect x="288.7" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (2 samples, 0.12%)</title><rect x="288.7" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.7" y="558.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="288.7" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.7" y="542.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="288.7" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.7" y="526.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="288.7" y="499.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.7" y="510.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="288.7" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.7" y="494.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="288.7" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="291.7" y="478.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="288.7" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.06%)</title><rect x="289.4" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.4" y="542.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="289.4" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.4" y="526.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="289.4" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.4" y="510.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (1 samples, 0.06%)</title><rect x="289.4" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.4" y="494.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseContextSpec (1 samples, 0.06%)</title><rect x="289.4" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="289.4" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="289.4" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.4" y="446.0"></text>
</g>
<g>
<title>java/net/URL.openStream (2 samples, 0.12%)</title><rect x="290.1" y="627.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.1" y="638.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="290.1" y="611.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.1" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (1 samples, 0.06%)</title><rect x="290.1" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.1" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="290.1" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.1" y="590.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="290.1" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.1" y="574.0"></text>
</g>
<g>
<title>java/net/URLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="290.1" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.1" y="558.0"></text>
</g>
<g>
<title>java/net/URLConnection.getDefaultUseCaches (1 samples, 0.06%)</title><rect x="290.1" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.1" y="542.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="290.9" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.9" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="290.9" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.9" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="290.9" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.9" y="590.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="290.9" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.9" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (8 samples, 0.48%)</title><rect x="291.6" y="643.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (7 samples, 0.42%)</title><rect x="291.6" y="627.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.6" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (3 samples, 0.18%)</title><rect x="291.6" y="611.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.6" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.18%)</title><rect x="291.6" y="595.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.6" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (2 samples, 0.12%)</title><rect x="292.3" y="579.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.3" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (2 samples, 0.12%)</title><rect x="292.3" y="563.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (2 samples, 0.12%)</title><rect x="292.3" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (2 samples, 0.12%)</title><rect x="292.3" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (2 samples, 0.12%)</title><rect x="292.3" y="515.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.3" y="526.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (2 samples, 0.12%)</title><rect x="292.3" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.3" y="510.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (2 samples, 0.12%)</title><rect x="292.3" y="483.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.3" y="494.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (2 samples, 0.12%)</title><rect x="292.3" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.3" y="478.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (2 samples, 0.12%)</title><rect x="292.3" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.3" y="462.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (2 samples, 0.12%)</title><rect x="292.3" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.3" y="446.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (2 samples, 0.12%)</title><rect x="292.3" y="419.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.3" y="430.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.hashN (1 samples, 0.06%)</title><rect x="293.0" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (4 samples, 0.24%)</title><rect x="293.7" y="611.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (4 samples, 0.24%)</title><rect x="293.7" y="595.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="293.7" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.7" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="293.7" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="293.7" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="293.7" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="294.4" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="294.4" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="294.4" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="294.4" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="294.4" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="297.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="294.4" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.4" y="510.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="294.4" y="483.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="297.4" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="294.4" y="467.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="297.4" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="294.4" y="451.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="297.4" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="294.4" y="435.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="297.4" y="446.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="294.4" y="419.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="297.4" y="430.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.06%)</title><rect x="294.4" y="403.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="297.4" y="414.0"></text>
</g>
<g>
<title>OopMapStream::find_next() [clone .part.39] (1 samples, 0.06%)</title><rect x="294.4" y="387.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="297.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (2 samples, 0.12%)</title><rect x="295.1" y="579.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.hasClassPath (1 samples, 0.06%)</title><rect x="295.1" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="295.8" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.06%)</title><rect x="295.8" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.06%)</title><rect x="295.8" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.8" y="542.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="295.8" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.8" y="526.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="295.8" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.8" y="510.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="295.8" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.8" y="494.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="295.8" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.8" y="478.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="295.8" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.8" y="462.0"></text>
</g>
<g>
<title>java/util/zip/ZipCoder$UTF8.getBytes (1 samples, 0.06%)</title><rect x="295.8" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.8" y="446.0"></text>
</g>
<g>
<title>java/lang/System$2.getBytesUTF8NoRepl (1 samples, 0.06%)</title><rect x="295.8" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.getBytesUTF8NoRepl (1 samples, 0.06%)</title><rect x="295.8" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.06%)</title><rect x="295.8" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="295.8" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.8" y="382.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="295.8" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.8" y="366.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="296.5" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.5" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.06%)</title><rect x="296.5" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.5" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.06%)</title><rect x="296.5" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="296.5" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="296.5" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.5" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="296.5" y="547.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="299.5" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="296.5" y="531.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="299.5" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="296.5" y="515.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="299.5" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="296.5" y="499.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="299.5" y="510.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="296.5" y="483.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="299.5" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.12%)</title><rect x="297.2" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.2" y="654.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.12%)</title><rect x="297.2" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.2" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.12%)</title><rect x="297.2" y="611.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.2" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="297.2" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.2" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="297.2" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.2" y="590.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="297.2" y="563.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="300.2" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="297.9" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.9" y="606.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="297.9" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.9" y="590.0"></text>
</g>
<g>
<title>datadog/trace/util/Strings.getResourceName (1 samples, 0.06%)</title><rect x="298.6" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.endsWith (1 samples, 0.06%)</title><rect x="298.6" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="298.6" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="298.6" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.6" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (22 samples, 1.32%)</title><rect x="299.3" y="851.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (22 samples, 1.32%)</title><rect x="299.3" y="835.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.3" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (22 samples, 1.32%)</title><rect x="299.3" y="819.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (22 samples, 1.32%)</title><rect x="299.3" y="803.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (22 samples, 1.32%)</title><rect x="299.3" y="787.0" width="15.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (22 samples, 1.32%)</title><rect x="299.3" y="771.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (22 samples, 1.32%)</title><rect x="299.3" y="755.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (22 samples, 1.32%)</title><rect x="299.3" y="739.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (22 samples, 1.32%)</title><rect x="299.3" y="723.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (14 samples, 0.84%)</title><rect x="299.3" y="707.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.3" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (14 samples, 0.84%)</title><rect x="299.3" y="691.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.3" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (14 samples, 0.84%)</title><rect x="299.3" y="675.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.3" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (5 samples, 0.30%)</title><rect x="299.3" y="659.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (4 samples, 0.24%)</title><rect x="299.3" y="643.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.12%)</title><rect x="299.3" y="627.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.12%)</title><rect x="299.3" y="611.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (2 samples, 0.12%)</title><rect x="299.3" y="595.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.3" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="299.3" y="579.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.12%)</title><rect x="299.3" y="563.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.12%)</title><rect x="299.3" y="547.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (2 samples, 0.12%)</title><rect x="299.3" y="531.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (2 samples, 0.12%)</title><rect x="299.3" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (2 samples, 0.12%)</title><rect x="299.3" y="499.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (2 samples, 0.12%)</title><rect x="299.3" y="483.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getAttributes (1 samples, 0.06%)</title><rect x="299.3" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.decompress (1 samples, 0.06%)</title><rect x="299.3" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="300.0" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="300.0" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="300.0" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="300.0" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.12%)</title><rect x="300.8" y="627.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (2 samples, 0.12%)</title><rect x="300.8" y="611.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (2 samples, 0.12%)</title><rect x="300.8" y="595.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (2 samples, 0.12%)</title><rect x="300.8" y="579.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (2 samples, 0.12%)</title><rect x="300.8" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.8" y="574.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="300.8" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.8" y="558.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="300.8" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.8" y="542.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="300.8" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.8" y="526.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="300.8" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="303.8" y="510.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="300.8" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.8" y="494.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="300.8" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.06%)</title><rect x="301.5" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.5" y="558.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.5" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.5" y="542.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="301.5" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.5" y="526.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (1 samples, 0.06%)</title><rect x="301.5" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="301.5" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.5" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.06%)</title><rect x="301.5" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.5" y="478.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="302.2" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.2" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="302.2" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.2" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="302.2" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.2" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="302.2" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.2" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="302.2" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.2" y="590.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="302.2" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.2" y="574.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="302.2" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.2" y="558.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="302.2" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.2" y="542.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="302.2" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.06%)</title><rect x="302.2" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (1 samples, 0.06%)</title><rect x="302.2" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.encode (1 samples, 0.06%)</title><rect x="302.2" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.2" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (5 samples, 0.30%)</title><rect x="302.9" y="659.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (3 samples, 0.18%)</title><rect x="302.9" y="643.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (3 samples, 0.18%)</title><rect x="302.9" y="627.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (3 samples, 0.18%)</title><rect x="302.9" y="611.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (3 samples, 0.18%)</title><rect x="302.9" y="595.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.9" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.18%)</title><rect x="302.9" y="579.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.9" y="590.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.06%)</title><rect x="302.9" y="563.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="305.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.12%)</title><rect x="303.6" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.12%)</title><rect x="303.6" y="547.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="304.3" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.06%)</title><rect x="304.3" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="304.3" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="304.3" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getAttributes (1 samples, 0.06%)</title><rect x="304.3" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.decompress (1 samples, 0.06%)</title><rect x="304.3" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="304.3" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.06%)</title><rect x="304.3" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.3" y="430.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (2 samples, 0.12%)</title><rect x="305.0" y="643.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.0" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (2 samples, 0.12%)</title><rect x="305.0" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.0" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (2 samples, 0.12%)</title><rect x="305.0" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.06%)</title><rect x="305.0" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.06%)</title><rect x="305.0" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="305.0" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.06%)</title><rect x="305.0" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.06%)</title><rect x="305.0" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="305.0" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="305.0" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.0" y="510.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.06%)</title><rect x="305.7" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.7" y="606.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="305.7" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.7" y="590.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="305.7" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.7" y="574.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="305.7" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="305.7" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="305.7" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (4 samples, 0.24%)</title><rect x="306.4" y="659.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.4" y="670.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (3 samples, 0.18%)</title><rect x="307.1" y="643.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.1" y="654.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (3 samples, 0.18%)</title><rect x="307.1" y="627.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.1" y="638.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (3 samples, 0.18%)</title><rect x="307.1" y="611.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.1" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (3 samples, 0.18%)</title><rect x="307.1" y="595.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="307.1" y="579.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="310.1" y="590.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (2 samples, 0.12%)</title><rect x="307.1" y="563.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="310.1" y="574.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="308.5" y="579.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="311.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (8 samples, 0.48%)</title><rect x="309.2" y="707.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (6 samples, 0.36%)</title><rect x="309.2" y="691.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (6 samples, 0.36%)</title><rect x="309.2" y="675.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="309.2" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.getFirstAttributeOffset (1 samples, 0.06%)</title><rect x="310.0" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.18%)</title><rect x="310.7" y="659.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (2 samples, 0.12%)</title><rect x="310.7" y="643.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="311.4" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="311.4" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="314.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="312.1" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="312.1" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitAnnotation (1 samples, 0.06%)</title><rect x="312.8" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="312.8" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForByteCodeElement.&lt;init&gt; (1 samples, 0.06%)</title><rect x="312.8" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="312.8" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (2 samples, 0.12%)</title><rect x="313.5" y="691.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="313.5" y="675.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="313.5" y="659.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="313.5" y="643.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.06%)</title><rect x="314.2" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.24%)</title><rect x="314.9" y="851.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.24%)</title><rect x="314.9" y="835.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.24%)</title><rect x="314.9" y="819.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.9" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (3 samples, 0.18%)</title><rect x="314.9" y="803.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.9" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$Entry.&lt;init&gt; (1 samples, 0.06%)</title><rect x="314.9" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (1 samples, 0.06%)</title><rect x="314.9" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.9" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (2 samples, 0.12%)</title><rect x="315.6" y="787.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.6" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="315.6" y="771.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="318.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForLoadedTypes.size (1 samples, 0.06%)</title><rect x="316.3" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.size (1 samples, 0.06%)</title><rect x="317.0" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.0" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (8 samples, 0.48%)</title><rect x="317.7" y="867.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.7" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="318.4" y="851.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="321.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (3 samples, 0.18%)</title><rect x="319.1" y="851.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getSuperClass (2 samples, 0.12%)</title><rect x="319.1" y="835.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getSuperClass (2 samples, 0.12%)</title><rect x="319.1" y="819.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveSuperClass (2 samples, 0.12%)</title><rect x="319.1" y="803.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (2 samples, 0.12%)</title><rect x="319.1" y="787.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="319.1" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="322.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="319.1" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="319.9" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getType (1 samples, 0.06%)</title><rect x="319.9" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="322.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="319.9" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="320.6" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getSuperClass (2 samples, 0.12%)</title><rect x="321.3" y="851.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (2 samples, 0.12%)</title><rect x="321.3" y="835.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.3" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getSuperClass (1 samples, 0.06%)</title><rect x="322.0" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getSuperClass (1 samples, 0.06%)</title><rect x="322.0" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveSuperClass (1 samples, 0.06%)</title><rect x="322.0" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="322.0" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="322.0" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="322.0" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="322.0" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.0" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="322.0" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.0" y="718.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.06%)</title><rect x="322.0" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.06%)</title><rect x="322.0" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.06%)</title><rect x="322.0" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.0" y="670.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.06%)</title><rect x="322.0" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="325.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="322.0" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.06%)</title><rect x="322.0" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="322.7" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="322.7" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.7" y="846.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="322.7" y="819.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="325.7" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="322.7" y="803.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="325.7" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="322.7" y="787.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="325.7" y="798.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.18%)</title><rect x="323.4" y="867.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="326.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.asGenericType (2 samples, 0.12%)</title><rect x="325.5" y="867.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.5" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="326.9" y="899.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="329.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (27 samples, 1.62%)</title><rect x="327.6" y="899.0" width="19.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.6" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="327.6" y="883.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="330.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (26 samples, 1.56%)</title><rect x="328.3" y="883.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (23 samples, 1.38%)</title><rect x="330.5" y="867.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (23 samples, 1.38%)</title><rect x="330.5" y="851.0" width="16.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.5" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="330.5" y="835.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="333.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (4 samples, 0.24%)</title><rect x="331.2" y="835.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.2" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="331.9" y="819.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="334.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getModifiers (2 samples, 0.12%)</title><rect x="332.6" y="819.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (18 samples, 1.08%)</title><rect x="334.0" y="835.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (18 samples, 1.08%)</title><rect x="334.0" y="819.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.0" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (4 samples, 0.24%)</title><rect x="334.0" y="803.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.0" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (4 samples, 0.24%)</title><rect x="334.0" y="787.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.0" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (4 samples, 0.24%)</title><rect x="334.0" y="771.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.0" y="782.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putIfAbsent (1 samples, 0.06%)</title><rect x="334.0" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.0" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putVal (1 samples, 0.06%)</title><rect x="334.0" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.0" y="750.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.06%)</title><rect x="334.0" y="723.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="337.0" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (3 samples, 0.18%)</title><rect x="334.7" y="755.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.7" y="766.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (3 samples, 0.18%)</title><rect x="334.7" y="739.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.7" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (3 samples, 0.18%)</title><rect x="334.7" y="723.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.7" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (3 samples, 0.18%)</title><rect x="334.7" y="707.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.7" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (2 samples, 0.12%)</title><rect x="334.7" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="337.7" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.evict (2 samples, 0.12%)</title><rect x="334.7" y="675.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.7" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.remove (1 samples, 0.06%)</title><rect x="334.7" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.7" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.replaceNode (1 samples, 0.06%)</title><rect x="334.7" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.7" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.poll (1 samples, 0.06%)</title><rect x="335.4" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.4" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.pollFirst (1 samples, 0.06%)</title><rect x="335.4" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.4" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.unlinkFirst (1 samples, 0.06%)</title><rect x="335.4" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.4" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.setNext (1 samples, 0.06%)</title><rect x="335.4" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.4" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.setNext (1 samples, 0.06%)</title><rect x="335.4" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.06%)</title><rect x="336.1" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.updateHead (1 samples, 0.06%)</title><rect x="336.1" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="336.1" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="336.1" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (14 samples, 0.84%)</title><rect x="336.8" y="803.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="339.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (14 samples, 0.84%)</title><rect x="336.8" y="787.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (13 samples, 0.78%)</title><rect x="336.8" y="771.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (9 samples, 0.54%)</title><rect x="336.8" y="755.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (9 samples, 0.54%)</title><rect x="336.8" y="739.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.06%)</title><rect x="337.5" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="337.5" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visitArray (1 samples, 0.06%)</title><rect x="337.5" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.5" y="702.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbbb0000)@0x00007f30246acc80 (1 samples, 0.06%)</title><rect x="337.5" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (2 samples, 0.12%)</title><rect x="338.2" y="723.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readTypeAnnotationTarget (1 samples, 0.06%)</title><rect x="338.2" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (1 samples, 0.06%)</title><rect x="339.0" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="339.0" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="339.0" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="339.0" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="339.0" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.0" y="654.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="339.0" y="627.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="342.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readInt (1 samples, 0.06%)</title><rect x="339.7" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.18%)</title><rect x="340.4" y="723.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.06%)</title><rect x="340.4" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.&lt;init&gt; (1 samples, 0.06%)</title><rect x="340.4" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (2 samples, 0.12%)</title><rect x="341.1" y="707.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (2 samples, 0.12%)</title><rect x="341.1" y="691.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.1" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="341.1" y="675.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="344.1" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="341.1" y="659.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="344.1" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="341.1" y="643.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="344.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="341.1" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="344.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="341.1" y="611.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="344.1" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="341.1" y="595.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="344.1" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="341.1" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="344.1" y="590.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="341.1" y="563.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="344.1" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.06%)</title><rect x="341.1" y="547.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="344.1" y="558.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="341.1" y="531.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="344.1" y="542.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.06%)</title><rect x="341.1" y="515.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="344.1" y="526.0"></text>
</g>
<g>
<title>G1Analytics::predict_young_other_time_ms(unsigned long) const (1 samples, 0.06%)</title><rect x="341.1" y="499.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="344.1" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="341.8" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="341.8" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="341.8" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="342.5" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (4 samples, 0.24%)</title><rect x="343.2" y="755.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (4 samples, 0.24%)</title><rect x="343.2" y="739.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="344.6" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.06%)</title><rect x="344.6" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="345.3" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="345.3" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="345.3" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="345.3" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.3" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="345.3" y="659.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="348.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Resolution$Simple.&lt;init&gt; (1 samples, 0.06%)</title><rect x="346.0" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (4 samples, 0.24%)</title><rect x="346.7" y="915.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (3 samples, 0.18%)</title><rect x="347.4" y="899.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.4" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="347.4" y="883.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="350.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.12%)</title><rect x="348.2" y="883.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NullMatcher.matches (1 samples, 0.06%)</title><rect x="348.9" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (10 samples, 0.60%)</title><rect x="349.6" y="963.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.6" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (1 samples, 0.06%)</title><rect x="349.6" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (8 samples, 0.48%)</title><rect x="350.3" y="947.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.3" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.06%)</title><rect x="350.3" y="931.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="353.3" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="350.3" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="353.3" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="350.3" y="899.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="353.3" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="350.3" y="883.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="353.3" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::extract_attached_method(vframeStream&amp;) (1 samples, 0.06%)</title><rect x="350.3" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="353.3" y="878.0"></text>
</g>
<g>
<title>CompiledMethod::attached_method_before_pc(unsigned char*) (1 samples, 0.06%)</title><rect x="350.3" y="851.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="353.3" y="862.0"></text>
</g>
<g>
<title>opt_virtual_call_Relocation::unpack_data() (1 samples, 0.06%)</title><rect x="350.3" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="353.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (7 samples, 0.42%)</title><rect x="351.0" y="931.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$SkipClassLoaderMatcher.matches (1 samples, 0.06%)</title><rect x="353.8" y="915.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.8" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$SkipClassLoaderMatcher.matches (1 samples, 0.06%)</title><rect x="353.8" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.8" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.getIfPresent (1 samples, 0.06%)</title><rect x="353.8" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.8" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.getIfPresent (1 samples, 0.06%)</title><rect x="353.8" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.8" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.getIfPresent (1 samples, 0.06%)</title><rect x="353.8" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.8" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterRead (1 samples, 0.06%)</title><rect x="353.8" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.8" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (1 samples, 0.06%)</title><rect x="353.8" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (1 samples, 0.06%)</title><rect x="353.8" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.8" y="814.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.06%)</title><rect x="353.8" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.8" y="798.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.06%)</title><rect x="353.8" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="782.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.&lt;init&gt; (1 samples, 0.06%)</title><rect x="353.8" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.8" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (2 samples, 0.12%)</title><rect x="354.5" y="915.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.5" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (2 samples, 0.12%)</title><rect x="354.5" y="899.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.5" y="910.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.matches (1 samples, 0.06%)</title><rect x="355.2" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.2" y="894.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.match (1 samples, 0.06%)</title><rect x="355.2" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.2" y="878.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Begin.match (1 samples, 0.06%)</title><rect x="355.2" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.2" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Slice.match (1 samples, 0.06%)</title><rect x="355.2" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="355.9" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="355.9" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (17 samples, 1.02%)</title><rect x="356.6" y="963.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$PoolStrategy$Default.typePool (1 samples, 0.06%)</title><rect x="356.6" y="947.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$CacheProvider$Simple.withObjectType (1 samples, 0.06%)</title><rect x="356.6" y="931.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$CacheProvider$Simple.register (1 samples, 0.06%)</title><rect x="356.6" y="915.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="356.6" y="899.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.06%)</title><rect x="356.6" y="883.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.initTable (1 samples, 0.06%)</title><rect x="356.6" y="867.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (16 samples, 0.96%)</title><rect x="357.4" y="947.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (16 samples, 0.96%)</title><rect x="357.4" y="931.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (16 samples, 0.96%)</title><rect x="357.4" y="915.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (5 samples, 0.30%)</title><rect x="357.4" y="899.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (5 samples, 0.30%)</title><rect x="357.4" y="883.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (5 samples, 0.30%)</title><rect x="357.4" y="867.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (5 samples, 0.30%)</title><rect x="357.4" y="851.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.06%)</title><rect x="357.4" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="357.4" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory.make (1 samples, 0.06%)</title><rect x="357.4" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.06%)</title><rect x="357.4" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="357.4" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="357.4" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="357.4" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="357.4" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.06%)</title><rect x="357.4" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForExitValue$Factory.of (1 samples, 0.06%)</title><rect x="358.1" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.1" y="846.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x00007f30246a9e00 (1 samples, 0.06%)</title><rect x="358.1" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (3 samples, 0.18%)</title><rect x="358.8" y="835.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (2 samples, 0.12%)</title><rect x="359.5" y="819.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (2 samples, 0.12%)</title><rect x="359.5" y="803.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (2 samples, 0.12%)</title><rect x="359.5" y="787.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.12%)</title><rect x="359.5" y="771.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="359.5" y="755.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.12%)</title><rect x="359.5" y="739.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.12%)</title><rect x="359.5" y="723.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="359.5" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="359.5" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="359.5" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.5" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="359.5" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.5" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="359.5" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="359.5" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="359.5" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="359.5" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="359.5" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI.toURL (1 samples, 0.06%)</title><rect x="359.5" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.5" y="574.0"></text>
</g>
<g>
<title>java/net/URL.fromURI (1 samples, 0.06%)</title><rect x="359.5" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.5" y="558.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="359.5" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.5" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="360.2" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="360.2" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="360.2" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="363.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="360.2" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="360.2" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (1 samples, 0.06%)</title><rect x="360.9" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (1 samples, 0.06%)</title><rect x="360.9" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.06%)</title><rect x="360.9" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (6 samples, 0.36%)</title><rect x="361.6" y="899.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (2 samples, 0.12%)</title><rect x="361.6" y="883.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (2 samples, 0.12%)</title><rect x="361.6" y="867.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="361.6" y="851.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.12%)</title><rect x="361.6" y="835.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (2 samples, 0.12%)</title><rect x="361.6" y="819.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (2 samples, 0.12%)</title><rect x="361.6" y="803.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (2 samples, 0.12%)</title><rect x="361.6" y="787.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (2 samples, 0.12%)</title><rect x="361.6" y="771.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (2 samples, 0.12%)</title><rect x="361.6" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.12%)</title><rect x="361.6" y="739.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="361.6" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.12%)</title><rect x="361.6" y="707.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.12%)</title><rect x="361.6" y="691.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.12%)</title><rect x="361.6" y="675.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (2 samples, 0.12%)</title><rect x="361.6" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (2 samples, 0.12%)</title><rect x="361.6" y="643.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.6" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="361.6" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="361.6" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.6" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="361.6" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.6" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="361.6" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.6" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="361.6" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.6" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="361.6" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="361.6" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (1 samples, 0.06%)</title><rect x="361.6" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.6" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.06%)</title><rect x="361.6" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="362.3" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.3" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="362.3" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.3" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="362.3" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.3" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="362.3" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.3" y="590.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="362.3" y="563.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="365.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.06%)</title><rect x="363.0" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.0" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDefaultValue (1 samples, 0.06%)</title><rect x="363.0" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.0" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDefaultValue (1 samples, 0.06%)</title><rect x="363.0" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.0" y="862.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.06%)</title><rect x="363.0" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.0" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.06%)</title><rect x="363.0" y="819.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="366.0" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.06%)</title><rect x="363.0" y="803.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="366.0" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="363.0" y="787.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="366.0" y="798.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.06%)</title><rect x="363.0" y="771.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="366.0" y="782.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="363.0" y="755.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="366.0" y="766.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="363.0" y="739.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="366.0" y="750.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="363.0" y="723.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="366.0" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="363.0" y="707.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="366.0" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="363.0" y="691.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="366.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (3 samples, 0.18%)</title><rect x="363.7" y="883.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (3 samples, 0.18%)</title><rect x="363.7" y="867.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (3 samples, 0.18%)</title><rect x="363.7" y="851.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (3 samples, 0.18%)</title><rect x="363.7" y="835.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (3 samples, 0.18%)</title><rect x="363.7" y="819.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.18%)</title><rect x="363.7" y="803.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.18%)</title><rect x="363.7" y="787.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.18%)</title><rect x="363.7" y="771.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.12%)</title><rect x="363.7" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.7" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="363.7" y="739.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="366.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="364.4" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="364.4" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.4" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="364.4" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="364.4" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.4" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="364.4" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="365.1" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="365.1" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="365.1" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.06%)</title><rect x="365.1" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="365.1" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visitEnum (1 samples, 0.06%)</title><rect x="365.1" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase.register (1 samples, 0.06%)</title><rect x="365.1" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="365.1" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="365.1" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="365.1" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (4 samples, 0.24%)</title><rect x="365.8" y="899.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (4 samples, 0.24%)</title><rect x="365.8" y="883.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 0.24%)</title><rect x="365.8" y="867.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.24%)</title><rect x="365.8" y="851.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.24%)</title><rect x="365.8" y="835.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (3 samples, 0.18%)</title><rect x="365.8" y="819.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (3 samples, 0.18%)</title><rect x="365.8" y="803.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (3 samples, 0.18%)</title><rect x="365.8" y="787.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.8" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (2 samples, 0.12%)</title><rect x="365.8" y="771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.8" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (2 samples, 0.12%)</title><rect x="365.8" y="755.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.8" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.12%)</title><rect x="365.8" y="739.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.8" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="365.8" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="365.8" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.8" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="365.8" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.8" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="365.8" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.8" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="365.8" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.8" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="365.8" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="368.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="365.8" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.06%)</title><rect x="365.8" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.8" y="622.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="365.8" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.8" y="606.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.06%)</title><rect x="365.8" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="368.8" y="590.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="365.8" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.8" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="366.5" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.5" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="366.5" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.5" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="366.5" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.5" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="366.5" y="675.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="366.5" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.06%)</title><rect x="366.5" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.5" y="654.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="366.5" y="627.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.5" y="638.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.06%)</title><rect x="366.5" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.5" y="622.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.06%)</title><rect x="366.5" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.5" y="606.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.06%)</title><rect x="366.5" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.5" y="590.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.06%)</title><rect x="366.5" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.5" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.06%)</title><rect x="366.5" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.5" y="558.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.06%)</title><rect x="366.5" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.5" y="542.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.06%)</title><rect x="366.5" y="515.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="369.5" y="526.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.hashN (1 samples, 0.06%)</title><rect x="366.5" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="367.3" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.3" y="782.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="367.3" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.3" y="766.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="367.3" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="370.3" y="750.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="367.3" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.3" y="734.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="367.3" y="707.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="370.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="368.0" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="368.0" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="368.0" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="368.0" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readParameterAnnotations (1 samples, 0.06%)</title><rect x="368.0" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.06%)</title><rect x="368.0" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="368.0" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.0" y="734.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="368.0" y="707.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="371.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (47 samples, 2.82%)</title><rect x="368.7" y="963.0" width="33.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.7" y="974.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (19 samples, 1.14%)</title><rect x="368.7" y="947.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (9 samples, 0.54%)</title><rect x="368.7" y="931.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (9 samples, 0.54%)</title><rect x="368.7" y="915.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (2 samples, 0.12%)</title><rect x="368.7" y="899.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.06%)</title><rect x="368.7" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="368.7" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.7" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="368.7" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="368.7" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeToken.equals (1 samples, 0.06%)</title><rect x="368.7" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.7" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.06%)</title><rect x="368.7" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="368.7" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ArrayProjection.getName (1 samples, 0.06%)</title><rect x="368.7" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType.getDescriptor (1 samples, 0.06%)</title><rect x="368.7" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="368.7" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.7" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="368.7" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.7" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="368.7" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (1 samples, 0.06%)</title><rect x="369.4" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.06%)</title><rect x="369.4" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="369.4" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="369.4" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="369.4" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeToken.hashCode (1 samples, 0.06%)</title><rect x="369.4" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (7 samples, 0.42%)</title><rect x="370.1" y="899.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (2 samples, 0.12%)</title><rect x="370.1" y="883.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (2 samples, 0.12%)</title><rect x="370.1" y="867.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.1" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="370.1" y="851.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="373.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod.harmonize (1 samples, 0.06%)</title><rect x="370.8" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod.harmonize (1 samples, 0.06%)</title><rect x="370.8" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token.&lt;init&gt; (1 samples, 0.06%)</title><rect x="370.8" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.8" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (1 samples, 0.06%)</title><rect x="370.8" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.8" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="370.8" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyTypeList.get (1 samples, 0.06%)</title><rect x="370.8" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyTypeList.get (1 samples, 0.06%)</title><rect x="370.8" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="370.8" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="370.8" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="370.8" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.8" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="370.8" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.06%)</title><rect x="370.8" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.06%)</title><rect x="370.8" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.06%)</title><rect x="370.8" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.06%)</title><rect x="370.8" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.8" y="638.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="370.8" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.06%)</title><rect x="370.8" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.8" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="371.5" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="371.5" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="371.5" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="371.5" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="371.5" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="371.5" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodSortMatcher.matches (1 samples, 0.06%)</title><rect x="371.5" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodSortMatcher.matches (1 samples, 0.06%)</title><rect x="371.5" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodSortMatcher$Sort$4.isSort (1 samples, 0.06%)</title><rect x="371.5" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isVirtual (1 samples, 0.06%)</title><rect x="371.5" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.isConstructor (1 samples, 0.06%)</title><rect x="371.5" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.5" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="371.5" y="707.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="374.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (4 samples, 0.24%)</title><rect x="372.2" y="883.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.06%)</title><rect x="372.2" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="375.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying$1.onNonGenericType (1 samples, 0.06%)</title><rect x="372.2" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying.onNonGenericType (1 samples, 0.06%)</title><rect x="372.2" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.06%)</title><rect x="372.2" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaringType (1 samples, 0.06%)</title><rect x="372.2" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getDeclaringType (1 samples, 0.06%)</title><rect x="372.2" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaringClass (1 samples, 0.06%)</title><rect x="372.2" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaringClass0 (1 samples, 0.06%)</title><rect x="372.2" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.2" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="372.2" y="739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="375.2" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="372.2" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="375.2" y="734.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="372.2" y="707.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="375.2" y="718.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="372.2" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="375.2" y="702.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.06%)</title><rect x="372.2" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="375.2" y="686.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.06%)</title><rect x="372.2" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="375.2" y="670.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::create_native_wrapper(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="372.2" y="643.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="375.2" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::generate_native_wrapper(MacroAssembler*, methodHandle const&amp;, int, BasicType*, VMRegPair*, BasicType, unsigned char*) (1 samples, 0.06%)</title><rect x="372.2" y="627.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="375.2" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::save_native_result(MacroAssembler*, BasicType, int) (1 samples, 0.06%)</title><rect x="372.2" y="611.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="375.2" y="622.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="372.2" y="595.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="375.2" y="606.0"></text>
</g>
<g>
<title>Assembler::prefixq(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="372.2" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="375.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (3 samples, 0.18%)</title><rect x="372.9" y="867.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (3 samples, 0.18%)</title><rect x="372.9" y="851.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="372.9" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.06%)</title><rect x="372.9" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.06%)</title><rect x="372.9" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="372.9" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.9" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="372.9" y="771.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="375.9" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="372.9" y="755.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="375.9" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="372.9" y="739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="375.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (2 samples, 0.12%)</title><rect x="373.6" y="835.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.06%)</title><rect x="373.6" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying$1.onNonGenericType (1 samples, 0.06%)</title><rect x="373.6" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying.onNonGenericType (1 samples, 0.06%)</title><rect x="373.6" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.06%)</title><rect x="373.6" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.06%)</title><rect x="373.6" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="374.3" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="374.3" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="374.3" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.06%)</title><rect x="374.3" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="374.3" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="374.3" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="377.3" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.06%)</title><rect x="374.3" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$TypeSubstituting.size (1 samples, 0.06%)</title><rect x="374.3" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable.size (1 samples, 0.06%)</title><rect x="374.3" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm.getParameterCount (1 samples, 0.06%)</title><rect x="374.3" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.resolve (1 samples, 0.06%)</title><rect x="375.0" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isFinal (1 samples, 0.06%)</title><rect x="375.0" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.of (1 samples, 0.06%)</title><rect x="375.0" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.0" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 0.30%)</title><rect x="375.7" y="931.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 0.30%)</title><rect x="375.7" y="915.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (3 samples, 0.18%)</title><rect x="375.7" y="899.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (3 samples, 0.18%)</title><rect x="375.7" y="883.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (3 samples, 0.18%)</title><rect x="375.7" y="867.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (3 samples, 0.18%)</title><rect x="375.7" y="851.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (3 samples, 0.18%)</title><rect x="375.7" y="835.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (3 samples, 0.18%)</title><rect x="375.7" y="819.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (3 samples, 0.18%)</title><rect x="375.7" y="803.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (3 samples, 0.18%)</title><rect x="375.7" y="787.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="378.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (2 samples, 0.12%)</title><rect x="375.7" y="771.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (2 samples, 0.12%)</title><rect x="375.7" y="755.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.12%)</title><rect x="375.7" y="739.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.12%)</title><rect x="375.7" y="723.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="375.7" y="707.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.7" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (2 samples, 0.12%)</title><rect x="375.7" y="691.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.7" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="375.7" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.7" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="375.7" y="659.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.7" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.06%)</title><rect x="375.7" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.7" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.06%)</title><rect x="375.7" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.06%)</title><rect x="375.7" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="375.7" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.7" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.&lt;init&gt; (1 samples, 0.06%)</title><rect x="376.5" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.06%)</title><rect x="377.2" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.06%)</title><rect x="377.2" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="377.2" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="377.2" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="377.2" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="377.2" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="377.2" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="377.2" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="377.2" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="377.2" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="377.2" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="377.2" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="377.2" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="377.2" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="377.2" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="899.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="883.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="867.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="851.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="835.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="819.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="803.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="787.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="755.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="739.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.12%)</title><rect x="377.9" y="723.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (2 samples, 0.12%)</title><rect x="377.9" y="707.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (2 samples, 0.12%)</title><rect x="377.9" y="691.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (2 samples, 0.12%)</title><rect x="377.9" y="675.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.12%)</title><rect x="377.9" y="659.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.12%)</title><rect x="377.9" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="377.9" y="627.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.12%)</title><rect x="377.9" y="611.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.12%)</title><rect x="377.9" y="595.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.12%)</title><rect x="377.9" y="579.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.9" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.12%)</title><rect x="377.9" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.9" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.12%)</title><rect x="377.9" y="547.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.9" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="377.9" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.9" y="542.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="377.9" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.9" y="526.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.06%)</title><rect x="377.9" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.06%)</title><rect x="377.9" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.06%)</title><rect x="377.9" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getBufferBytes (1 samples, 0.06%)</title><rect x="377.9" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.9" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.06%)</title><rect x="377.9" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="377.9" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.06%)</title><rect x="377.9" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory0 (1 samples, 0.06%)</title><rect x="377.9" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.9" y="398.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="377.9" y="371.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="380.9" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="378.6" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.6" y="542.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.06%)</title><rect x="378.6" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.6" y="526.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="378.6" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.6" y="510.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="378.6" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.6" y="494.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="378.6" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="378.6" y="451.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="381.6" y="462.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="378.6" y="435.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="381.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (4 samples, 0.24%)</title><rect x="379.3" y="931.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (4 samples, 0.24%)</title><rect x="379.3" y="915.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (4 samples, 0.24%)</title><rect x="379.3" y="899.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (4 samples, 0.24%)</title><rect x="379.3" y="883.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="867.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="851.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="835.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="819.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="803.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="787.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="771.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="755.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="739.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="723.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="707.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (4 samples, 0.24%)</title><rect x="379.3" y="691.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (4 samples, 0.24%)</title><rect x="379.3" y="675.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (4 samples, 0.24%)</title><rect x="379.3" y="659.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (4 samples, 0.24%)</title><rect x="379.3" y="643.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (4 samples, 0.24%)</title><rect x="379.3" y="627.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (4 samples, 0.24%)</title><rect x="379.3" y="611.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 0.24%)</title><rect x="379.3" y="595.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 0.24%)</title><rect x="379.3" y="579.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 0.24%)</title><rect x="379.3" y="563.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (4 samples, 0.24%)</title><rect x="379.3" y="547.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.3" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (4 samples, 0.24%)</title><rect x="379.3" y="531.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.3" y="542.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (4 samples, 0.24%)</title><rect x="379.3" y="515.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.3" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (2 samples, 0.12%)</title><rect x="379.3" y="499.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.3" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="379.3" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="379.3" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="379.3" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.06%)</title><rect x="379.3" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.3" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="379.3" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="379.3" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.06%)</title><rect x="379.3" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="398.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.06%)</title><rect x="380.0" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.0" y="494.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="380.0" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.0" y="478.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="380.0" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.0" y="462.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="380.0" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.0" y="446.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="380.0" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.0" y="430.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="380.0" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.0" y="414.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="380.0" y="387.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.0" y="398.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="380.0" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.0" y="382.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="380.0" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.06%)</title><rect x="380.0" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.06%)</title><rect x="380.0" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.0" y="334.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.06%)</title><rect x="380.0" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.0" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.12%)</title><rect x="380.7" y="499.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.7" y="510.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.12%)</title><rect x="380.7" y="483.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.7" y="494.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.12%)</title><rect x="380.7" y="467.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.7" y="478.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.12%)</title><rect x="380.7" y="451.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.7" y="462.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.12%)</title><rect x="380.7" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="380.7" y="419.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="383.7" y="430.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="380.7" y="403.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="383.7" y="414.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.06%)</title><rect x="381.4" y="419.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="384.4" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (27 samples, 1.62%)</title><rect x="382.1" y="947.0" width="19.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (27 samples, 1.62%)</title><rect x="382.1" y="931.0" width="19.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing.writeTo (2 samples, 0.12%)</title><rect x="382.8" y="915.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.&lt;init&gt; (2 samples, 0.12%)</title><rect x="382.8" y="899.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isNestHost (1 samples, 0.06%)</title><rect x="382.8" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="382.8" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getSort (1 samples, 0.06%)</title><rect x="382.8" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="383.5" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.5" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="383.5" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyNestMemberList.get (1 samples, 0.06%)</title><rect x="383.5" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyNestMemberList.get (1 samples, 0.06%)</title><rect x="383.5" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (24 samples, 1.44%)</title><rect x="384.2" y="915.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (24 samples, 1.44%)</title><rect x="384.2" y="899.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (3 samples, 0.18%)</title><rect x="384.2" y="883.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (3 samples, 0.18%)</title><rect x="384.2" y="867.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (3 samples, 0.18%)</title><rect x="384.2" y="851.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="384.2" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="384.2" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="384.2" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.2" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="384.2" y="787.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="387.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (2 samples, 0.12%)</title><rect x="384.9" y="835.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="384.9" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getType (1 samples, 0.06%)</title><rect x="384.9" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.06%)</title><rect x="384.9" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="384.9" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="384.9" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="384.9" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="384.9" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getType (1 samples, 0.06%)</title><rect x="384.9" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.06%)</title><rect x="384.9" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.06%)</title><rect x="384.9" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.9" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="384.9" y="659.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="387.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getDescriptor (1 samples, 0.06%)</title><rect x="385.6" y="819.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.06%)</title><rect x="385.6" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="385.6" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="388.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="385.6" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="385.6" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.6" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="385.6" y="739.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="388.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (20 samples, 1.20%)</title><rect x="386.4" y="883.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (19 samples, 1.14%)</title><rect x="386.4" y="867.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (2 samples, 0.12%)</title><rect x="388.5" y="851.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (2 samples, 0.12%)</title><rect x="388.5" y="835.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling.onUserReturn (1 samples, 0.06%)</title><rect x="388.5" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.06%)</title><rect x="389.2" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="389.2" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="389.2" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="389.2" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="392.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.06%)</title><rect x="389.2" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (11 samples, 0.66%)</title><rect x="389.9" y="851.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (11 samples, 0.66%)</title><rect x="389.9" y="835.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (11 samples, 0.66%)</title><rect x="389.9" y="819.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="392.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (11 samples, 0.66%)</title><rect x="389.9" y="803.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (8 samples, 0.48%)</title><rect x="389.9" y="787.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (8 samples, 0.48%)</title><rect x="389.9" y="771.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="392.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (8 samples, 0.48%)</title><rect x="389.9" y="755.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (8 samples, 0.48%)</title><rect x="389.9" y="739.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (3 samples, 0.18%)</title><rect x="389.9" y="723.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.apply (3 samples, 0.18%)</title><rect x="389.9" y="707.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType.doApply (2 samples, 0.12%)</title><rect x="389.9" y="691.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.doApply (2 samples, 0.12%)</title><rect x="389.9" y="675.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference.resolve (2 samples, 0.12%)</title><rect x="389.9" y="659.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/primitive/VoidAwareAssigner.assign (2 samples, 0.12%)</title><rect x="389.9" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveTypeAwareAssigner.assign (2 samples, 0.12%)</title><rect x="389.9" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/reference/ReferenceTypeAwareAssigner.assign (2 samples, 0.12%)</title><rect x="389.9" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (2 samples, 0.12%)</title><rect x="389.9" y="595.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (2 samples, 0.12%)</title><rect x="389.9" y="579.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.06%)</title><rect x="389.9" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.06%)</title><rect x="390.6" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.06%)</title><rect x="390.6" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.6" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.06%)</title><rect x="390.6" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="390.6" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="390.6" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="390.6" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="390.6" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="390.6" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="390.6" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="390.6" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="393.6" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="390.6" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.6" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="390.6" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.6" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="390.6" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.6" y="382.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="390.6" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.6" y="366.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="390.6" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.6" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="390.6" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.6" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="390.6" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.6" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="390.6" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.6" y="302.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.06%)</title><rect x="390.6" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.06%)</title><rect x="390.6" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.06%)</title><rect x="390.6" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.6" y="254.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="390.6" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.6" y="238.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.doApply (1 samples, 0.06%)</title><rect x="391.3" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference.resolve (1 samples, 0.06%)</title><rect x="391.3" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/primitive/VoidAwareAssigner.assign (1 samples, 0.06%)</title><rect x="391.3" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveTypeAwareAssigner.assign (1 samples, 0.06%)</title><rect x="391.3" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/reference/ReferenceTypeAwareAssigner.assign (1 samples, 0.06%)</title><rect x="391.3" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (1 samples, 0.06%)</title><rect x="391.3" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.06%)</title><rect x="391.3" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.06%)</title><rect x="391.3" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.06%)</title><rect x="391.3" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.06%)</title><rect x="391.3" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.3" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.06%)</title><rect x="391.3" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.3" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="391.3" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="391.3" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.3" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="391.3" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.3" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="391.3" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.3" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="391.3" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.3" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="391.3" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.3" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="391.3" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.3" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="391.3" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.3" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="391.3" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.3" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitAnnotationDefault (1 samples, 0.06%)</title><rect x="391.3" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.3" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForArrayType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="391.3" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.3" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="391.3" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.3" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (1 samples, 0.06%)</title><rect x="391.3" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.3" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (1 samples, 0.06%)</title><rect x="391.3" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.3" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (5 samples, 0.30%)</title><rect x="392.0" y="723.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitInsn (1 samples, 0.06%)</title><rect x="392.7" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitInsn (1 samples, 0.06%)</title><rect x="392.7" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitJumpInsn (1 samples, 0.06%)</title><rect x="392.7" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitJumpInsn (1 samples, 0.06%)</title><rect x="392.7" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitJumpInsn (1 samples, 0.06%)</title><rect x="392.7" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitJumpInsn (1 samples, 0.06%)</title><rect x="392.7" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/FramePaddingMethodVisitor.visitJumpInsn (1 samples, 0.06%)</title><rect x="392.7" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitJumpInsn (1 samples, 0.06%)</title><rect x="392.7" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (2 samples, 0.12%)</title><rect x="393.4" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (2 samples, 0.12%)</title><rect x="393.4" y="691.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitMethodInsn (2 samples, 0.12%)</title><rect x="393.4" y="675.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/FramePaddingMethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.4" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1$1.visitMethodInsn (1 samples, 0.06%)</title><rect x="393.4" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitInsn (1 samples, 0.06%)</title><rect x="393.4" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.4" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitInsn (1 samples, 0.06%)</title><rect x="393.4" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="396.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentsAndReturnSizes (1 samples, 0.06%)</title><rect x="394.1" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="394.1" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="394.1" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="394.8" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="394.8" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/collection/ArrayFactory$ArrayStackManipulation.apply (1 samples, 0.06%)</title><rect x="394.8" y="675.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="394.8" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.8" y="670.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="394.8" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.8" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="394.8" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.8" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="394.8" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.8" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="394.8" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.8" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="394.8" y="579.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.8" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="394.8" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="394.8" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.06%)</title><rect x="394.8" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.8" y="542.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.06%)</title><rect x="394.8" y="515.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="397.8" y="526.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.06%)</title><rect x="394.8" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.8" y="510.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.06%)</title><rect x="394.8" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="394.8" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="394.8" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.8" y="462.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="394.8" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.8" y="446.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="394.8" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.8" y="430.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="394.8" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="394.8" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="394.8" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="394.8" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="394.8" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.8" y="350.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="394.8" y="323.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="397.8" y="334.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="394.8" y="307.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="397.8" y="318.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="394.8" y="291.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="397.8" y="302.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="394.8" y="275.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="397.8" y="286.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.06%)</title><rect x="394.8" y="259.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="397.8" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.prepare (3 samples, 0.18%)</title><rect x="395.6" y="787.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.18%)</title><rect x="395.6" y="771.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="396.3" y="755.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="396.3" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.06%)</title><rect x="396.3" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readConst (1 samples, 0.06%)</title><rect x="396.3" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="396.3" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="396.3" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="396.3" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="396.3" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="396.3" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="396.3" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="399.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.06%)</title><rect x="397.0" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMaxs (1 samples, 0.06%)</title><rect x="397.7" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMaxs (1 samples, 0.06%)</title><rect x="397.7" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitMaxs (1 samples, 0.06%)</title><rect x="397.7" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.computeMaxStackAndLocal (1 samples, 0.06%)</title><rect x="397.7" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="398.4" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="398.4" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitTryCatchBlock (1 samples, 0.06%)</title><rect x="398.4" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantClass (1 samples, 0.06%)</title><rect x="398.4" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8Reference (1 samples, 0.06%)</title><rect x="398.4" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitFieldInsn (1 samples, 0.06%)</title><rect x="399.1" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.06%)</title><rect x="399.8" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.06%)</title><rect x="399.8" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.06%)</title><rect x="399.8" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.matches (1 samples, 0.06%)</title><rect x="399.8" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="399.8" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="399.8" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.06%)</title><rect x="399.8" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitOuterClass (1 samples, 0.06%)</title><rect x="400.5" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitOuterClass (1 samples, 0.06%)</title><rect x="400.5" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onOuterType (1 samples, 0.06%)</title><rect x="400.5" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingMethod (1 samples, 0.06%)</title><rect x="400.5" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingMethod (1 samples, 0.06%)</title><rect x="400.5" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getEnclosingMethod (1 samples, 0.06%)</title><rect x="400.5" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod.getEnclosingMethod (1 samples, 0.06%)</title><rect x="400.5" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.06%)</title><rect x="400.5" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="400.5" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="403.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="400.5" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="400.5" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="400.5" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="400.5" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.5" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="400.5" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.5" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="400.5" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="400.5" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.5" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="400.5" y="627.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="403.5" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="400.5" y="611.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="403.5" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="400.5" y="595.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="403.5" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="400.5" y="579.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="403.5" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="400.5" y="563.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="403.5" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="400.5" y="547.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="403.5" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.06%)</title><rect x="400.5" y="531.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="403.5" y="542.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.06%)</title><rect x="400.5" y="515.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="403.5" y="526.0"></text>
</g>
<g>
<title>HSpaceCounters::update_used(unsigned long) (1 samples, 0.06%)</title><rect x="400.5" y="499.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="403.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (1 samples, 0.06%)</title><rect x="401.2" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.asErasure (1 samples, 0.06%)</title><rect x="401.2" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="404.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$CircularityLock$Default.acquire (1 samples, 0.06%)</title><rect x="401.9" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.06%)</title><rect x="401.9" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.06%)</title><rect x="401.9" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="404.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.06%)</title><rect x="402.6" y="1139.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.06%)</title><rect x="402.6" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="402.6" y="1107.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.06%)</title><rect x="402.6" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.6" y="1102.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.06%)</title><rect x="402.6" y="1075.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="405.6" y="1086.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.06%)</title><rect x="402.6" y="1059.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="405.6" y="1070.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.06%)</title><rect x="402.6" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="405.6" y="1054.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="402.6" y="1027.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="405.6" y="1038.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.06%)</title><rect x="402.6" y="1011.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="405.6" y="1022.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="402.6" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="405.6" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="402.6" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="405.6" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (2 samples, 0.12%)</title><rect x="403.3" y="1139.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (2 samples, 0.12%)</title><rect x="403.3" y="1123.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="404.0" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (3 samples, 0.18%)</title><rect x="404.7" y="1171.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (3 samples, 0.18%)</title><rect x="404.7" y="1155.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.getAndVerifyPackage (3 samples, 0.18%)</title><rect x="404.7" y="1139.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="407.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getDefinedPackage (1 samples, 0.06%)</title><rect x="404.7" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.isSealed (2 samples, 0.12%)</title><rect x="405.5" y="1123.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.5" y="1134.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.getValue (1 samples, 0.06%)</title><rect x="406.2" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.2" y="1118.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.get (1 samples, 0.06%)</title><rect x="406.2" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.2" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.06%)</title><rect x="406.2" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (3 samples, 0.18%)</title><rect x="406.9" y="1171.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (3 samples, 0.18%)</title><rect x="406.9" y="1155.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (3 samples, 0.18%)</title><rect x="406.9" y="1139.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.9" y="1150.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (3 samples, 0.18%)</title><rect x="406.9" y="1123.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.9" y="1134.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (3 samples, 0.18%)</title><rect x="406.9" y="1107.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.9" y="1118.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (1 samples, 0.06%)</title><rect x="406.9" y="1091.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.9" y="1102.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.put (1 samples, 0.06%)</title><rect x="406.9" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.9" y="1086.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.06%)</title><rect x="406.9" y="1059.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="406.9" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.9" y="1054.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.06%)</title><rect x="406.9" y="1027.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="409.9" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="406.9" y="1011.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="409.9" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="407.6" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.6" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.CENSIZ (1 samples, 0.06%)</title><rect x="407.6" y="1075.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.6" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.LG (1 samples, 0.06%)</title><rect x="407.6" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.6" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.SH (1 samples, 0.06%)</title><rect x="407.6" y="1043.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.6" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.CENLEN (1 samples, 0.06%)</title><rect x="408.3" y="1091.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.3" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.LG (1 samples, 0.06%)</title><rect x="408.3" y="1075.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (37 samples, 2.22%)</title><rect x="409.0" y="1171.0" width="26.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.0" y="1182.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="409.0" y="1155.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="409.0" y="1139.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.0" y="1150.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="409.0" y="1123.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="412.0" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="409.0" y="1107.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="412.0" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (35 samples, 2.10%)</title><rect x="409.7" y="1155.0" width="24.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.7" y="1166.0">j..</text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (30 samples, 1.80%)</title><rect x="409.7" y="1139.0" width="21.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.7" y="1150.0">j..</text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (29 samples, 1.74%)</title><rect x="410.4" y="1123.0" width="20.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.4" y="1134.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (6 samples, 0.36%)</title><rect x="411.1" y="1107.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="414.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.96%)</title><rect x="415.4" y="1107.0" width="11.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="418.4" y="1118.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (16 samples, 0.96%)</title><rect x="415.4" y="1091.0" width="11.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="418.4" y="1102.0"></text>
</g>
<g>
<title>inflate (6 samples, 0.36%)</title><rect x="426.7" y="1107.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="429.7" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (5 samples, 0.30%)</title><rect x="430.9" y="1139.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.9" y="1150.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (5 samples, 0.30%)</title><rect x="430.9" y="1123.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.9" y="1134.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.close (1 samples, 0.06%)</title><rect x="430.9" y="1107.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.9" y="1118.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.remove (1 samples, 0.06%)</title><rect x="430.9" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.9" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (3 samples, 0.18%)</title><rect x="431.6" y="1107.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.6" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (3 samples, 0.18%)</title><rect x="431.6" y="1091.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.6" y="1102.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (3 samples, 0.18%)</title><rect x="431.6" y="1075.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.6" y="1086.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (3 samples, 0.18%)</title><rect x="431.6" y="1059.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.6" y="1070.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (3 samples, 0.18%)</title><rect x="431.6" y="1043.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="432.3" y="1027.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="435.3" y="1038.0"></text>
</g>
<g>
<title>__read (1 samples, 0.06%)</title><rect x="432.3" y="1011.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="435.3" y="1022.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.06%)</title><rect x="433.0" y="1027.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="436.0" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.ensureOpenOrZipException (1 samples, 0.06%)</title><rect x="433.8" y="1107.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.8" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="434.5" y="1155.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="437.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getCodeSigners (1 samples, 0.06%)</title><rect x="435.2" y="1171.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (5 samples, 0.30%)</title><rect x="435.9" y="1187.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (5 samples, 0.30%)</title><rect x="435.9" y="1171.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (5 samples, 0.30%)</title><rect x="435.9" y="1155.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.9" y="1166.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (5 samples, 0.30%)</title><rect x="435.9" y="1139.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.9" y="1150.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (5 samples, 0.30%)</title><rect x="435.9" y="1123.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="435.9" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="435.9" y="1091.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="436.6" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="436.6" y="1091.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.6" y="1102.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (3 samples, 0.18%)</title><rect x="437.3" y="1107.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="440.3" y="1118.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (2 samples, 0.12%)</title><rect x="437.3" y="1091.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.3" y="1102.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (2 samples, 0.12%)</title><rect x="437.3" y="1075.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.3" y="1086.0"></text>
</g>
<g>
<title>java/net/URL.getProtocol (1 samples, 0.06%)</title><rect x="437.3" y="1059.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.3" y="1070.0"></text>
</g>
<g>
<title>java/net/URL.isBuiltinStreamHandler (1 samples, 0.06%)</title><rect x="438.0" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.0" y="1070.0"></text>
</g>
<g>
<title>java/net/URL.isBuiltinStreamHandler (1 samples, 0.06%)</title><rect x="438.0" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="438.0" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="438.0" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.0" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="438.0" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="441.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="438.0" y="979.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="441.0" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="438.0" y="963.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="441.0" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="438.0" y="947.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="441.0" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::extract_attached_method(vframeStream&amp;) (1 samples, 0.06%)</title><rect x="438.0" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="441.0" y="942.0"></text>
</g>
<g>
<title>nmethodLocker::lock_nmethod(CompiledMethod*, bool) (1 samples, 0.06%)</title><rect x="438.0" y="915.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="441.0" y="926.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseContextSpec (1 samples, 0.06%)</title><rect x="438.7" y="1091.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.06%)</title><rect x="438.7" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="438.7" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findLoadedModule (1 samples, 0.06%)</title><rect x="439.4" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="439.4" y="1187.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="442.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="439.4" y="1171.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.4" y="1182.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="439.4" y="1155.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (19 samples, 1.14%)</title><rect x="440.1" y="1203.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (19 samples, 1.14%)</title><rect x="440.1" y="1187.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.06%)</title><rect x="440.1" y="1171.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.06%)</title><rect x="440.1" y="1155.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.1" y="1166.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass (1 samples, 0.06%)</title><rect x="440.1" y="1139.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="443.1" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="440.1" y="1123.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="443.1" y="1134.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (1 samples, 0.06%)</title><rect x="440.1" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="443.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (2 samples, 0.12%)</title><rect x="440.8" y="1171.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (2 samples, 0.12%)</title><rect x="440.8" y="1155.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.12%)</title><rect x="440.8" y="1139.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.06%)</title><rect x="441.5" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.06%)</title><rect x="441.5" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (16 samples, 0.96%)</title><rect x="442.2" y="1171.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (16 samples, 0.96%)</title><rect x="442.2" y="1155.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="442.2" y="1139.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (15 samples, 0.90%)</title><rect x="442.9" y="1139.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (15 samples, 0.90%)</title><rect x="442.9" y="1123.0" width="10.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.9" y="1134.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (13 samples, 0.78%)</title><rect x="442.9" y="1107.0" width="9.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="445.9" y="1118.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (8 samples, 0.48%)</title><rect x="442.9" y="1091.0" width="5.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="445.9" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (7 samples, 0.42%)</title><rect x="443.7" y="1075.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="446.7" y="1086.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="443.7" y="1059.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="446.7" y="1070.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.06%)</title><rect x="444.4" y="1059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="447.4" y="1070.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_remove(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Thread*) (1 samples, 0.06%)</title><rect x="445.1" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="448.1" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (4 samples, 0.24%)</title><rect x="445.8" y="1059.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="448.8" y="1070.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="445.8" y="1043.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="448.8" y="1054.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_stream(char const*, Thread*) (1 samples, 0.06%)</title><rect x="445.8" y="1027.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="448.8" y="1038.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_entry(char const*, int*, bool, Thread*) (1 samples, 0.06%)</title><rect x="445.8" y="1011.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="448.8" y="1022.0"></text>
</g>
<g>
<title>ZIP_FindEntry (1 samples, 0.06%)</title><rect x="445.8" y="995.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="448.8" y="1006.0"></text>
</g>
<g>
<title>ZIP_GetEntry2 (1 samples, 0.06%)</title><rect x="445.8" y="979.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="448.8" y="990.0"></text>
</g>
<g>
<title>JVM_RawMonitorEnter (1 samples, 0.06%)</title><rect x="445.8" y="963.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="448.8" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="445.8" y="947.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="448.8" y="958.0"></text>
</g>
<g>
<title>Dictionary::find_shared_class(int, unsigned int, Symbol*) (1 samples, 0.06%)</title><rect x="446.5" y="1043.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="449.5" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::package_from_name(Symbol const*, Thread*) (1 samples, 0.06%)</title><rect x="447.2" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="450.2" y="1054.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="447.2" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="450.2" y="1038.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="447.2" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="450.2" y="1022.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.06%)</title><rect x="447.9" y="1043.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="450.9" y="1054.0"></text>
</g>
<g>
<title>VerifyFixClassname (2 samples, 0.12%)</title><rect x="448.6" y="1091.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="451.6" y="1102.0"></text>
</g>
<g>
<title>next_utf2unicode (1 samples, 0.06%)</title><rect x="449.3" y="1075.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="452.3" y="1086.0"></text>
</g>
<g>
<title>int UNICODE::utf8_length&lt;signed char&gt;(signed char*, int) (1 samples, 0.06%)</title><rect x="450.0" y="1091.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="453.0" y="1102.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (1 samples, 0.06%)</title><rect x="450.7" y="1091.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="453.7" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.06%)</title><rect x="450.7" y="1075.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="453.7" y="1086.0"></text>
</g>
<g>
<title>next_utf2unicode (1 samples, 0.06%)</title><rect x="451.4" y="1091.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="454.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="452.1" y="1107.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="455.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="452.1" y="1091.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="455.1" y="1102.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.06%)</title><rect x="452.1" y="1075.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="455.1" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="452.1" y="1059.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="455.1" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="452.1" y="1043.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="455.1" y="1054.0"></text>
</g>
<g>
<title>__GI__IO_default_xsputn (1 samples, 0.06%)</title><rect x="452.9" y="1107.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="455.9" y="1118.0"></text>
</g>
<g>
<title>edge_order(CFGEdge**, CFGEdge**) (1 samples, 0.06%)</title><rect x="453.6" y="1315.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="456.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.run (46 samples, 2.76%)</title><rect x="454.3" y="1315.0" width="32.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.3" y="1326.0">ja..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.run (1 samples, 0.06%)</title><rect x="454.3" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.3" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.runDutyCycle (1 samples, 0.06%)</title><rect x="454.3" y="1283.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.3" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Worker.run (45 samples, 2.70%)</title><rect x="455.0" y="1299.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.0" y="1310.0">da..</text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.run (30 samples, 1.80%)</title><rect x="455.7" y="1283.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.7" y="1294.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.run (1 samples, 0.06%)</title><rect x="455.7" y="1267.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.7" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.run (1 samples, 0.06%)</title><rect x="455.7" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.7" y="1262.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.06%)</title><rect x="455.7" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.7" y="1246.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.06%)</title><rect x="455.7" y="1219.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.7" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.toJson (1 samples, 0.06%)</title><rect x="455.7" y="1203.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.7" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.toJson (1 samples, 0.06%)</title><rect x="455.7" y="1187.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.7" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.agentServiceCheck (1 samples, 0.06%)</title><rect x="455.7" y="1171.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="455.7" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.7" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="455.7" y="1139.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.7" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.06%)</title><rect x="455.7" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="455.7" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="455.7" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="455.7" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="455.7" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="455.7" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="455.7" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="455.7" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="455.7" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.7" y="1006.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="455.7" y="979.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="458.7" y="990.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="455.7" y="963.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="458.7" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="455.7" y="947.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="458.7" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="455.7" y="931.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="458.7" y="942.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="455.7" y="915.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="458.7" y="926.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="455.7" y="899.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="458.7" y="910.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.06%)</title><rect x="455.7" y="883.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="458.7" y="894.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.06%)</title><rect x="455.7" y="867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="458.7" y="878.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (1 samples, 0.06%)</title><rect x="455.7" y="851.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="458.7" y="862.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.06%)</title><rect x="455.7" y="835.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="458.7" y="846.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$RunnableTask.run (29 samples, 1.74%)</title><rect x="456.4" y="1267.0" width="20.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.4" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$RunnableTask.run (29 samples, 1.74%)</title><rect x="456.4" y="1251.0" width="20.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.4" y="1262.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$PerformCleanupTask.run (29 samples, 1.74%)</title><rect x="456.4" y="1235.0" width="20.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.4" y="1246.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.performCleanUp (29 samples, 1.74%)</title><rect x="456.4" y="1219.0" width="20.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.4" y="1230.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.maintenance (7 samples, 0.42%)</title><rect x="457.1" y="1203.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.1" y="1214.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.climb (1 samples, 0.06%)</title><rect x="457.1" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.1" y="1198.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.demoteFromMainProtected (1 samples, 0.06%)</title><rect x="457.1" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.1" y="1182.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.drainReadBuffer (2 samples, 0.12%)</title><rect x="457.8" y="1187.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.8" y="1198.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/StripedBuffer.drainTo (2 samples, 0.12%)</title><rect x="457.8" y="1171.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.8" y="1182.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedBuffer$RingBuffer.drainTo (2 samples, 0.12%)</title><rect x="457.8" y="1155.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.8" y="1166.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$$Lambda$39/1638215613.accept (1 samples, 0.06%)</title><rect x="457.8" y="1139.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.8" y="1150.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.onAccess (1 samples, 0.06%)</title><rect x="457.8" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.8" y="1134.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.expiresVariable (1 samples, 0.06%)</title><rect x="457.8" y="1107.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.get (1 samples, 0.06%)</title><rect x="458.5" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.06%)</title><rect x="458.5" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getVolatile (1 samples, 0.06%)</title><rect x="458.5" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.06%)</title><rect x="458.5" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.5" y="1102.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireEntries (4 samples, 0.24%)</title><rect x="459.2" y="1187.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.2" y="1198.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireAfterAccessEntries (4 samples, 0.24%)</title><rect x="459.2" y="1171.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.2" y="1182.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.expireAfterAccessEntries (2 samples, 0.12%)</title><rect x="460.6" y="1155.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (16 samples, 0.96%)</title><rect x="462.1" y="1203.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.1" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (16 samples, 0.96%)</title><rect x="462.1" y="1187.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.1" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (16 samples, 0.96%)</title><rect x="462.1" y="1171.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (16 samples, 0.96%)</title><rect x="462.1" y="1155.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (16 samples, 0.96%)</title><rect x="462.1" y="1139.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (16 samples, 0.96%)</title><rect x="462.1" y="1123.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (16 samples, 0.96%)</title><rect x="462.1" y="1107.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (16 samples, 0.96%)</title><rect x="462.1" y="1091.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (16 samples, 0.96%)</title><rect x="462.1" y="1075.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (16 samples, 0.96%)</title><rect x="462.1" y="1059.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (16 samples, 0.96%)</title><rect x="462.1" y="1043.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.1" y="1054.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (16 samples, 0.96%)</title><rect x="462.1" y="1027.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.1" y="1038.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (16 samples, 0.96%)</title><rect x="462.1" y="1011.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (16 samples, 0.96%)</title><rect x="462.1" y="995.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (16 samples, 0.96%)</title><rect x="462.1" y="979.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.1" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (16 samples, 0.96%)</title><rect x="462.1" y="963.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (16 samples, 0.96%)</title><rect x="462.1" y="947.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (16 samples, 0.96%)</title><rect x="462.1" y="931.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (16 samples, 0.96%)</title><rect x="462.1" y="915.0" width="11.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (16 samples, 0.96%)</title><rect x="462.1" y="899.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (16 samples, 0.96%)</title><rect x="462.1" y="883.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (4 samples, 0.24%)</title><rect x="462.1" y="867.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.06%)</title><rect x="462.1" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.06%)</title><rect x="462.1" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="462.1" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.1" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="462.1" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.1" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="462.1" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.1" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.06%)</title><rect x="462.1" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.06%)</title><rect x="462.1" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.1" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.06%)</title><rect x="462.1" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.1" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.06%)</title><rect x="462.1" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.1" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.traverseHierarchy (1 samples, 0.06%)</title><rect x="462.1" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.1" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findFieldsForType (1 samples, 0.06%)</title><rect x="462.1" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.1" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="462.1" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldTokenList.get (1 samples, 0.06%)</title><rect x="462.1" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldTokenList.get (1 samples, 0.06%)</title><rect x="462.1" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.access$1000 (1 samples, 0.06%)</title><rect x="462.1" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.toFieldDescription (1 samples, 0.06%)</title><rect x="462.1" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.1" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="462.1" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.1" y="606.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="462.1" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="465.1" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="462.1" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.1" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="462.1" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.1" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="462.1" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.1" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="462.1" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.1" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="462.1" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.1" y="510.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="462.1" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="462.1" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.1" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.06%)</title><rect x="462.1" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.06%)</title><rect x="462.1" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="462.1" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.06%)</title><rect x="462.1" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="462.1" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="462.1" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.1" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (3 samples, 0.18%)</title><rect x="462.8" y="851.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (3 samples, 0.18%)</title><rect x="462.8" y="835.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.12%)</title><rect x="462.8" y="819.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="462.8" y="803.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.8" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.12%)</title><rect x="462.8" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.8" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="463.5" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.5" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="463.5" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.5" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="463.5" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="463.5" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="463.5" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="463.5" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="463.5" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="463.5" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="463.5" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="463.5" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="463.5" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.5" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="463.5" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.5" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="463.5" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.5" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="463.5" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.5" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="463.5" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="463.5" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="463.5" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="463.5" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="463.5" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.5" y="494.0"></text>
</g>
<g>
<title>java/net/URI.toURL (1 samples, 0.06%)</title><rect x="463.5" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.5" y="478.0"></text>
</g>
<g>
<title>java/net/URL.fromURI (1 samples, 0.06%)</title><rect x="463.5" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.5" y="462.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="463.5" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.5" y="446.0"></text>
</g>
<g>
<title>sun/net/util/IPAddressUtil.checkExternalForm (1 samples, 0.06%)</title><rect x="463.5" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.5" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="464.2" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="464.2" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="464.2" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="464.2" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.2" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="464.2" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="464.2" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="464.2" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.2" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="464.2" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.06%)</title><rect x="464.2" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.2" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.06%)</title><rect x="464.2" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.2" y="686.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass@plt (1 samples, 0.06%)</title><rect x="464.2" y="659.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="467.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (6 samples, 0.36%)</title><rect x="464.9" y="867.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (6 samples, 0.36%)</title><rect x="464.9" y="851.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (6 samples, 0.36%)</title><rect x="464.9" y="835.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (6 samples, 0.36%)</title><rect x="464.9" y="819.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (3 samples, 0.18%)</title><rect x="464.9" y="803.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.9" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="464.9" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.9" y="798.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="464.9" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.9" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="464.9" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.9" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="464.9" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.9" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="464.9" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.9" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="464.9" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.9" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="464.9" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.9" y="702.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="464.9" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.9" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="464.9" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="464.9" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.9" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="464.9" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.9" y="638.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="464.9" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.9" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="464.9" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.9" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="464.9" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.9" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="464.9" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.9" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="464.9" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.9" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="464.9" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="464.9" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.9" y="526.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="464.9" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.9" y="510.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="464.9" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Math.max (1 samples, 0.06%)</title><rect x="464.9" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.9" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (2 samples, 0.12%)</title><rect x="465.6" y="787.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (2 samples, 0.12%)</title><rect x="465.6" y="771.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (2 samples, 0.12%)</title><rect x="465.6" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.6" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="465.6" y="739.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="468.6" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="465.6" y="723.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="468.6" y="734.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="465.6" y="707.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="468.6" y="718.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="465.6" y="691.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="468.6" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="465.6" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="468.6" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="465.6" y="659.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="468.6" y="670.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="465.6" y="643.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="468.6" y="654.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="465.6" y="627.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="468.6" y="638.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.06%)</title><rect x="465.6" y="611.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="468.6" y="622.0"></text>
</g>
<g>
<title>set_protected (1 samples, 0.06%)</title><rect x="465.6" y="595.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="468.6" y="606.0"></text>
</g>
<g>
<title>cp_index_to_class_fullinfo (1 samples, 0.06%)</title><rect x="465.6" y="579.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="468.6" y="590.0"></text>
</g>
<g>
<title>pop_and_free (1 samples, 0.06%)</title><rect x="465.6" y="563.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="468.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.06%)</title><rect x="466.3" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.3" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="466.3" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory.make (1 samples, 0.06%)</title><rect x="466.3" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.06%)</title><rect x="466.3" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.06%)</title><rect x="466.3" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForEnumerationDescription.load (1 samples, 0.06%)</title><rect x="466.3" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="466.3" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.3" y="654.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="466.3" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.3" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="466.3" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.3" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="466.3" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.3" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="466.3" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.3" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="466.3" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="466.3" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="466.3" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.3" y="542.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="466.3" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.3" y="526.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.06%)</title><rect x="466.3" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.3" y="510.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler$InternalJarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="466.3" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.3" y="494.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler$InternalJarURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="466.3" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.3" y="478.0"></text>
</g>
<g>
<title>java/net/URLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="466.3" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.3" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (2 samples, 0.12%)</title><rect x="467.0" y="803.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (2 samples, 0.12%)</title><rect x="467.0" y="787.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (2 samples, 0.12%)</title><rect x="467.0" y="771.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (2 samples, 0.12%)</title><rect x="467.0" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (2 samples, 0.12%)</title><rect x="467.0" y="739.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (2 samples, 0.12%)</title><rect x="467.0" y="723.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.12%)</title><rect x="467.0" y="707.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.12%)</title><rect x="467.0" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.12%)</title><rect x="467.0" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.12%)</title><rect x="467.0" y="659.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="467.0" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="467.0" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="467.0" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.0" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="467.0" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.0" y="606.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="467.0" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.0" y="590.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/Handler.openConnection (1 samples, 0.06%)</title><rect x="467.0" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.0" y="574.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="467.0" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.0" y="558.0"></text>
</g>
<g>
<title>sun/net/www/URLConnection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="467.0" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.0" y="542.0"></text>
</g>
<g>
<title>sun/net/www/MessageHeader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="467.0" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.0" y="526.0"></text>
</g>
<g>
<title>sun/net/www/MessageHeader.grow (1 samples, 0.06%)</title><rect x="467.0" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.0" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="467.0" y="483.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="470.0" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="467.7" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="467.7" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="467.7" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitInnerClass (1 samples, 0.06%)</title><rect x="467.7" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="467.7" y="579.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="467.7" y="563.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.7" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.06%)</title><rect x="468.4" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="468.4" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="468.4" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="468.4" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="468.4" y="739.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="468.4" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="468.4" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="468.4" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="468.4" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.06%)</title><rect x="468.4" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="468.4" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visit (1 samples, 0.06%)</title><rect x="468.4" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="468.4" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.4" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="468.4" y="595.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="471.4" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="468.4" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.4" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="468.4" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.4" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="468.4" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.4" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="468.4" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.4" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="468.4" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="468.4" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.06%)</title><rect x="468.4" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.4" y="494.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.06%)</title><rect x="468.4" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.4" y="478.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.06%)</title><rect x="468.4" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.4" y="462.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.06%)</title><rect x="468.4" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="468.4" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="468.4" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.4" y="414.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="468.4" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.4" y="398.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="468.4" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.4" y="382.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="468.4" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="468.4" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="468.4" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.4" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="468.4" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.4" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="468.4" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.4" y="302.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="468.4" y="275.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="471.4" y="286.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="468.4" y="259.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="471.4" y="270.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="468.4" y="243.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="471.4" y="254.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="468.4" y="227.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="471.4" y="238.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 0.06%)</title><rect x="468.4" y="211.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="471.4" y="222.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (6 samples, 0.36%)</title><rect x="469.1" y="867.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.06%)</title><rect x="469.1" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="469.1" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.1" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="469.1" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="469.1" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.06%)</title><rect x="469.1" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.06%)</title><rect x="469.1" y="771.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.06%)</title><rect x="469.1" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="469.1" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="469.1" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="469.1" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.06%)</title><rect x="469.1" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.forRedefinition (1 samples, 0.06%)</title><rect x="469.8" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.8" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="469.8" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="469.8" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.8" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="469.8" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.8" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="469.8" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.8" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="469.8" y="771.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="472.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (4 samples, 0.24%)</title><rect x="470.5" y="851.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (4 samples, 0.24%)</title><rect x="470.5" y="835.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.24%)</title><rect x="470.5" y="819.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 0.24%)</title><rect x="470.5" y="803.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.06%)</title><rect x="470.5" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.06%)</title><rect x="470.5" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (1 samples, 0.06%)</title><rect x="470.5" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.5" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::quicken_io_cc(JavaThread*) (1 samples, 0.06%)</title><rect x="470.5" y="739.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="473.5" y="750.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="470.5" y="723.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="473.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.18%)</title><rect x="471.2" y="787.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (2 samples, 0.12%)</title><rect x="471.2" y="771.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (1 samples, 0.06%)</title><rect x="471.2" y="755.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.06%)</title><rect x="471.2" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.06%)</title><rect x="471.2" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.06%)</title><rect x="471.2" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.06%)</title><rect x="471.2" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="471.2" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="471.2" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="471.2" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.06%)</title><rect x="471.2" y="627.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.apply (1 samples, 0.06%)</title><rect x="471.2" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.doApply (1 samples, 0.06%)</title><rect x="471.2" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved.resolve (1 samples, 0.06%)</title><rect x="471.2" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForArgument.resolve (1 samples, 0.06%)</title><rect x="471.2" y="563.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="471.2" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.2" y="558.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="471.2" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.2" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="471.2" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.2" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="471.2" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.2" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="471.2" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.2" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="471.2" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.2" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="471.2" y="451.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.2" y="462.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="471.2" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.2" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="471.2" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.2" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="471.2" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.2" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="471.2" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.2" y="398.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="471.2" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.2" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="471.2" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.2" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="471.2" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.2" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="471.2" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.2" y="334.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="471.2" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.2" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="471.2" y="291.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="471.2" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.2" y="286.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="471.2" y="259.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.2" y="270.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="471.2" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.2" y="254.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="471.2" y="227.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="471.2" y="211.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="474.2" y="222.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="471.2" y="195.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="474.2" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitFrame (1 samples, 0.06%)</title><rect x="472.0" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitFrame (1 samples, 0.06%)</title><rect x="472.0" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitFrame (1 samples, 0.06%)</title><rect x="472.0" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.getMajorVersion (1 samples, 0.06%)</title><rect x="472.0" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.06%)</title><rect x="472.7" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.06%)</title><rect x="472.7" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.06%)</title><rect x="472.7" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.06%)</title><rect x="472.7" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.06%)</title><rect x="472.7" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.06%)</title><rect x="472.7" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.7" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="472.7" y="675.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="475.7" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="472.7" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="475.7" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="472.7" y="643.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="475.7" y="654.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="472.7" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="475.7" y="638.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="472.7" y="611.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="475.7" y="622.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.06%)</title><rect x="472.7" y="595.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="475.7" y="606.0"></text>
</g>
<g>
<title>JVM_GetCPFieldSignatureUTF (1 samples, 0.06%)</title><rect x="472.7" y="579.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="475.7" y="590.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.06%)</title><rect x="472.7" y="563.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="475.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.&lt;clinit&gt; (3 samples, 0.18%)</title><rect x="473.4" y="1203.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.4" y="1214.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (3 samples, 0.18%)</title><rect x="473.4" y="1187.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.4" y="1198.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (3 samples, 0.18%)</title><rect x="473.4" y="1171.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.4" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (3 samples, 0.18%)</title><rect x="473.4" y="1155.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.4" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.18%)</title><rect x="473.4" y="1139.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.4" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.18%)</title><rect x="473.4" y="1123.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.4" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.18%)</title><rect x="473.4" y="1107.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.4" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.18%)</title><rect x="473.4" y="1091.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (3 samples, 0.18%)</title><rect x="473.4" y="1075.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.18%)</title><rect x="473.4" y="1059.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (3 samples, 0.18%)</title><rect x="473.4" y="1043.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.4" y="1054.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f30246a5080 (1 samples, 0.06%)</title><rect x="473.4" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.06%)</title><rect x="474.1" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.1" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.06%)</title><rect x="474.1" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.1" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.06%)</title><rect x="474.1" y="995.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.06%)</title><rect x="474.1" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.06%)</title><rect x="474.1" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="474.1" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="474.1" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.1" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="474.1" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="474.1" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="474.1" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.1" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="474.1" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="474.1" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.06%)</title><rect x="474.1" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.1" y="846.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.06%)</title><rect x="474.1" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.1" y="830.0"></text>
</g>
<g>
<title>JVM_ArrayCopy (1 samples, 0.06%)</title><rect x="474.1" y="803.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="477.1" y="814.0"></text>
</g>
<g>
<title>acl_CopyRight (1 samples, 0.06%)</title><rect x="474.1" y="787.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="477.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.06%)</title><rect x="474.8" y="1027.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.06%)</title><rect x="474.8" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.06%)</title><rect x="474.8" y="995.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="474.8" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="474.8" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.06%)</title><rect x="474.8" y="947.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitField (1 samples, 0.06%)</title><rect x="474.8" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitField (1 samples, 0.06%)</title><rect x="474.8" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.06%)</title><rect x="474.8" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.06%)</title><rect x="474.8" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.8" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.06%)</title><rect x="474.8" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.8" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.06%)</title><rect x="474.8" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.06%)</title><rect x="474.8" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector$1.visitField (1 samples, 0.06%)</title><rect x="474.8" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.8" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="474.8" y="803.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="477.8" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="474.8" y="787.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="477.8" y="798.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="474.8" y="771.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="477.8" y="782.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="474.8" y="755.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="477.8" y="766.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="474.8" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="477.8" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="474.8" y="723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="477.8" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="474.8" y="707.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="477.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.12%)</title><rect x="475.5" y="1203.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.12%)</title><rect x="475.5" y="1187.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.06%)</title><rect x="476.2" y="1171.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.take (14 samples, 0.84%)</title><rect x="476.9" y="1283.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.9" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.getDelay (2 samples, 0.12%)</title><rect x="477.6" y="1267.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.convert (2 samples, 0.12%)</title><rect x="477.6" y="1251.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.6" y="1262.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="477.6" y="1235.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.6" y="1246.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="477.6" y="1219.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="477.6" y="1203.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.6" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="477.6" y="1187.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.6" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="477.6" y="1171.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.6" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="477.6" y="1155.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.6" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="477.6" y="1139.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.6" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="477.6" y="1123.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="477.6" y="1107.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.6" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="477.6" y="1091.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.12%)</title><rect x="477.6" y="1075.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.12%)</title><rect x="477.6" y="1059.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (2 samples, 0.12%)</title><rect x="477.6" y="1043.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.6" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="477.6" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.6" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.6" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="947.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="899.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="477.6" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.6" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="477.6" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.06%)</title><rect x="477.6" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.06%)</title><rect x="477.6" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="477.6" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="477.6" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="477.6" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="477.6" y="707.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="477.6" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="477.6" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="477.6" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.6" y="670.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="477.6" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="477.6" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="477.6" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="477.6" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.6" y="606.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="477.6" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="477.6" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.6" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="477.6" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.6" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="477.6" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.6" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="477.6" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.6" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="477.6" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.6" y="510.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="477.6" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.6" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="477.6" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.6" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.06%)</title><rect x="477.6" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.6" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.06%)</title><rect x="477.6" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.06%)</title><rect x="477.6" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.6" y="430.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.06%)</title><rect x="477.6" y="403.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="480.6" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="478.3" y="1027.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="478.3" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="478.3" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="478.3" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="478.3" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="478.3" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="478.3" y="931.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="478.3" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="478.3" y="899.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="478.3" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="478.3" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="478.3" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="478.3" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.3" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="478.3" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.3" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="478.3" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="478.3" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.3" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="478.3" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.3" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="478.3" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="478.3" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.06%)</title><rect x="478.3" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="734.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.06%)</title><rect x="478.3" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="718.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.06%)</title><rect x="478.3" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.3" y="702.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.06%)</title><rect x="478.3" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="478.3" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.06%)</title><rect x="478.3" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.3" y="654.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="478.3" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.3" y="638.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="478.3" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.3" y="622.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="478.3" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="478.3" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="478.3" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="478.3" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="478.3" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.3" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="478.3" y="515.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="481.3" y="526.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="478.3" y="499.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="481.3" y="510.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="478.3" y="483.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="481.3" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="478.3" y="467.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="481.3" y="478.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="478.3" y="451.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="481.3" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.12%)</title><rect x="479.0" y="1267.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.0" y="1278.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownComparable (2 samples, 0.12%)</title><rect x="479.0" y="1251.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.0" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.compareTo (2 samples, 0.12%)</title><rect x="479.0" y="1235.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.0" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.compareTo (1 samples, 0.06%)</title><rect x="479.7" y="1219.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (5 samples, 0.30%)</title><rect x="480.4" y="1267.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (5 samples, 0.30%)</title><rect x="480.4" y="1251.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.30%)</title><rect x="480.4" y="1235.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.4" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.12%)</title><rect x="480.4" y="1219.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="483.4" y="1230.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="480.4" y="1203.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="483.4" y="1214.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.06%)</title><rect x="481.2" y="1203.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="484.2" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.12%)</title><rect x="481.9" y="1219.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="484.9" y="1230.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="483.3" y="1219.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="486.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.12%)</title><rect x="484.0" y="1267.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.0" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.compareTo (1 samples, 0.06%)</title><rect x="484.0" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="484.7" y="1251.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.12%)</title><rect x="485.4" y="1267.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.12%)</title><rect x="485.4" y="1251.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.12%)</title><rect x="485.4" y="1235.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.06%)</title><rect x="485.4" y="1219.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.4" y="1230.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.06%)</title><rect x="485.4" y="1203.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="488.4" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="485.4" y="1187.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="488.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="486.1" y="1219.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="486.8" y="1315.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LL.make (1 samples, 0.06%)</title><rect x="486.8" y="1299.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="486.8" y="1283.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="486.8" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="486.8" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.06%)</title><rect x="486.8" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.06%)</title><rect x="486.8" y="1219.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.06%)</title><rect x="486.8" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.06%)</title><rect x="486.8" y="1187.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.06%)</title><rect x="486.8" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.06%)</title><rect x="486.8" y="1155.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.getInternalName (1 samples, 0.06%)</title><rect x="486.8" y="1139.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="486.8" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.06%)</title><rect x="486.8" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 0.06%)</title><rect x="487.5" y="1299.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (1 samples, 0.06%)</title><rect x="487.5" y="1283.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (1 samples, 0.06%)</title><rect x="487.5" y="1267.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (1 samples, 0.06%)</title><rect x="487.5" y="1251.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArguments (1 samples, 0.06%)</title><rect x="487.5" y="1235.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.foldArgumentsForm (1 samples, 0.06%)</title><rect x="487.5" y="1219.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1 samples, 0.06%)</title><rect x="487.5" y="1203.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.newSpeciesData (1 samples, 0.06%)</title><rect x="487.5" y="1187.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.extendWith (1 samples, 0.06%)</title><rect x="487.5" y="1171.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer.findSpecies (1 samples, 0.06%)</title><rect x="487.5" y="1155.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.loadSpecies (1 samples, 0.06%)</title><rect x="487.5" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="487.5" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="487.5" y="1107.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="487.5" y="1091.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="487.5" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="487.5" y="1059.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.5" y="1070.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="487.5" y="1043.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="490.5" y="1054.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="487.5" y="1027.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="490.5" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="487.5" y="1011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="490.5" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="487.5" y="995.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="490.5" y="1006.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="487.5" y="979.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="490.5" y="990.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="487.5" y="963.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="490.5" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="487.5" y="947.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="490.5" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="487.5" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="490.5" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="487.5" y="915.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="490.5" y="926.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="487.5" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="490.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (2 samples, 0.12%)</title><rect x="488.2" y="1315.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.2" y="1326.0"></text>
</g>
<g>
<title>java/time/ZoneId.systemDefault (2 samples, 0.12%)</title><rect x="488.2" y="1299.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.2" y="1310.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefault (1 samples, 0.06%)</title><rect x="488.2" y="1283.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.2" y="1294.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefaultRef (1 samples, 0.06%)</title><rect x="488.2" y="1267.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.2" y="1278.0"></text>
</g>
<g>
<title>java/util/TimeZone.setDefaultZone (1 samples, 0.06%)</title><rect x="488.2" y="1251.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.2" y="1262.0"></text>
</g>
<g>
<title>java/util/TimeZone.getTimeZone (1 samples, 0.06%)</title><rect x="488.2" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.2" y="1246.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTimeZone (1 samples, 0.06%)</title><rect x="488.2" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.2" y="1230.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.getZoneInfo (1 samples, 0.06%)</title><rect x="488.2" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.2" y="1214.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.getZoneInfo0 (1 samples, 0.06%)</title><rect x="488.2" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.2" y="1198.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.getZoneInfo (1 samples, 0.06%)</title><rect x="488.2" y="1171.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.2" y="1182.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.readEpochSec (1 samples, 0.06%)</title><rect x="488.2" y="1155.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.2" y="1166.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.06%)</title><rect x="488.9" y="1283.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.9" y="1294.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.06%)</title><rect x="488.9" y="1267.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.9" y="1278.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.06%)</title><rect x="488.9" y="1251.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.9" y="1262.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.06%)</title><rect x="488.9" y="1235.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.9" y="1246.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.06%)</title><rect x="488.9" y="1219.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.9" y="1230.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.06%)</title><rect x="488.9" y="1203.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.9" y="1214.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.06%)</title><rect x="488.9" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.9" y="1198.0"></text>
</g>
<g>
<title>java/time/ZoneRegion.ofId (1 samples, 0.06%)</title><rect x="488.9" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.9" y="1182.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRulesProvider.getRules (1 samples, 0.06%)</title><rect x="488.9" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.9" y="1166.0"></text>
</g>
<g>
<title>java/time/zone/TzdbZoneRulesProvider.provideRules (1 samples, 0.06%)</title><rect x="488.9" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.9" y="1150.0"></text>
</g>
<g>
<title>java/time/zone/Ser.read (1 samples, 0.06%)</title><rect x="488.9" y="1123.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.9" y="1134.0"></text>
</g>
<g>
<title>java/time/zone/Ser.readInternal (1 samples, 0.06%)</title><rect x="488.9" y="1107.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.9" y="1118.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRules.readExternal (1 samples, 0.06%)</title><rect x="488.9" y="1091.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.9" y="1102.0"></text>
</g>
<g>
<title>java/time/zone/Ser.readOffset (1 samples, 0.06%)</title><rect x="488.9" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.9" y="1086.0"></text>
</g>
<g>
<title>java/time/ZoneOffset.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="488.9" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.9" y="1070.0"></text>
</g>
<g>
<title>java/time/ZoneOffset.ofTotalSeconds (1 samples, 0.06%)</title><rect x="488.9" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.06%)</title><rect x="488.9" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.06%)</title><rect x="488.9" y="1011.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.initTable (1 samples, 0.06%)</title><rect x="488.9" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.compareAndSetInt (1 samples, 0.06%)</title><rect x="488.9" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="491.9" y="990.0"></text>
</g>
<g>
<title>start_thread (878 samples, 52.64%)</title><rect x="489.6" y="1315.0" width="621.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="492.6" y="1326.0">start_thread</text>
</g>
<g>
<title>call_continuation (1 samples, 0.06%)</title><rect x="489.6" y="1299.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="492.6" y="1310.0"></text>
</g>
<g>
<title>JavaMain (1 samples, 0.06%)</title><rect x="489.6" y="1283.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="492.6" y="1294.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="489.6" y="1267.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="492.6" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="489.6" y="1251.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="492.6" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="489.6" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="492.6" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::load_shared_class(InstanceKlass*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="489.6" y="1219.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="492.6" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::restore_unshareable_info(ClassLoaderData*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="489.6" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="492.6" y="1214.0"></text>
</g>
<g>
<title>Method::restore_unshareable_info(Thread*) (1 samples, 0.06%)</title><rect x="489.6" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="492.6" y="1198.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="489.6" y="1171.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="492.6" y="1182.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="489.6" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="492.6" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::generate_i2c2i_adapters(MacroAssembler*, int, int, BasicType const*, VMRegPair const*, AdapterFingerPrint*) (1 samples, 0.06%)</title><rect x="489.6" y="1139.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="492.6" y="1150.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::new_entry(AdapterFingerPrint*, unsigned char*, unsigned char*, unsigned char*) (1 samples, 0.06%)</title><rect x="489.6" y="1123.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.6" y="1134.0"></text>
</g>
<g>
<title>BasicHashtable&lt;(MemoryType)4&gt;::new_entry_free_list() (1 samples, 0.06%)</title><rect x="489.6" y="1107.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.6" y="1118.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (877 samples, 52.58%)</title><rect x="490.3" y="1299.0" width="620.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="493.3" y="1310.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (877 samples, 52.58%)</title><rect x="490.3" y="1283.0" width="620.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="493.3" y="1294.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (13 samples, 0.78%)</title><rect x="490.3" y="1267.0" width="9.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="493.3" y="1278.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="490.3" y="1251.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="493.3" y="1262.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.06%)</title><rect x="490.3" y="1235.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="493.3" y="1246.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (1 samples, 0.06%)</title><rect x="490.3" y="1219.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="493.3" y="1230.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (1 samples, 0.06%)</title><rect x="490.3" y="1203.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="493.3" y="1214.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="491.1" y="1251.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="494.1" y="1262.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.06%)</title><rect x="491.1" y="1235.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="494.1" y="1246.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="491.1" y="1219.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="494.1" y="1230.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="491.8" y="1251.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="494.8" y="1262.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="491.8" y="1235.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="494.8" y="1246.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.60%)</title><rect x="492.5" y="1251.0" width="7.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="495.5" y="1262.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.30%)</title><rect x="492.5" y="1235.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="495.5" y="1246.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.30%)</title><rect x="492.5" y="1219.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="495.5" y="1230.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.24%)</title><rect x="496.0" y="1235.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="499.0" y="1246.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.24%)</title><rect x="496.0" y="1219.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="499.0" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.24%)</title><rect x="496.0" y="1203.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="499.0" y="1214.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.24%)</title><rect x="496.0" y="1187.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="499.0" y="1198.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.24%)</title><rect x="496.0" y="1171.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="499.0" y="1182.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.06%)</title><rect x="496.0" y="1155.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="499.0" y="1166.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.06%)</title><rect x="496.0" y="1139.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="499.0" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (3 samples, 0.18%)</title><rect x="496.7" y="1155.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="499.7" y="1166.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.18%)</title><rect x="496.7" y="1139.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="499.7" y="1150.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.18%)</title><rect x="496.7" y="1123.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="499.7" y="1134.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.18%)</title><rect x="496.7" y="1107.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="499.7" y="1118.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="498.8" y="1235.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="501.8" y="1246.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.06%)</title><rect x="498.8" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="501.8" y="1230.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="498.8" y="1203.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="501.8" y="1214.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.06%)</title><rect x="498.8" y="1187.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="501.8" y="1198.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.06%)</title><rect x="498.8" y="1171.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="501.8" y="1182.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.06%)</title><rect x="498.8" y="1155.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="501.8" y="1166.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (1 samples, 0.06%)</title><rect x="498.8" y="1139.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="501.8" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="498.8" y="1123.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="501.8" y="1134.0"></text>
</g>
<g>
<title>JavaThread::run() (859 samples, 51.50%)</title><rect x="499.5" y="1267.0" width="607.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="502.5" y="1278.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (847 samples, 50.78%)</title><rect x="499.5" y="1251.0" width="599.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="502.5" y="1262.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (847 samples, 50.78%)</title><rect x="499.5" y="1235.0" width="599.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="502.5" y="1246.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (706 samples, 42.33%)</title><rect x="499.5" y="1219.0" width="499.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="502.5" y="1230.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (706 samples, 42.33%)</title><rect x="499.5" y="1203.0" width="499.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="502.5" y="1214.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, boo..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.06%)</title><rect x="499.5" y="1187.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="502.5" y="1198.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.06%)</title><rect x="499.5" y="1171.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="502.5" y="1182.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="499.5" y="1155.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="502.5" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="499.5" y="1139.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="502.5" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="499.5" y="1123.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="502.5" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="499.5" y="1107.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="502.5" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="499.5" y="1091.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="502.5" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="499.5" y="1075.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="502.5" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="499.5" y="1059.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="502.5" y="1070.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="499.5" y="1043.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="502.5" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="499.5" y="1027.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="502.5" y="1038.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="499.5" y="1011.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="502.5" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="499.5" y="995.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="502.5" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="499.5" y="979.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="502.5" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="499.5" y="963.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="502.5" y="974.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="499.5" y="947.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="502.5" y="958.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (459 samples, 27.52%)</title><rect x="500.3" y="1187.0" width="324.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="503.3" y="1198.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (14 samples, 0.84%)</title><rect x="500.3" y="1171.0" width="9.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="503.3" y="1182.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (10 samples, 0.60%)</title><rect x="500.3" y="1155.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="503.3" y="1166.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (5 samples, 0.30%)</title><rect x="503.8" y="1139.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="506.8" y="1150.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (4 samples, 0.24%)</title><rect x="504.5" y="1123.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="507.5" y="1134.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.06%)</title><rect x="505.9" y="1107.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="508.9" y="1118.0"></text>
</g>
<g>
<title>OopMap::set_oop(VMRegImpl*) (1 samples, 0.06%)</title><rect x="506.6" y="1107.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="509.6" y="1118.0"></text>
</g>
<g>
<title>CompressedWriteStream::write_int_mb(int) (1 samples, 0.06%)</title><rect x="506.6" y="1091.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="509.6" y="1102.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (4 samples, 0.24%)</title><rect x="507.3" y="1155.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="510.3" y="1166.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (4 samples, 0.24%)</title><rect x="507.3" y="1139.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="510.3" y="1150.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (2 samples, 0.12%)</title><rect x="508.7" y="1123.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="511.7" y="1134.0"></text>
</g>
<g>
<title>CodeBuffer::~CodeBuffer() (1 samples, 0.06%)</title><rect x="508.7" y="1107.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="511.7" y="1118.0"></text>
</g>
<g>
<title>CodeBuffer::verify_section_allocation() (1 samples, 0.06%)</title><rect x="508.7" y="1091.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="511.7" y="1102.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.06%)</title><rect x="509.4" y="1107.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="512.4" y="1118.0"></text>
</g>
<g>
<title>Assembler::movl(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="509.4" y="1091.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="512.4" y="1102.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.06%)</title><rect x="509.4" y="1075.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="512.4" y="1086.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (10 samples, 0.60%)</title><rect x="510.2" y="1171.0" width="7.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="513.2" y="1182.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.18%)</title><rect x="511.6" y="1155.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="514.6" y="1166.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="511.6" y="1139.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="514.6" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="512.3" y="1139.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="515.3" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="512.3" y="1123.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="515.3" y="1134.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="513.0" y="1139.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="516.0" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="513.0" y="1123.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="516.0" y="1134.0"></text>
</g>
<g>
<title>Compile::compute_loop_first_inst_sizes() [clone .part.127] (1 samples, 0.06%)</title><rect x="513.7" y="1155.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="516.7" y="1166.0"></text>
</g>
<g>
<title>JVMState::same_calls_as(JVMState const*) const (1 samples, 0.06%)</title><rect x="514.4" y="1155.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="517.4" y="1166.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.06%)</title><rect x="515.1" y="1155.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="518.1" y="1166.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.06%)</title><rect x="515.8" y="1155.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="518.8" y="1166.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="515.8" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="518.8" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="515.8" y="1123.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="518.8" y="1134.0"></text>
</g>
<g>
<title>immIOper::constant() const (1 samples, 0.06%)</title><rect x="516.5" y="1155.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="519.5" y="1166.0"></text>
</g>
<g>
<title>Matcher::match() (27 samples, 1.62%)</title><rect x="517.2" y="1171.0" width="19.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="520.2" y="1182.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.06%)</title><rect x="517.2" y="1155.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="520.2" y="1166.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.06%)</title><rect x="517.2" y="1139.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="520.2" y="1150.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (4 samples, 0.24%)</title><rect x="517.9" y="1155.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="520.9" y="1166.0"></text>
</g>
<g>
<title>Matcher::is_bmi_pattern(Node*, Node*) [clone .part.134] (1 samples, 0.06%)</title><rect x="520.8" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="523.8" y="1166.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (21 samples, 1.26%)</title><rect x="521.5" y="1155.0" width="14.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="524.5" y="1166.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (8 samples, 0.48%)</title><rect x="522.9" y="1139.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="525.9" y="1150.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (11 samples, 0.66%)</title><rect x="528.5" y="1139.0" width="7.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="531.5" y="1150.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (5 samples, 0.30%)</title><rect x="530.0" y="1123.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="533.0" y="1134.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="530.0" y="1107.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="533.0" y="1118.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="530.0" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="533.0" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.06%)</title><rect x="530.0" y="1075.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="533.0" y="1086.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (4 samples, 0.24%)</title><rect x="530.7" y="1107.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="533.7" y="1118.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.06%)</title><rect x="531.4" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="534.4" y="1102.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.06%)</title><rect x="532.1" y="1091.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="535.1" y="1102.0"></text>
</g>
<g>
<title>State::_sub_Op_CmpI(Node const*) (1 samples, 0.06%)</title><rect x="532.1" y="1075.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="535.1" y="1086.0"></text>
</g>
<g>
<title>TypeNarrowPtr::singleton() const (1 samples, 0.06%)</title><rect x="532.8" y="1091.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="535.8" y="1102.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (4 samples, 0.24%)</title><rect x="533.5" y="1123.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="536.5" y="1134.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.12%)</title><rect x="533.5" y="1107.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="536.5" y="1118.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.06%)</title><rect x="533.5" y="1091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="536.5" y="1102.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.06%)</title><rect x="534.2" y="1091.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="537.2" y="1102.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.06%)</title><rect x="534.2" y="1075.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="537.2" y="1086.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (2 samples, 0.12%)</title><rect x="534.9" y="1107.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="537.9" y="1118.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="535.6" y="1091.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="538.6" y="1102.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.12%)</title><rect x="536.3" y="1171.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="539.3" y="1182.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.12%)</title><rect x="536.3" y="1155.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="539.3" y="1166.0"></text>
</g>
<g>
<title>Block::succ_prob(unsigned int) (1 samples, 0.06%)</title><rect x="537.0" y="1139.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="540.0" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (4 samples, 0.24%)</title><rect x="537.7" y="1171.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="540.7" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (4 samples, 0.24%)</title><rect x="537.7" y="1155.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="540.7" y="1166.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="539.9" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="542.9" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (48 samples, 2.88%)</title><rect x="540.6" y="1171.0" width="33.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="543.6" y="1182.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.06%)</title><rect x="540.6" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="543.6" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (47 samples, 2.82%)</title><rect x="541.3" y="1155.0" width="33.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="544.3" y="1166.0">Ph..</text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="542.0" y="1139.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="545.0" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.06%)</title><rect x="542.7" y="1139.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="545.7" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (14 samples, 0.84%)</title><rect x="543.4" y="1139.0" width="9.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="546.4" y="1150.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (5 samples, 0.30%)</title><rect x="544.1" y="1123.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="547.1" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (4 samples, 0.24%)</title><rect x="547.6" y="1123.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="550.6" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (3 samples, 0.18%)</title><rect x="550.5" y="1123.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="553.5" y="1134.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.06%)</title><rect x="551.2" y="1107.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="554.2" y="1118.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="551.2" y="1091.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="554.2" y="1102.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="551.9" y="1107.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="554.9" y="1118.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="551.9" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="554.9" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.06%)</title><rect x="552.6" y="1123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="555.6" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (10 samples, 0.60%)</title><rect x="553.3" y="1139.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="556.3" y="1150.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.06%)</title><rect x="556.8" y="1123.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="559.8" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::needed_for_next_call(Block*, Node*, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="557.6" y="1123.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="560.6" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (3 samples, 0.18%)</title><rect x="558.3" y="1123.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="561.3" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (4 samples, 0.24%)</title><rect x="560.4" y="1139.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="563.4" y="1150.0"></text>
</g>
<g>
<title>RethrowExceptionNode::is_block_proj() const (1 samples, 0.06%)</title><rect x="562.5" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="565.5" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.12%)</title><rect x="563.2" y="1139.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="566.2" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.06%)</title><rect x="564.6" y="1139.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="567.6" y="1150.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.18%)</title><rect x="565.3" y="1139.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="568.3" y="1150.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="566.8" y="1123.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="569.8" y="1134.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (9 samples, 0.54%)</title><rect x="567.5" y="1139.0" width="6.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="570.5" y="1150.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.06%)</title><rect x="571.7" y="1123.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="574.7" y="1134.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.12%)</title><rect x="572.4" y="1123.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="575.4" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="573.1" y="1107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="576.1" y="1118.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="573.8" y="1139.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="576.8" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::fixup_flow() (1 samples, 0.06%)</title><rect x="574.5" y="1171.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="577.5" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.06%)</title><rect x="575.2" y="1171.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="578.2" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::PhaseChaitin(unsigned int, PhaseCFG&amp;, Matcher&amp;, bool) (2 samples, 0.12%)</title><rect x="575.9" y="1171.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="578.9" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (349 samples, 20.92%)</title><rect x="577.4" y="1171.0" width="246.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="580.4" y="1182.0">PhaseChaitin::Register_Allocate()</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (3 samples, 0.18%)</title><rect x="577.4" y="1155.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="580.4" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="579.5" y="1155.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="582.5" y="1166.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.06%)</title><rect x="580.2" y="1155.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="583.2" y="1166.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (14 samples, 0.84%)</title><rect x="580.9" y="1155.0" width="9.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="583.9" y="1166.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.06%)</title><rect x="590.1" y="1139.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="593.1" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (28 samples, 1.68%)</title><rect x="590.8" y="1155.0" width="19.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="593.8" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="596.5" y="1139.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="599.5" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.24%)</title><rect x="597.2" y="1139.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="600.2" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.06%)</title><rect x="600.0" y="1139.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="603.0" y="1150.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (14 samples, 0.84%)</title><rect x="600.7" y="1139.0" width="9.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="603.7" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.42%)</title><rect x="605.7" y="1123.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="608.7" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (20 samples, 1.20%)</title><rect x="610.6" y="1155.0" width="14.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="613.6" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.06%)</title><rect x="617.0" y="1139.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="620.0" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.18%)</title><rect x="617.7" y="1139.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="620.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (7 samples, 0.42%)</title><rect x="619.8" y="1139.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="622.8" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.18%)</title><rect x="622.6" y="1123.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="625.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (32 samples, 1.92%)</title><rect x="624.8" y="1155.0" width="22.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="627.8" y="1166.0">P..</text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (2 samples, 0.12%)</title><rect x="642.4" y="1139.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="645.4" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::clone_projs(Block*, unsigned int, Node*, Node*, unsigned int&amp;) (1 samples, 0.06%)</title><rect x="642.4" y="1123.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="645.4" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="643.2" y="1123.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="646.2" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (3 samples, 0.18%)</title><rect x="643.9" y="1139.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="646.9" y="1150.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.06%)</title><rect x="643.9" y="1123.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="646.9" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.06%)</title><rect x="644.6" y="1123.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="647.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int) (1 samples, 0.06%)</title><rect x="645.3" y="1123.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="648.3" y="1134.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.06%)</title><rect x="645.3" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="648.3" y="1118.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="646.0" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="649.0" y="1150.0"></text>
</g>
<g>
<title>compN_rReg_imm_klassNode::rule() const (1 samples, 0.06%)</title><rect x="646.7" y="1139.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="649.7" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (90 samples, 5.40%)</title><rect x="647.4" y="1155.0" width="63.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="650.4" y="1166.0">PhaseCh..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (2 samples, 0.12%)</title><rect x="655.9" y="1139.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="658.9" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.18%)</title><rect x="657.3" y="1139.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="660.3" y="1150.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.06%)</title><rect x="659.4" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="662.4" y="1150.0"></text>
</g>
<g>
<title>MachIdealNode::rule() const (1 samples, 0.06%)</title><rect x="660.1" y="1139.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="663.1" y="1150.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.06%)</title><rect x="660.8" y="1139.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="663.8" y="1150.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.06%)</title><rect x="661.5" y="1139.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="664.5" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (8 samples, 0.48%)</title><rect x="662.3" y="1139.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="665.3" y="1150.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.06%)</title><rect x="667.2" y="1123.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="670.2" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::adjust_high_pressure_index(Block*, unsigned int&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.12%)</title><rect x="667.9" y="1139.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="670.9" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (41 samples, 2.46%)</title><rect x="669.3" y="1139.0" width="29.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="672.3" y="1150.0">Ph..</text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (3 samples, 0.18%)</title><rect x="685.6" y="1123.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="688.6" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (15 samples, 0.90%)</title><rect x="687.7" y="1123.0" width="10.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="690.7" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (13 samples, 0.78%)</title><rect x="698.3" y="1139.0" width="9.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="701.3" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="701.2" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="704.2" y="1134.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="701.9" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="704.9" y="1134.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (7 samples, 0.42%)</title><rect x="702.6" y="1123.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="705.6" y="1134.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (5 samples, 0.30%)</title><rect x="707.5" y="1139.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="710.5" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (6 samples, 0.36%)</title><rect x="711.1" y="1155.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="714.1" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.18%)</title><rect x="713.2" y="1139.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="716.2" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="714.6" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="717.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (3 samples, 0.18%)</title><rect x="715.3" y="1155.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.3" y="1166.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="716.7" y="1139.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="719.7" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (2 samples, 0.12%)</title><rect x="717.4" y="1155.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="720.4" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (27 samples, 1.62%)</title><rect x="718.8" y="1155.0" width="19.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.8" y="1166.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.06%)</title><rect x="728.0" y="1139.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="731.0" y="1150.0"></text>
</g>
<g>
<title>MachTypeNode::bottom_type() const (1 samples, 0.06%)</title><rect x="728.8" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="731.8" y="1150.0"></text>
</g>
<g>
<title>RegMask::Size() const (8 samples, 0.48%)</title><rect x="729.5" y="1139.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="732.5" y="1150.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.06%)</title><rect x="735.1" y="1139.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="738.1" y="1150.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (2 samples, 0.12%)</title><rect x="735.8" y="1139.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="738.8" y="1150.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="737.2" y="1139.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="740.2" y="1150.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="737.2" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="740.2" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.85] (4 samples, 0.24%)</title><rect x="737.9" y="1155.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="740.9" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (5 samples, 0.30%)</title><rect x="740.8" y="1155.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="743.8" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (41 samples, 2.46%)</title><rect x="744.3" y="1155.0" width="29.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="747.3" y="1166.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (15 samples, 0.90%)</title><rect x="761.3" y="1139.0" width="10.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="764.3" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.42] (1 samples, 0.06%)</title><rect x="771.2" y="1123.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="774.2" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.42] (1 samples, 0.06%)</title><rect x="771.2" y="1107.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="774.2" y="1118.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="771.9" y="1139.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="774.9" y="1150.0"></text>
</g>
<g>
<title>xorL_rRegNode::two_adr() const (1 samples, 0.06%)</title><rect x="772.6" y="1139.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="775.6" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.12%)</title><rect x="773.3" y="1155.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="776.3" y="1166.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (11 samples, 0.66%)</title><rect x="774.7" y="1155.0" width="7.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="777.7" y="1166.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (2 samples, 0.12%)</title><rect x="774.7" y="1139.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="777.7" y="1150.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (9 samples, 0.54%)</title><rect x="776.2" y="1139.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="779.2" y="1150.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (2 samples, 0.12%)</title><rect x="778.3" y="1123.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="781.3" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="779.0" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="782.0" y="1118.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (3 samples, 0.18%)</title><rect x="779.7" y="1123.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="782.7" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.06%)</title><rect x="781.1" y="1107.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="784.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.06%)</title><rect x="781.8" y="1123.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="784.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (10 samples, 0.60%)</title><rect x="782.5" y="1155.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="785.5" y="1166.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.48%)</title><rect x="783.9" y="1139.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="786.9" y="1150.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (8 samples, 0.48%)</title><rect x="789.6" y="1155.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="792.6" y="1166.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="792.4" y="1139.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="795.4" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.18%)</title><rect x="793.1" y="1139.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="796.1" y="1150.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (7 samples, 0.42%)</title><rect x="795.3" y="1155.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="798.3" y="1166.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.18%)</title><rect x="798.1" y="1139.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="801.1" y="1150.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.06%)</title><rect x="800.2" y="1155.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="803.2" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (31 samples, 1.86%)</title><rect x="800.9" y="1155.0" width="21.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="803.9" y="1166.0">P..</text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.12%)</title><rect x="811.5" y="1139.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="814.5" y="1150.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.12%)</title><rect x="812.9" y="1139.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="815.9" y="1150.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (12 samples, 0.72%)</title><rect x="814.4" y="1139.0" width="8.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="817.4" y="1150.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="818.6" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="821.6" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.30%)</title><rect x="819.3" y="1123.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="822.3" y="1134.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.06%)</title><rect x="822.8" y="1155.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="825.8" y="1166.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.06%)</title><rect x="823.5" y="1155.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="826.5" y="1166.0"></text>
</g>
<g>
<title>storeImmNNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.06%)</title><rect x="824.3" y="1171.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="827.3" y="1182.0"></text>
</g>
<g>
<title>Compile::Optimize() (201 samples, 12.05%)</title><rect x="825.0" y="1187.0" width="142.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="828.0" y="1198.0">Compile::Optimize()</text>
</g>
<g>
<title>CmpNode::bottom_type() const (1 samples, 0.06%)</title><rect x="825.7" y="1171.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="828.7" y="1182.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (4 samples, 0.24%)</title><rect x="826.4" y="1171.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="829.4" y="1182.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (4 samples, 0.24%)</title><rect x="826.4" y="1155.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="829.4" y="1166.0"></text>
</g>
<g>
<title>JVMState::interpreter_frame_size() const (1 samples, 0.06%)</title><rect x="828.5" y="1139.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="831.5" y="1150.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (67 samples, 4.02%)</title><rect x="829.2" y="1171.0" width="47.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="832.2" y="1182.0">Comp..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (67 samples, 4.02%)</title><rect x="829.2" y="1155.0" width="47.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="832.2" y="1166.0">Phas..</text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="829.2" y="1139.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="832.2" y="1150.0"></text>
</g>
<g>
<title>Compile::print_method(CompilerPhaseType, int) [clone .isra.202] [clone .constprop.204] (1 samples, 0.06%)</title><rect x="829.9" y="1139.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="832.9" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.12%)</title><rect x="830.6" y="1139.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="833.6" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::adjust_loop_exit_prob(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="830.6" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="833.6" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="831.3" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="834.3" y="1134.0"></text>
</g>
<g>
<title>LoopNode::is_valid_counted_loop() const [clone .part.136] (1 samples, 0.06%)</title><rect x="831.3" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="834.3" y="1118.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="832.0" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="835.0" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="832.0" y="1123.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="835.0" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.06%)</title><rect x="832.0" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="835.0" y="1118.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.06%)</title><rect x="832.0" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="835.0" y="1102.0"></text>
</g>
<g>
<title>IdealLoopTree::reassociate_invariants(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="832.7" y="1139.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="835.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (8 samples, 0.48%)</title><rect x="833.5" y="1139.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="836.5" y="1150.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.12%)</title><rect x="837.7" y="1123.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="840.7" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.12%)</title><rect x="839.1" y="1139.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="842.1" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (14 samples, 0.84%)</title><rect x="840.5" y="1139.0" width="9.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="843.5" y="1150.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="842.6" y="1123.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="845.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (10 samples, 0.60%)</title><rect x="843.4" y="1123.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="846.4" y="1134.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.06%)</title><rect x="844.1" y="1107.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="847.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (3 samples, 0.18%)</title><rect x="844.8" y="1107.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="847.8" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (5 samples, 0.30%)</title><rect x="846.9" y="1107.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="849.9" y="1118.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.06%)</title><rect x="846.9" y="1091.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="849.9" y="1102.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="846.9" y="1075.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="849.9" y="1086.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="846.9" y="1059.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="849.9" y="1070.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="846.9" y="1043.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="849.9" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (3 samples, 0.18%)</title><rect x="847.6" y="1091.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="850.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (3 samples, 0.18%)</title><rect x="847.6" y="1075.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="850.6" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.126] (1 samples, 0.06%)</title><rect x="849.0" y="1059.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="852.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.06%)</title><rect x="849.7" y="1091.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="852.7" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (7 samples, 0.42%)</title><rect x="850.4" y="1139.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="853.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (3 samples, 0.18%)</title><rect x="852.6" y="1123.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="855.6" y="1134.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.06%)</title><rect x="853.3" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="856.3" y="1118.0"></text>
</g>
<g>
<title>Node_Array::Node_Array(Arena*) (1 samples, 0.06%)</title><rect x="854.0" y="1107.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="857.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::sort(IdealLoopTree*, IdealLoopTree*) (1 samples, 0.06%)</title><rect x="854.7" y="1123.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="857.7" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (17 samples, 1.02%)</title><rect x="855.4" y="1139.0" width="12.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="858.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (3 samples, 0.18%)</title><rect x="858.9" y="1123.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="861.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::identical_backtoback_ifs(Node*) [clone .part.106] (1 samples, 0.06%)</title><rect x="860.3" y="1107.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="863.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (8 samples, 0.48%)</title><rect x="861.0" y="1123.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="864.0" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::is_member(IdealLoopTree const*) const (1 samples, 0.06%)</title><rect x="861.0" y="1107.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="864.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="861.8" y="1107.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="864.8" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (3 samples, 0.18%)</title><rect x="862.5" y="1107.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="865.5" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="863.9" y="1091.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="866.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (2 samples, 0.12%)</title><rect x="864.6" y="1107.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="867.6" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="864.6" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="867.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.06%)</title><rect x="865.3" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="868.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::replace_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="866.0" y="1107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="869.0" y="1118.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.06%)</title><rect x="866.0" y="1091.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="869.0" y="1102.0"></text>
</g>
<g>
<title>ProjNode::Opcode() const (1 samples, 0.06%)</title><rect x="866.7" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="869.7" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.36%)</title><rect x="867.4" y="1139.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="870.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.30%)</title><rect x="868.1" y="1123.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="871.1" y="1134.0"></text>
</g>
<g>
<title>CastIINode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="868.8" y="1107.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="871.8" y="1118.0"></text>
</g>
<g>
<title>TypeInt::filter_helper(Type const*, bool) const (1 samples, 0.06%)</title><rect x="868.8" y="1091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="871.8" y="1102.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="868.8" y="1075.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="871.8" y="1086.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="868.8" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="871.8" y="1070.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="868.8" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="871.8" y="1054.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="869.5" y="1107.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="872.5" y="1118.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.12%)</title><rect x="870.2" y="1107.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="873.2" y="1118.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.12%)</title><rect x="870.2" y="1091.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="873.2" y="1102.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.06%)</title><rect x="871.7" y="1139.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="874.7" y="1150.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.06%)</title><rect x="872.4" y="1139.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="875.4" y="1150.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (2 samples, 0.12%)</title><rect x="873.1" y="1139.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="876.1" y="1150.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (2 samples, 0.12%)</title><rect x="874.5" y="1139.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="877.5" y="1150.0"></text>
</g>
<g>
<title>SuperWord::transform_loop(IdealLoopTree*, bool) (1 samples, 0.06%)</title><rect x="875.9" y="1139.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="878.9" y="1150.0"></text>
</g>
<g>
<title>SuperWord::SLP_extract() (1 samples, 0.06%)</title><rect x="875.9" y="1123.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="878.9" y="1134.0"></text>
</g>
<g>
<title>SuperWord::output() (1 samples, 0.06%)</title><rect x="875.9" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="878.9" y="1118.0"></text>
</g>
<g>
<title>CountedLoopReserveKit::CountedLoopReserveKit(PhaseIdealLoop*, IdealLoopTree*, bool) (1 samples, 0.06%)</title><rect x="875.9" y="1091.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="878.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::create_reserve_version_of_loop(IdealLoopTree*, CountedLoopReserveKit*) (1 samples, 0.06%)</title><rect x="875.9" y="1075.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="878.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.06%)</title><rect x="875.9" y="1059.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="878.9" y="1070.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.261] (6 samples, 0.36%)</title><rect x="876.6" y="1171.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="879.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="878.7" y="1155.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="881.7" y="1166.0"></text>
</g>
<g>
<title>AddPNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="878.7" y="1139.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="881.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (2 samples, 0.12%)</title><rect x="879.4" y="1155.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="882.4" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="880.1" y="1139.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="883.1" y="1150.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="880.1" y="1123.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="883.1" y="1134.0"></text>
</g>
<g>
<title>Compile::should_optimize_expensive_nodes(PhaseIterGVN&amp;) (1 samples, 0.06%)</title><rect x="880.9" y="1171.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="883.9" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (10 samples, 0.60%)</title><rect x="881.6" y="1171.0" width="7.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="884.6" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (10 samples, 0.60%)</title><rect x="881.6" y="1155.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="884.6" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::add_final_edges(Node*) (1 samples, 0.06%)</title><rect x="883.7" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="886.7" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::get_addp_base(Node*) (1 samples, 0.06%)</title><rect x="883.7" y="1123.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="886.7" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (1 samples, 0.06%)</title><rect x="884.4" y="1139.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="887.4" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (5 samples, 0.30%)</title><rect x="885.1" y="1139.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="888.1" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.12%)</title><rect x="885.8" y="1123.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="888.8" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="885.8" y="1107.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="888.8" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="885.8" y="1091.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="888.8" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="885.8" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="888.8" y="1086.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="885.8" y="1059.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="888.8" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.06%)</title><rect x="886.5" y="1107.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="889.5" y="1118.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (1 samples, 0.06%)</title><rect x="886.5" y="1091.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="889.5" y="1102.0"></text>
</g>
<g>
<title>MergeMemNode::memory_at(unsigned int) const (1 samples, 0.06%)</title><rect x="887.2" y="1123.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="890.2" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.06%)</title><rect x="887.9" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="890.9" y="1134.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (8 samples, 0.48%)</title><rect x="888.6" y="1171.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="891.6" y="1182.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.06%)</title><rect x="891.5" y="1155.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="894.5" y="1166.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="891.5" y="1139.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="894.5" y="1150.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="891.5" y="1123.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="894.5" y="1134.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="891.5" y="1107.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="894.5" y="1118.0"></text>
</g>
<g>
<title>TypeAryPtr::hash() const (1 samples, 0.06%)</title><rect x="891.5" y="1091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="894.5" y="1102.0"></text>
</g>
<g>
<title>ConstraintCastNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="892.2" y="1155.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="895.2" y="1166.0"></text>
</g>
<g>
<title>TypeOopPtr::filter_helper(Type const*, bool) const (1 samples, 0.06%)</title><rect x="892.2" y="1139.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="895.2" y="1150.0"></text>
</g>
<g>
<title>ConvI2LNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="892.9" y="1155.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="895.9" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="892.9" y="1139.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="895.9" y="1150.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="892.9" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="895.9" y="1134.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.06%)</title><rect x="892.9" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="895.9" y="1118.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="893.6" y="1155.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.6" y="1166.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="893.6" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="896.6" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="893.6" y="1123.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="896.6" y="1134.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.06%)</title><rect x="894.3" y="1171.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="897.3" y="1182.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.06%)</title><rect x="894.3" y="1155.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="897.3" y="1166.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.06%)</title><rect x="894.3" y="1139.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="897.3" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (60 samples, 3.60%)</title><rect x="895.0" y="1171.0" width="42.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="898.0" y="1182.0">Phas..</text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.0" y="1155.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="898.0" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.0" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.0" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.0" y="1123.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.0" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.0" y="1107.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="898.0" y="1118.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.0" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="898.0" y="1102.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.0" y="1075.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="898.0" y="1086.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.0" y="1059.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="898.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="895.0" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="898.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="895.0" y="1027.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="898.0" y="1038.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1155.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.7" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1139.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="898.7" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1123.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="898.7" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1107.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="898.7" y="1118.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1091.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="898.7" y="1102.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1075.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.7" y="1086.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1059.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="898.7" y="1070.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1043.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="898.7" y="1054.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1027.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="898.7" y="1038.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="1011.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="898.7" y="1022.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="995.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="898.7" y="1006.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="979.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="898.7" y="990.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="898.7" y="974.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="898.7" y="958.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="898.7" y="942.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="915.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.7" y="926.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="895.7" y="899.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.7" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*&amp;) (1 samples, 0.06%)</title><rect x="895.7" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="898.7" y="894.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="896.4" y="1155.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="899.4" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="896.4" y="1139.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="899.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.06%)</title><rect x="896.4" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="899.4" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.06%)</title><rect x="896.4" y="1107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="899.4" y="1118.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="896.4" y="1091.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="899.4" y="1102.0"></text>
</g>
<g>
<title>Compile::add_range_check_cast(Node*) (1 samples, 0.06%)</title><rect x="896.4" y="1075.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="899.4" y="1086.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.24%)</title><rect x="897.1" y="1155.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="900.1" y="1166.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.24%)</title><rect x="897.1" y="1139.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="900.1" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="897.1" y="1123.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="900.1" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.06%)</title><rect x="897.1" y="1107.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="900.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.06%)</title><rect x="897.1" y="1091.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="900.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.06%)</title><rect x="897.1" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.1" y="1086.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="897.1" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.1" y="1070.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.06%)</title><rect x="897.1" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="900.1" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (3 samples, 0.18%)</title><rect x="897.8" y="1123.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (2 samples, 0.12%)</title><rect x="897.8" y="1107.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="900.8" y="1118.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (2 samples, 0.12%)</title><rect x="897.8" y="1091.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="900.8" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.06%)</title><rect x="899.2" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="902.2" y="1118.0"></text>
</g>
<g>
<title>Invariance::is_invariant(Node*) (1 samples, 0.06%)</title><rect x="899.2" y="1091.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="902.2" y="1102.0"></text>
</g>
<g>
<title>IdealLoopTree::is_member(IdealLoopTree const*) const (1 samples, 0.06%)</title><rect x="899.2" y="1075.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="902.2" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.24%)</title><rect x="900.0" y="1155.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="903.0" y="1166.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.12%)</title><rect x="901.4" y="1139.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="904.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.30%)</title><rect x="902.8" y="1155.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="905.8" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (10 samples, 0.60%)</title><rect x="906.3" y="1155.0" width="7.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="909.3" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (7 samples, 0.42%)</title><rect x="908.4" y="1139.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="911.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="909.1" y="1123.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="912.1" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (5 samples, 0.30%)</title><rect x="909.9" y="1123.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="912.9" y="1134.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.06%)</title><rect x="909.9" y="1107.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="912.9" y="1118.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="909.9" y="1091.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="912.9" y="1102.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.06%)</title><rect x="909.9" y="1075.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="912.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.12%)</title><rect x="910.6" y="1107.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="913.6" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.12%)</title><rect x="910.6" y="1091.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="913.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.126] (1 samples, 0.06%)</title><rect x="911.3" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="914.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.12%)</title><rect x="912.0" y="1107.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="915.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (8 samples, 0.48%)</title><rect x="913.4" y="1155.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="916.4" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.06%)</title><rect x="917.6" y="1139.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="920.6" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.06%)</title><rect x="918.3" y="1139.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="921.3" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (7 samples, 0.42%)</title><rect x="919.1" y="1155.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="922.1" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.06%)</title><rect x="919.8" y="1139.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="922.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_region(Node*, Node*) (1 samples, 0.06%)</title><rect x="919.8" y="1123.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="922.8" y="1134.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="919.8" y="1107.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="922.8" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.06%)</title><rect x="920.5" y="1139.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="923.5" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="920.5" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="923.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (4 samples, 0.24%)</title><rect x="921.2" y="1139.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="924.2" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.06%)</title><rect x="921.9" y="1123.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="924.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.06%)</title><rect x="922.6" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="925.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.06%)</title><rect x="922.6" y="1107.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="925.6" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_move_store_before_loop(Node*, Node*) (1 samples, 0.06%)</title><rect x="923.3" y="1123.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="926.3" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.06%)</title><rect x="923.3" y="1107.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="926.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (15 samples, 0.90%)</title><rect x="924.0" y="1155.0" width="10.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.0" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (15 samples, 0.90%)</title><rect x="924.0" y="1139.0" width="10.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="927.0" y="1150.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="925.4" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="928.4" y="1134.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="925.4" y="1107.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="928.4" y="1118.0"></text>
</g>
<g>
<title>CallNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="926.1" y="1123.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="929.1" y="1134.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="926.8" y="1123.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="929.8" y="1134.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="926.8" y="1107.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="929.8" y="1118.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="926.8" y="1091.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="929.8" y="1102.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="927.5" y="1123.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="930.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (4 samples, 0.24%)</title><rect x="928.2" y="1123.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="931.2" y="1134.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.06%)</title><rect x="929.7" y="1107.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="932.7" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="930.4" y="1107.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="933.4" y="1118.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.06%)</title><rect x="930.4" y="1091.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="933.4" y="1102.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (5 samples, 0.30%)</title><rect x="931.1" y="1123.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="934.1" y="1134.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="931.8" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="934.8" y="1118.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (3 samples, 0.18%)</title><rect x="932.5" y="1107.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="935.5" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="934.6" y="1155.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="937.6" y="1166.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.06%)</title><rect x="934.6" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="937.6" y="1150.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (2 samples, 0.12%)</title><rect x="935.3" y="1155.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="938.3" y="1166.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.06%)</title><rect x="936.7" y="1155.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="939.7" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (2 samples, 0.12%)</title><rect x="937.4" y="1171.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="940.4" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.06%)</title><rect x="938.2" y="1155.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="941.2" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (34 samples, 2.04%)</title><rect x="938.9" y="1171.0" width="24.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="941.9" y="1182.0">P..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (33 samples, 1.98%)</title><rect x="939.6" y="1155.0" width="23.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="942.6" y="1166.0">P..</text>
</g>
<g>
<title>AddLNode::add_ring(Type const*, Type const*) const (1 samples, 0.06%)</title><rect x="940.3" y="1139.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="943.3" y="1150.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (3 samples, 0.18%)</title><rect x="941.0" y="1139.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="944.0" y="1150.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (2 samples, 0.12%)</title><rect x="941.7" y="1123.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="944.7" y="1134.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (3 samples, 0.18%)</title><rect x="943.1" y="1139.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="946.1" y="1150.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="943.1" y="1123.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="946.1" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.12%)</title><rect x="943.8" y="1123.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="946.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.12%)</title><rect x="943.8" y="1107.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="946.8" y="1118.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.06%)</title><rect x="944.5" y="1091.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="947.5" y="1102.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.18%)</title><rect x="945.2" y="1139.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="948.2" y="1150.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="945.2" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="948.2" y="1134.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.06%)</title><rect x="945.2" y="1107.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="948.2" y="1118.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="945.2" y="1091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="948.2" y="1102.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="945.2" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="948.2" y="1086.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="945.2" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="948.2" y="1070.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.12%)</title><rect x="945.9" y="1123.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="948.9" y="1134.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.06%)</title><rect x="945.9" y="1107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="948.9" y="1118.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="945.9" y="1091.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="948.9" y="1102.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="946.6" y="1107.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="949.6" y="1118.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="946.6" y="1091.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.6" y="1102.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="946.6" y="1075.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="949.6" y="1086.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="946.6" y="1059.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="949.6" y="1070.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (2 samples, 0.12%)</title><rect x="947.4" y="1139.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="950.4" y="1150.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (4 samples, 0.24%)</title><rect x="948.8" y="1139.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="951.8" y="1150.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.06%)</title><rect x="950.2" y="1123.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="953.2" y="1134.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.06%)</title><rect x="950.2" y="1107.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="953.2" y="1118.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.06%)</title><rect x="950.2" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="953.2" y="1102.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="950.9" y="1123.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="953.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (4 samples, 0.24%)</title><rect x="951.6" y="1139.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="954.6" y="1150.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.06%)</title><rect x="953.0" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="956.0" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.06%)</title><rect x="953.7" y="1123.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.7" y="1134.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="954.4" y="1139.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="957.4" y="1150.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.06%)</title><rect x="954.4" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="957.4" y="1134.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="955.1" y="1139.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="958.1" y="1150.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (6 samples, 0.36%)</title><rect x="955.8" y="1139.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="958.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.12%)</title><rect x="955.8" y="1123.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="958.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.12%)</title><rect x="955.8" y="1107.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="958.8" y="1118.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (2 samples, 0.12%)</title><rect x="955.8" y="1091.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="958.8" y="1102.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (3 samples, 0.18%)</title><rect x="957.3" y="1123.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="960.3" y="1134.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="959.4" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="962.4" y="1134.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.18%)</title><rect x="960.1" y="1139.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="963.1" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (3 samples, 0.18%)</title><rect x="960.1" y="1123.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="963.1" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.18%)</title><rect x="960.1" y="1107.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="963.1" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.18%)</title><rect x="960.1" y="1091.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="963.1" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.18%)</title><rect x="960.1" y="1075.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="963.1" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="1059.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="963.1" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="963.1" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="1027.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.1" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="1011.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.1" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="995.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="963.1" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="963.1" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="963.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="963.1" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="963.1" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="931.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="963.1" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="963.1" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="899.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="963.1" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="963.1" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="867.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="963.1" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="851.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="963.1" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="963.1" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="819.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="963.1" y="830.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.06%)</title><rect x="960.1" y="803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="963.1" y="814.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.06%)</title><rect x="960.1" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="963.1" y="798.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (2 samples, 0.12%)</title><rect x="960.8" y="1059.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="963.8" y="1070.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.12%)</title><rect x="960.8" y="1043.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="963.8" y="1054.0"></text>
</g>
<g>
<title>StoreNode::Value(PhaseGVN*) const (1 samples, 0.06%)</title><rect x="962.2" y="1139.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="965.2" y="1150.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.06%)</title><rect x="962.9" y="1171.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="965.9" y="1182.0"></text>
</g>
<g>
<title>PhaseMacroExpand::process_users_of_allocation(CallNode*) (1 samples, 0.06%)</title><rect x="962.9" y="1155.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="965.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.06%)</title><rect x="962.9" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="965.9" y="1150.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (3 samples, 0.18%)</title><rect x="963.6" y="1171.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="966.6" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.18%)</title><rect x="963.6" y="1155.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="966.6" y="1166.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="963.6" y="1139.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="966.6" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="964.3" y="1139.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="967.3" y="1150.0"></text>
</g>
<g>
<title>ConvI2LNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="964.3" y="1123.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="967.3" y="1134.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="964.3" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="967.3" y="1118.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="964.3" y="1091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="967.3" y="1102.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="965.0" y="1139.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="968.0" y="1150.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="965.7" y="1171.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="968.7" y="1182.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.06%)</title><rect x="965.7" y="1155.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="968.7" y="1166.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.06%)</title><rect x="965.7" y="1139.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="968.7" y="1150.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.06%)</title><rect x="966.5" y="1171.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="969.5" y="1182.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (3 samples, 0.18%)</title><rect x="967.2" y="1187.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.2" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (38 samples, 2.28%)</title><rect x="969.3" y="1187.0" width="26.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="972.3" y="1198.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (38 samples, 2.28%)</title><rect x="969.3" y="1171.0" width="26.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="972.3" y="1182.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (36 samples, 2.16%)</title><rect x="970.0" y="1155.0" width="25.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="973.0" y="1166.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (36 samples, 2.16%)</title><rect x="970.0" y="1139.0" width="25.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="973.0" y="1150.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (36 samples, 2.16%)</title><rect x="970.0" y="1123.0" width="25.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="973.0" y="1134.0">P..</text>
</g>
<g>
<title>Parse::do_call() (34 samples, 2.04%)</title><rect x="970.0" y="1107.0" width="24.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="973.0" y="1118.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="970.0" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="973.0" y="1102.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="970.0" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="973.0" y="1086.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="970.0" y="1059.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="973.0" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="970.0" y="1043.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="973.0" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="970.0" y="1027.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="973.0" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="970.0" y="1011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="973.0" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="970.0" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="973.0" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="970.0" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="973.0" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_new(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="970.0" y="963.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="973.0" y="974.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.06%)</title><rect x="970.0" y="947.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="973.0" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="970.0" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="973.0" y="942.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="970.0" y="915.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="973.0" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="970.0" y="899.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="973.0" y="910.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="970.0" y="883.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="973.0" y="894.0"></text>
</g>
<g>
<title>Compile::should_delay_string_inlining(ciMethod*, JVMState*) (1 samples, 0.06%)</title><rect x="970.7" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="973.7" y="1102.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.06%)</title><rect x="971.4" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="974.4" y="1102.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="971.4" y="1075.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="974.4" y="1086.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.06%)</title><rect x="971.4" y="1059.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="974.4" y="1070.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.06%)</title><rect x="971.4" y="1043.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="974.4" y="1054.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.06%)</title><rect x="971.4" y="1027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="974.4" y="1038.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="971.4" y="1011.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="974.4" y="1022.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.06%)</title><rect x="971.4" y="995.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="974.4" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (17 samples, 1.02%)</title><rect x="972.1" y="1091.0" width="12.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="975.1" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (17 samples, 1.02%)</title><rect x="972.1" y="1075.0" width="12.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="975.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 1.02%)</title><rect x="972.1" y="1059.0" width="12.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="975.1" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 1.02%)</title><rect x="972.1" y="1043.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="975.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 1.02%)</title><rect x="972.1" y="1027.0" width="12.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="975.1" y="1038.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (2 samples, 0.12%)</title><rect x="972.1" y="1011.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="975.1" y="1022.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const*&amp;) (2 samples, 0.12%)</title><rect x="972.1" y="995.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="975.1" y="1006.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="972.8" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="975.8" y="990.0"></text>
</g>
<g>
<title>LoadRangeNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="972.8" y="963.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="975.8" y="974.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="972.8" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="975.8" y="958.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.245] (1 samples, 0.06%)</title><rect x="972.8" y="931.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="975.8" y="942.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.06%)</title><rect x="972.8" y="915.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="975.8" y="926.0"></text>
</g>
<g>
<title>TypeAryPtr::klass() const (1 samples, 0.06%)</title><rect x="972.8" y="899.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="975.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.78%)</title><rect x="973.5" y="1011.0" width="9.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="976.5" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.60%)</title><rect x="973.5" y="995.0" width="7.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.5" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.60%)</title><rect x="973.5" y="979.0" width="7.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.54%)</title><rect x="973.5" y="963.0" width="6.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.54%)</title><rect x="973.5" y="947.0" width="6.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="976.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.54%)</title><rect x="973.5" y="931.0" width="6.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="976.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.48%)</title><rect x="973.5" y="915.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="976.5" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.42%)</title><rect x="973.5" y="899.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="976.5" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.42%)</title><rect x="973.5" y="883.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="976.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.42%)</title><rect x="973.5" y="867.0" width="5.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="976.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.36%)</title><rect x="973.5" y="851.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="976.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="973.5" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="976.5" y="846.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.06%)</title><rect x="973.5" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="976.5" y="830.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.06%)</title><rect x="973.5" y="803.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="976.5" y="814.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.06%)</title><rect x="973.5" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="976.5" y="798.0"></text>
</g>
<g>
<title>JVMState::clone_shallow(Compile*) const (1 samples, 0.06%)</title><rect x="973.5" y="771.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.30%)</title><rect x="974.2" y="835.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="977.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="974.2" y="819.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.2" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="974.2" y="803.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="977.2" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="974.2" y="787.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="977.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="974.2" y="771.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="977.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="974.2" y="755.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="977.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="974.2" y="739.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="977.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="974.2" y="723.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="977.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="974.2" y="707.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="977.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="974.2" y="691.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="977.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="974.2" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="974.2" y="659.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="977.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="974.2" y="643.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="977.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="974.2" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="977.2" y="638.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="974.2" y="611.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="977.2" y="622.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="974.2" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="977.2" y="606.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="974.2" y="579.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="977.2" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="974.2" y="563.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.2" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="974.2" y="547.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.2" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="974.2" y="531.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="977.2" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="974.2" y="515.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="977.2" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="974.2" y="499.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.2" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="974.2" y="483.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="977.2" y="494.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="974.2" y="467.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="977.2" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="974.2" y="451.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="977.2" y="462.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="974.2" y="435.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="977.2" y="446.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="974.2" y="419.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="977.2" y="430.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="974.2" y="403.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="977.2" y="414.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="974.2" y="387.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="977.2" y="398.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="974.2" y="371.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="977.2" y="382.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="974.2" y="355.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="977.2" y="366.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="974.2" y="339.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="977.2" y="350.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="974.2" y="323.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="977.2" y="334.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.06%)</title><rect x="974.2" y="307.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="977.2" y="318.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_instance_klass() const (1 samples, 0.06%)</title><rect x="974.9" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="977.9" y="718.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="975.6" y="803.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="978.6" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="975.6" y="787.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="978.6" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="975.6" y="771.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="978.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="975.6" y="755.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="978.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="975.6" y="739.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="978.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="975.6" y="723.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="978.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="975.6" y="707.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="978.6" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="975.6" y="691.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="978.6" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="975.6" y="675.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="978.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="975.6" y="659.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="978.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="975.6" y="643.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="978.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="975.6" y="627.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="978.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="975.6" y="611.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="978.6" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="975.6" y="595.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="978.6" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="975.6" y="579.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="978.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="975.6" y="563.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="978.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="975.6" y="547.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="978.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="975.6" y="531.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="978.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="975.6" y="515.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="978.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="975.6" y="499.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="978.6" y="510.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.06%)</title><rect x="975.6" y="483.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="978.6" y="494.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="975.6" y="467.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="978.6" y="478.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="975.6" y="451.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="978.6" y="462.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="975.6" y="435.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="978.6" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::box_klass_type(Klass*) (1 samples, 0.06%)</title><rect x="975.6" y="419.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="978.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="976.4" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="979.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="976.4" y="803.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="979.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_lookupswitch() (1 samples, 0.06%)</title><rect x="977.1" y="819.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.1" y="830.0"></text>
</g>
<g>
<title>Parse::jump_switch_ranges(Node*, SwitchRange*, SwitchRange*, int) (1 samples, 0.06%)</title><rect x="977.1" y="803.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="980.1" y="814.0"></text>
</g>
<g>
<title>Parse::linear_search_switch_ranges(Node*, SwitchRange*&amp;, SwitchRange*&amp;) (1 samples, 0.06%)</title><rect x="977.1" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="980.1" y="798.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="977.1" y="771.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="980.1" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="977.1" y="755.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="980.1" y="766.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.06%)</title><rect x="977.8" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="980.8" y="862.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="977.8" y="835.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="980.8" y="846.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="977.8" y="819.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="980.8" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="978.5" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="981.5" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="978.5" y="883.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="981.5" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="978.5" y="867.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="981.5" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="978.5" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="981.5" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="978.5" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="979.2" y="915.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="982.2" y="926.0"></text>
</g>
<g>
<title>Parse::dynamic_branch_prediction(float&amp;, BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="979.2" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="982.2" y="910.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.06%)</title><rect x="979.2" y="883.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="982.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="979.9" y="963.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="982.9" y="974.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="979.9" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="982.9" y="958.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="979.9" y="931.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="982.9" y="942.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="980.6" y="995.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="983.6" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="980.6" y="979.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="983.6" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="980.6" y="963.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="983.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="980.6" y="947.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="983.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="980.6" y="931.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="983.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="980.6" y="915.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="983.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="980.6" y="899.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="983.6" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="980.6" y="883.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="983.6" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="980.6" y="867.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="983.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="980.6" y="851.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="983.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="980.6" y="835.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="983.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="980.6" y="819.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="983.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="980.6" y="803.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="983.6" y="814.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="980.6" y="787.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="983.6" y="798.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="980.6" y="771.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="983.6" y="782.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="980.6" y="755.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="983.6" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="980.6" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="983.6" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="980.6" y="723.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="983.6" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="980.6" y="707.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="983.6" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="980.6" y="691.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="983.6" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="980.6" y="675.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="983.6" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="980.6" y="659.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="983.6" y="670.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="980.6" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="983.6" y="654.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="980.6" y="627.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="983.6" y="638.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="980.6" y="611.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="983.6" y="622.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="980.6" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="983.6" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="981.3" y="787.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="984.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="981.3" y="771.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="984.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="981.3" y="755.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="984.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="981.3" y="739.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="984.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="981.3" y="723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="984.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="981.3" y="707.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="984.3" y="718.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="981.3" y="691.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="984.3" y="702.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.06%)</title><rect x="981.3" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="984.3" y="686.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="981.3" y="659.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="984.3" y="670.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="982.0" y="979.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="985.0" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="982.0" y="963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="985.0" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="982.0" y="947.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="985.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="982.0" y="931.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="985.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="982.0" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="985.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="982.0" y="899.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="982.0" y="883.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="985.0" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="982.0" y="867.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="985.0" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="982.0" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="985.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="982.0" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="985.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="982.0" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="985.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="982.0" y="803.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="985.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="982.0" y="787.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="985.0" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="982.0" y="771.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.0" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="982.0" y="755.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="985.0" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="982.0" y="739.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="985.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="982.0" y="723.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="982.0" y="707.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="985.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="982.0" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="982.0" y="675.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="985.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="982.0" y="659.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.0" y="670.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="982.0" y="643.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.0" y="654.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="982.0" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="985.0" y="638.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="982.0" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="985.0" y="622.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.06%)</title><rect x="982.0" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="985.0" y="606.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="982.0" y="579.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="985.0" y="590.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.06%)</title><rect x="982.0" y="563.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="985.0" y="574.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.06%)</title><rect x="982.0" y="547.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.0" y="558.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.06%)</title><rect x="982.0" y="531.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="982.7" y="1011.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="985.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="982.7" y="995.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="985.7" y="1006.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="982.7" y="979.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="985.7" y="990.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="982.7" y="963.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="985.7" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.06%)</title><rect x="982.7" y="947.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="985.7" y="958.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.06%)</title><rect x="982.7" y="931.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="985.7" y="942.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="982.7" y="915.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="985.7" y="926.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="982.7" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="985.7" y="910.0"></text>
</g>
<g>
<title>InitializeNode::capture_store(StoreNode*, long, PhaseTransform*, bool) (1 samples, 0.06%)</title><rect x="982.7" y="883.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.7" y="894.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.06%)</title><rect x="982.7" y="867.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="985.7" y="878.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.06%)</title><rect x="983.4" y="1011.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="986.4" y="1022.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.06%)</title><rect x="983.4" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="986.4" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (14 samples, 0.84%)</title><rect x="984.1" y="1091.0" width="9.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.1" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.66%)</title><rect x="984.1" y="1075.0" width="7.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="987.1" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.66%)</title><rect x="984.1" y="1059.0" width="7.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="987.1" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.66%)</title><rect x="984.1" y="1043.0" width="7.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="987.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.66%)</title><rect x="984.1" y="1027.0" width="7.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="987.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.66%)</title><rect x="984.1" y="1011.0" width="7.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.60%)</title><rect x="984.1" y="995.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="987.1" y="1006.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="984.1" y="979.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.1" y="990.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="984.1" y="963.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="987.1" y="974.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="984.1" y="947.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="987.1" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="984.1" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="987.1" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="984.1" y="915.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="987.1" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="984.1" y="899.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="987.1" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="984.1" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="987.1" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="984.1" y="867.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="987.1" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="984.1" y="851.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="987.1" y="862.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="984.1" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="987.1" y="846.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="984.1" y="819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="987.1" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="984.1" y="803.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="987.1" y="814.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="984.1" y="787.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="987.1" y="798.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="984.1" y="771.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="987.1" y="782.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="984.1" y="755.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="987.1" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.48%)</title><rect x="984.8" y="979.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="987.8" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.48%)</title><rect x="984.8" y="963.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="987.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.48%)</title><rect x="984.8" y="947.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.48%)</title><rect x="984.8" y="931.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="987.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="984.8" y="915.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="987.8" y="926.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.06%)</title><rect x="984.8" y="899.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.8" y="910.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="984.8" y="883.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.8" y="894.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="984.8" y="867.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.8" y="878.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.06%)</title><rect x="984.8" y="851.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="987.8" y="862.0"></text>
</g>
<g>
<title>ConNode::hash() const (1 samples, 0.06%)</title><rect x="984.8" y="835.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="987.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.42%)</title><rect x="985.6" y="915.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="988.6" y="926.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (1 samples, 0.06%)</title><rect x="985.6" y="899.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="988.6" y="910.0"></text>
</g>
<g>
<title>Parse::array_store_check() (1 samples, 0.06%)</title><rect x="985.6" y="883.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="988.6" y="894.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="985.6" y="867.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="988.6" y="878.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.06%)</title><rect x="985.6" y="851.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="988.6" y="862.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.06%)</title><rect x="985.6" y="835.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="988.6" y="846.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.06%)</title><rect x="985.6" y="819.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="988.6" y="830.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="985.6" y="803.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="988.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.36%)</title><rect x="986.3" y="899.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="989.3" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.36%)</title><rect x="986.3" y="883.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="989.3" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.36%)</title><rect x="986.3" y="867.0" width="4.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="989.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.36%)</title><rect x="986.3" y="851.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="989.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.36%)</title><rect x="986.3" y="835.0" width="4.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.36%)</title><rect x="986.3" y="819.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="989.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.30%)</title><rect x="986.3" y="803.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="989.3" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.30%)</title><rect x="986.3" y="787.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="989.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.30%)</title><rect x="986.3" y="771.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="989.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.30%)</title><rect x="986.3" y="755.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="989.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.30%)</title><rect x="986.3" y="739.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="989.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.30%)</title><rect x="986.3" y="723.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.30%)</title><rect x="986.3" y="707.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="989.3" y="718.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="986.3" y="691.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.3" y="702.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="986.3" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="989.3" y="686.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="986.3" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="989.3" y="670.0"></text>
</g>
<g>
<title>WarmCallInfo::is_cold() const (1 samples, 0.06%)</title><rect x="986.3" y="643.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="989.3" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.24%)</title><rect x="987.0" y="691.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="990.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.24%)</title><rect x="987.0" y="675.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="990.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.24%)</title><rect x="987.0" y="659.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="990.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.24%)</title><rect x="987.0" y="643.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="990.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.24%)</title><rect x="987.0" y="627.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="990.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.24%)</title><rect x="987.0" y="611.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="990.0" y="622.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.06%)</title><rect x="987.0" y="595.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="990.0" y="606.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="987.0" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="990.0" y="590.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.06%)</title><rect x="987.0" y="563.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.0" y="574.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="987.0" y="547.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="990.0" y="558.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.06%)</title><rect x="987.0" y="531.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="990.0" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="987.7" y="595.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="990.7" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="987.7" y="579.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="990.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="987.7" y="563.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="990.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="987.7" y="547.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="990.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="987.7" y="531.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="987.7" y="515.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="990.7" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="987.7" y="499.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.7" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="987.7" y="483.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.7" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="987.7" y="467.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.7" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="987.7" y="451.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="987.7" y="435.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="990.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="987.7" y="419.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="990.7" y="430.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="987.7" y="403.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="990.7" y="414.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="987.7" y="387.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="990.7" y="398.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="987.7" y="371.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.7" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="987.7" y="355.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="990.7" y="366.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="987.7" y="339.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.7" y="350.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="987.7" y="323.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="990.7" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="987.7" y="307.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.7" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="987.7" y="291.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="990.7" y="302.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.06%)</title><rect x="987.7" y="275.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.7" y="286.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="987.7" y="259.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="990.7" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="987.7" y="243.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="990.7" y="254.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="987.7" y="227.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="990.7" y="238.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="987.7" y="211.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="990.7" y="222.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="987.7" y="195.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.7" y="206.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="987.7" y="179.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="990.7" y="190.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="987.7" y="163.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="990.7" y="174.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="988.4" y="419.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="991.4" y="430.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.06%)</title><rect x="988.4" y="403.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="991.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.06%)</title><rect x="989.1" y="467.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="992.1" y="478.0"></text>
</g>
<g>
<title>LShiftINode::Identity(PhaseGVN*) (1 samples, 0.06%)</title><rect x="989.1" y="451.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="992.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="989.8" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="992.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="989.8" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="992.8" y="798.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.06%)</title><rect x="989.8" y="771.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="992.8" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.06%)</title><rect x="989.8" y="755.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="992.8" y="766.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.06%)</title><rect x="989.8" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="992.8" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.5" y="979.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="993.5" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.5" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.5" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="990.5" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="993.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="990.5" y="931.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="990.5" y="915.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="993.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="990.5" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="993.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="990.5" y="883.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="993.5" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.5" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="993.5" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="990.5" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="993.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="990.5" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="993.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="990.5" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="993.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="990.5" y="803.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="993.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="990.5" y="787.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="993.5" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.5" y="771.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="993.5" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="990.5" y="755.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="993.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="990.5" y="739.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="993.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="990.5" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="993.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="990.5" y="707.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="993.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="990.5" y="691.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.5" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.5" y="675.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="993.5" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="990.5" y="659.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="993.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="990.5" y="643.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="990.5" y="627.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="993.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="990.5" y="611.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="993.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="990.5" y="595.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="993.5" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.5" y="579.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="993.5" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="990.5" y="563.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="993.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="990.5" y="547.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="990.5" y="531.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="993.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="990.5" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="993.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="990.5" y="499.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="993.5" y="510.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="990.5" y="483.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="993.5" y="494.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.06%)</title><rect x="990.5" y="467.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="993.5" y="478.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.06%)</title><rect x="990.5" y="451.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.5" y="462.0"></text>
</g>
<g>
<title>Node::add_req_batch(Node*, unsigned int) (1 samples, 0.06%)</title><rect x="990.5" y="435.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="993.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.06%)</title><rect x="991.2" y="995.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="994.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.06%)</title><rect x="991.2" y="979.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="994.2" y="990.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.06%)</title><rect x="991.2" y="963.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="994.2" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="991.2" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="994.2" y="958.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="991.2" y="931.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="994.2" y="942.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.06%)</title><rect x="991.2" y="915.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="994.2" y="926.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.06%)</title><rect x="991.2" y="899.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="994.2" y="910.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.06%)</title><rect x="991.2" y="883.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="994.2" y="894.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="991.2" y="867.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="994.2" y="878.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.06%)</title><rect x="991.2" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="994.2" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="991.9" y="1075.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="994.9" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.18%)</title><rect x="991.9" y="1059.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.9" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.18%)</title><rect x="991.9" y="1043.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="994.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.18%)</title><rect x="991.9" y="1027.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="994.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.18%)</title><rect x="991.9" y="1011.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="994.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.18%)</title><rect x="991.9" y="995.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="994.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.18%)</title><rect x="991.9" y="979.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="994.9" y="990.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="991.9" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="994.9" y="974.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="991.9" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="994.9" y="958.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="991.9" y="931.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="994.9" y="942.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.06%)</title><rect x="991.9" y="915.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="994.9" y="926.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol_or_null() (1 samples, 0.06%)</title><rect x="991.9" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="994.9" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="992.6" y="963.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="995.6" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="992.6" y="947.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="995.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="992.6" y="931.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="995.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="992.6" y="915.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="995.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="992.6" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="995.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="992.6" y="883.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="995.6" y="894.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.06%)</title><rect x="992.6" y="867.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="995.6" y="878.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.06%)</title><rect x="992.6" y="851.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="995.6" y="862.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.06%)</title><rect x="992.6" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.6" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.06%)</title><rect x="992.6" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="995.6" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.06%)</title><rect x="992.6" y="803.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="995.6" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="992.6" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.6" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.06%)</title><rect x="992.6" y="771.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="995.6" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.06%)</title><rect x="992.6" y="755.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="995.6" y="766.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="996.3" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="947.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="996.3" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="993.3" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="996.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="993.3" y="915.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="996.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="993.3" y="899.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="996.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="993.3" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="996.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="993.3" y="867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="996.3" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="851.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="996.3" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="993.3" y="835.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="996.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="993.3" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="996.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="993.3" y="803.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="996.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="993.3" y="787.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="996.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="993.3" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="996.3" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="755.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="996.3" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="993.3" y="739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="993.3" y="723.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="996.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="993.3" y="707.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="996.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="993.3" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="996.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="993.3" y="675.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="996.3" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="659.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="996.3" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="993.3" y="643.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="996.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="993.3" y="627.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="996.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="993.3" y="611.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="996.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="993.3" y="595.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="996.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="993.3" y="579.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="996.3" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="563.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="996.3" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="993.3" y="547.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="996.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="993.3" y="531.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="996.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="993.3" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="996.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="993.3" y="499.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="996.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="993.3" y="483.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="996.3" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="467.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="996.3" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="451.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="996.3" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="993.3" y="435.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="996.3" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="993.3" y="419.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="996.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="993.3" y="403.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="996.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="993.3" y="387.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="996.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.06%)</title><rect x="993.3" y="371.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="996.3" y="382.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.06%)</title><rect x="993.3" y="355.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="996.3" y="366.0"></text>
</g>
<g>
<title>Phase::gen_subtype_check(Node*, Node*, Node**, MergeMemNode*, PhaseGVN*) (1 samples, 0.06%)</title><rect x="993.3" y="339.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="996.3" y="350.0"></text>
</g>
<g>
<title>gen_subtype_check_compare(Node*, Node*, Node*, BoolTest::mask, float, PhaseGVN*, BasicType) (1 samples, 0.06%)</title><rect x="993.3" y="323.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="996.3" y="334.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="993.3" y="307.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="996.3" y="318.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="993.3" y="291.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="996.3" y="302.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="994.0" y="1107.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="997.0" y="1118.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.06%)</title><rect x="994.0" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.0" y="1102.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.06%)</title><rect x="994.0" y="1075.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="997.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.06%)</title><rect x="994.7" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="997.7" y="1118.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.06%)</title><rect x="994.7" y="1091.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.7" y="1102.0"></text>
</g>
<g>
<title>Parse::load_interpreter_state(Node*) (1 samples, 0.06%)</title><rect x="995.5" y="1155.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="998.5" y="1166.0"></text>
</g>
<g>
<title>Parse::check_interpreter_type(Node*, Type const*, SafePointNode*&amp;) (1 samples, 0.06%)</title><rect x="995.5" y="1139.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="998.5" y="1150.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.06%)</title><rect x="995.5" y="1123.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="998.5" y="1134.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.06%)</title><rect x="995.5" y="1107.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="998.5" y="1118.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="995.5" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="998.5" y="1102.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.18%)</title><rect x="996.2" y="1187.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="999.2" y="1198.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 0.18%)</title><rect x="996.2" y="1171.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="999.2" y="1182.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.06%)</title><rect x="998.3" y="1187.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1001.3" y="1198.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.06%)</title><rect x="998.3" y="1171.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1001.3" y="1182.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="998.3" y="1155.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.3" y="1166.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (136 samples, 8.15%)</title><rect x="999.0" y="1219.0" width="96.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.0" y="1230.0">Compiler::c..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (136 samples, 8.15%)</title><rect x="999.0" y="1203.0" width="96.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1002.0" y="1214.0">Compilation..</text>
</g>
<g>
<title>Compilation::compile_method() (136 samples, 8.15%)</title><rect x="999.0" y="1187.0" width="96.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1002.0" y="1198.0">Compilation..</text>
</g>
<g>
<title>Compilation::compile_java_method() (129 samples, 7.73%)</title><rect x="999.0" y="1171.0" width="91.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.0" y="1182.0">Compilation..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (56 samples, 3.36%)</title><rect x="999.0" y="1155.0" width="39.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1002.0" y="1166.0">Com..</text>
</g>
<g>
<title>Constant::visit(InstructionVisitor*) (1 samples, 0.06%)</title><rect x="999.0" y="1139.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.0" y="1150.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (2 samples, 0.12%)</title><rect x="999.7" y="1139.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1002.7" y="1150.0"></text>
</g>
<g>
<title>BitMap::set_from(BitMap const&amp;) (1 samples, 0.06%)</title><rect x="999.7" y="1123.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1002.7" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.06%)</title><rect x="1000.4" y="1123.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1003.4" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1000.4" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.4" y="1118.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1000.4" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1003.4" y="1102.0"></text>
</g>
<g>
<title>Invoke::state_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1000.4" y="1075.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1003.4" y="1086.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1000.4" y="1059.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.4" y="1070.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (42 samples, 2.52%)</title><rect x="1001.1" y="1139.0" width="29.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1004.1" y="1150.0">IR..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (42 samples, 2.52%)</title><rect x="1001.1" y="1123.0" width="29.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1004.1" y="1134.0">IR..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (42 samples, 2.52%)</title><rect x="1001.1" y="1107.0" width="29.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1004.1" y="1118.0">Gr..</text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.12%)</title><rect x="1001.1" y="1091.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1004.1" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.12%)</title><rect x="1001.1" y="1075.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1004.1" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.12%)</title><rect x="1001.1" y="1059.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1004.1" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.06%)</title><rect x="1001.1" y="1043.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1004.1" y="1054.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1001.1" y="1027.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1004.1" y="1038.0"></text>
</g>
<g>
<title>Phi::operand_at(int) const (1 samples, 0.06%)</title><rect x="1001.1" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1004.1" y="1022.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.06%)</title><rect x="1001.8" y="1043.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1004.8" y="1054.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.12%)</title><rect x="1002.5" y="1091.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1005.5" y="1102.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.12%)</title><rect x="1002.5" y="1075.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1005.5" y="1086.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.12%)</title><rect x="1002.5" y="1059.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1005.5" y="1070.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.12%)</title><rect x="1002.5" y="1043.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1005.5" y="1054.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.12%)</title><rect x="1002.5" y="1027.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1005.5" y="1038.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int) (1 samples, 0.06%)</title><rect x="1002.5" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1005.5" y="1022.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="1002.5" y="995.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1005.5" y="1006.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.06%)</title><rect x="1003.2" y="1011.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1006.2" y="1022.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.06%)</title><rect x="1003.2" y="995.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1006.2" y="1006.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.06%)</title><rect x="1003.2" y="979.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1006.2" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (37 samples, 2.22%)</title><rect x="1003.9" y="1091.0" width="26.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1006.9" y="1102.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (37 samples, 2.22%)</title><rect x="1003.9" y="1075.0" width="26.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.9" y="1086.0">G..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.18%)</title><rect x="1003.9" y="1059.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1006.9" y="1070.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.12%)</title><rect x="1004.7" y="1043.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1007.7" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.12%)</title><rect x="1004.7" y="1027.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1007.7" y="1038.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.12%)</title><rect x="1004.7" y="1011.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1007.7" y="1022.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.06%)</title><rect x="1004.7" y="995.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1007.7" y="1006.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.06%)</title><rect x="1005.4" y="995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1008.4" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::vm_symbol_at(int) (1 samples, 0.06%)</title><rect x="1005.4" y="979.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1008.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (33 samples, 1.98%)</title><rect x="1006.1" y="1059.0" width="23.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.1" y="1070.0">G..</text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.06%)</title><rect x="1006.1" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.1" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (28 samples, 1.68%)</title><rect x="1006.8" y="1043.0" width="19.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1009.8" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (27 samples, 1.62%)</title><rect x="1006.8" y="1027.0" width="19.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1009.8" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.06%)</title><rect x="1006.8" y="1011.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.8" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (21 samples, 1.26%)</title><rect x="1007.5" y="1011.0" width="14.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1010.5" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (21 samples, 1.26%)</title><rect x="1007.5" y="995.0" width="14.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1010.5" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.06%)</title><rect x="1007.5" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1010.5" y="990.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1007.5" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1010.5" y="974.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1007.5" y="947.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.5" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1008.2" y="979.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1011.2" y="990.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1008.2" y="963.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.2" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1008.2" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1011.2" y="958.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1008.2" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.2" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1008.2" y="915.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1011.2" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1008.2" y="899.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.2" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1008.2" y="883.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1011.2" y="894.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.06%)</title><rect x="1008.2" y="867.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.2" y="878.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.06%)</title><rect x="1008.2" y="851.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1011.2" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (18 samples, 1.08%)</title><rect x="1008.9" y="979.0" width="12.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1011.9" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::collect_args_for_profiling(GrowableArray&lt;Instruction*&gt;*, ciMethod*, bool) (1 samples, 0.06%)</title><rect x="1009.6" y="963.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1012.6" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.06%)</title><rect x="1009.6" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1012.6" y="958.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.06%)</title><rect x="1009.6" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1012.6" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (13 samples, 0.78%)</title><rect x="1010.3" y="963.0" width="9.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1013.3" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (13 samples, 0.78%)</title><rect x="1010.3" y="947.0" width="9.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1013.3" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.48%)</title><rect x="1010.3" y="931.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1013.3" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.48%)</title><rect x="1010.3" y="915.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1013.3" y="926.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.06%)</title><rect x="1010.3" y="899.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1013.3" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.12%)</title><rect x="1011.0" y="899.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1014.0" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.12%)</title><rect x="1011.0" y="883.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1014.0" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.12%)</title><rect x="1011.0" y="867.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.0" y="878.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.12%)</title><rect x="1011.0" y="851.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.0" y="862.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.12%)</title><rect x="1011.0" y="835.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1014.0" y="846.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="1011.7" y="819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.7" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.30%)</title><rect x="1012.4" y="899.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1015.4" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.30%)</title><rect x="1012.4" y="883.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1015.4" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.24%)</title><rect x="1012.4" y="867.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1015.4" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.18%)</title><rect x="1012.4" y="851.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1015.4" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.18%)</title><rect x="1012.4" y="835.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1015.4" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1012.4" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1015.4" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.06%)</title><rect x="1012.4" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1015.4" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1012.4" y="787.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.4" y="798.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.06%)</title><rect x="1012.4" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1015.4" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.06%)</title><rect x="1012.4" y="755.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1015.4" y="766.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.06%)</title><rect x="1012.4" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1015.4" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.12%)</title><rect x="1013.1" y="819.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1016.1" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1013.1" y="803.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1016.1" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1013.1" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1016.1" y="798.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.06%)</title><rect x="1013.1" y="771.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.1" y="782.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1013.1" y="755.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1016.1" y="766.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1013.1" y="739.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1016.1" y="750.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.06%)</title><rect x="1013.8" y="803.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1016.8" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1013.8" y="787.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1016.8" y="798.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1013.8" y="771.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1016.8" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1013.8" y="755.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1016.8" y="766.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1013.8" y="739.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1016.8" y="750.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1013.8" y="723.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.8" y="734.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1013.8" y="707.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1016.8" y="718.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.06%)</title><rect x="1013.8" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1016.8" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1014.6" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1017.6" y="862.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1014.6" y="835.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.6" y="846.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1014.6" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.6" y="830.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.06%)</title><rect x="1014.6" y="803.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1017.6" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.06%)</title><rect x="1015.3" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.3" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1015.3" y="851.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1018.3" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.06%)</title><rect x="1015.3" y="835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1018.3" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.06%)</title><rect x="1015.3" y="819.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.3" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.06%)</title><rect x="1015.3" y="803.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.3" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.06%)</title><rect x="1015.3" y="787.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1018.3" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (4 samples, 0.24%)</title><rect x="1016.0" y="931.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1019.0" y="942.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (3 samples, 0.18%)</title><rect x="1016.0" y="915.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1019.0" y="926.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (3 samples, 0.18%)</title><rect x="1016.0" y="899.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.0" y="910.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 0.06%)</title><rect x="1016.0" y="883.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1019.0" y="894.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1016.0" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1019.0" y="878.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.12%)</title><rect x="1016.7" y="883.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1019.7" y="894.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.12%)</title><rect x="1016.7" y="867.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1019.7" y="878.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (2 samples, 0.12%)</title><rect x="1016.7" y="851.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1019.7" y="862.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.06%)</title><rect x="1017.4" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1020.4" y="846.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.06%)</title><rect x="1017.4" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1020.4" y="830.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.06%)</title><rect x="1018.1" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1021.1" y="926.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.06%)</title><rect x="1018.8" y="931.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1021.8" y="942.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1018.8" y="915.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1021.8" y="926.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.06%)</title><rect x="1018.8" y="899.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1021.8" y="910.0"></text>
</g>
<g>
<title>MethodData::next_data(ProfileData*) const (1 samples, 0.06%)</title><rect x="1018.8" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1021.8" y="894.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.18%)</title><rect x="1019.5" y="963.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1022.5" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.18%)</title><rect x="1019.5" y="947.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1022.5" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.18%)</title><rect x="1019.5" y="931.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1022.5" y="942.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.06%)</title><rect x="1019.5" y="915.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1022.5" y="926.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.06%)</title><rect x="1020.2" y="915.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1023.2" y="926.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.06%)</title><rect x="1020.2" y="899.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1023.2" y="910.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1020.9" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1023.9" y="926.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1020.9" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1023.9" y="910.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1020.9" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1023.9" y="894.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1020.9" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1023.9" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1020.9" y="851.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1023.9" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1020.9" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1023.9" y="846.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.06%)</title><rect x="1020.9" y="819.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1023.9" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.06%)</title><rect x="1021.6" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1024.6" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.06%)</title><rect x="1021.6" y="963.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1024.6" y="974.0"></text>
</g>
<g>
<title>Constant::hash() const (1 samples, 0.06%)</title><rect x="1021.6" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1024.6" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.06%)</title><rect x="1022.3" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1025.3" y="1022.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.06%)</title><rect x="1022.3" y="995.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1025.3" y="1006.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.06%)</title><rect x="1022.3" y="979.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1025.3" y="990.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.06%)</title><rect x="1022.3" y="963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.3" y="974.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.06%)</title><rect x="1022.3" y="947.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1025.3" y="958.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.06%)</title><rect x="1022.3" y="931.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.3" y="942.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1022.3" y="915.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1025.3" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::store_local(ValueStack*, Instruction*, int) (1 samples, 0.06%)</title><rect x="1023.0" y="1011.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1026.0" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1023.8" y="1011.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1026.8" y="1022.0"></text>
</g>
<g>
<title>ciMethod::has_balanced_monitors() (1 samples, 0.06%)</title><rect x="1024.5" y="1011.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1027.5" y="1022.0"></text>
</g>
<g>
<title>GenerateOopMap::compute_map(Thread*) (1 samples, 0.06%)</title><rect x="1024.5" y="995.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1027.5" y="1006.0"></text>
</g>
<g>
<title>ciMethod::has_jsrs() const (1 samples, 0.06%)</title><rect x="1025.2" y="1011.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1028.2" y="1022.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_not_inline(ciEnv*, ciMethod*) (1 samples, 0.06%)</title><rect x="1025.9" y="1027.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.9" y="1038.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.24%)</title><rect x="1026.6" y="1043.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1029.6" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.06%)</title><rect x="1026.6" y="1027.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1029.6" y="1038.0"></text>
</g>
<g>
<title>ConstantPool::has_method_type_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="1026.6" y="1011.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1029.6" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.18%)</title><rect x="1027.3" y="1027.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1030.3" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.18%)</title><rect x="1027.3" y="1011.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1030.3" y="1022.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (2 samples, 0.12%)</title><rect x="1027.3" y="995.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1030.3" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (2 samples, 0.12%)</title><rect x="1027.3" y="979.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1030.3" y="990.0"></text>
</g>
<g>
<title>LinkResolver::check_method_accessability(Klass*, Klass*, Klass*, methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1027.3" y="963.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1030.3" y="974.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1028.0" y="963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1031.0" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1028.0" y="947.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1031.0" y="958.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.06%)</title><rect x="1028.0" y="931.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1031.0" y="942.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1028.7" y="995.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1031.7" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1028.7" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1031.7" y="990.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1028.7" y="963.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1031.7" y="974.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1028.7" y="947.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1031.7" y="958.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.06%)</title><rect x="1028.7" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1031.7" y="942.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1028.7" y="915.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1031.7" y="926.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1028.7" y="899.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1031.7" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::new_instance(int) (1 samples, 0.06%)</title><rect x="1029.4" y="1059.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1032.4" y="1070.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.06%)</title><rect x="1029.4" y="1043.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1032.4" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1029.4" y="1027.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1032.4" y="1038.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="1029.4" y="1011.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1032.4" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1029.4" y="995.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1032.4" y="1006.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="1029.4" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1032.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::state_at_entry() (1 samples, 0.06%)</title><rect x="1030.1" y="1091.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1033.1" y="1102.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(IRScope*, ValueStack*) (1 samples, 0.06%)</title><rect x="1030.1" y="1075.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1033.1" y="1086.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (2 samples, 0.12%)</title><rect x="1030.8" y="1139.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1033.8" y="1150.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (2 samples, 0.12%)</title><rect x="1030.8" y="1123.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1033.8" y="1134.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (2 samples, 0.12%)</title><rect x="1030.8" y="1107.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1033.8" y="1118.0"></text>
</g>
<g>
<title>StoreIndexed::input_values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1030.8" y="1091.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1033.8" y="1102.0"></text>
</g>
<g>
<title>UseCountComputer::visit(Instruction**) (1 samples, 0.06%)</title><rect x="1030.8" y="1075.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1033.8" y="1086.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.06%)</title><rect x="1031.5" y="1091.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1034.5" y="1102.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (7 samples, 0.42%)</title><rect x="1032.2" y="1139.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1035.2" y="1150.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (7 samples, 0.42%)</title><rect x="1032.2" y="1123.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1035.2" y="1134.0"></text>
</g>
<g>
<title>BitMap::set_intersection_with_result(BitMap const&amp;) (1 samples, 0.06%)</title><rect x="1032.2" y="1107.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1035.2" y="1118.0"></text>
</g>
<g>
<title>Goto::visit(InstructionVisitor*) (1 samples, 0.06%)</title><rect x="1032.9" y="1107.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1035.9" y="1118.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (3 samples, 0.18%)</title><rect x="1033.7" y="1107.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1036.7" y="1118.0"></text>
</g>
<g>
<title>NullCheckEliminator::visit(Instruction**) (1 samples, 0.06%)</title><rect x="1035.8" y="1107.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.8" y="1118.0"></text>
</g>
<g>
<title>Phi::as_Phi() (1 samples, 0.06%)</title><rect x="1036.5" y="1107.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1039.5" y="1118.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.06%)</title><rect x="1037.2" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1040.2" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::insert_block_between(BlockBegin*) (1 samples, 0.06%)</title><rect x="1037.2" y="1123.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1040.2" y="1134.0"></text>
</g>
<g>
<title>StoreField::visit(InstructionVisitor*) (1 samples, 0.06%)</title><rect x="1037.9" y="1139.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1040.9" y="1150.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (12 samples, 0.72%)</title><rect x="1038.6" y="1155.0" width="8.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1041.6" y="1166.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (8 samples, 0.48%)</title><rect x="1038.6" y="1139.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.6" y="1150.0"></text>
</g>
<g>
<title>LIR_Assembler::append_code_stub(CodeStub*) (1 samples, 0.06%)</title><rect x="1038.6" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.6" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_compare_and_swap(LIR_OpCompareAndSwap*) (1 samples, 0.06%)</title><rect x="1039.3" y="1123.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1042.3" y="1134.0"></text>
</g>
<g>
<title>Assembler::cmpxchgq(RegisterImpl*, Address) (1 samples, 0.06%)</title><rect x="1039.3" y="1107.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.3" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (1 samples, 0.06%)</title><rect x="1040.0" y="1123.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1043.0" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::reg2mem(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1040.0" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1043.0" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::initial_frame_size_in_bytes() const (1 samples, 0.06%)</title><rect x="1040.7" y="1123.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1043.7" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (3 samples, 0.18%)</title><rect x="1041.4" y="1123.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1044.4" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.06%)</title><rect x="1042.9" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1045.9" y="1118.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="1042.9" y="1091.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1045.9" y="1102.0"></text>
</g>
<g>
<title>CompressedWriteStream::write_int_mb(int) (1 samples, 0.06%)</title><rect x="1042.9" y="1075.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1045.9" y="1086.0"></text>
</g>
<g>
<title>LIR_OpBranch::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1043.6" y="1123.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1046.6" y="1134.0"></text>
</g>
<g>
<title>Assembler::jcc(Assembler::Condition, Label&amp;, bool) (1 samples, 0.06%)</title><rect x="1043.6" y="1107.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.6" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (4 samples, 0.24%)</title><rect x="1044.3" y="1139.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.3" y="1150.0"></text>
</g>
<g>
<title>G1BarrierSetAssembler::gen_pre_barrier_stub(LIR_Assembler*, G1PreBarrierStub*) (1 samples, 0.06%)</title><rect x="1044.3" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.3" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::store_parameter(RegisterImpl*, int) (1 samples, 0.06%)</title><rect x="1044.3" y="1107.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1047.3" y="1118.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.06%)</title><rect x="1044.3" y="1091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.3" y="1102.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.06%)</title><rect x="1044.3" y="1075.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.3" y="1086.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (2 samples, 0.12%)</title><rect x="1045.0" y="1123.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1048.0" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.12%)</title><rect x="1045.0" y="1107.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1048.0" y="1118.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.12%)</title><rect x="1045.0" y="1091.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1048.0" y="1102.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.06%)</title><rect x="1045.0" y="1075.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1048.0" y="1086.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="1045.0" y="1059.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1048.0" y="1070.0"></text>
</g>
<g>
<title>OopMap::deep_copy() (1 samples, 0.06%)</title><rect x="1045.7" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1048.7" y="1086.0"></text>
</g>
<g>
<title>OopMap::OopMap(OopMap::DeepCopyToken, OopMap*) (1 samples, 0.06%)</title><rect x="1045.7" y="1059.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1048.7" y="1070.0"></text>
</g>
<g>
<title>CompressedWriteStream::write_int_mb(int) (1 samples, 0.06%)</title><rect x="1045.7" y="1043.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1048.7" y="1054.0"></text>
</g>
<g>
<title>NewInstanceStub::emit_code(LIR_Assembler*) (1 samples, 0.06%)</title><rect x="1046.4" y="1123.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.4" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.06%)</title><rect x="1046.4" y="1107.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1049.4" y="1118.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.06%)</title><rect x="1046.4" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1049.4" y="1102.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1046.4" y="1075.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1049.4" y="1086.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.06%)</title><rect x="1046.4" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.4" y="1070.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (58 samples, 3.48%)</title><rect x="1047.1" y="1155.0" width="41.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.1" y="1166.0">Com..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (16 samples, 0.96%)</title><rect x="1047.1" y="1139.0" width="11.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.1" y="1150.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (16 samples, 0.96%)</title><rect x="1047.1" y="1123.0" width="11.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.1" y="1134.0"></text>
</g>
<g>
<title>LIRGenerator::do_Constant(Constant*) (1 samples, 0.06%)</title><rect x="1047.8" y="1107.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.8" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.06%)</title><rect x="1047.8" y="1091.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.8" y="1102.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.06%)</title><rect x="1047.8" y="1075.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.8" y="1086.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.06%)</title><rect x="1047.8" y="1059.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.8" y="1070.0"></text>
</g>
<g>
<title>BitMap::set_union(BitMap const&amp;) (1 samples, 0.06%)</title><rect x="1047.8" y="1043.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.8" y="1054.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (7 samples, 0.42%)</title><rect x="1048.5" y="1107.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.5" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (7 samples, 0.42%)</title><rect x="1048.5" y="1091.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1051.5" y="1102.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (1 samples, 0.06%)</title><rect x="1048.5" y="1075.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1051.5" y="1086.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (1 samples, 0.06%)</title><rect x="1048.5" y="1059.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1051.5" y="1070.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (6 samples, 0.36%)</title><rect x="1049.2" y="1075.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1052.2" y="1086.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (2 samples, 0.12%)</title><rect x="1053.5" y="1107.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1056.5" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_load_arguments(Invoke*, GrowableArray&lt;LIRItem*&gt;*, GrowableArray&lt;LIR_OprDesc*&gt; const*) (1 samples, 0.06%)</title><rect x="1053.5" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1056.5" y="1102.0"></text>
</g>
<g>
<title>LIRItem::load_item_force(LIR_OprDesc*) (1 samples, 0.06%)</title><rect x="1053.5" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1056.5" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1053.5" y="1059.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1056.5" y="1070.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_visit_arguments(Invoke*) (1 samples, 0.06%)</title><rect x="1054.2" y="1091.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.2" y="1102.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1054.2" y="1075.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1057.2" y="1086.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileCall(ProfileCall*) (1 samples, 0.06%)</title><rect x="1054.9" y="1107.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.9" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::profile_parameters_at_call(ProfileCall*) (1 samples, 0.06%)</title><rect x="1054.9" y="1091.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1057.9" y="1102.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (4 samples, 0.24%)</title><rect x="1055.6" y="1107.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1058.6" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (2 samples, 0.12%)</title><rect x="1055.6" y="1091.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1058.6" y="1102.0"></text>
</g>
<g>
<title>LIR_List::load(LIR_Address*, LIR_OprDesc*, CodeEmitInfo*, LIR_PatchCode) (1 samples, 0.06%)</title><rect x="1057.0" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1060.0" y="1102.0"></text>
</g>
<g>
<title>ciMethod::has_option_value(char const*, double&amp;) (1 samples, 0.06%)</title><rect x="1057.7" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.7" y="1102.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (42 samples, 2.52%)</title><rect x="1058.4" y="1139.0" width="29.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1061.4" y="1150.0">Li..</text>
</g>
<g>
<title>G1PreBarrierStub::visit(LIR_OpVisitState*) (1 samples, 0.06%)</title><rect x="1058.4" y="1123.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1061.4" y="1134.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (11 samples, 0.66%)</title><rect x="1059.1" y="1123.0" width="7.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1062.1" y="1134.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (11 samples, 0.66%)</title><rect x="1059.1" y="1107.0" width="7.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1062.1" y="1118.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (1 samples, 0.06%)</title><rect x="1059.1" y="1091.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1062.1" y="1102.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (10 samples, 0.60%)</title><rect x="1059.8" y="1091.0" width="7.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1062.8" y="1102.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (1 samples, 0.06%)</title><rect x="1060.5" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1063.5" y="1086.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (5 samples, 0.30%)</title><rect x="1061.2" y="1075.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.2" y="1086.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (1 samples, 0.06%)</title><rect x="1062.7" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1065.7" y="1070.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_any(Interval*) (1 samples, 0.06%)</title><rect x="1063.4" y="1059.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1066.4" y="1070.0"></text>
</g>
<g>
<title>Range::intersects_at(Range*) const (1 samples, 0.06%)</title><rect x="1063.4" y="1043.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1066.4" y="1054.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.06%)</title><rect x="1064.1" y="1059.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1067.1" y="1070.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (3 samples, 0.18%)</title><rect x="1064.8" y="1075.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.8" y="1086.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_block_inactive_fixed(Interval*) (1 samples, 0.06%)</title><rect x="1064.8" y="1059.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1067.8" y="1070.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_collect_active_any() (1 samples, 0.06%)</title><rect x="1065.5" y="1059.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1068.5" y="1070.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_collect_inactive_any(Interval*) (1 samples, 0.06%)</title><rect x="1066.2" y="1059.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1069.2" y="1070.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (11 samples, 0.66%)</title><rect x="1066.9" y="1123.0" width="7.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1069.9" y="1134.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (10 samples, 0.60%)</title><rect x="1066.9" y="1107.0" width="7.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1069.9" y="1118.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (4 samples, 0.24%)</title><rect x="1067.6" y="1091.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.6" y="1102.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.06%)</title><rect x="1068.3" y="1075.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1071.3" y="1086.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1068.3" y="1059.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1071.3" y="1070.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1068.3" y="1043.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1071.3" y="1054.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.12%)</title><rect x="1069.0" y="1075.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1072.0" y="1086.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.06%)</title><rect x="1069.0" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1072.0" y="1070.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1069.7" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.7" y="1070.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (5 samples, 0.30%)</title><rect x="1070.4" y="1091.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1073.4" y="1102.0"></text>
</g>
<g>
<title>CodeEmitInfo::interpreter_frame_size() const (1 samples, 0.06%)</title><rect x="1070.4" y="1075.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1073.4" y="1086.0"></text>
</g>
<g>
<title>Deoptimization::last_frame_adjust(int, int) (1 samples, 0.06%)</title><rect x="1071.2" y="1075.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.2" y="1086.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (3 samples, 0.18%)</title><rect x="1071.9" y="1075.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1074.9" y="1086.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.06%)</title><rect x="1072.6" y="1059.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1075.6" y="1070.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1073.3" y="1059.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1076.3" y="1070.0"></text>
</g>
<g>
<title>LinearScan::init_compute_oop_maps() (1 samples, 0.06%)</title><rect x="1074.0" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1077.0" y="1118.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (9 samples, 0.54%)</title><rect x="1074.7" y="1123.0" width="6.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1077.7" y="1134.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.06%)</title><rect x="1078.2" y="1107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1081.2" y="1118.0"></text>
</g>
<g>
<title>LinearScan::add_def(LIR_OprDesc*, int, IntervalUseKind) (1 samples, 0.06%)</title><rect x="1078.9" y="1107.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1081.9" y="1118.0"></text>
</g>
<g>
<title>LinearScan::add_def(int, int, IntervalUseKind, BasicType) (1 samples, 0.06%)</title><rect x="1078.9" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.9" y="1102.0"></text>
</g>
<g>
<title>LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind) (1 samples, 0.06%)</title><rect x="1079.6" y="1107.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1082.6" y="1118.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (1 samples, 0.06%)</title><rect x="1080.3" y="1107.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1083.3" y="1118.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.06%)</title><rect x="1080.3" y="1091.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1083.3" y="1102.0"></text>
</g>
<g>
<title>LinearScan::compute_global_live_sets() (1 samples, 0.06%)</title><rect x="1081.1" y="1123.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1084.1" y="1134.0"></text>
</g>
<g>
<title>BitMap::set_union(BitMap const&amp;) (1 samples, 0.06%)</title><rect x="1081.1" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1084.1" y="1118.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (3 samples, 0.18%)</title><rect x="1081.8" y="1123.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1084.8" y="1134.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (2 samples, 0.12%)</title><rect x="1082.5" y="1107.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1085.5" y="1118.0"></text>
</g>
<g>
<title>LIR_OprPtr::as_address() (1 samples, 0.06%)</title><rect x="1083.2" y="1091.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1086.2" y="1102.0"></text>
</g>
<g>
<title>LinearScan::eliminate_spill_moves() (2 samples, 0.12%)</title><rect x="1083.9" y="1123.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.9" y="1134.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (3 samples, 0.18%)</title><rect x="1085.3" y="1123.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1088.3" y="1134.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (2 samples, 0.12%)</title><rect x="1085.3" y="1107.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1088.3" y="1118.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (2 samples, 0.12%)</title><rect x="1085.3" y="1091.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1088.3" y="1102.0"></text>
</g>
<g>
<title>MoveResolver::resolve_and_append_moves() (1 samples, 0.06%)</title><rect x="1086.7" y="1107.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.7" y="1118.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.06%)</title><rect x="1086.7" y="1091.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1089.7" y="1102.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_handlers() (1 samples, 0.06%)</title><rect x="1087.4" y="1123.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1090.4" y="1134.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::~GrowableArray() (1 samples, 0.06%)</title><rect x="1088.1" y="1155.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1091.1" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.12%)</title><rect x="1088.8" y="1155.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1091.8" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1089.5" y="1139.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.5" y="1150.0"></text>
</g>
<g>
<title>ProfileData::translate_from(ProfileData const*) (1 samples, 0.06%)</title><rect x="1089.5" y="1123.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1092.5" y="1134.0"></text>
</g>
<g>
<title>Compilation::initialize() (1 samples, 0.06%)</title><rect x="1090.3" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.3" y="1182.0"></text>
</g>
<g>
<title>Dependencies::initialize(ciEnv*) (1 samples, 0.06%)</title><rect x="1090.3" y="1155.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1093.3" y="1166.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.06%)</title><rect x="1091.0" y="1171.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1094.0" y="1182.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (5 samples, 0.30%)</title><rect x="1091.7" y="1171.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1094.7" y="1182.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.06%)</title><rect x="1091.7" y="1155.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1094.7" y="1166.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::add_handle(Metadata*, bool) (1 samples, 0.06%)</title><rect x="1091.7" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1094.7" y="1150.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (4 samples, 0.24%)</title><rect x="1092.4" y="1155.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.4" y="1166.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1092.4" y="1139.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1095.4" y="1150.0"></text>
</g>
<g>
<title>metadata_Relocation::metadata_value() (1 samples, 0.06%)</title><rect x="1092.4" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1095.4" y="1134.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.06%)</title><rect x="1093.1" y="1139.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1096.1" y="1150.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.12%)</title><rect x="1093.8" y="1139.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.8" y="1150.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.06%)</title><rect x="1093.8" y="1123.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.8" y="1134.0"></text>
</g>
<g>
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (1 samples, 0.06%)</title><rect x="1093.8" y="1107.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1096.8" y="1118.0"></text>
</g>
<g>
<title>CallRelocation::fix_relocation_after_move(CodeBuffer const*, CodeBuffer*) (1 samples, 0.06%)</title><rect x="1093.8" y="1091.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.8" y="1102.0"></text>
</g>
<g>
<title>Relocation::pd_call_destination(unsigned char*) (1 samples, 0.06%)</title><rect x="1093.8" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1096.8" y="1086.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.06%)</title><rect x="1094.5" y="1123.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.5" y="1134.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.06%)</title><rect x="1094.5" y="1107.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1097.5" y="1118.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (1 samples, 0.06%)</title><rect x="1094.5" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.5" y="1102.0"></text>
</g>
<g>
<title>DirectivesStack::getMatchingDirective(methodHandle const&amp;, AbstractCompiler*) (1 samples, 0.06%)</title><rect x="1095.2" y="1219.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1098.2" y="1230.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (3 samples, 0.18%)</title><rect x="1095.9" y="1219.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1098.9" y="1230.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (1 samples, 0.06%)</title><rect x="1095.9" y="1203.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1098.9" y="1214.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1095.9" y="1187.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1098.9" y="1198.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="1095.9" y="1171.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1098.9" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 0.06%)</title><rect x="1096.6" y="1203.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1099.6" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.06%)</title><rect x="1097.3" y="1203.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1100.3" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1097.3" y="1187.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1100.3" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.06%)</title><rect x="1098.0" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1101.0" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1098.0" y="1203.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.0" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.06%)</title><rect x="1098.0" y="1187.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1101.0" y="1198.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.06%)</title><rect x="1098.0" y="1171.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.0" y="1182.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.06%)</title><rect x="1098.0" y="1155.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.0" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.06%)</title><rect x="1098.0" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1101.0" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1098.0" y="1123.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1101.0" y="1134.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="1098.0" y="1107.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.0" y="1118.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (12 samples, 0.72%)</title><rect x="1098.7" y="1251.0" width="8.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1101.7" y="1262.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (11 samples, 0.66%)</title><rect x="1099.4" y="1235.0" width="7.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1102.4" y="1246.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (11 samples, 0.66%)</title><rect x="1099.4" y="1219.0" width="7.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1102.4" y="1230.0"></text>
</g>
<g>
<title>CodeCache::add(void const*, int, _jmethodID*, bool) (1 samples, 0.06%)</title><rect x="1099.4" y="1203.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1102.4" y="1214.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.06%)</title><rect x="1100.2" y="1203.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1103.2" y="1214.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.06%)</title><rect x="1100.2" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1103.2" y="1198.0"></text>
</g>
<g>
<title>Profiler::addJavaMethod(void const*, int, _jmethodID*) (1 samples, 0.06%)</title><rect x="1100.9" y="1203.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1103.9" y="1214.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.06%)</title><rect x="1101.6" y="1203.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1104.6" y="1214.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (7 samples, 0.42%)</title><rect x="1102.3" y="1203.0" width="4.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1105.3" y="1214.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.12%)</title><rect x="1103.0" y="1187.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.0" y="1198.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="1103.0" y="1171.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1106.0" y="1182.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.06%)</title><rect x="1103.7" y="1171.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1106.7" y="1182.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="1104.4" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.4" y="1198.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (3 samples, 0.18%)</title><rect x="1105.1" y="1187.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.1" y="1198.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.12%)</title><rect x="1105.1" y="1171.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.1" y="1182.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1105.8" y="1155.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1108.8" y="1166.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1106.5" y="1171.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1109.5" y="1182.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.30%)</title><rect x="1107.2" y="1267.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1110.2" y="1278.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.30%)</title><rect x="1107.2" y="1251.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1110.2" y="1262.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.67] (5 samples, 0.30%)</title><rect x="1107.2" y="1235.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1110.2" y="1246.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.30%)</title><rect x="1107.2" y="1219.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1110.2" y="1230.0"></text>
</g>
<g>
<title>VM_Deoptimize::doit() (1 samples, 0.06%)</title><rect x="1107.2" y="1203.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1110.2" y="1214.0"></text>
</g>
<g>
<title>CodeCache::make_marked_nmethods_not_entrant() (1 samples, 0.06%)</title><rect x="1107.2" y="1187.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1110.2" y="1198.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit() (4 samples, 0.24%)</title><rect x="1107.9" y="1203.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1110.9" y="1214.0"></text>
</g>
<g>
<title>VM_RedefineClasses::MethodDataCleaner::do_klass(Klass*) (1 samples, 0.06%)</title><rect x="1107.9" y="1187.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1110.9" y="1198.0"></text>
</g>
<g>
<title>VM_RedefineClasses::redefine_single_class(_jclass*, InstanceKlass*, Thread*) (3 samples, 0.18%)</title><rect x="1108.6" y="1187.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1111.6" y="1198.0"></text>
</g>
<g>
<title>CodeCache::flush_evol_dependents_on(InstanceKlass*) (3 samples, 0.18%)</title><rect x="1108.6" y="1171.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1111.6" y="1182.0"></text>
</g>
<g>
<title>CodeCache::mark_for_evol_deoptimization(InstanceKlass*) (3 samples, 0.18%)</title><rect x="1108.6" y="1155.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1111.6" y="1166.0"></text>
</g>
<g>
<title>CompiledMethod::clear_inline_caches() (1 samples, 0.06%)</title><rect x="1108.6" y="1139.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1111.6" y="1150.0"></text>
</g>
<g>
<title>RelocIterator::reloc() (1 samples, 0.06%)</title><rect x="1108.6" y="1123.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.6" y="1134.0"></text>
</g>
<g>
<title>RelocIterator::reloc() (1 samples, 0.06%)</title><rect x="1109.4" y="1139.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1112.4" y="1150.0"></text>
</g>
<g>
<title>nmethod::is_evol_dependent_on(Klass*) (1 samples, 0.06%)</title><rect x="1110.1" y="1139.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1113.1" y="1150.0"></text>
</g>
<g>
<title>Dependencies::DepStream::argument(int) (1 samples, 0.06%)</title><rect x="1110.1" y="1123.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1113.1" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (112 samples, 6.71%)</title><rect x="1110.8" y="1315.0" width="79.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.8" y="1326.0">sun/instr..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (112 samples, 6.71%)</title><rect x="1110.8" y="1299.0" width="79.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.8" y="1310.0">sun/instr..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.18%)</title><rect x="1110.8" y="1283.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.18%)</title><rect x="1110.8" y="1267.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.18%)</title><rect x="1110.8" y="1251.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.18%)</title><rect x="1110.8" y="1235.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.18%)</title><rect x="1110.8" y="1219.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1110.8" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.8" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1110.8" y="1187.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1110.8" y="1171.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1110.8" y="1155.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.8" y="1166.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1110.8" y="1139.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1113.8" y="1150.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1110.8" y="1123.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1113.8" y="1134.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1110.8" y="1107.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1113.8" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1110.8" y="1091.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1113.8" y="1102.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1110.8" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1113.8" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1110.8" y="1059.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1113.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.12%)</title><rect x="1111.5" y="1203.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.12%)</title><rect x="1111.5" y="1187.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.12%)</title><rect x="1111.5" y="1171.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.5" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1111.5" y="1155.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.12%)</title><rect x="1111.5" y="1139.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.12%)</title><rect x="1111.5" y="1123.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1111.5" y="1107.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (2 samples, 0.12%)</title><rect x="1111.5" y="1091.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.5" y="1102.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1111.5" y="1075.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.12%)</title><rect x="1111.5" y="1059.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.12%)</title><rect x="1111.5" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1114.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (2 samples, 0.12%)</title><rect x="1111.5" y="1027.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1114.5" y="1038.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1111.5" y="1011.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.5" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1111.5" y="995.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.5" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1111.5" y="979.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.5" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (1 samples, 0.06%)</title><rect x="1111.5" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.5" y="974.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1111.5" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.5" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 0.06%)</title><rect x="1111.5" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.5" y="942.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1111.5" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1114.5" y="926.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (1 samples, 0.06%)</title><rect x="1111.5" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.5" y="910.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.checkUTF8 (1 samples, 0.06%)</title><rect x="1111.5" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/perf/PerfCounter.getZipFileOpenTime (1 samples, 0.06%)</title><rect x="1112.2" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/perf/PerfCounter$CoreCounters.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.2" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/perf/PerfCounter.newPerfCounter (1 samples, 0.06%)</title><rect x="1112.2" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/perf/PerfCounter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1112.2" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/perf/Perf.createLong (1 samples, 0.06%)</title><rect x="1112.2" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.2" y="910.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.2" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.2" y="894.0"></text>
</g>
<g>
<title>java/nio/Bits.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.2" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.2" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.VMSupportsCS8 (1 samples, 0.06%)</title><rect x="1112.2" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.2" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1112.2" y="819.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1115.2" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (109 samples, 6.53%)</title><rect x="1112.9" y="1283.0" width="77.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.9" y="1294.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (109 samples, 6.53%)</title><rect x="1112.9" y="1267.0" width="77.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.9" y="1278.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (109 samples, 6.53%)</title><rect x="1112.9" y="1251.0" width="77.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.9" y="1262.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (109 samples, 6.53%)</title><rect x="1112.9" y="1235.0" width="77.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.9" y="1246.0">jdk/inter..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.premain (109 samples, 6.53%)</title><rect x="1112.9" y="1219.0" width="77.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.9" y="1230.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.agentmain (109 samples, 6.53%)</title><rect x="1112.9" y="1203.0" width="77.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.9" y="1214.0">datadog/t..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (109 samples, 6.53%)</title><rect x="1112.9" y="1187.0" width="77.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.9" y="1198.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (109 samples, 6.53%)</title><rect x="1112.9" y="1171.0" width="77.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="1182.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (109 samples, 6.53%)</title><rect x="1112.9" y="1155.0" width="77.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.9" y="1166.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (109 samples, 6.53%)</title><rect x="1112.9" y="1139.0" width="77.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.9" y="1150.0">jdk/inter..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="1123.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.9" y="1134.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="1112.9" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.9" y="1118.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="1112.9" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.9" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getLogger (1 samples, 0.06%)</title><rect x="1112.9" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.9" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getHelperFactory (1 samples, 0.06%)</title><rect x="1112.9" y="1059.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.9" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.getSettingsDescription (1 samples, 0.06%)</title><rect x="1112.9" y="1043.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.9" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettingsDescription (1 samples, 0.06%)</title><rect x="1112.9" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.9" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettings (1 samples, 0.06%)</title><rect x="1112.9" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.9" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.9" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.9" y="990.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="963.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.9" y="974.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$DTFormatter.create (1 samples, 0.06%)</title><rect x="1112.9" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.9" y="958.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$NewDTFormatter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1791741888.invoke_MT (1 samples, 0.06%)</title><rect x="1112.9" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.06%)</title><rect x="1112.9" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (1 samples, 0.06%)</title><rect x="1112.9" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberNameEnsureInit (1 samples, 0.06%)</title><rect x="1112.9" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.ensureInitialized (1 samples, 0.06%)</title><rect x="1112.9" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.checkInitialized (1 samples, 0.06%)</title><rect x="1112.9" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.9" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassValue.get (1 samples, 0.06%)</title><rect x="1112.9" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.9" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassValue.getFromBackup (1 samples, 0.06%)</title><rect x="1112.9" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.9" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassValue.getFromHashMap (1 samples, 0.06%)</title><rect x="1112.9" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$EnsureInitialized.computeValue (1 samples, 0.06%)</title><rect x="1112.9" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$EnsureInitialized.computeValue (1 samples, 0.06%)</title><rect x="1112.9" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.ensureClassInitialized (1 samples, 0.06%)</title><rect x="1112.9" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.ensureClassInitialized0 (1 samples, 0.06%)</title><rect x="1112.9" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.9" y="734.0"></text>
</g>
<g>
<title>java/time/format/DateTimeFormatter.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.9" y="718.0"></text>
</g>
<g>
<title>java/time/format/DateTimeFormatterBuilder.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.9" y="702.0"></text>
</g>
<g>
<title>java/time/temporal/ChronoField.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.9" y="686.0"></text>
</g>
<g>
<title>java/time/temporal/ChronoUnit.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1112.9" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.9" y="670.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1112.9" y="643.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.9" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1112.9" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1115.9" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="611.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.9" y="622.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1115.9" y="606.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1115.9" y="590.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="563.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.9" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="547.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.9" y="558.0"></text>
</g>
<g>
<title>SystemDictionary::load_shared_class(InstanceKlass*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="531.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1115.9" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::restore_unshareable_info(ClassLoaderData*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="515.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.9" y="526.0"></text>
</g>
<g>
<title>Method::restore_unshareable_info(Thread*) (1 samples, 0.06%)</title><rect x="1112.9" y="499.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.9" y="510.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.start (108 samples, 6.47%)</title><rect x="1113.6" y="1123.0" width="76.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1116.6" y="1134.0">datadog/..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createParentClassloader (3 samples, 0.18%)</title><rect x="1113.6" y="1107.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.6" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDatadogClassLoader (2 samples, 0.12%)</title><rect x="1113.6" y="1091.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.12%)</title><rect x="1113.6" y="1075.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1116.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.12%)</title><rect x="1113.6" y="1059.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.12%)</title><rect x="1113.6" y="1043.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1116.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (2 samples, 0.12%)</title><rect x="1113.6" y="1027.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1116.6" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1113.6" y="1011.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.6" y="1022.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="1113.6" y="995.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.6" y="1006.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="979.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.6" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="963.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.6" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="947.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.6" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.6" y="942.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.6" y="926.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1116.6" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="883.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1116.6" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1113.6" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1116.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1114.3" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.3" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.06%)</title><rect x="1114.3" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.3" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.06%)</title><rect x="1114.3" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.3" y="974.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.06%)</title><rect x="1114.3" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.3" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.06%)</title><rect x="1114.3" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.3" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getPlatformClassLoader (1 samples, 0.06%)</title><rect x="1115.0" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1115.0" y="1075.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.06%)</title><rect x="1115.0" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.06%)</title><rect x="1115.0" y="1043.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.06%)</title><rect x="1115.0" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.06%)</title><rect x="1115.0" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.06%)</title><rect x="1115.0" y="995.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.06%)</title><rect x="1115.0" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.0" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.06%)</title><rect x="1115.0" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.0" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="1115.0" y="947.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.0" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.06%)</title><rect x="1115.0" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.06%)</title><rect x="1115.0" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.0" y="926.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.06%)</title><rect x="1115.0" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="910.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.06%)</title><rect x="1115.0" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.0" y="894.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.getInstance (1 samples, 0.06%)</title><rect x="1115.0" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.0" y="878.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1115.0" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="862.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSelectAnnotations (1 samples, 0.06%)</title><rect x="1115.0" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.0" y="846.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.06%)</title><rect x="1115.0" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.0" y="830.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.06%)</title><rect x="1115.0" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.0" y="814.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.06%)</title><rect x="1115.0" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.0" y="798.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumValue (1 samples, 0.06%)</title><rect x="1115.0" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.0" y="782.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSig (1 samples, 0.06%)</title><rect x="1115.0" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.0" y="766.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSig (1 samples, 0.06%)</title><rect x="1115.0" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.0" y="750.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSignature (1 samples, 0.06%)</title><rect x="1115.0" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.0" y="734.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.06%)</title><rect x="1115.0" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.0" y="718.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.06%)</title><rect x="1115.0" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.0" y="702.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseClassTypeSignature (1 samples, 0.06%)</title><rect x="1115.0" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.0" y="686.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parsePackageNameAndSimpleClassTypeSignature (1 samples, 0.06%)</title><rect x="1115.0" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.0" y="670.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.skipIdentifier (1 samples, 0.06%)</title><rect x="1115.0" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.06%)</title><rect x="1115.0" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.06%)</title><rect x="1115.0" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.0" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isWhitespace (1 samples, 0.06%)</title><rect x="1115.0" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.0" y="606.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="1115.0" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.0" y="590.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.installDatadogTracer (20 samples, 1.20%)</title><rect x="1115.7" y="1107.0" width="14.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (20 samples, 1.20%)</title><rect x="1115.7" y="1091.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (20 samples, 1.20%)</title><rect x="1115.7" y="1075.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (20 samples, 1.20%)</title><rect x="1115.7" y="1059.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (20 samples, 1.20%)</title><rect x="1115.7" y="1043.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.7" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/TracerInstaller.installGlobalTracer (20 samples, 1.20%)</title><rect x="1115.7" y="1027.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.7" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.build (18 samples, 1.08%)</title><rect x="1115.7" y="1011.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.7" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (18 samples, 1.08%)</title><rect x="1115.7" y="995.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.7" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (18 samples, 1.08%)</title><rect x="1115.7" y="979.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.7" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (7 samples, 0.42%)</title><rect x="1115.7" y="963.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.7" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (7 samples, 0.42%)</title><rect x="1115.7" y="947.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.7" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter$DDAgentWriterBuilder.build (1 samples, 0.06%)</title><rect x="1115.7" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.7" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1115.7" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.7" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1115.7" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1115.7" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1115.7" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.7" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1115.7" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.7" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1115.7" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.7" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1115.7" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.7" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1115.7" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.7" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1115.7" y="787.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.7" y="798.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1115.7" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1115.7" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1115.7" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1115.7" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.7" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1115.7" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.7" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1115.7" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.7" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1115.7" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.7" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1115.7" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.7" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1115.7" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1115.7" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1115.7" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.7" y="622.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="1115.7" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.7" y="606.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.06%)</title><rect x="1115.7" y="579.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.7" y="590.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.06%)</title><rect x="1115.7" y="563.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.7" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="1115.7" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.7" y="558.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1115.7" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.7" y="542.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1115.7" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.7" y="526.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1115.7" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.7" y="510.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1116.4" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.4" y="942.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi$Builder.build (1 samples, 0.06%)</title><rect x="1116.4" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.4" y="926.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1116.4" y="899.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.4" y="910.0"></text>
</g>
<g>
<title>com/squareup/moshi/StandardJsonAdapters.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1116.4" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.4" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1116.4" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1116.4" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1116.4" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.4" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1116.4" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.4" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1116.4" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1116.4" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.4" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1116.4" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1116.4" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.4" y="766.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1116.4" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.4" y="750.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1116.4" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.4" y="734.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1116.4" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.4" y="718.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1116.4" y="691.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1119.4" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.1" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Monitoring.newTimer (1 samples, 0.06%)</title><rect x="1117.1" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.1" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.1" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.1" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogramFactory.newHistogram (1 samples, 0.06%)</title><rect x="1117.1" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogram.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.1" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1117.1" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1117.1" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.1" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1117.1" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.1" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1117.1" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.1" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1117.1" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.1" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1117.1" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.1" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1117.1" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1117.1" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="1117.1" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.1" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.12%)</title><rect x="1117.8" y="931.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.8" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.12%)</title><rect x="1117.8" y="915.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.8" y="926.0"></text>
</g>
<g>
<title>okhttp3/OkHttpClient$Builder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1117.8" y="899.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.8" y="910.0"></text>
</g>
<g>
<title>okhttp3/ConnectionPool.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1117.8" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.8" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.8" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.8" y="862.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1117.8" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.8" y="846.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1117.8" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1117.8" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1117.8" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.8" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1117.8" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1117.8" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1117.8" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1117.8" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1117.8" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1117.8" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1117.8" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1117.8" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="1117.8" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1117.8" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="1117.8" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="1117.8" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.8" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="1117.8" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.8" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="1117.8" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.8" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1117.8" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1117.8" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.8" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1117.8" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1117.8" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.8" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="1117.8" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.8" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1117.8" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.8" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1117.8" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.8" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="1117.8" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.8" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (1 samples, 0.06%)</title><rect x="1117.8" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.8" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.8" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1117.8" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.8" y="398.0"></text>
</g>
<g>
<title>okhttp3/OkHttpClient.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1118.5" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.5" y="894.0"></text>
</g>
<g>
<title>okhttp3/ConnectionSpec.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1118.5" y="867.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.5" y="878.0"></text>
</g>
<g>
<title>okhttp3/CipherSuite.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1118.5" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.5" y="862.0"></text>
</g>
<g>
<title>okhttp3/CipherSuite.init (1 samples, 0.06%)</title><rect x="1118.5" y="835.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.5" y="846.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl.get (2 samples, 0.12%)</title><rect x="1119.3" y="931.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.3" y="942.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.parse (2 samples, 0.12%)</title><rect x="1119.3" y="915.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.3" y="926.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.canonicalizeHost (1 samples, 0.06%)</title><rect x="1119.3" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.3" y="910.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.canonicalizeHost (1 samples, 0.06%)</title><rect x="1119.3" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.3" y="894.0"></text>
</g>
<g>
<title>java/net/IDN.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1119.3" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.3" y="878.0"></text>
</g>
<g>
<title>sun/net/idn/StringPrep.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1119.3" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.3" y="862.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacter.getUnicodeVersion (1 samples, 0.06%)</title><rect x="1119.3" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.3" y="846.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1119.3" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.3" y="830.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1119.3" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.3" y="814.0"></text>
</g>
<g>
<title>sun/text/normalizer/Trie2_16.createFromSerialized (1 samples, 0.06%)</title><rect x="1119.3" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.3" y="798.0"></text>
</g>
<g>
<title>sun/text/normalizer/Trie2.createFromSerialized (1 samples, 0.06%)</title><rect x="1119.3" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getChar (1 samples, 0.06%)</title><rect x="1119.3" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.3" y="766.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1120.0" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.0" y="910.0"></text>
</g>
<g>
<title>okhttp3/ResponseBody.create (1 samples, 0.06%)</title><rect x="1120.0" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.0" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1120.0" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.0" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1120.0" y="851.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1120.0" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1120.0" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1120.0" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.0" y="814.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1120.0" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.0" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1120.0" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.0" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="1120.0" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.0" y="766.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="1120.0" y="739.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1123.0" y="750.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="1120.0" y="723.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1123.0" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1120.0" y="707.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1123.0" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1120.0" y="691.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.0" y="702.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1120.0" y="675.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.0" y="686.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1120.0" y="659.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.0" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="1120.0" y="643.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1123.0" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1120.0" y="627.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.0" y="638.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="1120.0" y="611.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1123.0" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.createStatsDClient (8 samples, 0.48%)</title><rect x="1120.7" y="963.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.7" y="974.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (7 samples, 0.42%)</title><rect x="1120.7" y="947.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.7" y="958.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (7 samples, 0.42%)</title><rect x="1120.7" y="931.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.7" y="942.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (6 samples, 0.36%)</title><rect x="1120.7" y="915.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.7" y="926.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1120.7" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.7" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1120.7" y="883.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.7" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1120.7" y="867.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.7" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1120.7" y="851.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.7" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1120.7" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1120.7" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.7" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1120.7" y="803.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.7" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1120.7" y="787.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.7" y="798.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.06%)</title><rect x="1120.7" y="771.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.7" y="782.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 0.06%)</title><rect x="1120.7" y="755.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1123.7" y="766.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.06%)</title><rect x="1120.7" y="739.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1123.7" y="750.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.06%)</title><rect x="1120.7" y="723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="1120.7" y="707.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.submit (2 samples, 0.12%)</title><rect x="1121.4" y="899.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (2 samples, 0.12%)</title><rect x="1121.4" y="883.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (2 samples, 0.12%)</title><rect x="1121.4" y="867.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1121.4" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.4" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1121.4" y="835.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.4" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1121.4" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.4" y="830.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="803.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.4" y="814.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="787.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1124.4" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="771.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.4" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="755.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.4" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1124.4" y="750.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.4" y="734.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="707.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1124.4" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="1121.4" y="691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.4" y="702.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="1121.4" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1124.4" y="686.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1122.1" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.1" y="862.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1122.1" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1122.1" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1122.1" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.1" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1122.1" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1122.1" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.1" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1122.1" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1122.1" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1122.1" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1122.1" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.06%)</title><rect x="1122.1" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.06%)</title><rect x="1122.1" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.06%)</title><rect x="1122.1" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.06%)</title><rect x="1122.1" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.06%)</title><rect x="1122.1" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="1122.1" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="1122.1" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="1122.1" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="1122.1" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="1122.1" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.1" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1122.1" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1122.1" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.1" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1122.1" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.1" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="1122.1" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.1" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1122.1" y="467.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.1" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1122.1" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.1" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="1122.1" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.1" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.06%)</title><rect x="1122.1" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.1" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visit (1 samples, 0.06%)</title><rect x="1122.1" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.1" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.06%)</title><rect x="1122.1" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.1" y="398.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f30246a5080 (1 samples, 0.06%)</title><rect x="1122.1" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.newSingleThreadExecutor (3 samples, 0.18%)</title><rect x="1122.8" y="899.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1122.8" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.8" y="894.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1122.8" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.8" y="878.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1122.8" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.8" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1122.8" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1122.8" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.8" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1122.8" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1122.8" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1122.8" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1122.8" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1122.8" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1122.8" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1122.8" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.8" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.06%)</title><rect x="1122.8" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.8" y="702.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/RejectedExecutionHandlerInstrumentation.getInstrumentationMuzzle (1 samples, 0.06%)</title><rect x="1122.8" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.8" y="686.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1122.8" y="659.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1125.8" y="670.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1122.8" y="643.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1125.8" y="654.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_vtable_call(Bytecodes::Code, methodHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="1122.8" y="627.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.8" y="638.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.06%)</title><rect x="1122.8" y="611.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1125.8" y="622.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.06%)</title><rect x="1122.8" y="595.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.8" y="606.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.12%)</title><rect x="1123.5" y="883.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.5" y="894.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.12%)</title><rect x="1123.5" y="867.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.12%)</title><rect x="1123.5" y="851.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="1123.5" y="835.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.5" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.12%)</title><rect x="1123.5" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="1123.5" y="803.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.12%)</title><rect x="1123.5" y="787.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.12%)</title><rect x="1123.5" y="771.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.12%)</title><rect x="1123.5" y="755.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.12%)</title><rect x="1123.5" y="739.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1123.5" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1123.5" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="1123.5" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1123.5" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="1123.5" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="1123.5" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.06%)</title><rect x="1123.5" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.06%)</title><rect x="1123.5" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1123.5" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1123.5" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.5" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="1123.5" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.5" y="574.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="1123.5" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.5" y="558.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="1123.5" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.5" y="542.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putIfAbsent (1 samples, 0.06%)</title><rect x="1123.5" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.5" y="526.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putVal (1 samples, 0.06%)</title><rect x="1123.5" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.5" y="510.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.casTabAt (1 samples, 0.06%)</title><rect x="1123.5" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.5" y="494.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.compareAndSwapObject (1 samples, 0.06%)</title><rect x="1123.5" y="467.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.5" y="478.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbbebb00)@0x00007f30246b6180 (1 samples, 0.06%)</title><rect x="1123.5" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.5" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.06%)</title><rect x="1124.2" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.06%)</title><rect x="1124.2" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.06%)</title><rect x="1124.2" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.06%)</title><rect x="1124.2" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.06%)</title><rect x="1124.2" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (1 samples, 0.06%)</title><rect x="1124.2" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.06%)</title><rect x="1124.2" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.06%)</title><rect x="1124.2" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.06%)</title><rect x="1124.2" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="1124.2" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1124.2" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1124.2" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1124.2" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.06%)</title><rect x="1124.2" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.2" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1124.2" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.2" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1124.2" y="483.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.2" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.06%)</title><rect x="1124.2" y="467.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1127.2" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="1124.2" y="451.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.2" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="1124.2" y="435.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1127.2" y="446.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1124.2" y="419.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1127.2" y="430.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1124.2" y="403.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1127.2" y="414.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.06%)</title><rect x="1124.2" y="387.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1127.2" y="398.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticStatsDAddressResolution (1 samples, 0.06%)</title><rect x="1124.9" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.9" y="926.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticAddressResolution (1 samples, 0.06%)</title><rect x="1124.9" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.9" y="910.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.06%)</title><rect x="1124.9" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.9" y="894.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.06%)</title><rect x="1124.9" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.9" y="878.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.06%)</title><rect x="1124.9" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.9" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="1124.9" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.9" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="1124.9" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.9" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.06%)</title><rect x="1124.9" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.06%)</title><rect x="1124.9" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="1124.9" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.9" y="782.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1124.9" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.9" y="766.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1124.9" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1124.9" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1124.9" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.9" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1124.9" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1124.9" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1124.9" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1124.9" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1124.9" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1124.9" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1124.9" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1124.9" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="1124.9" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1124.9" y="547.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.9" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1124.9" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.9" y="542.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1124.9" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.9" y="526.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="1124.9" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.9" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="1124.9" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="1124.9" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="1124.9" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.9" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1125.6" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.6" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1125.6" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.6" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1125.6" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.6" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1125.6" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.6" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1125.6" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.6" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1125.6" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.6" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1125.6" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.6" y="862.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1125.6" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.6" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1125.6" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.6" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1125.6" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.6" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1125.6" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1125.6" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.6" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1125.6" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.6" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1125.6" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1125.6" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.6" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1125.6" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1125.6" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.6" y="702.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1125.6" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.6" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1125.6" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1125.6" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1128.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1125.6" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1125.6" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.6" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1125.6" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.6" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1125.6" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.6" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1125.6" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.6" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1125.6" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1125.6" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1125.6" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.6" y="526.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="1125.6" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.6" y="510.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.06%)</title><rect x="1125.6" y="483.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="1125.6" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="1125.6" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="1125.6" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.6" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.12%)</title><rect x="1126.3" y="963.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (2 samples, 0.12%)</title><rect x="1126.3" y="947.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.06%)</title><rect x="1126.3" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.3" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1126.3" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1126.3" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1126.3" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1126.3" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1126.3" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.3" y="862.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1126.3" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.3" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1126.3" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="1126.3" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.3" y="814.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1126.3" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.3" y="798.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1126.3" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1126.3" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.3" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1126.3" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.3" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1126.3" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.3" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1126.3" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1126.3" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1126.3" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1126.3" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1126.3" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1126.3" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1126.3" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="1126.3" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1126.3" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.3" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1126.3" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.3" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1126.3" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.3" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.06%)</title><rect x="1126.3" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.3" y="542.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="1126.3" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.3" y="526.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.3" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.3" y="510.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.3" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.3" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="1126.3" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.3" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="1126.3" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.3" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1126.3" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.3" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1126.3" y="419.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.3" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1126.3" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1126.3" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.3" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="1126.3" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.3" y="382.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="1126.3" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.3" y="366.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="1126.3" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.3" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1126.3" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="1126.3" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="1126.3" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1126.3" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1126.3" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1126.3" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="1126.3" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.3" y="238.0"></text>
</g>
<g>
<title>java/net/URI.create (1 samples, 0.06%)</title><rect x="1126.3" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.3" y="222.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1126.3" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.3" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.06%)</title><rect x="1126.3" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.3" y="190.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbaaa0000)@0x00007f30246b9980 (1 samples, 0.06%)</title><rect x="1126.3" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="174.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1127.0" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.0" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1127.0" y="915.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.0" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1127.0" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.0" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1127.0" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.0" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1127.0" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.0" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1127.0" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1127.0" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1127.0" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.0" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1127.0" y="803.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1130.0" y="814.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1127.0" y="787.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1130.0" y="798.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1127.0" y="771.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1130.0" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1127.0" y="755.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1130.0" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="1127.0" y="739.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.0" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="1127.0" y="723.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.0" y="734.0"></text>
</g>
<g>
<title>stringStream::~stringStream() (1 samples, 0.06%)</title><rect x="1127.0" y="707.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1127.7" y="963.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1127.7" y="947.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.7" y="958.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.06%)</title><rect x="1127.7" y="931.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.7" y="942.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.06%)</title><rect x="1127.7" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.06%)</title><rect x="1127.7" y="899.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1127.7" y="883.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.7" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1127.7" y="867.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1127.7" y="851.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.06%)</title><rect x="1127.7" y="835.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.06%)</title><rect x="1127.7" y="819.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.06%)</title><rect x="1127.7" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.06%)</title><rect x="1127.7" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1127.7" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.06%)</title><rect x="1127.7" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.06%)</title><rect x="1127.7" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.7" y="750.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="1127.7" y="723.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1130.7" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.builder (1 samples, 0.06%)</title><rect x="1128.5" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1131.5" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.5" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.5" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.config (1 samples, 0.06%)</title><rect x="1128.5" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.5" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/propagation/HttpCodec.createExtractor (1 samples, 0.06%)</title><rect x="1128.5" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.5" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1128.5" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.5" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1128.5" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.5" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1128.5" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.5" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1128.5" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.5" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1128.5" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.5" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1128.5" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1128.5" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1128.5" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.5" y="846.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.5" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.5" y="830.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.5" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="1128.5" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="1128.5" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1129.2" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1129.2" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.2" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1129.2" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.2" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1129.2" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.2" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1129.2" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.2" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1129.2" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.2" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1129.2" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.2" y="926.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1129.2" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.2" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1129.2" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1129.2" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.2" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1129.2" y="851.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1132.2" y="862.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1129.2" y="835.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1132.2" y="846.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1129.2" y="819.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1132.2" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1129.2" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1132.2" y="814.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1129.2" y="787.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.2" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1129.2" y="771.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.2" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1129.2" y="755.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1132.2" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="1129.2" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.2" y="750.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1129.2" y="723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.2" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startDatadogAgent (79 samples, 4.74%)</title><rect x="1129.9" y="1107.0" width="55.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1132.9" y="1118.0">datad..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDelegateClassLoader (1 samples, 0.06%)</title><rect x="1129.9" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1129.9" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1129.9" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1129.9" y="1043.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.06%)</title><rect x="1129.9" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.9" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1129.9" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.9" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1129.9" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.9" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1129.9" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.9" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (78 samples, 4.68%)</title><rect x="1130.6" y="1091.0" width="55.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.6" y="1102.0">java/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (78 samples, 4.68%)</title><rect x="1130.6" y="1075.0" width="55.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.6" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (78 samples, 4.68%)</title><rect x="1130.6" y="1059.0" width="55.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.6" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (78 samples, 4.68%)</title><rect x="1130.6" y="1043.0" width="55.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.6" y="1054.0">jdk/i..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.&lt;clinit&gt; (8 samples, 0.48%)</title><rect x="1130.6" y="1027.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.6" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.addByteBuddyRawSetting (2 samples, 0.12%)</title><rect x="1130.6" y="1011.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1130.6" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1130.6" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.6" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1130.6" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.6" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1130.6" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.6" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1130.6" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.6" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1130.6" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.6" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1130.6" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.6" y="910.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1130.6" y="883.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.6" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1130.6" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.6" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1130.6" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.6" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1130.6" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1130.6" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.6" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1130.6" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.6" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1130.6" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.6" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1130.6" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.6" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1130.6" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.6" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1130.6" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.6" y="750.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1130.6" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.6" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1130.6" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.6" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1130.6" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.6" y="702.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1130.6" y="675.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1133.6" y="686.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1130.6" y="659.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1133.6" y="670.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1130.6" y="643.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1133.6" y="654.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1130.6" y="627.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.6" y="638.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1130.6" y="611.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.6" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1130.6" y="595.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1133.6" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1130.6" y="579.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.6" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="1130.6" y="563.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.6" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1130.6" y="547.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1133.6" y="558.0"></text>
</g>
<g>
<title>PlaceholderTable::get_entry(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.06%)</title><rect x="1130.6" y="531.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1133.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1131.3" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1131.3" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.3" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1131.3" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.3" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1131.3" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.3" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1131.3" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1131.3" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.3" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1131.3" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.3" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1131.3" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.3" y="894.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1131.3" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1131.3" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.3" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1131.3" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.3" y="846.0"></text>
</g>
<g>
<title>free (1 samples, 0.06%)</title><rect x="1131.3" y="819.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1134.3" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.&lt;clinit&gt; (6 samples, 0.36%)</title><rect x="1132.0" y="1011.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1135.0" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.&lt;init&gt; (6 samples, 0.36%)</title><rect x="1132.0" y="995.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.0" y="1006.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build (1 samples, 0.06%)</title><rect x="1132.0" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.0" y="990.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1132.0" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.0" y="974.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1132.0" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.0" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1132.0" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredField (1 samples, 0.06%)</title><rect x="1132.0" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1135.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (1 samples, 0.06%)</title><rect x="1132.0" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields0 (1 samples, 0.06%)</title><rect x="1132.0" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.0" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1132.0" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.0" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1132.0" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.0" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1132.0" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.0" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1132.0" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.0" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1132.0" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.0" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1132.0" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.0" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1132.0" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.0" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1132.0" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.0" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1132.0" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1132.0" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.0" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1132.0" y="707.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1135.0" y="718.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1132.0" y="691.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1135.0" y="702.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="675.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1135.0" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="659.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.0" y="670.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="643.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.0" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="627.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.0" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1132.0" y="611.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.0" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.0" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="579.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.0" y="590.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="563.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1135.0" y="574.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.06%)</title><rect x="1132.0" y="547.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.0" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (4 samples, 0.24%)</title><rect x="1132.7" y="979.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.7" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache$Provider.newWeakCache (4 samples, 0.24%)</title><rect x="1132.7" y="963.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.7" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.&lt;init&gt; (4 samples, 0.24%)</title><rect x="1132.7" y="947.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.7" y="958.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1132.7" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1135.7" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1132.7" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.7" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1132.7" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.7" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.06%)</title><rect x="1132.7" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.7" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1132.7" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.7" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1132.7" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1132.7" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1132.7" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1132.7" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.7" y="814.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1132.7" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1132.7" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="1132.7" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.7" y="766.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="1132.7" y="739.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1135.7" y="750.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.06%)</title><rect x="1132.7" y="723.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1135.7" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.7" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="691.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1135.7" y="702.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1135.7" y="686.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="659.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.7" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="643.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.7" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.7" y="638.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="611.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1135.7" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::do_local_static_fields(void (*)(fieldDescriptor*, Handle, Thread*), Handle, Thread*) (1 samples, 0.06%)</title><rect x="1132.7" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.7" y="606.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.build (3 samples, 0.18%)</title><rect x="1133.4" y="931.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.4" y="942.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1133.4" y="915.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.4" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1133.4" y="899.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.4" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache (3 samples, 0.18%)</title><rect x="1133.4" y="883.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.4" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1133.4" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.4" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1133.4" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.4" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.4" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.4" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1133.4" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.4" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.4" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1133.4" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.4" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1133.4" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.4" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.4" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.4" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.4" y="622.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.4" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1133.4" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.4" y="558.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.4" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1133.4" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.4" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1133.4" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.4" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.4" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.4" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.4" y="462.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.4" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1133.4" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.4" y="398.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1133.4" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.4" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1133.4" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.4" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1133.4" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.4" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.4" y="334.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1133.4" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.4" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1133.4" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1133.4" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.4" y="286.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1133.4" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.4" y="270.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1133.4" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.4" y="254.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1133.4" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.4" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1133.4" y="211.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1136.4" y="222.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1133.4" y="195.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1136.4" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.12%)</title><rect x="1134.1" y="867.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.12%)</title><rect x="1134.1" y="851.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.12%)</title><rect x="1134.1" y="835.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (2 samples, 0.12%)</title><rect x="1134.1" y="819.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.1" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1134.1" y="803.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.1" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMS.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1134.1" y="787.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.1" y="798.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WS.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1134.1" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.1" y="782.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1134.1" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.1" y="766.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/NodeFactory.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1134.1" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.1" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.1" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.1" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.1" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.1" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1134.1" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.1" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1134.1" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.1" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.1" y="659.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.1" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.1" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.1" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.1" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1134.1" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.1" y="622.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1134.1" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.1" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1134.1" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.1" y="590.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1134.1" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.1" y="574.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1134.1" y="547.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1137.1" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.8" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.8" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1134.8" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.8" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1134.8" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.8" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.8" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.8" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.8" y="686.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.8" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1134.8" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.8" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.8" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="595.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.8" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1134.8" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.8" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1134.8" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.8" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.8" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="531.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.8" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.8" y="526.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="483.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.8" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1134.8" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.8" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.8" y="462.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.8" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1134.8" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.8" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1134.8" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.8" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.8" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.8" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.8" y="366.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.8" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1134.8" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.8" y="302.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1134.8" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.8" y="286.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1134.8" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.8" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1134.8" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1137.8" y="254.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="227.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.8" y="238.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1134.8" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.8" y="222.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.8" y="206.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.8" y="190.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1134.8" y="163.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.8" y="174.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1134.8" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.8" y="158.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1134.8" y="131.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1137.8" y="142.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1134.8" y="115.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1137.8" y="126.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1134.8" y="99.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1137.8" y="110.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1134.8" y="83.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.8" y="94.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1134.8" y="67.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1137.8" y="78.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="1134.8" y="51.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.8" y="62.0"></text>
</g>
<g>
<title>method_comparator(Method*, Method*) (1 samples, 0.06%)</title><rect x="1134.8" y="35.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1137.8" y="46.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1135.5" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1135.5" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.5" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1135.5" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.5" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1135.5" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.5" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1135.5" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.5" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1135.5" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.5" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1135.5" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.5" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1135.5" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.concat (1 samples, 0.06%)</title><rect x="1135.5" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.5" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="1135.5" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.5" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1135.5" y="819.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1138.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (70 samples, 4.20%)</title><rect x="1136.2" y="1027.0" width="49.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.2" y="1038.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (70 samples, 4.20%)</title><rect x="1136.2" y="1011.0" width="49.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.2" y="1022.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.instrument (3 samples, 0.18%)</title><rect x="1136.2" y="995.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.2" y="1006.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1136.2" y="979.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.2" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1136.2" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.2" y="974.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="947.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.2" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="931.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.2" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="915.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.2" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="899.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.2" y="910.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="883.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.2" y="894.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.2" y="878.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="851.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.2" y="862.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="835.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.2" y="846.0"></text>
</g>
<g>
<title>StackMapFrame::pop_stack(VerificationType, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.2" y="830.0"></text>
</g>
<g>
<title>VerificationType::is_reference_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.06%)</title><rect x="1136.2" y="803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.2" y="814.0"></text>
</g>
<g>
<title>VerificationType::resolve_and_check_assignability(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="787.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.2" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="771.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.2" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1136.2" y="755.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.2" y="766.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="1136.2" y="739.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.2" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.applyInstrumentationTransformers (1 samples, 0.06%)</title><rect x="1136.9" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.9" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1136.9" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.9" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1136.9" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.9" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1136.9" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.9" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1136.9" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.9" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1136.9" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.9" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1136.9" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.9" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1136.9" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.9" y="878.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1136.9" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.9" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1136.9" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.9" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1136.9" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.9" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1136.9" y="803.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1139.9" y="814.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1136.9" y="787.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1139.9" y="798.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1136.9" y="771.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1139.9" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1136.9" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.9" y="766.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1136.9" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.9" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1136.9" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.9" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1136.9" y="707.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.9" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="1136.9" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.9" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="1136.9" y="675.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.9" y="686.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.06%)</title><rect x="1136.9" y="659.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.9" y="670.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/springwebflux/client/WebClientFilterInstrumentation.classLoaderMatcher (1 samples, 0.06%)</title><rect x="1137.6" y="979.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.6" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1137.6" y="963.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.6" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1137.6" y="947.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.6" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1137.6" y="931.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.6" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1137.6" y="915.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.6" y="926.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="1137.6" y="899.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1140.6" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1137.6" y="883.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.6" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="1137.6" y="867.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/instrumentation/java/concurrent/ExcludeFilter.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1138.4" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.4" y="1006.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1138.4" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.4" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1138.4" y="963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.4" y="974.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1138.4" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.4" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="1138.4" y="931.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1141.4" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1138.4" y="915.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.4" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.06%)</title><rect x="1138.4" y="899.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.4" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1138.4" y="883.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1141.4" y="894.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/scala/concurrent/CallbackRunnableInstrumentation.excludedClasses (1 samples, 0.06%)</title><rect x="1139.1" y="995.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.1" y="1006.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_ldc(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1139.1" y="979.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.1" y="990.0"></text>
</g>
<g>
<title>Bytecode_loadconstant::resolve_constant(Thread*) const (1 samples, 0.06%)</title><rect x="1139.1" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.1" y="974.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (1 samples, 0.06%)</title><rect x="1139.1" y="947.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1142.1" y="958.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle const&amp;, int, int, Thread*) (1 samples, 0.06%)</title><rect x="1139.1" y="931.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1142.1" y="942.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.06%)</title><rect x="1139.1" y="915.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.1" y="926.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.06%)</title><rect x="1139.1" y="899.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1142.1" y="910.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (16 samples, 0.96%)</title><rect x="1139.8" y="995.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.8" y="1006.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (16 samples, 0.96%)</title><rect x="1139.8" y="979.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.8" y="990.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (16 samples, 0.96%)</title><rect x="1139.8" y="963.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.8" y="974.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (16 samples, 0.96%)</title><rect x="1139.8" y="947.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.8" y="958.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (11 samples, 0.66%)</title><rect x="1139.8" y="931.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.forName (10 samples, 0.60%)</title><rect x="1139.8" y="915.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (10 samples, 0.60%)</title><rect x="1139.8" y="899.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (10 samples, 0.60%)</title><rect x="1139.8" y="883.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (10 samples, 0.60%)</title><rect x="1139.8" y="867.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.8" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (10 samples, 0.60%)</title><rect x="1139.8" y="851.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.8" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.60%)</title><rect x="1139.8" y="835.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.8" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (10 samples, 0.60%)</title><rect x="1139.8" y="819.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.8" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (9 samples, 0.54%)</title><rect x="1140.5" y="803.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.5" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (8 samples, 0.48%)</title><rect x="1140.5" y="787.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.5" y="798.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (4 samples, 0.24%)</title><rect x="1140.5" y="771.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (4 samples, 0.24%)</title><rect x="1140.5" y="755.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.5" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (4 samples, 0.24%)</title><rect x="1140.5" y="739.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.5" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (4 samples, 0.24%)</title><rect x="1140.5" y="723.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1143.5" y="734.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (4 samples, 0.24%)</title><rect x="1140.5" y="707.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1143.5" y="718.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (4 samples, 0.24%)</title><rect x="1140.5" y="691.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1143.5" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (4 samples, 0.24%)</title><rect x="1140.5" y="675.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1143.5" y="686.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (4 samples, 0.24%)</title><rect x="1140.5" y="659.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.5" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (4 samples, 0.24%)</title><rect x="1140.5" y="643.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.5" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (4 samples, 0.24%)</title><rect x="1140.5" y="627.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.5" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.12%)</title><rect x="1140.5" y="611.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.5" y="622.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1141.2" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.2" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (2 samples, 0.12%)</title><rect x="1141.9" y="611.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.9" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (2 samples, 0.12%)</title><rect x="1141.9" y="595.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.9" y="606.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.12%)</title><rect x="1141.9" y="579.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.9" y="590.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.12%)</title><rect x="1141.9" y="563.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.9" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1142.6" y="547.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1145.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (4 samples, 0.24%)</title><rect x="1143.3" y="771.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.3" y="782.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (4 samples, 0.24%)</title><rect x="1143.3" y="755.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.3" y="766.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (4 samples, 0.24%)</title><rect x="1143.3" y="739.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.3" y="750.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (4 samples, 0.24%)</title><rect x="1143.3" y="723.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.3" y="734.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytesBytes (1 samples, 0.06%)</title><rect x="1143.3" y="707.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1146.3" y="718.0"></text>
</g>
<g>
<title>jni_ReleasePrimitiveArrayCritical (1 samples, 0.06%)</title><rect x="1143.3" y="691.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1146.3" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="1143.3" y="675.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.18%)</title><rect x="1144.0" y="707.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1147.0" y="718.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (3 samples, 0.18%)</title><rect x="1144.0" y="691.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1147.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1146.1" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1146.1" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.1" y="782.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.06%)</title><rect x="1146.1" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.1" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.06%)</title><rect x="1146.1" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.1" y="750.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.06%)</title><rect x="1146.1" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.1" y="734.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.06%)</title><rect x="1146.1" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.1" y="718.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1146.1" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.1" y="702.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1146.1" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.1" y="686.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1146.1" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.1" y="670.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.parse (1 samples, 0.06%)</title><rect x="1146.8" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.8" y="926.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.parseLine (1 samples, 0.06%)</title><rect x="1146.8" y="899.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.8" y="910.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xa0000000)@0x00007f30246ab400 (1 samples, 0.06%)</title><rect x="1146.8" y="883.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.8" y="894.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (5 samples, 0.30%)</title><rect x="1147.6" y="931.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.6" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.30%)</title><rect x="1147.6" y="915.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.6" y="926.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (5 samples, 0.30%)</title><rect x="1147.6" y="899.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.6" y="910.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (5 samples, 0.30%)</title><rect x="1147.6" y="883.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (5 samples, 0.30%)</title><rect x="1147.6" y="867.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (4 samples, 0.24%)</title><rect x="1148.3" y="851.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.24%)</title><rect x="1148.3" y="835.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (4 samples, 0.24%)</title><rect x="1148.3" y="819.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.3" y="830.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (4 samples, 0.24%)</title><rect x="1148.3" y="803.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1151.3" y="814.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (4 samples, 0.24%)</title><rect x="1148.3" y="787.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1151.3" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (4 samples, 0.24%)</title><rect x="1148.3" y="771.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.3" y="782.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.06%)</title><rect x="1148.3" y="755.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.3" y="766.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1148.3" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.3" y="750.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.06%)</title><rect x="1148.3" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.3" y="734.0"></text>
</g>
<g>
<title>Rewriter::compute_index_maps() (1 samples, 0.06%)</title><rect x="1148.3" y="707.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.3" y="718.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (3 samples, 0.18%)</title><rect x="1149.0" y="755.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.0" y="766.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (3 samples, 0.18%)</title><rect x="1149.0" y="739.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.0" y="750.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (3 samples, 0.18%)</title><rect x="1149.0" y="723.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.0" y="734.0"></text>
</g>
<g>
<title>ClassVerifier::verify_anewarray(unsigned short, unsigned short, constantPoolHandle const&amp;, StackMapFrame*, Thread*) (2 samples, 0.12%)</title><rect x="1149.0" y="707.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.0" y="718.0"></text>
</g>
<g>
<title>ClassVerifier::create_temporary_symbol(char const*, int, Thread*) (2 samples, 0.12%)</title><rect x="1149.0" y="691.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.0" y="702.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (2 samples, 0.12%)</title><rect x="1149.0" y="675.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.0" y="686.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.06%)</title><rect x="1150.4" y="707.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_parameters() (1 samples, 0.06%)</title><rect x="1150.4" y="691.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (2 samples, 0.12%)</title><rect x="1151.1" y="995.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.1" y="1006.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (2 samples, 0.12%)</title><rect x="1151.1" y="979.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.1" y="990.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (2 samples, 0.12%)</title><rect x="1151.1" y="963.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.1" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.12%)</title><rect x="1151.1" y="947.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1154.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.12%)</title><rect x="1151.1" y="931.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.12%)</title><rect x="1151.1" y="915.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1154.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (2 samples, 0.12%)</title><rect x="1151.1" y="899.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/logback/LoggingEventInstrumentation.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1151.1" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1151.1" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1151.1" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.06%)</title><rect x="1151.1" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.06%)</title><rect x="1151.1" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.1" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.06%)</title><rect x="1151.1" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.1" y="814.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.06%)</title><rect x="1151.1" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.1" y="798.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.06%)</title><rect x="1151.1" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/netty41/ChannelFutureListenerInstrumentation.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1151.8" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.8" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1151.8" y="867.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.8" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1151.8" y="851.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.8" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1151.8" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.8" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.06%)</title><rect x="1151.8" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1151.8" y="803.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.8" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1151.8" y="787.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.8" y="798.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="1151.8" y="771.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.8" y="782.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.06%)</title><rect x="1151.8" y="755.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.installOn (28 samples, 1.68%)</title><rect x="1152.5" y="995.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.5" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.installOn (28 samples, 1.68%)</title><rect x="1152.5" y="979.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.5" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.doInstall (28 samples, 1.68%)</title><rect x="1152.5" y="963.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.makeRaw (3 samples, 0.18%)</title><rect x="1152.5" y="947.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.&lt;clinit&gt; (3 samples, 0.18%)</title><rect x="1152.5" y="931.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.5" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.18%)</title><rect x="1152.5" y="915.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 0.18%)</title><rect x="1152.5" y="899.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 0.18%)</title><rect x="1152.5" y="883.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (2 samples, 0.12%)</title><rect x="1152.5" y="867.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (2 samples, 0.12%)</title><rect x="1152.5" y="851.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.12%)</title><rect x="1152.5" y="835.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.12%)</title><rect x="1152.5" y="819.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.06%)</title><rect x="1152.5" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1155.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.06%)</title><rect x="1152.5" y="787.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.06%)</title><rect x="1152.5" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.06%)</title><rect x="1152.5" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (1 samples, 0.06%)</title><rect x="1152.5" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="1152.5" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="1152.5" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.5" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.06%)</title><rect x="1152.5" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$TypeSubstituting.size (1 samples, 0.06%)</title><rect x="1152.5" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable.size (1 samples, 0.06%)</title><rect x="1152.5" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm.getParameterCount (1 samples, 0.06%)</title><rect x="1152.5" y="643.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.5" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.06%)</title><rect x="1152.5" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.06%)</title><rect x="1152.5" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1155.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor1.invoke (1 samples, 0.06%)</title><rect x="1152.5" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.applyConstructorStrategy (1 samples, 0.06%)</title><rect x="1153.2" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default.extractConstructors (1 samples, 0.06%)</title><rect x="1153.2" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default$5.doExtractConstructors (1 samples, 0.06%)</title><rect x="1153.2" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Default$Unloaded.load (1 samples, 0.06%)</title><rect x="1153.9" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/TypeResolutionStrategy$Passive.initialize (1 samples, 0.06%)</title><rect x="1153.9" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$WrappingDispatcher.load (1 samples, 0.06%)</title><rect x="1153.9" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.9" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1153.9" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.9" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1153.9" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.9" y="814.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1153.9" y="787.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.9" y="798.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1153.9" y="771.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.9" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.06%)</title><rect x="1153.9" y="755.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.9" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.06%)</title><rect x="1153.9" y="739.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="750.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.06%)</title><rect x="1153.9" y="723.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.9" y="734.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="1153.9" y="707.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.9" y="718.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.06%)</title><rect x="1153.9" y="691.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1156.9" y="702.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.06%)</title><rect x="1153.9" y="675.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1156.9" y="686.0"></text>
</g>
<g>
<title>merge_fullinfo_types (1 samples, 0.06%)</title><rect x="1153.9" y="659.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1156.9" y="670.0"></text>
</g>
<g>
<title>jni_GetSuperclass (1 samples, 0.06%)</title><rect x="1153.9" y="643.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1156.9" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="1153.9" y="627.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy.apply (25 samples, 1.50%)</title><rect x="1154.6" y="947.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.06%)</title><rect x="1154.6" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.6" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="1154.6" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.6" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.put (1 samples, 0.06%)</title><rect x="1154.6" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.6" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.06%)</title><rect x="1154.6" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.6" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.06%)</title><rect x="1154.6" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.6" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterWrite (1 samples, 0.06%)</title><rect x="1154.6" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.6" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleAfterWrite (1 samples, 0.06%)</title><rect x="1154.6" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.6" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (1 samples, 0.06%)</title><rect x="1154.6" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (1 samples, 0.06%)</title><rect x="1154.6" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.6" y="814.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.06%)</title><rect x="1154.6" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.6" y="798.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.06%)</title><rect x="1154.6" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1157.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.prepareWorkQueue (1 samples, 0.06%)</title><rect x="1154.6" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.poll (1 samples, 0.06%)</title><rect x="1154.6" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.06%)</title><rect x="1154.6" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="1154.6" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1154.6" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethod (1 samples, 0.06%)</title><rect x="1154.6" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodImpl (1 samples, 0.06%)</title><rect x="1154.6" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.varHandleOperationLinkerMethod (1 samples, 0.06%)</title><rect x="1154.6" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandle$AccessDescriptor.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1154.6" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (1 samples, 0.06%)</title><rect x="1154.6" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1157.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (1 samples, 0.06%)</title><rect x="1154.6" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (1 samples, 0.06%)</title><rect x="1154.6" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (1 samples, 0.06%)</title><rect x="1154.6" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (1 samples, 0.06%)</title><rect x="1154.6" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (1 samples, 0.06%)</title><rect x="1154.6" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (1 samples, 0.06%)</title><rect x="1154.6" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalizeAll (1 samples, 0.06%)</title><rect x="1154.6" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.6" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="1154.6" y="483.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.6" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="1154.6" y="467.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.6" y="478.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="1154.6" y="451.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.6" y="462.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.06%)</title><rect x="1154.6" y="435.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.06%)</title><rect x="1155.3" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.3" y="942.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (1 samples, 0.06%)</title><rect x="1155.3" y="915.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1158.3" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.06%)</title><rect x="1155.3" y="899.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.apply (8 samples, 0.48%)</title><rect x="1156.0" y="931.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.0" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation.doApply (8 samples, 0.48%)</title><rect x="1156.0" y="915.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.0" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.retransformClasses (8 samples, 0.48%)</title><rect x="1156.0" y="899.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.0" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.48%)</title><rect x="1156.0" y="883.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.48%)</title><rect x="1156.0" y="867.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 0.48%)</title><rect x="1156.0" y="851.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 0.48%)</title><rect x="1156.0" y="835.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.0" y="846.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses (8 samples, 0.48%)</title><rect x="1156.0" y="819.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.0" y="830.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses0 (8 samples, 0.48%)</title><rect x="1156.0" y="803.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.0" y="814.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (8 samples, 0.48%)</title><rect x="1156.0" y="787.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.0" y="798.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (8 samples, 0.48%)</title><rect x="1156.0" y="771.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (8 samples, 0.48%)</title><rect x="1156.0" y="755.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (8 samples, 0.48%)</title><rect x="1156.0" y="739.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.0" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.48%)</title><rect x="1156.0" y="723.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (8 samples, 0.48%)</title><rect x="1156.0" y="707.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (8 samples, 0.48%)</title><rect x="1156.0" y="691.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (8 samples, 0.48%)</title><rect x="1156.0" y="675.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (8 samples, 0.48%)</title><rect x="1156.0" y="659.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (8 samples, 0.48%)</title><rect x="1156.0" y="643.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (3 samples, 0.18%)</title><rect x="1156.0" y="627.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (3 samples, 0.18%)</title><rect x="1156.0" y="611.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (3 samples, 0.18%)</title><rect x="1156.0" y="595.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (3 samples, 0.18%)</title><rect x="1156.0" y="579.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.06%)</title><rect x="1156.0" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.06%)</title><rect x="1156.0" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.0" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.0" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.0" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.0" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.0" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1156.0" y="483.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.0" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$Factory.make (1 samples, 0.06%)</title><rect x="1156.0" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.0" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1156.0" y="451.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.0" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1156.0" y="435.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.0" y="446.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1156.0" y="419.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.0" y="430.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="1156.0" y="403.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.0" y="414.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.06%)</title><rect x="1156.0" y="387.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.0" y="398.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1156.0" y="371.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.0" y="382.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1156.0" y="355.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.0" y="366.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="1156.0" y="339.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.0" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (1 samples, 0.06%)</title><rect x="1156.8" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.8" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (1 samples, 0.06%)</title><rect x="1156.8" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.06%)</title><rect x="1156.8" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.8" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (1 samples, 0.06%)</title><rect x="1156.8" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (1 samples, 0.06%)</title><rect x="1156.8" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.8" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (1 samples, 0.06%)</title><rect x="1156.8" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.8" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="1156.8" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.8" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1156.8" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.8" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1156.8" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.8" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1156.8" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.8" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="1156.8" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.8" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="1156.8" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.8" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="1156.8" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.8" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1156.8" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="1156.8" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="1156.8" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1156.8" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.06%)</title><rect x="1156.8" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.06%)</title><rect x="1156.8" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.8" y="286.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1156.8" y="259.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.8" y="270.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1156.8" y="243.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.8" y="254.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1156.8" y="227.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.8" y="238.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.06%)</title><rect x="1156.8" y="211.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.8" y="222.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.06%)</title><rect x="1157.5" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.5" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1157.5" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1157.5" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.5" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1157.5" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.5" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1157.5" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.06%)</title><rect x="1157.5" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.5" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="1157.5" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.5" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.06%)</title><rect x="1157.5" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.5" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1157.5" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.5" y="446.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.06%)</title><rect x="1157.5" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.5" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="1157.5" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.5" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.06%)</title><rect x="1157.5" y="387.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.checkURL (1 samples, 0.06%)</title><rect x="1157.5" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.check (1 samples, 0.06%)</title><rect x="1157.5" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.5" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (5 samples, 0.30%)</title><rect x="1158.2" y="627.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (2 samples, 0.12%)</title><rect x="1158.2" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.06%)</title><rect x="1158.2" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.06%)</title><rect x="1158.2" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1161.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1158.2" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="1158.2" y="547.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="1158.2" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1158.2" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.2" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="1158.2" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.2" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1158.2" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.2" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.06%)</title><rect x="1158.2" y="467.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.2" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.06%)</title><rect x="1158.2" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.2" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.06%)</title><rect x="1158.2" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.2" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.06%)</title><rect x="1158.2" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.2" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getType (1 samples, 0.06%)</title><rect x="1158.2" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.2" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.06%)</title><rect x="1158.2" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.2" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1158.9" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.06%)</title><rect x="1158.9" y="579.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="1158.9" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.06%)</title><rect x="1158.9" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.06%)</title><rect x="1158.9" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.9" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="1158.9" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.9" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.06%)</title><rect x="1158.9" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.9" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1158.9" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.9" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.06%)</title><rect x="1158.9" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.9" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getType (1 samples, 0.06%)</title><rect x="1158.9" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.9" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getType (1 samples, 0.06%)</title><rect x="1158.9" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.9" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="1158.9" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1161.9" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="1158.9" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.9" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="1158.9" y="387.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.9" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="1158.9" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.9" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.06%)</title><rect x="1158.9" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.9" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.06%)</title><rect x="1158.9" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1158.9" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.9" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 0.18%)</title><rect x="1159.6" y="611.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (3 samples, 0.18%)</title><rect x="1159.6" y="595.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.18%)</title><rect x="1159.6" y="579.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.18%)</title><rect x="1159.6" y="563.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1162.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.18%)</title><rect x="1159.6" y="547.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.6" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (3 samples, 0.18%)</title><rect x="1159.6" y="531.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (1 samples, 0.06%)</title><rect x="1159.6" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (1 samples, 0.06%)</title><rect x="1159.6" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1162.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.06%)</title><rect x="1159.6" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1159.6" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.06%)</title><rect x="1159.6" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.06%)</title><rect x="1159.6" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.06%)</title><rect x="1159.6" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.6" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="1159.6" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.6" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="1159.6" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.6" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$Target$ForField.resolveRead (1 samples, 0.06%)</title><rect x="1159.6" y="371.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1162.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1159.6" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.6" y="366.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1159.6" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1162.6" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1159.6" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1162.6" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1159.6" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.6" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1159.6" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.6" y="302.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1159.6" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.6" y="286.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1159.6" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.6" y="270.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1159.6" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.6" y="254.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1159.6" y="227.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.6" y="238.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1159.6" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.6" y="222.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1159.6" y="195.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1162.6" y="206.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1159.6" y="179.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1162.6" y="190.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1159.6" y="163.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1162.6" y="174.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1159.6" y="147.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.6" y="158.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1159.6" y="131.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.6" y="142.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1159.6" y="115.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.6" y="126.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1159.6" y="99.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.6" y="110.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="1159.6" y="83.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.6" y="94.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="1159.6" y="67.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.6" y="78.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (2 samples, 0.12%)</title><rect x="1160.3" y="515.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (2 samples, 0.12%)</title><rect x="1160.3" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.3" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (2 samples, 0.12%)</title><rect x="1160.3" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.3" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (2 samples, 0.12%)</title><rect x="1160.3" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1163.3" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (2 samples, 0.12%)</title><rect x="1160.3" y="451.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.3" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="1160.3" y="435.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.3" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="1160.3" y="419.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.3" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.12%)</title><rect x="1160.3" y="403.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.3" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.06%)</title><rect x="1160.3" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.3" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="1160.3" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.3" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.06%)</title><rect x="1160.3" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.3" y="366.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.06%)</title><rect x="1160.3" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.3" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitEnd (1 samples, 0.06%)</title><rect x="1161.0" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.0" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitEnd (1 samples, 0.06%)</title><rect x="1161.0" y="371.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.0" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getReturnType (1 samples, 0.06%)</title><rect x="1161.0" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.0" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveReturnType (1 samples, 0.06%)</title><rect x="1161.0" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.0" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.06%)</title><rect x="1161.0" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.0" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.06%)</title><rect x="1161.0" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.0" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getType (1 samples, 0.06%)</title><rect x="1161.0" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.0" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.consider (12 samples, 0.72%)</title><rect x="1161.7" y="931.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/classes.jsa (1 samples, 0.06%)</title><rect x="1162.4" y="915.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1165.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher.matches (10 samples, 0.60%)</title><rect x="1163.1" y="915.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (10 samples, 0.60%)</title><rect x="1163.1" y="899.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1166.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.06%)</title><rect x="1163.8" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.06%)</title><rect x="1163.8" y="867.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1166.8" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.06%)</title><rect x="1163.8" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.8" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="1163.8" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.06%)</title><rect x="1163.8" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.06%)</title><rect x="1163.8" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.8" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.06%)</title><rect x="1163.8" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1166.8" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.06%)</title><rect x="1163.8" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.06%)</title><rect x="1163.8" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1163.8" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.06%)</title><rect x="1163.8" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.06%)</title><rect x="1163.8" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1166.8" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="1163.8" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.8" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="1163.8" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.8" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1163.8" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.8" y="670.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.06%)</title><rect x="1163.8" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.8" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.06%)</title><rect x="1163.8" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.06%)</title><rect x="1163.8" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.8" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.06%)</title><rect x="1163.8" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.8" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.06%)</title><rect x="1163.8" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.8" y="590.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.06%)</title><rect x="1163.8" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.8" y="574.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1163.8" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.8" y="558.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.06%)</title><rect x="1163.8" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.06%)</title><rect x="1163.8" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.getFileName (1 samples, 0.06%)</title><rect x="1163.8" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.8" y="510.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.06%)</title><rect x="1163.8" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.8" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="1163.8" y="467.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.8" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (8 samples, 0.48%)</title><rect x="1164.5" y="883.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (8 samples, 0.48%)</title><rect x="1164.5" y="867.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (8 samples, 0.48%)</title><rect x="1164.5" y="851.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1167.5" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (8 samples, 0.48%)</title><rect x="1164.5" y="835.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1167.5" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (8 samples, 0.48%)</title><rect x="1164.5" y="819.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (6 samples, 0.36%)</title><rect x="1164.5" y="803.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.5" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.06%)</title><rect x="1164.5" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.5" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.06%)</title><rect x="1164.5" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="1164.5" y="755.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (1 samples, 0.06%)</title><rect x="1164.5" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.12%)</title><rect x="1165.2" y="787.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.2" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="1165.2" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.2" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.06%)</title><rect x="1165.2" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1168.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="1165.2" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.06%)</title><rect x="1165.2" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.06%)</title><rect x="1165.2" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.2" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.06%)</title><rect x="1165.2" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getName (1 samples, 0.06%)</title><rect x="1165.2" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.2" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.06%)</title><rect x="1165.9" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1165.9" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.9" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1165.9" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.06%)</title><rect x="1165.9" y="723.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.06%)</title><rect x="1165.9" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.06%)</title><rect x="1165.9" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.06%)</title><rect x="1165.9" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.9" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.06%)</title><rect x="1165.9" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.9" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="1165.9" y="643.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.9" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.06%)</title><rect x="1165.9" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.9" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putIfAbsent (1 samples, 0.06%)</title><rect x="1165.9" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.9" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.putVal (1 samples, 0.06%)</title><rect x="1165.9" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.9" y="606.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.addCount (1 samples, 0.06%)</title><rect x="1165.9" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.9" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (3 samples, 0.18%)</title><rect x="1166.7" y="787.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.7" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1166.7" y="771.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1169.7" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1166.7" y="755.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (3 samples, 0.18%)</title><rect x="1166.7" y="739.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (3 samples, 0.18%)</title><rect x="1166.7" y="723.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (3 samples, 0.18%)</title><rect x="1166.7" y="707.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.18%)</title><rect x="1166.7" y="691.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1169.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.18%)</title><rect x="1166.7" y="675.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.18%)</title><rect x="1166.7" y="659.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.7" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.06%)</title><rect x="1166.7" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.7" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.06%)</title><rect x="1166.7" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.7" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.06%)</title><rect x="1166.7" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.06%)</title><rect x="1166.7" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.06%)</title><rect x="1166.7" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1169.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1166.7" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1169.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1166.7" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.06%)</title><rect x="1166.7" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.06%)</title><rect x="1166.7" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.7" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (1 samples, 0.06%)</title><rect x="1166.7" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1169.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1166.7" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.7" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.06%)</title><rect x="1166.7" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.7" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.06%)</title><rect x="1166.7" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1169.7" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.06%)</title><rect x="1166.7" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.7" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1166.7" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1169.7" y="430.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.06%)</title><rect x="1166.7" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.7" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.12%)</title><rect x="1167.4" y="643.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1170.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="1167.4" y="627.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.12%)</title><rect x="1167.4" y="611.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.12%)</title><rect x="1167.4" y="595.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.06%)</title><rect x="1167.4" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="1167.4" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1170.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.06%)</title><rect x="1167.4" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.4" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.06%)</title><rect x="1168.1" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ParameterBag.resolve (1 samples, 0.06%)</title><rect x="1168.1" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getSize (1 samples, 0.06%)</title><rect x="1168.1" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.1" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (2 samples, 0.12%)</title><rect x="1168.8" y="803.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getSuperClass (2 samples, 0.12%)</title><rect x="1168.8" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (2 samples, 0.12%)</title><rect x="1168.8" y="771.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterator.hasNext (2 samples, 0.12%)</title><rect x="1170.2" y="931.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.2" y="942.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.getAllLoadedClasses (2 samples, 0.12%)</title><rect x="1170.2" y="915.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1173.2" y="926.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.getAllLoadedClasses0 (2 samples, 0.12%)</title><rect x="1170.2" y="899.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.2" y="910.0"></text>
</g>
<g>
<title>commonGetClassList (2 samples, 0.12%)</title><rect x="1170.2" y="883.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1173.2" y="894.0"></text>
</g>
<g>
<title>getObjectArrayFromClasses (1 samples, 0.06%)</title><rect x="1170.2" y="867.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1173.2" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="1170.2" y="851.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.2" y="862.0"></text>
</g>
<g>
<title>jvmti_GetLoadedClasses (1 samples, 0.06%)</title><rect x="1170.9" y="867.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1173.9" y="878.0"></text>
</g>
<g>
<title>JvmtiGetLoadedClasses::getLoadedClasses(JvmtiEnv*, int*, _jclass***) (1 samples, 0.06%)</title><rect x="1170.9" y="851.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.9" y="862.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::loaded_classes_do(KlassClosure*) (1 samples, 0.06%)</title><rect x="1170.9" y="835.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.06%)</title><rect x="1171.6" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1171.6" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1171.6" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1174.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="1171.6" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (17 samples, 1.02%)</title><rect x="1172.3" y="995.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1175.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1172.3" y="979.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1172.3" y="963.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.3" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1172.3" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1172.3" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1172.3" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.3" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1172.3" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.3" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1172.3" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.3" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1172.3" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.3" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1172.3" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.3" y="862.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1172.3" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1172.3" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1172.3" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1172.3" y="787.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1172.3" y="771.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1172.3" y="755.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1172.3" y="739.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1172.3" y="723.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1172.3" y="707.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.3" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1172.3" y="691.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.3" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::parse_fields(ClassFileStream const*, bool, ClassFileParser::FieldAllocationCount*, ConstantPool*, int, unsigned short*, Thread*) (1 samples, 0.06%)</title><rect x="1172.3" y="675.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/NamingStrategy$SuffixingRandom.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1173.0" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.0" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1173.0" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1173.0" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.0" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1173.0" y="899.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1176.0" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1173.0" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1176.0" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1173.0" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.0" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1173.0" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.0" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1173.0" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.0" y="846.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1173.0" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1173.0" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1173.0" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.0" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1173.0" y="771.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1176.0" y="782.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1173.0" y="755.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1176.0" y="766.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1173.0" y="739.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1176.0" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1173.0" y="723.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.0" y="734.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1173.0" y="707.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.0" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1173.0" y="691.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.0" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1173.0" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.0" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.06%)</title><rect x="1173.0" y="659.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isDefaultFinalizer (1 samples, 0.06%)</title><rect x="1173.7" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isFinalizer (1 samples, 0.06%)</title><rect x="1173.7" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.returns (1 samples, 0.06%)</title><rect x="1173.7" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.is (1 samples, 0.06%)</title><rect x="1173.7" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1173.7" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1173.7" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.7" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1173.7" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.7" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1173.7" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.7" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1173.7" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1176.7" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1173.7" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.7" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1173.7" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1173.7" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.7" y="782.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1173.7" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1176.7" y="766.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.06%)</title><rect x="1173.7" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.7" y="750.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.06%)</title><rect x="1173.7" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.7" y="734.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.06%)</title><rect x="1173.7" y="707.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1176.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (14 samples, 0.84%)</title><rect x="1174.4" y="979.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split.&lt;init&gt; (14 samples, 0.84%)</title><rect x="1174.4" y="963.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor.&lt;clinit&gt; (14 samples, 0.84%)</title><rect x="1174.4" y="947.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1177.4" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.84%)</title><rect x="1174.4" y="931.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (14 samples, 0.84%)</title><rect x="1174.4" y="915.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (14 samples, 0.84%)</title><rect x="1174.4" y="899.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1174.4" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.4" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1174.4" y="867.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.4" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1174.4" y="851.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.4" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="1174.4" y="835.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.4" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="1174.4" y="819.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.4" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="1174.4" y="803.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.&lt;clinit&gt; (13 samples, 0.78%)</title><rect x="1175.1" y="883.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.1" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.78%)</title><rect x="1175.1" y="867.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1178.1" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 0.78%)</title><rect x="1175.1" y="851.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 0.78%)</title><rect x="1175.1" y="835.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.1" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.1" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.1" y="830.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.1" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.1" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1175.1" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.1" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1175.1" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.1" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.1" y="755.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.1" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.1" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1178.1" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.1" y="723.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1178.1" y="734.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.1" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.1" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1178.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1175.1" y="675.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.1" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1175.1" y="659.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1178.1" y="670.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1175.1" y="643.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1178.1" y="654.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1175.1" y="627.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1178.1" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1175.1" y="611.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.1" y="622.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1175.1" y="595.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.1" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1175.1" y="579.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.1" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1175.1" y="563.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.1" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="1175.1" y="547.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.1" y="558.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.06%)</title><rect x="1175.1" y="531.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection.make (12 samples, 0.72%)</title><rect x="1175.9" y="819.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.12%)</title><rect x="1175.9" y="803.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.12%)</title><rect x="1175.9" y="787.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1178.9" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.9" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.9" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.9" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1178.9" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1175.9" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.9" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1175.9" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.9" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.9" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1178.9" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.9" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.9" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.9" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.9" y="686.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.9" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.9" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.9" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1175.9" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.9" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.9" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1175.9" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.9" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1175.9" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1178.9" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1175.9" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.9" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.9" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.9" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1175.9" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.9" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.9" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.9" y="526.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.9" y="499.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1178.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1175.9" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.9" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1175.9" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1178.9" y="478.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1175.9" y="451.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1178.9" y="462.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1175.9" y="435.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1178.9" y="446.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1175.9" y="419.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1178.9" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1175.9" y="403.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.9" y="414.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1175.9" y="387.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.9" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1175.9" y="371.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.9" y="382.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1175.9" y="355.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.9" y="366.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.06%)</title><rect x="1175.9" y="339.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.9" y="350.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.06%)</title><rect x="1175.9" y="323.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.9" y="334.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.06%)</title><rect x="1175.9" y="307.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.9" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Factory$Default.subclass (1 samples, 0.06%)</title><rect x="1176.6" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1176.6" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1176.6" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1176.6" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1176.6" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1176.6" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1176.6" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1176.6" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.6" y="670.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1176.6" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1176.6" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1176.6" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.6" y="622.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1176.6" y="595.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1179.6" y="606.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1176.6" y="579.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1179.6" y="590.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1176.6" y="563.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1179.6" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1176.6" y="547.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.6" y="558.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1176.6" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.6" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="1176.6" y="515.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.6" y="526.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1176.6" y="499.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.6" y="510.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.06%)</title><rect x="1176.6" y="483.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (8 samples, 0.48%)</title><rect x="1177.3" y="803.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (8 samples, 0.48%)</title><rect x="1177.3" y="787.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.3" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1177.3" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.3" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1177.3" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.3" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1177.3" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.3" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1177.3" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.3" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1177.3" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.3" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1177.3" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.3" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1177.3" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.3" y="686.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1177.3" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1177.3" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1177.3" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.3" y="638.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1177.3" y="611.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1180.3" y="622.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1177.3" y="595.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1180.3" y="606.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1177.3" y="579.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1180.3" y="590.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1177.3" y="563.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.3" y="574.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1177.3" y="547.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.3" y="558.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1177.3" y="531.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.3" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1177.3" y="515.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.3" y="526.0"></text>
</g>
<g>
<title>ClassFileParser::parse_fields(ClassFileStream const*, bool, ClassFileParser::FieldAllocationCount*, ConstantPool*, int, unsigned short*, Thread*) (1 samples, 0.06%)</title><rect x="1177.3" y="499.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.3" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 0.42%)</title><rect x="1178.0" y="771.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 0.42%)</title><rect x="1178.0" y="755.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Prepared.compile (1 samples, 0.06%)</title><rect x="1178.0" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1178.0" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.0" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1178.0" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.0" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1178.0" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.0" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1178.0" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1181.0" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1178.0" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.0" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1178.0" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.06%)</title><rect x="1178.0" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.06%)</title><rect x="1178.0" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.0" y="622.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1178.0" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.0" y="606.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1178.0" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.0" y="590.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.06%)</title><rect x="1178.0" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1178.0" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1178.0" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="1178.0" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.0" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (3 samples, 0.18%)</title><rect x="1178.7" y="739.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="1178.7" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="1178.7" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="1178.7" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation.hashCode (1 samples, 0.06%)</title><rect x="1178.7" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.hashCode (1 samples, 0.06%)</title><rect x="1178.7" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$MethodLocator$ForExplicitMethod.hashCode (1 samples, 0.06%)</title><rect x="1178.7" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.06%)</title><rect x="1178.7" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getParameters (1 samples, 0.06%)</title><rect x="1178.7" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable.of (1 samples, 0.06%)</title><rect x="1178.7" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.7" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1178.7" y="579.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1178.7" y="563.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.7" y="574.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_itable_call(Bytecodes::Code, Klass*, methodHandle const&amp;, int) (1 samples, 0.06%)</title><rect x="1178.7" y="547.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.7" y="558.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.06%)</title><rect x="1178.7" y="531.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="542.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.06%)</title><rect x="1178.7" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.06%)</title><rect x="1179.4" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.06%)</title><rect x="1179.4" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1179.4" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.06%)</title><rect x="1179.4" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1182.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.06%)</title><rect x="1179.4" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1182.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.06%)</title><rect x="1179.4" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.06%)</title><rect x="1179.4" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$AbstractBase.wrap (1 samples, 0.06%)</title><rect x="1179.4" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$AbstractBase.wrap (1 samples, 0.06%)</title><rect x="1179.4" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1182.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1179.4" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.4" y="590.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1179.4" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.4" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1179.4" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.4" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1179.4" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.4" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1179.4" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.4" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1179.4" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1182.4" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1179.4" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.4" y="494.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1179.4" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.4" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1179.4" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.4" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1179.4" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1182.4" y="446.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1179.4" y="419.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1182.4" y="430.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1179.4" y="403.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1182.4" y="414.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1179.4" y="387.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1182.4" y="398.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1179.4" y="371.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.4" y="382.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1179.4" y="355.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.4" y="366.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.06%)</title><rect x="1179.4" y="339.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.4" y="350.0"></text>
</g>
<g>
<title>klassItable::compute_itable_size(Array&lt;Klass*&gt;*) (1 samples, 0.06%)</title><rect x="1179.4" y="323.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.4" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Entry.resolve (1 samples, 0.06%)</title><rect x="1180.1" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/LatentMatcher$ForMethodToken.resolve (1 samples, 0.06%)</title><rect x="1180.1" y="707.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$Token.asSignatureToken (1 samples, 0.06%)</title><rect x="1180.1" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1180.1" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.1" y="686.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1180.1" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.1" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1180.1" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.1" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1180.1" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.1" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1180.1" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.1" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1180.1" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.1" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1180.1" y="579.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.1" y="590.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1180.1" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1183.1" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1180.1" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.1" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1180.1" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.1" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1180.1" y="515.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1183.1" y="526.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1180.1" y="499.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1183.1" y="510.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1180.1" y="483.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1183.1" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1180.1" y="467.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.1" y="478.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1180.1" y="451.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.1" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1180.1" y="435.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.1" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1180.1" y="419.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.1" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.06%)</title><rect x="1180.1" y="403.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.1" y="414.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1180.1" y="387.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.1" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 0.18%)</title><rect x="1180.8" y="739.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (3 samples, 0.18%)</title><rect x="1180.8" y="723.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default.resolve (1 samples, 0.06%)</title><rect x="1180.8" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1183.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1180.8" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1180.8" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1180.8" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.8" y="670.0"></text>
</g>
<g>
<title>free (1 samples, 0.06%)</title><rect x="1180.8" y="643.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1183.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (2 samples, 0.12%)</title><rect x="1181.5" y="707.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyBody (1 samples, 0.06%)</title><rect x="1181.5" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyCode (1 samples, 0.06%)</title><rect x="1181.5" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1184.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$Appender.apply (1 samples, 0.06%)</title><rect x="1181.5" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/StackManipulation$Compound.apply (1 samples, 0.06%)</title><rect x="1181.5" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/member/MethodInvocation$Invocation.apply (1 samples, 0.06%)</title><rect x="1181.5" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getStackSize (1 samples, 0.06%)</title><rect x="1181.5" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.5" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1181.5" y="595.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.5" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1181.5" y="579.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.visitMethod (1 samples, 0.06%)</title><rect x="1182.2" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.2" y="702.0"></text>
</g>
<g>
<title>free (1 samples, 0.06%)</title><rect x="1182.2" y="675.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1185.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (1 samples, 0.06%)</title><rect x="1182.9" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (1 samples, 0.06%)</title><rect x="1182.9" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (1 samples, 0.06%)</title><rect x="1182.9" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter.defineMethod (1 samples, 0.06%)</title><rect x="1182.9" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.9" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1182.9" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.9" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1182.9" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.9" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1182.9" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.9" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1182.9" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.9" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1182.9" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.9" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1182.9" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.9" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1182.9" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.06%)</title><rect x="1182.9" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.9" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.06%)</title><rect x="1182.9" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.9" y="622.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.06%)</title><rect x="1182.9" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.9" y="606.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.06%)</title><rect x="1182.9" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.9" y="590.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.06%)</title><rect x="1182.9" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.9" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.LOCNAM (1 samples, 0.06%)</title><rect x="1182.9" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.invoke (1 samples, 0.06%)</title><rect x="1183.6" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.invoke (1 samples, 0.06%)</title><rect x="1183.6" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.invoke (1 samples, 0.06%)</title><rect x="1183.6" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1183.6" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1186.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1183.6" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1183.6" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1183.6" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1183.6" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1183.6" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1183.6" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.6" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getAndVerifyPackage (1 samples, 0.06%)</title><rect x="1183.6" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getDefinedPackage (1 samples, 0.06%)</title><rect x="1183.6" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.disableClassFormatChanges (1 samples, 0.06%)</title><rect x="1184.3" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1184.3" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.3" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1184.3" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.3" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.06%)</title><rect x="1184.3" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.3" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1184.3" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1184.3" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.3" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.06%)</title><rect x="1184.3" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.3" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1184.3" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.3" y="894.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1184.3" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.06%)</title><rect x="1184.3" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.06%)</title><rect x="1184.3" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.3" y="846.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.06%)</title><rect x="1184.3" y="819.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.06%)</title><rect x="1184.3" y="803.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1187.3" y="814.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.06%)</title><rect x="1184.3" y="787.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1187.3" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.06%)</title><rect x="1184.3" y="771.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.3" y="782.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1184.3" y="755.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.06%)</title><rect x="1184.3" y="739.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.06%)</title><rect x="1184.3" y="723.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.139] (1 samples, 0.06%)</title><rect x="1184.3" y="707.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.3" y="718.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1184.3" y="691.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.3" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1184.3" y="675.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.3" y="686.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="1184.3" y="659.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.3" y="670.0"></text>
</g>
<g>
<title>sysmalloc (1 samples, 0.06%)</title><rect x="1185.0" y="995.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1188.0" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startProfilingAgent (6 samples, 0.36%)</title><rect x="1185.8" y="1107.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.8" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getProfilingClassloader (1 samples, 0.06%)</title><rect x="1185.8" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.8" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDelegateClassLoader (1 samples, 0.06%)</title><rect x="1185.8" y="1075.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1185.8" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1185.8" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1185.8" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.06%)</title><rect x="1185.8" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.8" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1185.8" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.8" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1185.8" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.8" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1185.8" y="963.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.8" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.30%)</title><rect x="1186.5" y="1091.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.30%)</title><rect x="1186.5" y="1075.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.30%)</title><rect x="1186.5" y="1059.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.30%)</title><rect x="1186.5" y="1043.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.5" y="1054.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1186.5" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.5" y="1038.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.06%)</title><rect x="1186.5" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.5" y="1022.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1186.5" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.5" y="1006.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.06%)</title><rect x="1186.5" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.5" y="990.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.expr (1 samples, 0.06%)</title><rect x="1186.5" y="963.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.5" y="974.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.sequence (1 samples, 0.06%)</title><rect x="1186.5" y="947.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.5" y="958.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.clazz (1 samples, 0.06%)</title><rect x="1186.5" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.5" y="942.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.range (1 samples, 0.06%)</title><rect x="1186.5" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.5" y="926.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.Range (1 samples, 0.06%)</title><rect x="1186.5" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="1186.5" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.06%)</title><rect x="1186.5" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.06%)</title><rect x="1186.5" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.5" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.06%)</title><rect x="1186.5" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.06%)</title><rect x="1186.5" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.06%)</title><rect x="1186.5" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.06%)</title><rect x="1186.5" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.06%)</title><rect x="1186.5" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.06%)</title><rect x="1186.5" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.06%)</title><rect x="1186.5" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (1 samples, 0.06%)</title><rect x="1186.5" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.06%)</title><rect x="1186.5" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 0.06%)</title><rect x="1186.5" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>MHN_resolve_Mem (1 samples, 0.06%)</title><rect x="1186.5" y="675.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1186.5" y="659.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.06%)</title><rect x="1186.5" y="643.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.5" y="654.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="1186.5" y="627.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="638.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.run (4 samples, 0.24%)</title><rect x="1187.2" y="1027.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.2" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;clinit&gt; (4 samples, 0.24%)</title><rect x="1187.2" y="1011.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (4 samples, 0.24%)</title><rect x="1187.2" y="995.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.2" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1187.2" y="979.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.2" y="990.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.findConfigurationFile (1 samples, 0.06%)</title><rect x="1187.2" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.2" y="974.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.propertyNameToEnvironmentVariableName (1 samples, 0.06%)</title><rect x="1187.2" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.2" y="958.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.replaceAll (1 samples, 0.06%)</title><rect x="1187.2" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.2" y="942.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.appendReplacement (1 samples, 0.06%)</title><rect x="1187.2" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="1187.2" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.2" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="1187.2" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.2" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.checkRange (1 samples, 0.06%)</title><rect x="1187.2" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.2" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.06%)</title><rect x="1187.9" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.9" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.06%)</title><rect x="1187.9" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.9" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.06%)</title><rect x="1187.9" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.9" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.06%)</title><rect x="1187.9" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.propertyNameToEnvironmentVariableName (1 samples, 0.06%)</title><rect x="1187.9" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.replaceAll (1 samples, 0.06%)</title><rect x="1187.9" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.06%)</title><rect x="1187.9" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.06%)</title><rect x="1187.9" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.06%)</title><rect x="1187.9" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharProperty.match (1 samples, 0.06%)</title><rect x="1187.9" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharPredicate$$Lambda$31/752848266.is (1 samples, 0.06%)</title><rect x="1187.9" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1187.9" y="787.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.06%)</title><rect x="1187.9" y="771.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1187.9" y="755.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1187.9" y="739.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.9" y="750.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.06%)</title><rect x="1187.9" y="723.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.9" y="734.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.06%)</title><rect x="1187.9" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.9" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1187.9" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.9" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.06%)</title><rect x="1187.9" y="675.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.06%)</title><rect x="1188.6" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.6" y="974.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1188.6" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.6" y="958.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1188.6" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.6" y="942.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.06%)</title><rect x="1188.6" y="915.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.6" y="926.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.06%)</title><rect x="1188.6" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.6" y="910.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.06%)</title><rect x="1188.6" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.6" y="894.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.findAdapter (1 samples, 0.06%)</title><rect x="1188.6" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.forType (1 samples, 0.06%)</title><rect x="1188.6" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.newInstance (1 samples, 0.06%)</title><rect x="1188.6" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.6" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1188.6" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1188.6" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1188.6" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.06%)</title><rect x="1188.6" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.6" y="782.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1188.6" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.6" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.06%)</title><rect x="1188.6" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.6" y="750.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.06%)</title><rect x="1188.6" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.6" y="734.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.06%)</title><rect x="1188.6" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.6" y="718.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (1 samples, 0.06%)</title><rect x="1188.6" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.6" y="702.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (1 samples, 0.06%)</title><rect x="1188.6" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.6" y="686.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (1 samples, 0.06%)</title><rect x="1188.6" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.6" y="670.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (1 samples, 0.06%)</title><rect x="1188.6" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.6" y="654.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.findStaticProviderMethod (1 samples, 0.06%)</title><rect x="1188.6" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.6" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.getDeclaredPublicMethods (1 samples, 0.06%)</title><rect x="1188.6" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredPublicMethods (1 samples, 0.06%)</title><rect x="1188.6" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.6" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (1 samples, 0.06%)</title><rect x="1188.6" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (1 samples, 0.06%)</title><rect x="1188.6" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.6" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1188.6" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.06%)</title><rect x="1188.6" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1188.6" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.06%)</title><rect x="1188.6" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.6" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1188.6" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.6" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.06%)</title><rect x="1188.6" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.6" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.06%)</title><rect x="1188.6" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.6" y="462.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.06%)</title><rect x="1188.6" y="435.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1191.6" y="446.0"></text>
</g>
<g>
<title>next_utf2unicode (1 samples, 0.06%)</title><rect x="1188.6" y="419.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1191.6" y="430.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (1 samples, 0.06%)</title><rect x="1189.3" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.3" y="990.0"></text>
</g>
<g>
<title>java/util/UUID$Holder.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.3" y="974.0"></text>
</g>
<g>
<title>java/security/SecureRandom.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.3" y="958.0"></text>
</g>
<g>
<title>java/security/SecureRandom.getDefaultPRNG (1 samples, 0.06%)</title><rect x="1189.3" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.3" y="942.0"></text>
</g>
<g>
<title>sun/security/jca/Providers.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="915.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.3" y="926.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
<g>
<title>java/security/Provider.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.3" y="878.0"></text>
</g>
<g>
<title>java/security/Provider.parseVersionStr (1 samples, 0.06%)</title><rect x="1189.3" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Double.parseDouble (1 samples, 0.06%)</title><rect x="1189.3" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1192.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.&lt;clinit&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.06%)</title><rect x="1189.3" y="803.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.3" y="814.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="787.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="771.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="755.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.3" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="739.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.3" y="750.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.3" y="734.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="707.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.3" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.3" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="675.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.3" y="686.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::allocate_instance(Klass*, Thread*) (1 samples, 0.06%)</title><rect x="1189.3" y="659.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.3" y="670.0"></text>
</g>
</g>
</svg>
