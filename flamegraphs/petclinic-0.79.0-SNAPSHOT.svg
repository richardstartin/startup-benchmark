<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1941"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1941"> </text>
<g id="frames">
<g>
<title>all (1,463 samples, 100.00%)</title><rect x="10.0" y="1907.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1918.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (3 samples, 0.21%)</title><rect x="10.0" y="1891.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1902.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.07%)</title><rect x="10.8" y="1875.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="1886.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.07%)</title><rect x="10.8" y="1859.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="1870.0"></text>
</g>
<g>
<title>Method::is_accessor() const (1 samples, 0.07%)</title><rect x="10.8" y="1843.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.8" y="1854.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.07%)</title><rect x="11.6" y="1875.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.6" y="1886.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.48%)</title><rect x="12.4" y="1891.0" width="5.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.4" y="1902.0"></text>
</g>
<g>
<title>Interpreter (5 samples, 0.34%)</title><rect x="12.4" y="1875.0" width="4.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.4" y="1886.0"></text>
</g>
<g>
<title>ic_miss_stub (1 samples, 0.07%)</title><rect x="16.5" y="1875.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="19.5" y="1886.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.07%)</title><rect x="17.3" y="1875.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="20.3" y="1886.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.07%)</title><rect x="18.1" y="1891.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="21.1" y="1902.0"></text>
</g>
<g>
<title>__vsnprintf_chk (2 samples, 0.14%)</title><rect x="18.9" y="1891.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="21.9" y="1902.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.07%)</title><rect x="18.9" y="1875.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="21.9" y="1886.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (1 samples, 0.07%)</title><rect x="19.7" y="1875.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="22.7" y="1886.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.07%)</title><rect x="20.5" y="1891.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="23.5" y="1902.0"></text>
</g>
<g>
<title>datadog/trace/benchmark/LoadClasses.main (565 samples, 38.62%)</title><rect x="21.3" y="1891.0" width="455.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.3" y="1902.0">datadog/trace/benchmark/LoadClasses.main</text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f20688b7080 (1 samples, 0.07%)</title><rect x="22.1" y="1875.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.1" y="1886.0"></text>
</g>
<g>
<title>java/lang/Class.forName (561 samples, 38.35%)</title><rect x="22.9" y="1875.0" width="452.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.9" y="1886.0">java/lang/Class.forName</text>
</g>
<g>
<title>java/lang/Class.forName0 (561 samples, 38.35%)</title><rect x="22.9" y="1859.0" width="452.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.9" y="1870.0">java/lang/Class.forName0</text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (6 samples, 0.41%)</title><rect x="22.9" y="1843.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="25.9" y="1854.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (6 samples, 0.41%)</title><rect x="22.9" y="1827.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="25.9" y="1838.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (2 samples, 0.14%)</title><rect x="22.9" y="1811.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="25.9" y="1822.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.07%)</title><rect x="23.7" y="1795.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.7" y="1806.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="24.5" y="1811.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.5" y="1822.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (3 samples, 0.21%)</title><rect x="25.3" y="1811.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="28.3" y="1822.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (3 samples, 0.21%)</title><rect x="25.3" y="1795.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="28.3" y="1806.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.14%)</title><rect x="25.3" y="1779.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="28.3" y="1790.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (2 samples, 0.14%)</title><rect x="25.3" y="1763.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="28.3" y="1774.0"></text>
</g>
<g>
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Handle, Thread*) (2 samples, 0.14%)</title><rect x="25.3" y="1747.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.3" y="1758.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (2 samples, 0.14%)</title><rect x="25.3" y="1731.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="28.3" y="1742.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (2 samples, 0.14%)</title><rect x="25.3" y="1715.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="28.3" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (2 samples, 0.14%)</title><rect x="25.3" y="1699.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="28.3" y="1710.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.14%)</title><rect x="25.3" y="1683.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.3" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (2 samples, 0.14%)</title><rect x="25.3" y="1667.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="28.3" y="1678.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::loader_data(oopDesc*) (1 samples, 0.07%)</title><rect x="26.9" y="1779.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.9" y="1790.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.07%)</title><rect x="27.7" y="1843.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="30.7" y="1854.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (554 samples, 37.87%)</title><rect x="28.6" y="1843.0" width="446.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.6" y="1854.0">java/lang/ClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (553 samples, 37.80%)</title><rect x="29.4" y="1827.0" width="446.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.4" y="1838.0">jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (553 samples, 37.80%)</title><rect x="29.4" y="1811.0" width="446.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.4" y="1822.0">jdk/internal/loader/BuiltinClassLoader.loadClass</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (553 samples, 37.80%)</title><rect x="29.4" y="1795.0" width="446.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.4" y="1806.0">jdk/internal/loader/BuiltinClassLoader.loadClassOrNull</text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (2 samples, 0.14%)</title><rect x="30.2" y="1779.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.2" y="1790.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkName (1 samples, 0.07%)</title><rect x="30.2" y="1763.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.2" y="1774.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.07%)</title><rect x="31.0" y="1763.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.0" y="1774.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass (1 samples, 0.07%)</title><rect x="31.0" y="1747.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="34.0" y="1758.0"></text>
</g>
<g>
<title>char* UNICODE::as_utf8&lt;signed char&gt;(signed char*, int&amp;) (1 samples, 0.07%)</title><rect x="31.0" y="1731.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="34.0" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 0.07%)</title><rect x="31.8" y="1779.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.8" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.07%)</title><rect x="31.8" y="1763.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.8" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.07%)</title><rect x="31.8" y="1747.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (539 samples, 36.84%)</title><rect x="32.6" y="1779.0" width="434.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.6" y="1790.0">jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathO..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (534 samples, 36.50%)</title><rect x="32.6" y="1763.0" width="430.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.6" y="1774.0">jdk/internal/loader/BuiltinClassLoader.defineClass</text>
</g>
<g>
<title>java/security/CodeSource.&lt;init&gt; (2 samples, 0.14%)</title><rect x="33.4" y="1747.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.4" y="1758.0"></text>
</g>
<g>
<title>sun/net/util/URLUtil.urlNoFragString (2 samples, 0.14%)</title><rect x="33.4" y="1731.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.4" y="1742.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.07%)</title><rect x="34.2" y="1715.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.2" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.07%)</title><rect x="34.2" y="1699.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.2" y="1710.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (498 samples, 34.04%)</title><rect x="35.0" y="1747.0" width="401.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.0" y="1758.0">java/security/SecureClassLoader.defineClass</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (498 samples, 34.04%)</title><rect x="35.0" y="1731.0" width="401.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.0" y="1742.0">java/lang/ClassLoader.defineClass</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (491 samples, 33.56%)</title><rect x="35.0" y="1715.0" width="396.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.0" y="1726.0">java/lang/ClassLoader.defineClass1</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (99 samples, 6.77%)</title><rect x="35.0" y="1699.0" width="79.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="38.0" y="1710.0">Java_java..</text>
</g>
<g>
<title>JVM_DefineClassWithSource (94 samples, 6.43%)</title><rect x="35.8" y="1683.0" width="75.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="38.8" y="1694.0">JVM_Defi..</text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (94 samples, 6.43%)</title><rect x="35.8" y="1667.0" width="75.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="38.8" y="1678.0">jvm_defi..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.07%)</title><rect x="35.8" y="1651.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="38.8" y="1662.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="35.8" y="1635.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="38.8" y="1646.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (92 samples, 6.29%)</title><rect x="36.6" y="1651.0" width="74.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="39.6" y="1662.0">SystemDi..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (89 samples, 6.08%)</title><rect x="36.6" y="1635.0" width="71.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="39.6" y="1646.0">KlassFac..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (67 samples, 4.58%)</title><rect x="36.6" y="1619.0" width="54.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="39.6" y="1630.0">Class..</text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (67 samples, 4.58%)</title><rect x="36.6" y="1603.0" width="54.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="39.6" y="1614.0">Class..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (10 samples, 0.68%)</title><rect x="37.4" y="1587.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="40.4" y="1598.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (2 samples, 0.14%)</title><rect x="39.8" y="1571.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.8" y="1582.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (2 samples, 0.14%)</title><rect x="41.5" y="1571.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="44.5" y="1582.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.07%)</title><rect x="42.3" y="1555.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="45.3" y="1566.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (3 samples, 0.21%)</title><rect x="43.1" y="1571.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="46.1" y="1582.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (3 samples, 0.21%)</title><rect x="43.1" y="1555.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="46.1" y="1566.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (38 samples, 2.60%)</title><rect x="45.5" y="1587.0" width="30.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="48.5" y="1598.0">Cl..</text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (6 samples, 0.41%)</title><rect x="45.5" y="1571.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.5" y="1582.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (6 samples, 0.41%)</title><rect x="45.5" y="1555.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.5" y="1566.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="49.5" y="1539.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="52.5" y="1550.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (26 samples, 1.78%)</title><rect x="50.3" y="1571.0" width="21.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="53.3" y="1582.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.07%)</title><rect x="71.3" y="1571.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="74.3" y="1582.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (2 samples, 0.14%)</title><rect x="72.1" y="1571.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="75.1" y="1582.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (3 samples, 0.21%)</title><rect x="73.7" y="1571.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="76.7" y="1582.0"></text>
</g>
<g>
<title>ClassFileParser::parse_fields(ClassFileStream const*, bool, ClassFileParser::FieldAllocationCount*, ConstantPool*, int, unsigned short*, Thread*) (1 samples, 0.07%)</title><rect x="76.1" y="1587.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="79.1" y="1598.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.07%)</title><rect x="76.1" y="1571.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="79.1" y="1582.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (13 samples, 0.89%)</title><rect x="76.9" y="1587.0" width="10.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="79.9" y="1598.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (12 samples, 0.82%)</title><rect x="76.9" y="1571.0" width="9.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="79.9" y="1582.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="77.8" y="1555.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="80.8" y="1566.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="77.8" y="1539.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="80.8" y="1550.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="77.8" y="1523.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="80.8" y="1534.0"></text>
</g>
<g>
<title>ClassFileParser::copy_localvariable_table(ConstMethod const*, int, unsigned short*, void const**, int, unsigned short*, void const**, Thread*) (1 samples, 0.07%)</title><rect x="78.6" y="1555.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="81.6" y="1566.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="78.6" y="1539.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="81.6" y="1550.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (3 samples, 0.21%)</title><rect x="79.4" y="1555.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="82.4" y="1566.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.07%)</title><rect x="80.2" y="1539.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="83.2" y="1550.0"></text>
</g>
<g>
<title>strchr@plt (1 samples, 0.07%)</title><rect x="81.0" y="1539.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="84.0" y="1550.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (2 samples, 0.14%)</title><rect x="81.8" y="1555.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="84.8" y="1566.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (2 samples, 0.14%)</title><rect x="81.8" y="1539.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="84.8" y="1550.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (2 samples, 0.14%)</title><rect x="83.4" y="1555.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="86.4" y="1566.0"></text>
</g>
<g>
<title>ClassLoaderData::metaspace_non_null() (1 samples, 0.07%)</title><rect x="83.4" y="1539.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="86.4" y="1550.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.07%)</title><rect x="84.2" y="1539.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="87.2" y="1550.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.07%)</title><rect x="84.2" y="1523.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="87.2" y="1534.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.07%)</title><rect x="84.2" y="1507.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="87.2" y="1518.0"></text>
</g>
<g>
<title>MetaspaceUtils::inc_used(Metaspace::MetadataType, unsigned long) (1 samples, 0.07%)</title><rect x="84.2" y="1491.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="87.2" y="1502.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.07%)</title><rect x="85.0" y="1555.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="88.0" y="1566.0"></text>
</g>
<g>
<title>SignatureIterator::parse_type() (1 samples, 0.07%)</title><rect x="85.0" y="1539.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="88.0" y="1550.0"></text>
</g>
<g>
<title>copy_lvt_element(Classfile_LVT_Element const*, LocalVariableTableElement*) (1 samples, 0.07%)</title><rect x="85.8" y="1555.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="88.8" y="1566.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="86.6" y="1571.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="89.6" y="1582.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.07%)</title><rect x="87.4" y="1587.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="90.4" y="1598.0"></text>
</g>
<g>
<title>ConstantPool::allocate(ClassLoaderData*, int, Thread*) (2 samples, 0.14%)</title><rect x="88.2" y="1587.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="91.2" y="1598.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (2 samples, 0.14%)</title><rect x="88.2" y="1571.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="91.2" y="1582.0"></text>
</g>
<g>
<title>MetaspaceUtils::inc_used(Metaspace::MetadataType, unsigned long) (1 samples, 0.07%)</title><rect x="88.2" y="1555.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="91.2" y="1566.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.07%)</title><rect x="89.0" y="1555.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="92.0" y="1566.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="89.0" y="1539.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="92.0" y="1550.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.07%)</title><rect x="89.8" y="1587.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="92.8" y="1598.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (12 samples, 0.82%)</title><rect x="90.7" y="1619.0" width="9.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="93.7" y="1630.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (10 samples, 0.68%)</title><rect x="90.7" y="1603.0" width="8.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="93.7" y="1614.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (4 samples, 0.27%)</title><rect x="92.3" y="1587.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="95.3" y="1598.0"></text>
</g>
<g>
<title>StatefulMethodFamily::record_method_and_dq_further(Method*) (1 samples, 0.07%)</title><rect x="94.7" y="1571.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="97.7" y="1582.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="94.7" y="1555.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="97.7" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::can_be_primary_super_slow() const (1 samples, 0.07%)</title><rect x="95.5" y="1587.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="98.5" y="1598.0"></text>
</g>
<g>
<title>InstanceMirrorKlass::allocate_instance(Klass*, Thread*) (1 samples, 0.07%)</title><rect x="96.3" y="1587.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="99.3" y="1598.0"></text>
</g>
<g>
<title>Reflection::verify_class_access(Klass const*, InstanceKlass const*, bool) (1 samples, 0.07%)</title><rect x="97.1" y="1587.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="100.1" y="1598.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="97.9" y="1587.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="100.9" y="1598.0"></text>
</g>
<g>
<title>Klass::set_java_mirror(Handle) (1 samples, 0.07%)</title><rect x="97.9" y="1571.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="100.9" y="1582.0"></text>
</g>
<g>
<title>ClassLoaderData::add_handle(Handle) (1 samples, 0.07%)</title><rect x="97.9" y="1555.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="100.9" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="98.7" y="1603.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="101.7" y="1614.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.07%)</title><rect x="98.7" y="1587.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="101.7" y="1598.0"></text>
</g>
<g>
<title>metaspace::SmallBlocks::total_size() const (1 samples, 0.07%)</title><rect x="98.7" y="1571.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="101.7" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::copy_method_ordering(GrowableArray&lt;int&gt; const*, Thread*) (1 samples, 0.07%)</title><rect x="99.5" y="1603.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="102.5" y="1614.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.07%)</title><rect x="100.3" y="1619.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="103.3" y="1630.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="100.3" y="1603.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="103.3" y="1614.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="100.3" y="1587.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="103.3" y="1598.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.07%)</title><rect x="100.3" y="1571.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="103.3" y="1582.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (8 samples, 0.55%)</title><rect x="101.1" y="1619.0" width="6.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="104.1" y="1630.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (8 samples, 0.55%)</title><rect x="101.1" y="1603.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="104.1" y="1614.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (8 samples, 0.55%)</title><rect x="101.1" y="1587.0" width="6.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="104.1" y="1598.0"></text>
</g>
<g>
<title>checkForAndClearThrowable (1 samples, 0.07%)</title><rect x="101.1" y="1571.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="104.1" y="1582.0"></text>
</g>
<g>
<title>transformClassFile (7 samples, 0.48%)</title><rect x="101.9" y="1571.0" width="5.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="104.9" y="1582.0"></text>
</g>
<g>
<title>jni_CallObjectMethod (1 samples, 0.07%)</title><rect x="101.9" y="1555.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="104.9" y="1566.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.07%)</title><rect x="101.9" y="1539.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="104.9" y="1550.0"></text>
</g>
<g>
<title>jni_NewStringUTF (1 samples, 0.07%)</title><rect x="102.8" y="1555.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="105.8" y="1566.0"></text>
</g>
<g>
<title>java_lang_String::create_oop_from_str(char const*, Thread*) (1 samples, 0.07%)</title><rect x="102.8" y="1539.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="105.8" y="1550.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) [clone .part.102] (1 samples, 0.07%)</title><rect x="102.8" y="1523.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="105.8" y="1534.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="102.8" y="1507.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="105.8" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="102.8" y="1491.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="105.8" y="1502.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="102.8" y="1475.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="105.8" y="1486.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="102.8" y="1459.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="105.8" y="1470.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.07%)</title><rect x="102.8" y="1443.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="105.8" y="1454.0"></text>
</g>
<g>
<title>jvmti_GetNamedModule (3 samples, 0.21%)</title><rect x="103.6" y="1555.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="106.6" y="1566.0"></text>
</g>
<g>
<title>JvmtiEnv::GetNamedModule(_jobject*, char const*, _jobject**) (1 samples, 0.07%)</title><rect x="104.4" y="1539.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="107.4" y="1550.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.07%)</title><rect x="104.4" y="1523.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="107.4" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.168] (1 samples, 0.07%)</title><rect x="105.2" y="1539.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="108.2" y="1550.0"></text>
</g>
<g>
<title>releaseReentrancyToken (1 samples, 0.07%)</title><rect x="106.0" y="1555.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="109.0" y="1566.0"></text>
</g>
<g>
<title>assertTLSValue (1 samples, 0.07%)</title><rect x="106.0" y="1539.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="109.0" y="1550.0"></text>
</g>
<g>
<title>JvmtiEnv::GetThreadLocalStorage(_jobject*, void**) (1 samples, 0.07%)</title><rect x="106.0" y="1523.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.0" y="1534.0"></text>
</g>
<g>
<title>tryToAcquireReentrancyToken (1 samples, 0.07%)</title><rect x="106.8" y="1555.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="109.8" y="1566.0"></text>
</g>
<g>
<title>confirmingTLSSet (1 samples, 0.07%)</title><rect x="106.8" y="1539.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="109.8" y="1550.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="106.8" y="1523.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="109.8" y="1534.0"></text>
</g>
<g>
<title>klassItable::compute_itable_size(Array&lt;Klass*&gt;*) (1 samples, 0.07%)</title><rect x="107.6" y="1619.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="110.6" y="1630.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (3 samples, 0.21%)</title><rect x="108.4" y="1635.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="111.4" y="1646.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (2 samples, 0.14%)</title><rect x="109.2" y="1619.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="112.2" y="1630.0"></text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (2 samples, 0.14%)</title><rect x="109.2" y="1603.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="112.2" y="1614.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.14%)</title><rect x="109.2" y="1587.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="112.2" y="1598.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::parallelCapable(oopDesc*) (1 samples, 0.07%)</title><rect x="110.8" y="1651.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="113.8" y="1662.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="111.6" y="1683.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="114.6" y="1694.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (1 samples, 0.07%)</title><rect x="112.4" y="1683.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="115.4" y="1694.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.07%)</title><rect x="112.4" y="1667.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="115.4" y="1678.0"></text>
</g>
<g>
<title>jni_GetStringLength (1 samples, 0.07%)</title><rect x="113.2" y="1683.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="116.2" y="1694.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.07%)</title><rect x="113.2" y="1667.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="116.2" y="1678.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (1 samples, 0.07%)</title><rect x="114.0" y="1683.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="117.0" y="1694.0"></text>
</g>
<g>
<title>int UNICODE::utf8_length&lt;signed char&gt;(signed char*, int) (1 samples, 0.07%)</title><rect x="114.0" y="1667.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="117.0" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (48 samples, 3.28%)</title><rect x="114.9" y="1699.0" width="38.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.9" y="1710.0">jav..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (48 samples, 3.28%)</title><rect x="114.9" y="1683.0" width="38.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.9" y="1694.0">jdk..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (48 samples, 3.28%)</title><rect x="114.9" y="1667.0" width="38.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.9" y="1678.0">jdk..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (48 samples, 3.28%)</title><rect x="114.9" y="1651.0" width="38.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.9" y="1662.0">jdk..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (46 samples, 3.14%)</title><rect x="114.9" y="1635.0" width="37.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.9" y="1646.0">jdk..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (46 samples, 3.14%)</title><rect x="114.9" y="1619.0" width="37.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.9" y="1630.0">jdk..</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (37 samples, 2.53%)</title><rect x="114.9" y="1603.0" width="29.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.9" y="1614.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (37 samples, 2.53%)</title><rect x="114.9" y="1587.0" width="29.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.9" y="1598.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (37 samples, 2.53%)</title><rect x="114.9" y="1571.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.9" y="1582.0">ja..</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (5 samples, 0.34%)</title><rect x="114.9" y="1555.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="117.9" y="1566.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (5 samples, 0.34%)</title><rect x="114.9" y="1539.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="117.9" y="1550.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (5 samples, 0.34%)</title><rect x="114.9" y="1523.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="117.9" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (5 samples, 0.34%)</title><rect x="114.9" y="1507.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="117.9" y="1518.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (5 samples, 0.34%)</title><rect x="114.9" y="1491.0" width="4.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="117.9" y="1502.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (3 samples, 0.21%)</title><rect x="114.9" y="1475.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="117.9" y="1486.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (3 samples, 0.21%)</title><rect x="114.9" y="1459.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.9" y="1470.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.14%)</title><rect x="114.9" y="1443.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="117.9" y="1454.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (2 samples, 0.14%)</title><rect x="114.9" y="1427.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="117.9" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.07%)</title><rect x="116.5" y="1443.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="119.5" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.07%)</title><rect x="116.5" y="1427.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="119.5" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.07%)</title><rect x="116.5" y="1411.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="119.5" y="1422.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.07%)</title><rect x="116.5" y="1395.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="119.5" y="1406.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="116.5" y="1379.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="119.5" y="1390.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.07%)</title><rect x="117.3" y="1475.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="120.3" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="117.3" y="1459.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="120.3" y="1470.0"></text>
</g>
<g>
<title>ClassFileParser::layout_size() const (1 samples, 0.07%)</title><rect x="117.3" y="1443.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="120.3" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.07%)</title><rect x="118.1" y="1475.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="121.1" y="1486.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;Klass*&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="118.1" y="1459.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="121.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (12 samples, 0.82%)</title><rect x="118.9" y="1555.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.9" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (12 samples, 0.82%)</title><rect x="118.9" y="1539.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.9" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (12 samples, 0.82%)</title><rect x="118.9" y="1523.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.9" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (12 samples, 0.82%)</title><rect x="118.9" y="1507.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (12 samples, 0.82%)</title><rect x="118.9" y="1491.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (12 samples, 0.82%)</title><rect x="118.9" y="1475.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.9" y="1486.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (12 samples, 0.82%)</title><rect x="118.9" y="1459.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.9" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (12 samples, 0.82%)</title><rect x="118.9" y="1443.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (12 samples, 0.82%)</title><rect x="118.9" y="1427.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.9" y="1438.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="118.9" y="1411.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="121.9" y="1422.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="118.9" y="1395.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="121.9" y="1406.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="118.9" y="1379.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="121.9" y="1390.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="118.9" y="1363.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="121.9" y="1374.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="118.9" y="1347.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="121.9" y="1358.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.07%)</title><rect x="118.9" y="1331.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="121.9" y="1342.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.07%)</title><rect x="118.9" y="1315.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="121.9" y="1326.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (1 samples, 0.07%)</title><rect x="118.9" y="1299.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="121.9" y="1310.0"></text>
</g>
<g>
<title>transformClassFile (1 samples, 0.07%)</title><rect x="118.9" y="1283.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="121.9" y="1294.0"></text>
</g>
<g>
<title>jvmti_GetNamedModule (1 samples, 0.07%)</title><rect x="118.9" y="1267.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="121.9" y="1278.0"></text>
</g>
<g>
<title>JvmtiEnv::GetNamedModule(_jobject*, char const*, _jobject**) (1 samples, 0.07%)</title><rect x="118.9" y="1251.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.9" y="1262.0"></text>
</g>
<g>
<title>Modules::get_named_module(Handle, char const*, Thread*) (1 samples, 0.07%)</title><rect x="118.9" y="1235.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.9" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::verify_unqualified_name(char const*, unsigned int, int) (1 samples, 0.07%)</title><rect x="118.9" y="1219.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="121.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.21%)</title><rect x="119.7" y="1411.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 0.21%)</title><rect x="119.7" y="1395.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.21%)</title><rect x="119.7" y="1379.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.21%)</title><rect x="119.7" y="1363.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 0.21%)</title><rect x="119.7" y="1347.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (3 samples, 0.21%)</title><rect x="119.7" y="1331.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.7" y="1342.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (3 samples, 0.21%)</title><rect x="119.7" y="1315.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (3 samples, 0.21%)</title><rect x="119.7" y="1299.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="122.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (3 samples, 0.21%)</title><rect x="119.7" y="1283.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.7" y="1294.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="119.7" y="1267.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="122.7" y="1278.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="119.7" y="1251.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="122.7" y="1262.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="119.7" y="1235.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="122.7" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="119.7" y="1219.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="122.7" y="1230.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="119.7" y="1203.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="122.7" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="119.7" y="1187.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="122.7" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="119.7" y="1171.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="122.7" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.07%)</title><rect x="119.7" y="1155.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="122.7" y="1166.0"></text>
</g>
<g>
<title>ConstantPool::allocate_resolved_klasses(ClassLoaderData*, int, Thread*) (1 samples, 0.07%)</title><rect x="119.7" y="1139.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="122.7" y="1150.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.07%)</title><rect x="119.7" y="1123.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="122.7" y="1134.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.07%)</title><rect x="119.7" y="1107.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="122.7" y="1118.0"></text>
</g>
<g>
<title>metaspace::BlockFreelist::get_block(unsigned long) (1 samples, 0.07%)</title><rect x="119.7" y="1091.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="122.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="120.5" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.07%)</title><rect x="120.5" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.07%)</title><rect x="120.5" y="1235.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.07%)</title><rect x="120.5" y="1219.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.07%)</title><rect x="120.5" y="1203.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.07%)</title><rect x="120.5" y="1187.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.5" y="1198.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="120.5" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="120.5" y="1155.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="120.5" y="1139.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="120.5" y="1123.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.07%)</title><rect x="120.5" y="1107.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.07%)</title><rect x="120.5" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.07%)</title><rect x="120.5" y="1075.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.07%)</title><rect x="120.5" y="1059.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.07%)</title><rect x="120.5" y="1043.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.5" y="1054.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="120.5" y="1027.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="120.5" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="120.5" y="995.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.5" y="1006.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.07%)</title><rect x="120.5" y="979.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.5" y="990.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.07%)</title><rect x="120.5" y="963.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.07%)</title><rect x="120.5" y="947.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.5" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="120.5" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.5" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="120.5" y="915.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="120.5" y="899.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="120.5" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.07%)</title><rect x="120.5" y="867.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="120.5" y="851.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.07%)</title><rect x="120.5" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.07%)</title><rect x="120.5" y="819.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.07%)</title><rect x="120.5" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.07%)</title><rect x="120.5" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.07%)</title><rect x="120.5" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.07%)</title><rect x="120.5" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (1 samples, 0.07%)</title><rect x="120.5" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.07%)</title><rect x="120.5" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.07%)</title><rect x="120.5" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.07%)</title><rect x="120.5" y="691.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.07%)</title><rect x="120.5" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.07%)</title><rect x="120.5" y="659.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isSamePackage (1 samples, 0.07%)</title><rect x="120.5" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getPackage (1 samples, 0.07%)</title><rect x="120.5" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.5" y="638.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.07%)</title><rect x="121.3" y="1267.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.3" y="1278.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.07%)</title><rect x="121.3" y="1251.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.3" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.07%)</title><rect x="121.3" y="1235.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.3" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="121.3" y="1219.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.3" y="1230.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="121.3" y="1203.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.3" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="121.3" y="1187.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.3" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="121.3" y="1171.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.3" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.07%)</title><rect x="121.3" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.3" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="121.3" y="1139.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.3" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.07%)</title><rect x="121.3" y="1123.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.3" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.07%)</title><rect x="121.3" y="1107.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.07%)</title><rect x="121.3" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.3" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.07%)</title><rect x="121.3" y="1075.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.3" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.07%)</title><rect x="121.3" y="1059.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.07%)</title><rect x="121.3" y="1043.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="121.3" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.3" y="1038.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="122.1" y="1411.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="125.1" y="1422.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (7 samples, 0.48%)</title><rect x="122.9" y="1411.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.9" y="1422.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (7 samples, 0.48%)</title><rect x="122.9" y="1395.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (7 samples, 0.48%)</title><rect x="122.9" y="1379.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.9" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (7 samples, 0.48%)</title><rect x="122.9" y="1363.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.9" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.48%)</title><rect x="122.9" y="1347.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (7 samples, 0.48%)</title><rect x="122.9" y="1331.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (7 samples, 0.48%)</title><rect x="122.9" y="1315.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (7 samples, 0.48%)</title><rect x="122.9" y="1299.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (7 samples, 0.48%)</title><rect x="122.9" y="1283.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.07%)</title><rect x="122.9" y="1267.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.07%)</title><rect x="122.9" y="1251.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.9" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$ClassFileBufferStrategy$Default$1.typePool (1 samples, 0.07%)</title><rect x="123.7" y="1267.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.7" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.07%)</title><rect x="123.7" y="1251.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.7" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.07%)</title><rect x="123.7" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.7" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.computeIfAbsent (1 samples, 0.07%)</title><rect x="123.7" y="1219.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.7" y="1230.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="123.7" y="1203.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.7" y="1214.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getKey (1 samples, 0.07%)</title><rect x="123.7" y="1187.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="123.7" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="123.7" y="1155.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (5 samples, 0.34%)</title><rect x="124.5" y="1267.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.5" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.07%)</title><rect x="124.5" y="1251.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.5" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.14%)</title><rect x="125.3" y="1251.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.3" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (2 samples, 0.14%)</title><rect x="125.3" y="1235.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.3" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (2 samples, 0.14%)</title><rect x="125.3" y="1219.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.3" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="125.3" y="1203.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.3" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="125.3" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.3" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (1 samples, 0.07%)</title><rect x="125.3" y="1171.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.3" y="1182.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="125.3" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.3" y="1166.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.07%)</title><rect x="125.3" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.3" y="1150.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.07%)</title><rect x="125.3" y="1123.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.3" y="1134.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.07%)</title><rect x="125.3" y="1107.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.3" y="1118.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.07%)</title><rect x="125.3" y="1091.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.3" y="1102.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.07%)</title><rect x="125.3" y="1075.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.3" y="1086.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.07%)</title><rect x="125.3" y="1059.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.3" y="1070.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.07%)</title><rect x="125.3" y="1043.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.07%)</title><rect x="125.3" y="1027.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="125.3" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.07%)</title><rect x="126.1" y="1203.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.1" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (2 samples, 0.14%)</title><rect x="127.0" y="1251.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.0" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.07%)</title><rect x="127.0" y="1235.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.0" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.07%)</title><rect x="127.8" y="1235.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.07%)</title><rect x="127.8" y="1219.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.8" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.07%)</title><rect x="127.8" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.8" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (1 samples, 0.07%)</title><rect x="127.8" y="1187.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.8" y="1198.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (20 samples, 1.37%)</title><rect x="128.6" y="1555.0" width="16.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.6" y="1566.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (20 samples, 1.37%)</title><rect x="128.6" y="1539.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.6" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (20 samples, 1.37%)</title><rect x="128.6" y="1523.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.6" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (20 samples, 1.37%)</title><rect x="128.6" y="1507.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.6" y="1518.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 1.37%)</title><rect x="128.6" y="1491.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.6" y="1502.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.07%)</title><rect x="128.6" y="1475.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="131.6" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (19 samples, 1.30%)</title><rect x="129.4" y="1475.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.4" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (19 samples, 1.30%)</title><rect x="129.4" y="1459.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.4" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (19 samples, 1.30%)</title><rect x="129.4" y="1443.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (19 samples, 1.30%)</title><rect x="129.4" y="1427.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (19 samples, 1.30%)</title><rect x="129.4" y="1411.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (9 samples, 0.62%)</title><rect x="129.4" y="1395.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.4" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (2 samples, 0.14%)</title><rect x="129.4" y="1379.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.4" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (2 samples, 0.14%)</title><rect x="129.4" y="1363.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.4" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.computeIfAbsent (2 samples, 0.14%)</title><rect x="129.4" y="1347.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.4" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.14%)</title><rect x="129.4" y="1331.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.4" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.14%)</title><rect x="129.4" y="1315.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.4" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (2 samples, 0.14%)</title><rect x="129.4" y="1299.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.4" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (2 samples, 0.14%)</title><rect x="129.4" y="1283.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.4" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.14%)</title><rect x="129.4" y="1267.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.4" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.07%)</title><rect x="129.4" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.4" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.indexMethods (1 samples, 0.07%)</title><rect x="129.4" y="1235.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.4" y="1246.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f20688b7080 (1 samples, 0.07%)</title><rect x="129.4" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.4" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.07%)</title><rect x="130.2" y="1251.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.2" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="130.2" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.2" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="130.2" y="1219.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="130.2" y="1203.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.2" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="130.2" y="1187.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.2" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="130.2" y="1171.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.2" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="130.2" y="1155.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="130.2" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.2" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.07%)</title><rect x="130.2" y="1123.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.2" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="130.2" y="1107.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.2" y="1118.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.07%)</title><rect x="130.2" y="1091.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="133.2" y="1102.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.07%)</title><rect x="130.2" y="1075.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="133.2" y="1086.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.07%)</title><rect x="130.2" y="1059.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="133.2" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (7 samples, 0.48%)</title><rect x="131.0" y="1379.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.0" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (6 samples, 0.41%)</title><rect x="131.0" y="1363.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.0" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="131.0" y="1347.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.0" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="131.0" y="1331.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.0" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (1 samples, 0.07%)</title><rect x="131.0" y="1315.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.0" y="1326.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="131.0" y="1299.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.0" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="131.8" y="1347.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.8" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="131.8" y="1331.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.8" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.07%)</title><rect x="131.8" y="1315.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.8" y="1326.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.07%)</title><rect x="131.8" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.8" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.07%)</title><rect x="131.8" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.8" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="131.8" y="1267.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.endsWith (1 samples, 0.07%)</title><rect x="132.6" y="1315.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.07%)</title><rect x="132.6" y="1299.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.6" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.14%)</title><rect x="133.4" y="1347.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.4" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.14%)</title><rect x="133.4" y="1331.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.4" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (2 samples, 0.14%)</title><rect x="133.4" y="1315.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.4" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.07%)</title><rect x="133.4" y="1299.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.4" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.07%)</title><rect x="133.4" y="1283.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.4" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="133.4" y="1267.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.4" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="133.4" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.4" y="1262.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="133.4" y="1235.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.4" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.07%)</title><rect x="133.4" y="1219.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.4" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.07%)</title><rect x="133.4" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.07%)</title><rect x="133.4" y="1187.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.4" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.07%)</title><rect x="133.4" y="1171.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.4" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="133.4" y="1155.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.4" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="133.4" y="1139.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.4" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.07%)</title><rect x="133.4" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.4" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.07%)</title><rect x="133.4" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="133.4" y="1091.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.07%)</title><rect x="134.2" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.2" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1283.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.2" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1267.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.2" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1251.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.2" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1235.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.2" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1219.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.2" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1187.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.2" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="134.2" y="1171.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.2" y="1182.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="134.2" y="1155.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.2" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.07%)</title><rect x="134.2" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.2" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.07%)</title><rect x="135.0" y="1347.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.0" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.07%)</title><rect x="135.0" y="1331.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.0" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="135.0" y="1315.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.0" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="135.0" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.0" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (1 samples, 0.07%)</title><rect x="135.0" y="1283.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.0" y="1294.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="135.0" y="1267.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.0" y="1278.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.07%)</title><rect x="135.0" y="1251.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.0" y="1262.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.07%)</title><rect x="135.0" y="1235.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.0" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.07%)</title><rect x="135.8" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.8" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.07%)</title><rect x="135.8" y="1347.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (3 samples, 0.21%)</title><rect x="136.6" y="1395.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.6" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (3 samples, 0.21%)</title><rect x="136.6" y="1379.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.6" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (1 samples, 0.07%)</title><rect x="138.2" y="1363.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (2 samples, 0.14%)</title><rect x="139.0" y="1395.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.0" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (2 samples, 0.14%)</title><rect x="139.0" y="1379.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.0" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (2 samples, 0.14%)</title><rect x="139.0" y="1363.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (2 samples, 0.14%)</title><rect x="139.0" y="1347.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.0" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.07%)</title><rect x="139.0" y="1331.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.0" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.07%)</title><rect x="139.0" y="1315.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.0" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.0" y="1299.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.0" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.0" y="1283.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.0" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.0" y="1267.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.0" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.07%)</title><rect x="139.0" y="1251.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.0" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForLocalValue$Factory.make (1 samples, 0.07%)</title><rect x="139.0" y="1235.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.0" y="1246.0"></text>
</g>
<g>
<title>com/sun/proxy/$Proxy11.value (1 samples, 0.07%)</title><rect x="139.0" y="1219.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.0" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.invoke (1 samples, 0.07%)</title><rect x="139.0" y="1203.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.0" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="139.9" y="1331.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="139.9" y="1315.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="139.9" y="1299.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.9" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="139.9" y="1283.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.9" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.07%)</title><rect x="139.9" y="1267.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="139.9" y="1251.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.9" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.07%)</title><rect x="139.9" y="1235.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="139.9" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.07%)</title><rect x="139.9" y="1203.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="139.9" y="1187.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (1 samples, 0.07%)</title><rect x="139.9" y="1171.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.07%)</title><rect x="139.9" y="1155.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (1 samples, 0.07%)</title><rect x="139.9" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 0.07%)</title><rect x="139.9" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.9" y="1134.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.07%)</title><rect x="139.9" y="1107.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.9" y="1118.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.07%)</title><rect x="139.9" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.9" y="1102.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.07%)</title><rect x="139.9" y="1075.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.9" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.07%)</title><rect x="139.9" y="1059.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.9" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.07%)</title><rect x="139.9" y="1043.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.9" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.07%)</title><rect x="139.9" y="1027.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.9" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.hashN (1 samples, 0.07%)</title><rect x="139.9" y="1011.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (5 samples, 0.34%)</title><rect x="140.7" y="1395.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.7" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (3 samples, 0.21%)</title><rect x="140.7" y="1379.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.7" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.07%)</title><rect x="140.7" y="1363.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.7" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.07%)</title><rect x="140.7" y="1347.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.7" y="1358.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="140.7" y="1331.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.7" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.07%)</title><rect x="140.7" y="1315.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.7" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.07%)</title><rect x="140.7" y="1299.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.7" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.07%)</title><rect x="140.7" y="1283.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.7" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.07%)</title><rect x="140.7" y="1267.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.7" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="140.7" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.7" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="140.7" y="1235.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.7" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getObjectType (1 samples, 0.07%)</title><rect x="140.7" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.7" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.07%)</title><rect x="141.5" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.5" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.07%)</title><rect x="141.5" y="1347.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.5" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.07%)</title><rect x="141.5" y="1331.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.5" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (1 samples, 0.07%)</title><rect x="141.5" y="1315.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.5" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.07%)</title><rect x="141.5" y="1299.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getParameters (1 samples, 0.07%)</title><rect x="141.5" y="1283.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.5" y="1294.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="141.5" y="1267.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="144.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.07%)</title><rect x="142.3" y="1363.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.3" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.07%)</title><rect x="142.3" y="1347.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1331.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.3" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1315.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1283.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1267.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.3" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.3" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1235.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.3" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1203.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.3" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1187.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.3" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.07%)</title><rect x="142.3" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.3" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.07%)</title><rect x="142.3" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.3" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.07%)</title><rect x="142.3" y="1123.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.3" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.07%)</title><rect x="142.3" y="1107.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.07%)</title><rect x="142.3" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="142.3" y="1075.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="142.3" y="1059.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="142.3" y="1043.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="142.3" y="1027.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="142.3" y="1011.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="142.3" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="142.3" y="979.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.07%)</title><rect x="142.3" y="963.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.3" y="974.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.07%)</title><rect x="142.3" y="947.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.3" y="958.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="142.3" y="931.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.3" y="942.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="142.3" y="915.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.3" y="926.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="142.3" y="899.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="142.3" y="883.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="145.3" y="894.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="142.3" y="867.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="145.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.14%)</title><rect x="143.1" y="1379.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.1" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (2 samples, 0.14%)</title><rect x="143.1" y="1363.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.1" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="143.1" y="1347.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="143.1" y="1331.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.1" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.07%)</title><rect x="143.1" y="1315.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.1" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.07%)</title><rect x="143.1" y="1299.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.1" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (1 samples, 0.07%)</title><rect x="143.1" y="1283.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.1" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.07%)</title><rect x="143.1" y="1267.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.1" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.07%)</title><rect x="143.1" y="1251.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="143.1" y="1235.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.1" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="143.1" y="1219.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="146.1" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.toByteArray (1 samples, 0.07%)</title><rect x="143.9" y="1347.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.9" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (2 samples, 0.14%)</title><rect x="144.7" y="1603.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (2 samples, 0.14%)</title><rect x="144.7" y="1587.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.getAndVerifyPackage (2 samples, 0.14%)</title><rect x="144.7" y="1571.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getDefinedPackage (1 samples, 0.07%)</title><rect x="144.7" y="1555.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.7" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.07%)</title><rect x="144.7" y="1539.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.7" y="1550.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="144.7" y="1523.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.7" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.isSealed (1 samples, 0.07%)</title><rect x="145.5" y="1555.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.5" y="1566.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.getValue (1 samples, 0.07%)</title><rect x="145.5" y="1539.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.5" y="1550.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.get (1 samples, 0.07%)</title><rect x="145.5" y="1523.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.5" y="1534.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.07%)</title><rect x="145.5" y="1507.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.5" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="145.5" y="1491.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.5" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (7 samples, 0.48%)</title><rect x="146.3" y="1603.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.3" y="1614.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (7 samples, 0.48%)</title><rect x="146.3" y="1587.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.3" y="1598.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (5 samples, 0.34%)</title><rect x="146.3" y="1571.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.3" y="1582.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (5 samples, 0.34%)</title><rect x="146.3" y="1555.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.3" y="1566.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (3 samples, 0.21%)</title><rect x="146.3" y="1539.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="149.3" y="1550.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytesBytes (1 samples, 0.07%)</title><rect x="148.7" y="1539.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="151.7" y="1550.0"></text>
</g>
<g>
<title>jni_GetPrimitiveArrayCritical (1 samples, 0.07%)</title><rect x="148.7" y="1523.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="151.7" y="1534.0"></text>
</g>
<g>
<title>CollectedHeap::supports_concurrent_phase_control() const (1 samples, 0.07%)</title><rect x="148.7" y="1507.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="151.7" y="1518.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.07%)</title><rect x="149.5" y="1539.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="152.5" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (2 samples, 0.14%)</title><rect x="150.3" y="1571.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.3" y="1582.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (2 samples, 0.14%)</title><rect x="150.3" y="1555.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.3" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (1 samples, 0.07%)</title><rect x="150.3" y="1539.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.3" y="1550.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.07%)</title><rect x="150.3" y="1523.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.3" y="1534.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.07%)</title><rect x="150.3" y="1507.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.3" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="150.3" y="1491.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="153.3" y="1502.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.07%)</title><rect x="150.3" y="1475.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="153.3" y="1486.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.07%)</title><rect x="151.1" y="1539.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.1" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.07%)</title><rect x="151.1" y="1523.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.1" y="1534.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek (1 samples, 0.07%)</title><rect x="151.1" y="1507.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.1" y="1518.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.seek0 (1 samples, 0.07%)</title><rect x="151.1" y="1491.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.1" y="1502.0"></text>
</g>
<g>
<title>Java_java_io_RandomAccessFile_seek0 (1 samples, 0.07%)</title><rect x="151.1" y="1475.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="154.1" y="1486.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.07%)</title><rect x="151.1" y="1459.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="154.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (2 samples, 0.14%)</title><rect x="152.0" y="1635.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.0" y="1646.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (2 samples, 0.14%)</title><rect x="152.0" y="1619.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (2 samples, 0.14%)</title><rect x="152.0" y="1603.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (2 samples, 0.14%)</title><rect x="152.0" y="1587.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.0" y="1598.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.07%)</title><rect x="152.0" y="1571.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="155.0" y="1582.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.07%)</title><rect x="152.0" y="1555.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="155.0" y="1566.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1539.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="155.0" y="1550.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1523.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="155.0" y="1534.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1507.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="155.0" y="1518.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1491.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="155.0" y="1502.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1475.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="155.0" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1459.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="155.0" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1443.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="155.0" y="1454.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1427.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="155.0" y="1438.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1411.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="155.0" y="1422.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1395.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="155.0" y="1406.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1379.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="155.0" y="1390.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="152.0" y="1363.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="155.0" y="1374.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.07%)</title><rect x="152.0" y="1347.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="155.0" y="1358.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.07%)</title><rect x="152.8" y="1571.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.8" y="1582.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.07%)</title><rect x="152.8" y="1555.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.8" y="1566.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.07%)</title><rect x="152.8" y="1539.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.8" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="152.8" y="1523.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.8" y="1534.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="152.8" y="1507.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.8" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="152.8" y="1491.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.8" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="152.8" y="1475.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.8" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.07%)</title><rect x="152.8" y="1459.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.8" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="152.8" y="1443.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.8" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.07%)</title><rect x="152.8" y="1427.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.8" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.07%)</title><rect x="152.8" y="1411.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.07%)</title><rect x="152.8" y="1395.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.8" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.07%)</title><rect x="152.8" y="1379.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.8" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.07%)</title><rect x="152.8" y="1363.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.07%)</title><rect x="152.8" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.07%)</title><rect x="152.8" y="1331.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.07%)</title><rect x="152.8" y="1315.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.8" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.07%)</title><rect x="152.8" y="1299.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.07%)</title><rect x="152.8" y="1283.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.8" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.07%)</title><rect x="152.8" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.8" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.07%)</title><rect x="152.8" y="1251.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.8" y="1262.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.07%)</title><rect x="152.8" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.8" y="1246.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.07%)</title><rect x="152.8" y="1219.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.8" y="1230.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="152.8" y="1203.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="155.8" y="1214.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (344 samples, 23.51%)</title><rect x="153.6" y="1699.0" width="277.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.6" y="1710.0">sun/instrument/InstrumentationImpl.tr..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (344 samples, 23.51%)</title><rect x="153.6" y="1683.0" width="277.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.6" y="1694.0">sun/instrument/TransformerManager.tra..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (344 samples, 23.51%)</title><rect x="153.6" y="1667.0" width="277.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.6" y="1678.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (344 samples, 23.51%)</title><rect x="153.6" y="1651.0" width="277.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.6" y="1662.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (344 samples, 23.51%)</title><rect x="153.6" y="1635.0" width="277.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.6" y="1646.0">java/security/AccessController.doPriv..</text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.21%)</title><rect x="153.6" y="1619.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="156.6" y="1630.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="153.6" y="1603.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="156.6" y="1614.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.14%)</title><rect x="154.4" y="1603.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="157.4" y="1614.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.14%)</title><rect x="154.4" y="1587.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="157.4" y="1598.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.14%)</title><rect x="154.4" y="1571.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="157.4" y="1582.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.07%)</title><rect x="156.0" y="1619.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="159.0" y="1630.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (340 samples, 23.24%)</title><rect x="156.8" y="1619.0" width="274.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.8" y="1630.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (340 samples, 23.24%)</title><rect x="156.8" y="1603.0" width="274.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.8" y="1614.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (340 samples, 23.24%)</title><rect x="156.8" y="1587.0" width="274.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.8" y="1598.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (340 samples, 23.24%)</title><rect x="156.8" y="1571.0" width="274.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.8" y="1582.0">net/bytebuddy/agent/builder/AgentBuil..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (337 samples, 23.03%)</title><rect x="156.8" y="1555.0" width="271.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.8" y="1566.0">net/bytebuddy/agent/builder/AgentBui..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (4 samples, 0.27%)</title><rect x="156.8" y="1539.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.8" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (3 samples, 0.21%)</title><rect x="160.0" y="1539.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.0" y="1550.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="160.0" y="1523.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="163.0" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/BooleanMatcher.matches (1 samples, 0.07%)</title><rect x="161.6" y="1523.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.6" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.07%)</title><rect x="162.4" y="1539.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.4" y="1550.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="162.4" y="1523.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="165.4" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.07%)</title><rect x="163.2" y="1539.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.2" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.07%)</title><rect x="163.2" y="1523.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.2" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (233 samples, 15.93%)</title><rect x="164.1" y="1539.0" width="187.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.1" y="1550.0">net/bytebuddy/agent/buil..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (5 samples, 0.34%)</title><rect x="167.3" y="1523.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.3" y="1534.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (4 samples, 0.27%)</title><rect x="167.3" y="1507.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.3" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.computeIfAbsent (4 samples, 0.27%)</title><rect x="167.3" y="1491.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.3" y="1502.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbb00000)@0x00007f20688bc280 (1 samples, 0.07%)</title><rect x="167.3" y="1475.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.3" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (3 samples, 0.21%)</title><rect x="168.1" y="1475.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.1" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (3 samples, 0.21%)</title><rect x="168.1" y="1459.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.1" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (3 samples, 0.21%)</title><rect x="168.1" y="1443.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.1" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (3 samples, 0.21%)</title><rect x="168.1" y="1427.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.1" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (3 samples, 0.21%)</title><rect x="168.1" y="1411.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.1" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.14%)</title><rect x="168.1" y="1395.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.1" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.indexMethods (1 samples, 0.07%)</title><rect x="168.1" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.1" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/Reference$Method.getDescriptor (1 samples, 0.07%)</title><rect x="168.1" y="1363.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.1" y="1374.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.toArray (1 samples, 0.07%)</title><rect x="168.1" y="1347.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.1" y="1358.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="168.1" y="1331.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.1" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.traverseHierarchy (1 samples, 0.07%)</title><rect x="168.9" y="1379.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.9" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findMethodsForType (1 samples, 0.07%)</title><rect x="168.9" y="1363.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.9" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getDescriptor (1 samples, 0.07%)</title><rect x="168.9" y="1347.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.9" y="1358.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="168.9" y="1331.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="171.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.07%)</title><rect x="169.7" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.7" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="169.7" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.7" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="169.7" y="1363.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.7" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="169.7" y="1347.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.7" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="169.7" y="1331.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.7" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="169.7" y="1315.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.7" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.07%)</title><rect x="169.7" y="1299.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.7" y="1310.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.07%)</title><rect x="169.7" y="1283.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.7" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="169.7" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.7" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.07%)</title><rect x="169.7" y="1251.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.7" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.07%)</title><rect x="169.7" y="1235.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.7" y="1246.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.07%)</title><rect x="169.7" y="1219.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.7" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.07%)</title><rect x="169.7" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.7" y="1214.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.07%)</title><rect x="169.7" y="1187.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.7" y="1198.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.07%)</title><rect x="169.7" y="1171.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.7" y="1182.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.07%)</title><rect x="169.7" y="1155.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="169.7" y="1139.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="172.7" y="1150.0"></text>
</g>
<g>
<title>__read (1 samples, 0.07%)</title><rect x="169.7" y="1123.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="172.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/jetty76/RequestInstrumentation.getInstrumentationMuzzle (1 samples, 0.07%)</title><rect x="170.5" y="1507.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.5" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/Reference$Builder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="170.5" y="1491.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.5" y="1502.0"></text>
</g>
<g>
<title>java/util/EnumSet.noneOf (1 samples, 0.07%)</title><rect x="170.5" y="1475.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.5" y="1486.0"></text>
</g>
<g>
<title>java/util/EnumSet.getUniverse (1 samples, 0.07%)</title><rect x="170.5" y="1459.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.5" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (224 samples, 15.31%)</title><rect x="171.3" y="1523.0" width="180.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.3" y="1534.0">net/bytebuddy/agent/bui..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="171.3" y="1507.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.3" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="171.3" y="1491.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.3" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (1 samples, 0.07%)</title><rect x="171.3" y="1475.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.3" y="1486.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="171.3" y="1459.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.3" y="1470.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.07%)</title><rect x="171.3" y="1443.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.3" y="1454.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.07%)</title><rect x="171.3" y="1427.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.3" y="1438.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap$LatentKey.equals (1 samples, 0.07%)</title><rect x="171.3" y="1411.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.3" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (120 samples, 8.20%)</title><rect x="172.1" y="1507.0" width="96.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.1" y="1518.0">datadog/tra..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (19 samples, 1.30%)</title><rect x="172.1" y="1491.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.1" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (19 samples, 1.30%)</title><rect x="172.1" y="1475.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.1" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (14 samples, 0.96%)</title><rect x="172.9" y="1459.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.9" y="1470.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (14 samples, 0.96%)</title><rect x="172.9" y="1443.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.9" y="1454.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (14 samples, 0.96%)</title><rect x="172.9" y="1427.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.9" y="1438.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (6 samples, 0.41%)</title><rect x="173.7" y="1411.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.7" y="1422.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.spread (2 samples, 0.14%)</title><rect x="177.0" y="1395.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.0" y="1406.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (7 samples, 0.48%)</title><rect x="178.6" y="1411.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.6" y="1422.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (2 samples, 0.14%)</title><rect x="178.6" y="1395.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.6" y="1406.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.07%)</title><rect x="179.4" y="1379.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.4" y="1390.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.recordRead (5 samples, 0.34%)</title><rect x="180.2" y="1395.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.lazySet (1 samples, 0.07%)</title><rect x="182.6" y="1379.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.07%)</title><rect x="183.4" y="1379.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="183.4" y="1363.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.07%)</title><rect x="183.4" y="1347.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.4" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.getCache (2 samples, 0.14%)</title><rect x="184.2" y="1459.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.2" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.hasResources (2 samples, 0.14%)</title><rect x="185.8" y="1459.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.14%)</title><rect x="185.8" y="1443.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.14%)</title><rect x="185.8" y="1427.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.14%)</title><rect x="185.8" y="1411.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.8" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (2 samples, 0.14%)</title><rect x="185.8" y="1395.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.8" y="1406.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.14%)</title><rect x="185.8" y="1379.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.14%)</title><rect x="185.8" y="1363.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.14%)</title><rect x="185.8" y="1347.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValueIterator.next (1 samples, 0.07%)</title><rect x="185.8" y="1331.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$Traverser.advance (1 samples, 0.07%)</title><rect x="185.8" y="1315.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.07%)</title><rect x="186.6" y="1331.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.07%)</title><rect x="186.6" y="1315.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.07%)</title><rect x="186.6" y="1299.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.07%)</title><rect x="186.6" y="1283.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.07%)</title><rect x="186.6" y="1267.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.07%)</title><rect x="186.6" y="1251.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.07%)</title><rect x="186.6" y="1235.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (1 samples, 0.07%)</title><rect x="186.6" y="1219.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.charsFromByteBuffer (1 samples, 0.07%)</title><rect x="186.6" y="1203.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.6" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (5 samples, 0.34%)</title><rect x="187.4" y="1491.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.4" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (5 samples, 0.34%)</title><rect x="187.4" y="1475.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.4" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (4 samples, 0.27%)</title><rect x="188.3" y="1459.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.3" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (4 samples, 0.27%)</title><rect x="188.3" y="1443.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.3" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (4 samples, 0.27%)</title><rect x="188.3" y="1427.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.3" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.21%)</title><rect x="189.1" y="1411.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.21%)</title><rect x="189.1" y="1395.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.1" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (65 samples, 4.44%)</title><rect x="191.5" y="1491.0" width="52.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.5" y="1502.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (65 samples, 4.44%)</title><rect x="191.5" y="1475.0" width="52.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.5" y="1486.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (39 samples, 2.67%)</title><rect x="191.5" y="1459.0" width="31.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.5" y="1470.0">da..</text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (14 samples, 0.96%)</title><rect x="191.5" y="1443.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.5" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (14 samples, 0.96%)</title><rect x="191.5" y="1427.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.5" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (14 samples, 0.96%)</title><rect x="191.5" y="1411.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.5" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (13 samples, 0.89%)</title><rect x="192.3" y="1395.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.3" y="1406.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (6 samples, 0.41%)</title><rect x="192.3" y="1379.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.3" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (6 samples, 0.41%)</title><rect x="192.3" y="1363.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.3" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (6 samples, 0.41%)</title><rect x="192.3" y="1347.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.3" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (6 samples, 0.41%)</title><rect x="192.3" y="1331.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.3" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (6 samples, 0.41%)</title><rect x="192.3" y="1315.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.3" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (5 samples, 0.34%)</title><rect x="193.1" y="1299.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.1" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (5 samples, 0.34%)</title><rect x="193.1" y="1283.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.1" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.14%)</title><rect x="194.7" y="1267.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.7" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.14%)</title><rect x="194.7" y="1251.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="195.5" y="1235.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.07%)</title><rect x="195.5" y="1219.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.5" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.07%)</title><rect x="196.3" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (7 samples, 0.48%)</title><rect x="197.1" y="1379.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.1" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (7 samples, 0.48%)</title><rect x="197.1" y="1363.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.1" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (2 samples, 0.14%)</title><rect x="197.1" y="1347.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaredAnnotations (2 samples, 0.14%)</title><rect x="197.1" y="1331.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (2 samples, 0.14%)</title><rect x="197.1" y="1315.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.1" y="1326.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (2 samples, 0.14%)</title><rect x="197.1" y="1299.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.1" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.21%)</title><rect x="198.7" y="1347.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.7" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.21%)</title><rect x="198.7" y="1331.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.7" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.07%)</title><rect x="198.7" y="1315.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.7" y="1326.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="198.7" y="1299.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="201.7" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="199.5" y="1315.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.5" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.07%)</title><rect x="199.5" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.07%)</title><rect x="199.5" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.of (1 samples, 0.07%)</title><rect x="199.5" y="1267.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.07%)</title><rect x="200.3" y="1315.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.3" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.07%)</title><rect x="200.3" y="1299.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.3" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="200.3" y="1283.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.3" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="200.3" y="1267.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="203.3" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.07%)</title><rect x="200.3" y="1251.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.3" y="1262.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.07%)</title><rect x="200.3" y="1235.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.3" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.07%)</title><rect x="200.3" y="1219.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.3" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="200.3" y="1203.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.3" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (2 samples, 0.14%)</title><rect x="201.2" y="1347.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (2 samples, 0.14%)</title><rect x="201.2" y="1331.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.2" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.07%)</title><rect x="201.2" y="1315.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.2" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.07%)</title><rect x="201.2" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.07%)</title><rect x="201.2" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.2" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.07%)</title><rect x="202.0" y="1315.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.0" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.07%)</title><rect x="202.0" y="1299.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.0" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="202.0" y="1283.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.0" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="202.0" y="1267.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.0" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (25 samples, 1.71%)</title><rect x="202.8" y="1443.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.8" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (4 samples, 0.27%)</title><rect x="202.8" y="1427.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.8" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (4 samples, 0.27%)</title><rect x="202.8" y="1411.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredAnnotations (3 samples, 0.21%)</title><rect x="202.8" y="1395.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.8" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getDeclaredAnnotations (3 samples, 0.21%)</title><rect x="202.8" y="1379.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.8" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredAnnotations (3 samples, 0.21%)</title><rect x="202.8" y="1363.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (3 samples, 0.21%)</title><rect x="202.8" y="1347.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (3 samples, 0.21%)</title><rect x="202.8" y="1331.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (2 samples, 0.14%)</title><rect x="203.6" y="1315.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.14%)</title><rect x="203.6" y="1299.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.6" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.14%)</title><rect x="203.6" y="1283.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.6" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.14%)</title><rect x="203.6" y="1267.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.14%)</title><rect x="203.6" y="1251.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="203.6" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.6" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="203.6" y="1219.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.6" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="203.6" y="1203.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.6" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.07%)</title><rect x="203.6" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.6" y="1198.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.07%)</title><rect x="203.6" y="1171.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.6" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="203.6" y="1155.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.6" y="1166.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="203.6" y="1139.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.6" y="1150.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="203.6" y="1123.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="203.6" y="1107.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="206.6" y="1118.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="203.6" y="1091.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="206.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="204.4" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.4" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="204.4" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.4" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="204.4" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="204.4" y="1187.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.4" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.07%)</title><rect x="204.4" y="1171.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.4" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.07%)</title><rect x="204.4" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.4" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="205.2" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="205.2" y="1379.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.2" y="1390.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.07%)</title><rect x="205.2" y="1363.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.size (1 samples, 0.07%)</title><rect x="205.2" y="1347.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (21 samples, 1.44%)</title><rect x="206.0" y="1427.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.0" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (21 samples, 1.44%)</title><rect x="206.0" y="1411.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.0" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (21 samples, 1.44%)</title><rect x="206.0" y="1395.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.0" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (21 samples, 1.44%)</title><rect x="206.0" y="1379.0" width="16.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.0" y="1390.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.07%)</title><rect x="206.0" y="1363.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$ForLoadedMethods.size (1 samples, 0.07%)</title><rect x="206.0" y="1347.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.0" y="1358.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (9 samples, 0.62%)</title><rect x="206.8" y="1363.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (9 samples, 0.62%)</title><rect x="206.8" y="1347.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (9 samples, 0.62%)</title><rect x="206.8" y="1331.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.8" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.07%)</title><rect x="206.8" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.8" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (1 samples, 0.07%)</title><rect x="206.8" y="1299.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (8 samples, 0.55%)</title><rect x="207.6" y="1315.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (8 samples, 0.55%)</title><rect x="207.6" y="1299.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.6" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (8 samples, 0.55%)</title><rect x="207.6" y="1283.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.6" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (8 samples, 0.55%)</title><rect x="207.6" y="1267.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.6" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (2 samples, 0.14%)</title><rect x="208.4" y="1251.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.4" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.07%)</title><rect x="208.4" y="1235.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="208.4" y="1219.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="208.4" y="1203.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.07%)</title><rect x="209.2" y="1235.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="209.2" y="1219.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.07%)</title><rect x="209.2" y="1203.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="209.2" y="1187.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.2" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (2 samples, 0.14%)</title><rect x="210.0" y="1251.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.14%)</title><rect x="210.0" y="1235.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.14%)</title><rect x="210.0" y="1219.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.0" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="210.8" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.8" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getMethodType (1 samples, 0.07%)</title><rect x="211.6" y="1251.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.07%)</title><rect x="211.6" y="1235.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.6" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (2 samples, 0.14%)</title><rect x="212.4" y="1251.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.4" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnType (2 samples, 0.14%)</title><rect x="212.4" y="1235.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="215.4" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getReturnTypeOffset (1 samples, 0.07%)</title><rect x="212.4" y="1219.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="212.4" y="1203.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getTypeInternal (1 samples, 0.07%)</title><rect x="213.3" y="1219.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.3" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (11 samples, 0.75%)</title><rect x="214.1" y="1363.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.1" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (11 samples, 0.75%)</title><rect x="214.1" y="1347.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.1" y="1358.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="214.1" y="1331.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="217.1" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedConstructor.getDeclaredAnnotations (2 samples, 0.14%)</title><rect x="214.9" y="1331.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.getDeclaredAnnotations (2 samples, 0.14%)</title><rect x="214.9" y="1315.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (2 samples, 0.14%)</title><rect x="214.9" y="1299.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.9" y="1310.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (2 samples, 0.14%)</title><rect x="214.9" y="1283.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.9" y="1294.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.14%)</title><rect x="214.9" y="1267.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.14%)</title><rect x="214.9" y="1251.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.9" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDeclaredAnnotations (1 samples, 0.07%)</title><rect x="216.5" y="1331.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDeclaredAnnotations (1 samples, 0.07%)</title><rect x="216.5" y="1315.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getDeclaredAnnotations (1 samples, 0.07%)</title><rect x="216.5" y="1299.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.5" y="1310.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.toArray (1 samples, 0.07%)</title><rect x="216.5" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.14%)</title><rect x="217.3" y="1331.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.3" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.14%)</title><rect x="217.3" y="1315.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.3" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="217.3" y="1299.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.3" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.07%)</title><rect x="217.3" y="1283.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.3" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$ForLoadedAnnotations.get (1 samples, 0.07%)</title><rect x="217.3" y="1267.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.3" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.of (1 samples, 0.07%)</title><rect x="217.3" y="1251.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.3" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$ForLoadedAnnotation.&lt;init&gt; (1 samples, 0.07%)</title><rect x="217.3" y="1235.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.3" y="1246.0"></text>
</g>
<g>
<title>com/sun/proxy/$Proxy2.annotationType (1 samples, 0.07%)</title><rect x="217.3" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.3" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.07%)</title><rect x="218.1" y="1299.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.1" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/AnnotationTypeMatcher.matches (1 samples, 0.07%)</title><rect x="218.1" y="1283.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.1" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="218.1" y="1267.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.1" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="218.1" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.1" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.07%)</title><rect x="218.1" y="1235.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.1" y="1246.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.07%)</title><rect x="218.1" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.1" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getDeclaredAnnotations (5 samples, 0.34%)</title><rect x="218.9" y="1331.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (5 samples, 0.34%)</title><rect x="218.9" y="1315.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (5 samples, 0.34%)</title><rect x="218.9" y="1299.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (5 samples, 0.34%)</title><rect x="218.9" y="1283.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.getBinaryName (2 samples, 0.14%)</title><rect x="218.9" y="1267.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.14%)</title><rect x="218.9" y="1251.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="219.7" y="1235.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.7" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (3 samples, 0.21%)</title><rect x="220.5" y="1267.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.5" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.isResolved (1 samples, 0.07%)</title><rect x="220.5" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.5" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.14%)</title><rect x="221.3" y="1251.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.3" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.14%)</title><rect x="221.3" y="1235.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.3" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.14%)</title><rect x="221.3" y="1219.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.3" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="221.3" y="1203.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.3" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="221.3" y="1187.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.3" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="221.3" y="1171.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="221.3" y="1155.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.3" y="1166.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.07%)</title><rect x="221.3" y="1139.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.3" y="1150.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.07%)</title><rect x="221.3" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.3" y="1134.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.07%)</title><rect x="221.3" y="1107.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="224.3" y="1118.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.07%)</title><rect x="221.3" y="1091.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.3" y="1102.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.07%)</title><rect x="221.3" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.3" y="1086.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.07%)</title><rect x="221.3" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.3" y="1070.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.07%)</title><rect x="221.3" y="1043.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.3" y="1054.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.07%)</title><rect x="221.3" y="1027.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.3" y="1038.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.07%)</title><rect x="221.3" y="1011.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.07%)</title><rect x="221.3" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (1 samples, 0.07%)</title><rect x="221.3" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalizeAndCheck (1 samples, 0.07%)</title><rect x="221.3" y="963.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="222.1" y="1203.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.1" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="222.1" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.1" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="222.1" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.1" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.07%)</title><rect x="222.1" y="1155.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.1" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="222.1" y="1139.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.1" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="222.1" y="1123.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.1" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (25 samples, 1.71%)</title><rect x="222.9" y="1459.0" width="20.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.9" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (7 samples, 0.48%)</title><rect x="223.7" y="1443.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.7" y="1454.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (7 samples, 0.48%)</title><rect x="223.7" y="1427.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.7" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (7 samples, 0.48%)</title><rect x="223.7" y="1411.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.7" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (7 samples, 0.48%)</title><rect x="223.7" y="1395.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.7" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="223.7" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.7" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="223.7" y="1363.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.7" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (6 samples, 0.41%)</title><rect x="224.5" y="1379.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.5" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.&lt;init&gt; (2 samples, 0.14%)</title><rect x="224.5" y="1363.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.5" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="225.4" y="1347.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.4" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.&lt;init&gt; (1 samples, 0.07%)</title><rect x="225.4" y="1331.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.4" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.&lt;init&gt; (1 samples, 0.07%)</title><rect x="225.4" y="1315.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.07%)</title><rect x="225.4" y="1299.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="228.4" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (4 samples, 0.27%)</title><rect x="226.2" y="1363.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.07%)</title><rect x="226.2" y="1347.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (3 samples, 0.21%)</title><rect x="227.0" y="1347.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.0" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (3 samples, 0.21%)</title><rect x="227.0" y="1331.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.0" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (3 samples, 0.21%)</title><rect x="227.0" y="1315.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.0" y="1326.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (3 samples, 0.21%)</title><rect x="227.0" y="1299.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.0" y="1310.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (2 samples, 0.14%)</title><rect x="227.0" y="1283.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.0" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.equals (2 samples, 0.14%)</title><rect x="227.0" y="1267.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.14%)</title><rect x="227.0" y="1251.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.0" y="1262.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.07%)</title><rect x="228.6" y="1283.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.6" y="1294.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.07%)</title><rect x="228.6" y="1267.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.6" y="1278.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.07%)</title><rect x="228.6" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.6" y="1262.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.07%)</title><rect x="228.6" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.6" y="1246.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.07%)</title><rect x="228.6" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.6" y="1230.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.07%)</title><rect x="228.6" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.07%)</title><rect x="228.6" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="228.6" y="1171.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.07%)</title><rect x="228.6" y="1155.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.6" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (6 samples, 0.41%)</title><rect x="229.4" y="1443.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.4" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="229.4" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.4" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="229.4" y="1411.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.4" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.07%)</title><rect x="229.4" y="1395.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.4" y="1406.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.07%)</title><rect x="229.4" y="1379.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.4" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.07%)</title><rect x="229.4" y="1363.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.4" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="229.4" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="229.4" y="1331.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.4" y="1342.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="229.4" y="1315.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="232.4" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.14%)</title><rect x="230.2" y="1427.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.2" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="230.2" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.07%)</title><rect x="231.0" y="1411.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.0" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="231.0" y="1395.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.0" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="231.0" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.0" y="1390.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="231.0" y="1363.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="234.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (3 samples, 0.21%)</title><rect x="231.8" y="1427.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.8" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (2 samples, 0.14%)</title><rect x="231.8" y="1411.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.07%)</title><rect x="232.6" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.6" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getDeclaredAnnotations (1 samples, 0.07%)</title><rect x="232.6" y="1379.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.6" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredAnnotations (1 samples, 0.07%)</title><rect x="232.6" y="1363.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.6" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.07%)</title><rect x="232.6" y="1347.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.6" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.07%)</title><rect x="232.6" y="1331.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.6" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.07%)</title><rect x="232.6" y="1315.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.07%)</title><rect x="232.6" y="1299.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.6" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="232.6" y="1283.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="235.6" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="232.6" y="1267.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.6" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="232.6" y="1251.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="232.6" y="1235.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.6" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.07%)</title><rect x="232.6" y="1219.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.6" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="232.6" y="1203.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.6" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="232.6" y="1187.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.6" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.07%)</title><rect x="233.4" y="1411.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.07%)</title><rect x="233.4" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.4" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="233.4" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.07%)</title><rect x="233.4" y="1363.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.4" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="233.4" y="1347.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.4" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.07%)</title><rect x="233.4" y="1331.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.4" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.07%)</title><rect x="233.4" y="1315.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.4" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.07%)</title><rect x="233.4" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.4" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.07%)</title><rect x="233.4" y="1283.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.4" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="233.4" y="1267.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.4" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="233.4" y="1251.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.4" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getMethodType (1 samples, 0.07%)</title><rect x="233.4" y="1235.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.4" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.07%)</title><rect x="233.4" y="1219.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.4" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (8 samples, 0.55%)</title><rect x="234.2" y="1443.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.2" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (2 samples, 0.14%)</title><rect x="234.2" y="1427.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.2" y="1438.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.14%)</title><rect x="234.2" y="1411.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.14%)</title><rect x="234.2" y="1395.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.14%)</title><rect x="234.2" y="1379.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (2 samples, 0.14%)</title><rect x="234.2" y="1363.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.14%)</title><rect x="234.2" y="1347.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.14%)</title><rect x="234.2" y="1331.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.2" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.14%)</title><rect x="234.2" y="1315.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.2" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (2 samples, 0.14%)</title><rect x="234.2" y="1299.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.2" y="1310.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (2 samples, 0.14%)</title><rect x="234.2" y="1283.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.2" y="1294.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.07%)</title><rect x="234.2" y="1267.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.2" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.equals (1 samples, 0.07%)</title><rect x="234.2" y="1251.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="234.2" y="1235.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.2" y="1246.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.07%)</title><rect x="235.0" y="1267.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.0" y="1278.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.07%)</title><rect x="235.0" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.0" y="1262.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.07%)</title><rect x="235.0" y="1235.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="238.0" y="1246.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.07%)</title><rect x="235.0" y="1219.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.0" y="1230.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.07%)</title><rect x="235.0" y="1203.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.0" y="1214.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.07%)</title><rect x="235.0" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.07%)</title><rect x="235.0" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.07%)</title><rect x="235.0" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.setRelease (1 samples, 0.07%)</title><rect x="235.0" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.0" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (5 samples, 0.34%)</title><rect x="235.8" y="1427.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.8" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (5 samples, 0.34%)</title><rect x="235.8" y="1411.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.14%)</title><rect x="235.8" y="1395.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.8" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (2 samples, 0.14%)</title><rect x="235.8" y="1379.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.8" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.14%)</title><rect x="235.8" y="1363.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="238.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.14%)</title><rect x="235.8" y="1347.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.8" y="1358.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.14%)</title><rect x="235.8" y="1331.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (2 samples, 0.14%)</title><rect x="235.8" y="1315.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.8" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (2 samples, 0.14%)</title><rect x="235.8" y="1299.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.07%)</title><rect x="236.6" y="1283.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.6" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.07%)</title><rect x="236.6" y="1267.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.6" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="236.6" y="1251.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="236.6" y="1235.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.6" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.07%)</title><rect x="236.6" y="1219.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.6" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.07%)</title><rect x="236.6" y="1203.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="236.6" y="1187.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.6" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (3 samples, 0.21%)</title><rect x="237.5" y="1395.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.5" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (3 samples, 0.21%)</title><rect x="237.5" y="1379.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.5" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (3 samples, 0.21%)</title><rect x="237.5" y="1363.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.5" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.21%)</title><rect x="237.5" y="1347.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.5" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (3 samples, 0.21%)</title><rect x="237.5" y="1331.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.5" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (3 samples, 0.21%)</title><rect x="237.5" y="1315.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.5" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (3 samples, 0.21%)</title><rect x="237.5" y="1299.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (3 samples, 0.21%)</title><rect x="237.5" y="1283.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (3 samples, 0.21%)</title><rect x="237.5" y="1267.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (3 samples, 0.21%)</title><rect x="237.5" y="1251.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="240.5" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (3 samples, 0.21%)</title><rect x="237.5" y="1235.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.5" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (3 samples, 0.21%)</title><rect x="237.5" y="1219.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.5" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="238.3" y="1203.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.3" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.07%)</title><rect x="239.1" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.1" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (1 samples, 0.07%)</title><rect x="239.1" y="1187.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.1" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.07%)</title><rect x="239.9" y="1427.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.9" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="239.9" y="1411.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.9" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="239.9" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.07%)</title><rect x="239.9" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.9" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.07%)</title><rect x="239.9" y="1363.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.9" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="239.9" y="1347.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="239.9" y="1331.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.9" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.07%)</title><rect x="239.9" y="1315.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.9" y="1326.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.07%)</title><rect x="239.9" y="1299.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.9" y="1310.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.07%)</title><rect x="239.9" y="1283.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.9" y="1294.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.07%)</title><rect x="239.9" y="1267.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.9" y="1278.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.07%)</title><rect x="239.9" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.tryLock (1 samples, 0.07%)</title><rect x="239.9" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.07%)</title><rect x="239.9" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.07%)</title><rect x="239.9" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.9" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="239.9" y="1187.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="242.9" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.07%)</title><rect x="240.7" y="1443.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.7" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="240.7" y="1427.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.7" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="240.7" y="1411.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.7" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.07%)</title><rect x="240.7" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.7" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="240.7" y="1379.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="243.7" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.14%)</title><rect x="241.5" y="1443.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.5" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.14%)</title><rect x="241.5" y="1427.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.5" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.14%)</title><rect x="241.5" y="1411.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.5" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.07%)</title><rect x="242.3" y="1395.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.3" y="1406.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (1 samples, 0.07%)</title><rect x="242.3" y="1379.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.3" y="1390.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="242.3" y="1363.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="245.3" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.07%)</title><rect x="243.1" y="1459.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.1" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.07%)</title><rect x="243.1" y="1443.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.1" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.07%)</title><rect x="243.1" y="1427.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.1" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="243.1" y="1411.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.1" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.07%)</title><rect x="243.1" y="1395.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.1" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="243.1" y="1379.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.1" y="1390.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.27%)</title><rect x="243.9" y="1491.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="246.9" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (23 samples, 1.57%)</title><rect x="247.1" y="1491.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.1" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="247.1" y="1475.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.1" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="247.1" y="1459.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.1" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (1 samples, 0.07%)</title><rect x="247.1" y="1443.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.1" y="1454.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="247.1" y="1427.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.1" y="1438.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.07%)</title><rect x="247.1" y="1411.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.1" y="1422.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.07%)</title><rect x="247.1" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.1" y="1406.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.07%)</title><rect x="247.1" y="1379.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.1" y="1390.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.07%)</title><rect x="247.1" y="1363.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.1" y="1374.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.07%)</title><rect x="247.1" y="1347.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.1" y="1358.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.07%)</title><rect x="247.1" y="1331.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.1" y="1342.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.07%)</title><rect x="247.1" y="1315.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.07%)</title><rect x="247.1" y="1299.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.1" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="247.9" y="1475.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.9" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="247.9" y="1459.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.9" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/instrumentation/java/concurrent/ExcludeFilter.exclude (2 samples, 0.14%)</title><rect x="247.9" y="1443.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.07%)</title><rect x="248.7" y="1427.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.7" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.34%)</title><rect x="249.5" y="1475.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.5" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.34%)</title><rect x="249.5" y="1459.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.5" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="249.5" y="1443.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.5" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (2 samples, 0.14%)</title><rect x="250.4" y="1443.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.14%)</title><rect x="250.4" y="1427.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.4" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="250.4" y="1411.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.4" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="250.4" y="1395.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.4" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (2 samples, 0.14%)</title><rect x="250.4" y="1379.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="253.4" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.14%)</title><rect x="250.4" y="1363.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.4" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.14%)</title><rect x="250.4" y="1347.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.4" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="251.2" y="1331.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.2" y="1342.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="252.0" y="1443.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="255.0" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getSuperClass (1 samples, 0.07%)</title><rect x="252.8" y="1443.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.8" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (14 samples, 0.96%)</title><rect x="253.6" y="1475.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.6" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (13 samples, 0.89%)</title><rect x="254.4" y="1459.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.4" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.07%)</title><rect x="254.4" y="1443.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="254.4" y="1427.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="254.4" y="1411.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="254.4" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.4" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="254.4" y="1379.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.4" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="254.4" y="1363.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.4" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/util/Strings.getResourceName (1 samples, 0.07%)</title><rect x="254.4" y="1347.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.4" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (12 samples, 0.82%)</title><rect x="255.2" y="1443.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.2" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (12 samples, 0.82%)</title><rect x="255.2" y="1427.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.2" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="255.2" y="1411.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.2" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (2 samples, 0.14%)</title><rect x="255.2" y="1395.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.2" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (2 samples, 0.14%)</title><rect x="255.2" y="1379.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.14%)</title><rect x="255.2" y="1363.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.2" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.14%)</title><rect x="255.2" y="1347.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="256.0" y="1331.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.0" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (9 samples, 0.62%)</title><rect x="256.8" y="1411.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (9 samples, 0.62%)</title><rect x="256.8" y="1395.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.8" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (9 samples, 0.62%)</title><rect x="256.8" y="1379.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.8" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (9 samples, 0.62%)</title><rect x="256.8" y="1363.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (9 samples, 0.62%)</title><rect x="256.8" y="1347.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (9 samples, 0.62%)</title><rect x="256.8" y="1331.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.&lt;init&gt; (9 samples, 0.62%)</title><rect x="256.8" y="1315.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.8" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (4 samples, 0.27%)</title><rect x="256.8" y="1299.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getArgumentTypes (4 samples, 0.27%)</title><rect x="256.8" y="1283.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.8" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="258.4" y="1267.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="261.4" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.07%)</title><rect x="258.4" y="1251.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="261.4" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="258.4" y="1235.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="261.4" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="258.4" y="1219.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="261.4" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="258.4" y="1203.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="261.4" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.07%)</title><rect x="258.4" y="1187.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="261.4" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.07%)</title><rect x="258.4" y="1171.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="261.4" y="1182.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.07%)</title><rect x="258.4" y="1155.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="261.4" y="1166.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.07%)</title><rect x="258.4" y="1139.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="261.4" y="1150.0"></text>
</g>
<g>
<title>HeapRegion::set_eden() (1 samples, 0.07%)</title><rect x="258.4" y="1123.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="261.4" y="1134.0"></text>
</g>
<g>
<title>HeapRegionType::get_trace_type() (1 samples, 0.07%)</title><rect x="258.4" y="1107.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="261.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="259.2" y="1267.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.2" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (4 samples, 0.27%)</title><rect x="260.0" y="1299.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.27%)</title><rect x="260.0" y="1283.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.07%)</title><rect x="260.0" y="1267.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.14%)</title><rect x="260.8" y="1267.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.8" y="1278.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.07%)</title><rect x="262.5" y="1267.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="265.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getMethodType (1 samples, 0.07%)</title><rect x="263.3" y="1299.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.3" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.&lt;init&gt; (1 samples, 0.07%)</title><rect x="263.3" y="1283.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.3" y="1294.0"></text>
</g>
<g>
<title>java/util/AbstractList.iterator (1 samples, 0.07%)</title><rect x="264.1" y="1411.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.1" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.07%)</title><rect x="264.9" y="1475.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.9" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="264.9" y="1459.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.9" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="264.9" y="1443.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.9" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (1 samples, 0.07%)</title><rect x="264.9" y="1427.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.9" y="1438.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="264.9" y="1411.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.9" y="1422.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.07%)</title><rect x="264.9" y="1395.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.9" y="1406.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.07%)</title><rect x="264.9" y="1379.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.9" y="1390.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.recordRead (1 samples, 0.07%)</title><rect x="264.9" y="1363.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.lazySet (1 samples, 0.07%)</title><rect x="264.9" y="1347.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (3 samples, 0.21%)</title><rect x="265.7" y="1491.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.7" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.14%)</title><rect x="265.7" y="1475.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.7" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (2 samples, 0.14%)</title><rect x="265.7" y="1459.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.7" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.14%)</title><rect x="265.7" y="1443.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.7" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (1 samples, 0.07%)</title><rect x="265.7" y="1427.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.7" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.07%)</title><rect x="265.7" y="1411.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.7" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="265.7" y="1395.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="268.7" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.07%)</title><rect x="266.5" y="1427.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="269.5" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.07%)</title><rect x="266.5" y="1411.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.5" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="266.5" y="1395.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.5" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="266.5" y="1379.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.5" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.07%)</title><rect x="266.5" y="1363.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.5" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.07%)</title><rect x="266.5" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.5" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="266.5" y="1331.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.5" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="266.5" y="1315.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.5" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="266.5" y="1299.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="266.5" y="1283.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="266.5" y="1267.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.07%)</title><rect x="266.5" y="1251.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.5" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="266.5" y="1235.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.5" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getClassName (1 samples, 0.07%)</title><rect x="266.5" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.07%)</title><rect x="266.5" y="1203.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.07%)</title><rect x="266.5" y="1187.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.5" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.07%)</title><rect x="267.3" y="1475.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.3" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.07%)</title><rect x="268.1" y="1491.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.1" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="268.1" y="1475.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.1" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/ClassLoaderMatcher$ClassLoaderHasClassesNamedMatcher.matches (1 samples, 0.07%)</title><rect x="268.1" y="1459.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.1" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.getIfPresent (1 samples, 0.07%)</title><rect x="268.1" y="1443.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.1" y="1454.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.07%)</title><rect x="268.1" y="1427.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.1" y="1438.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.07%)</title><rect x="268.1" y="1411.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.1" y="1422.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.07%)</title><rect x="268.1" y="1395.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.1" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (101 samples, 6.90%)</title><rect x="268.9" y="1507.0" width="81.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.9" y="1518.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (101 samples, 6.90%)</title><rect x="268.9" y="1491.0" width="81.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.9" y="1502.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (4 samples, 0.27%)</title><rect x="268.9" y="1475.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.9" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeAsErasure (2 samples, 0.14%)</title><rect x="268.9" y="1459.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.9" y="1470.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="268.9" y="1443.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="271.9" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (2 samples, 0.14%)</title><rect x="270.5" y="1459.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.5" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (2 samples, 0.14%)</title><rect x="270.5" y="1443.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.5" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (2 samples, 0.14%)</title><rect x="270.5" y="1427.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.5" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getName (1 samples, 0.07%)</title><rect x="271.3" y="1411.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.3" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.07%)</title><rect x="271.3" y="1395.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.3" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.07%)</title><rect x="271.3" y="1379.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="271.3" y="1363.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="271.3" y="1347.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="271.3" y="1331.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.3" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (64 samples, 4.37%)</title><rect x="272.1" y="1475.0" width="51.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.1" y="1486.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (7 samples, 0.48%)</title><rect x="273.7" y="1459.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.7" y="1470.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (2 samples, 0.14%)</title><rect x="274.6" y="1443.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.6" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForLoadedTypes.size (1 samples, 0.07%)</title><rect x="274.6" y="1427.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.6" y="1438.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="275.4" y="1427.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="278.4" y="1438.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (4 samples, 0.27%)</title><rect x="276.2" y="1443.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.2" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (4 samples, 0.27%)</title><rect x="276.2" y="1427.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.2" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (4 samples, 0.27%)</title><rect x="276.2" y="1411.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (4 samples, 0.27%)</title><rect x="276.2" y="1395.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="276.2" y="1379.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (3 samples, 0.21%)</title><rect x="277.0" y="1379.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.0" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (3 samples, 0.21%)</title><rect x="277.0" y="1363.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (3 samples, 0.21%)</title><rect x="277.0" y="1347.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.0" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.07%)</title><rect x="277.0" y="1331.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.0" y="1342.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.07%)</title><rect x="277.0" y="1315.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.0" y="1326.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.get (1 samples, 0.07%)</title><rect x="277.0" y="1299.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="280.0" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$TypeCacheKey.equals (1 samples, 0.07%)</title><rect x="277.0" y="1283.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="277.0" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.0" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.14%)</title><rect x="277.8" y="1331.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (2 samples, 0.14%)</title><rect x="277.8" y="1315.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.07%)</title><rect x="278.6" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.6" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (1 samples, 0.07%)</title><rect x="279.4" y="1459.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.4" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.07%)</title><rect x="279.4" y="1443.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.07%)</title><rect x="279.4" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (1 samples, 0.07%)</title><rect x="279.4" y="1411.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.matches (1 samples, 0.07%)</title><rect x="279.4" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.4" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher$Mode$1.matches (1 samples, 0.07%)</title><rect x="279.4" y="1379.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="279.4" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.4" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (21 samples, 1.44%)</title><rect x="280.2" y="1459.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.2" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (2 samples, 0.14%)</title><rect x="280.2" y="1443.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.2" y="1454.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.14%)</title><rect x="280.2" y="1427.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.2" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.14%)</title><rect x="280.2" y="1411.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.14%)</title><rect x="280.2" y="1395.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.2" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="280.2" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="280.2" y="1363.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.07%)</title><rect x="281.0" y="1379.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.0" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.07%)</title><rect x="281.0" y="1363.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.07%)</title><rect x="281.0" y="1347.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.0" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.07%)</title><rect x="281.0" y="1331.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.0" y="1342.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.07%)</title><rect x="281.0" y="1315.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.07%)</title><rect x="281.0" y="1299.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$StringEnvironment.get (1 samples, 0.07%)</title><rect x="281.0" y="1283.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.07%)</title><rect x="281.0" y="1267.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.valueOfQueryOnly (1 samples, 0.07%)</title><rect x="281.0" y="1251.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Variable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="281.0" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$ExternalData.&lt;init&gt; (1 samples, 0.07%)</title><rect x="281.0" y="1219.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.0" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 0.21%)</title><rect x="281.8" y="1443.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.8" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (1 samples, 0.07%)</title><rect x="281.8" y="1427.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.8" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.07%)</title><rect x="281.8" y="1411.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.07%)</title><rect x="281.8" y="1395.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.8" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.07%)</title><rect x="281.8" y="1379.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.8" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (2 samples, 0.14%)</title><rect x="282.6" y="1427.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.6" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.14%)</title><rect x="282.6" y="1411.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.6" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (2 samples, 0.14%)</title><rect x="282.6" y="1395.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.6" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (2 samples, 0.14%)</title><rect x="282.6" y="1379.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.6" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (2 samples, 0.14%)</title><rect x="282.6" y="1363.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.6" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.14%)</title><rect x="282.6" y="1347.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.6" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.14%)</title><rect x="282.6" y="1331.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.6" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.14%)</title><rect x="282.6" y="1315.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.14%)</title><rect x="282.6" y="1299.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.6" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.14%)</title><rect x="282.6" y="1283.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.6" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.14%)</title><rect x="282.6" y="1267.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.6" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.14%)</title><rect x="282.6" y="1251.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="282.6" y="1235.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.6" y="1246.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.07%)</title><rect x="282.6" y="1219.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.6" y="1230.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.07%)</title><rect x="282.6" y="1203.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.6" y="1214.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (1 samples, 0.07%)</title><rect x="282.6" y="1187.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.6" y="1198.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.&lt;init&gt; (1 samples, 0.07%)</title><rect x="282.6" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.6" y="1182.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.&lt;init&gt; (1 samples, 0.07%)</title><rect x="282.6" y="1155.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.6" y="1166.0"></text>
</g>
<g>
<title>java/net/JarURLConnection.parseSpecs (1 samples, 0.07%)</title><rect x="282.6" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.6" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="283.4" y="1235.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="283.4" y="1219.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.4" y="1230.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.07%)</title><rect x="283.4" y="1203.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.4" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="283.4" y="1187.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.4" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (16 samples, 1.09%)</title><rect x="284.2" y="1443.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.2" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (16 samples, 1.09%)</title><rect x="284.2" y="1427.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.2" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (16 samples, 1.09%)</title><rect x="284.2" y="1411.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (16 samples, 1.09%)</title><rect x="284.2" y="1395.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.2" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="284.2" y="1379.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="287.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (15 samples, 1.03%)</title><rect x="285.0" y="1379.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.0" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (15 samples, 1.03%)</title><rect x="285.0" y="1363.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (15 samples, 1.03%)</title><rect x="285.0" y="1347.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.0" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (2 samples, 0.14%)</title><rect x="285.0" y="1331.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.0" y="1342.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (2 samples, 0.14%)</title><rect x="285.0" y="1315.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.0" y="1326.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (2 samples, 0.14%)</title><rect x="285.0" y="1299.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.0" y="1310.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (2 samples, 0.14%)</title><rect x="285.0" y="1283.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.0" y="1294.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (2 samples, 0.14%)</title><rect x="285.0" y="1267.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.tryLock (2 samples, 0.14%)</title><rect x="285.0" y="1251.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.14%)</title><rect x="285.0" y="1235.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.14%)</title><rect x="285.0" y="1219.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.0" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.07%)</title><rect x="285.8" y="1203.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.8" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (13 samples, 0.89%)</title><rect x="286.7" y="1331.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.7" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (13 samples, 0.89%)</title><rect x="286.7" y="1315.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.7" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="286.7" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.7" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentClassLoading.begin (1 samples, 0.07%)</title><rect x="286.7" y="1283.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.07%)</title><rect x="286.7" y="1267.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.7" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="286.7" y="1251.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.7" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (10 samples, 0.68%)</title><rect x="287.5" y="1299.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.5" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (10 samples, 0.68%)</title><rect x="287.5" y="1283.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.5" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Utils.getBootstrapProxy (1 samples, 0.07%)</title><rect x="287.5" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.5" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Utils.getAgentClassLoader (1 samples, 0.07%)</title><rect x="287.5" y="1251.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (1 samples, 0.07%)</title><rect x="287.5" y="1235.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader0 (1 samples, 0.07%)</title><rect x="287.5" y="1219.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.5" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/util/Strings.getResourceName (1 samples, 0.07%)</title><rect x="287.5" y="1203.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.5" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (8 samples, 0.55%)</title><rect x="288.3" y="1267.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (6 samples, 0.41%)</title><rect x="288.3" y="1251.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (4 samples, 0.27%)</title><rect x="288.3" y="1235.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (4 samples, 0.27%)</title><rect x="288.3" y="1219.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (2 samples, 0.14%)</title><rect x="288.3" y="1203.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.3" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="288.3" y="1187.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="288.3" y="1171.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="288.3" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.07%)</title><rect x="289.1" y="1187.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.07%)</title><rect x="289.1" y="1171.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.07%)</title><rect x="289.1" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="292.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.07%)</title><rect x="289.1" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResourceOnClassPath (2 samples, 0.14%)</title><rect x="289.9" y="1203.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (2 samples, 0.14%)</title><rect x="289.9" y="1187.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.findResource (2 samples, 0.14%)</title><rect x="289.9" y="1171.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (2 samples, 0.14%)</title><rect x="289.9" y="1155.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.9" y="1166.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.07%)</title><rect x="289.9" y="1139.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.9" y="1150.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.07%)</title><rect x="289.9" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.9" y="1134.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.07%)</title><rect x="289.9" y="1107.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="292.9" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.07%)</title><rect x="289.9" y="1091.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.9" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.07%)</title><rect x="289.9" y="1075.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.9" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.07%)</title><rect x="289.9" y="1059.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.9" y="1070.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.07%)</title><rect x="289.9" y="1043.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="292.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 0.07%)</title><rect x="290.7" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.7" y="1150.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.encodePath (1 samples, 0.07%)</title><rect x="290.7" y="1123.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.7" y="1134.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.firstEncodeIndex (1 samples, 0.07%)</title><rect x="290.7" y="1107.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.7" y="1118.0"></text>
</g>
<g>
<title>java/net/URL.openStream (2 samples, 0.14%)</title><rect x="291.5" y="1235.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.5" y="1246.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.07%)</title><rect x="291.5" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.5" y="1230.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.07%)</title><rect x="292.3" y="1219.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.3" y="1230.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.07%)</title><rect x="292.3" y="1203.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.3" y="1214.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.07%)</title><rect x="292.3" y="1187.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.3" y="1198.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.07%)</title><rect x="292.3" y="1171.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.3" y="1182.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.07%)</title><rect x="292.3" y="1155.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.3" y="1166.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.07%)</title><rect x="292.3" y="1139.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.3" y="1150.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.07%)</title><rect x="292.3" y="1123.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.3" y="1134.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.07%)</title><rect x="292.3" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.3" y="1118.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalize (1 samples, 0.07%)</title><rect x="292.3" y="1091.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalize (1 samples, 0.07%)</title><rect x="292.3" y="1075.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.3" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (2 samples, 0.14%)</title><rect x="293.1" y="1251.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.14%)</title><rect x="293.1" y="1235.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (2 samples, 0.14%)</title><rect x="293.1" y="1219.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.14%)</title><rect x="293.1" y="1203.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.14%)</title><rect x="293.1" y="1187.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.14%)</title><rect x="293.1" y="1171.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.1" y="1182.0"></text>
</g>
<g>
<title>java/net/URI.toURL (1 samples, 0.07%)</title><rect x="293.1" y="1155.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.1" y="1166.0"></text>
</g>
<g>
<title>java/net/URL.fromURI (1 samples, 0.07%)</title><rect x="293.1" y="1139.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.1" y="1150.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="293.1" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.1" y="1134.0"></text>
</g>
<g>
<title>java/net/URL.getURLStreamHandler (1 samples, 0.07%)</title><rect x="293.1" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.07%)</title><rect x="293.9" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.9" y="1166.0"></text>
</g>
<g>
<title>java/net/URI.create (1 samples, 0.07%)</title><rect x="293.9" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.9" y="1150.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.07%)</title><rect x="293.9" y="1123.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.9" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.07%)</title><rect x="293.9" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.9" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.07%)</title><rect x="293.9" y="1091.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.9" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/util/Strings.getResourceName (1 samples, 0.07%)</title><rect x="294.7" y="1267.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.endsWith (1 samples, 0.07%)</title><rect x="294.7" y="1251.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="294.7" y="1235.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.7" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.14%)</title><rect x="295.5" y="1299.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.14%)</title><rect x="295.5" y="1283.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.14%)</title><rect x="295.5" y="1267.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.14%)</title><rect x="295.5" y="1251.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.5" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="295.5" y="1235.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.5" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitAnnotation (1 samples, 0.07%)</title><rect x="296.3" y="1235.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.3" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForAnnotationProperty.&lt;init&gt; (1 samples, 0.07%)</title><rect x="296.3" y="1219.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.07%)</title><rect x="296.3" y="1203.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="299.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.07%)</title><rect x="296.3" y="1187.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="299.3" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (29 samples, 1.98%)</title><rect x="297.1" y="1459.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.1" y="1470.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (29 samples, 1.98%)</title><rect x="297.1" y="1443.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.1" y="1454.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (29 samples, 1.98%)</title><rect x="297.1" y="1427.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.1" y="1438.0">d..</text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="297.1" y="1411.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="300.1" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (27 samples, 1.85%)</title><rect x="298.7" y="1411.0" width="21.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.7" y="1422.0">n..</text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="298.7" y="1395.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="301.7" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (26 samples, 1.78%)</title><rect x="299.6" y="1395.0" width="20.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.6" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (25 samples, 1.71%)</title><rect x="300.4" y="1379.0" width="20.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (25 samples, 1.71%)</title><rect x="300.4" y="1363.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.4" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.07%)</title><rect x="300.4" y="1347.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.4" y="1358.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.07%)</title><rect x="300.4" y="1331.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.4" y="1342.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.07%)</title><rect x="300.4" y="1315.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.4" y="1326.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.07%)</title><rect x="300.4" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.4" y="1310.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.07%)</title><rect x="300.4" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.4" y="1294.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.07%)</title><rect x="300.4" y="1267.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.4" y="1278.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (1 samples, 0.07%)</title><rect x="300.4" y="1251.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.4" y="1262.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (1 samples, 0.07%)</title><rect x="300.4" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.4" y="1246.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.evict (1 samples, 0.07%)</title><rect x="300.4" y="1219.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.4" y="1230.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.poll (1 samples, 0.07%)</title><rect x="300.4" y="1203.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.4" y="1214.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.pollFirst (1 samples, 0.07%)</title><rect x="300.4" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.4" y="1198.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.unlinkFirst (1 samples, 0.07%)</title><rect x="300.4" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.4" y="1182.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.getNext (1 samples, 0.07%)</title><rect x="300.4" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.4" y="1166.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Node.getNext (1 samples, 0.07%)</title><rect x="300.4" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.4" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (24 samples, 1.64%)</title><rect x="301.2" y="1347.0" width="19.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (24 samples, 1.64%)</title><rect x="301.2" y="1331.0" width="19.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.2" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (21 samples, 1.44%)</title><rect x="301.2" y="1315.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.2" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (21 samples, 1.44%)</title><rect x="301.2" y="1299.0" width="16.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.2" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (21 samples, 1.44%)</title><rect x="301.2" y="1283.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (8 samples, 0.55%)</title><rect x="301.2" y="1267.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (8 samples, 0.55%)</title><rect x="301.2" y="1251.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (7 samples, 0.48%)</title><rect x="301.2" y="1235.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (7 samples, 0.48%)</title><rect x="301.2" y="1219.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (7 samples, 0.48%)</title><rect x="301.2" y="1203.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.2" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.48%)</title><rect x="301.2" y="1187.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (7 samples, 0.48%)</title><rect x="301.2" y="1171.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (7 samples, 0.48%)</title><rect x="301.2" y="1155.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (5 samples, 0.34%)</title><rect x="302.8" y="1139.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (5 samples, 0.34%)</title><rect x="302.8" y="1123.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (5 samples, 0.34%)</title><rect x="302.8" y="1107.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (5 samples, 0.34%)</title><rect x="302.8" y="1091.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (2 samples, 0.14%)</title><rect x="303.6" y="1075.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (2 samples, 0.14%)</title><rect x="303.6" y="1059.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (2 samples, 0.14%)</title><rect x="303.6" y="1043.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (2 samples, 0.14%)</title><rect x="303.6" y="1027.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="303.6" y="1011.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="303.6" y="995.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.07%)</title><rect x="303.6" y="979.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.07%)</title><rect x="303.6" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.charsFromByteBuffer (1 samples, 0.07%)</title><rect x="304.4" y="1011.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.07%)</title><rect x="304.4" y="995.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.07%)</title><rect x="304.4" y="979.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (2 samples, 0.14%)</title><rect x="305.2" y="1075.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (2 samples, 0.14%)</title><rect x="305.2" y="1059.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (2 samples, 0.14%)</title><rect x="305.2" y="1043.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="306.0" y="1027.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.07%)</title><rect x="306.0" y="1011.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="306.8" y="1235.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.07%)</title><rect x="306.8" y="1219.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.8" y="1230.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="306.8" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.8" y="1214.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.07%)</title><rect x="306.8" y="1187.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="309.8" y="1198.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="306.8" y="1171.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="309.8" y="1182.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="306.8" y="1155.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="309.8" y="1166.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="306.8" y="1139.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="309.8" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (6 samples, 0.41%)</title><rect x="307.6" y="1267.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (4 samples, 0.27%)</title><rect x="307.6" y="1251.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (4 samples, 0.27%)</title><rect x="307.6" y="1235.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (4 samples, 0.27%)</title><rect x="307.6" y="1219.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (3 samples, 0.21%)</title><rect x="307.6" y="1203.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.6" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.21%)</title><rect x="307.6" y="1187.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (3 samples, 0.21%)</title><rect x="307.6" y="1171.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (3 samples, 0.21%)</title><rect x="307.6" y="1155.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (3 samples, 0.21%)</title><rect x="307.6" y="1139.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (3 samples, 0.21%)</title><rect x="307.6" y="1123.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (3 samples, 0.21%)</title><rect x="307.6" y="1107.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (3 samples, 0.21%)</title><rect x="307.6" y="1091.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferU.get (1 samples, 0.07%)</title><rect x="307.6" y="1075.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="310.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (2 samples, 0.14%)</title><rect x="308.4" y="1075.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.07%)</title><rect x="308.4" y="1059.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.07%)</title><rect x="308.4" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.07%)</title><rect x="309.2" y="1059.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="310.0" y="1203.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="310.0" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.0" y="1198.0"></text>
</g>
<g>
<title>java/net/URI.toURL (1 samples, 0.07%)</title><rect x="310.0" y="1171.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.0" y="1182.0"></text>
</g>
<g>
<title>java/net/URL.fromURI (1 samples, 0.07%)</title><rect x="310.0" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.0" y="1166.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="310.0" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.0" y="1150.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (2 samples, 0.14%)</title><rect x="310.8" y="1251.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.8" y="1262.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (2 samples, 0.14%)</title><rect x="310.8" y="1235.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (2 samples, 0.14%)</title><rect x="310.8" y="1219.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (2 samples, 0.14%)</title><rect x="310.8" y="1203.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getBufferBytes (2 samples, 0.14%)</title><rect x="310.8" y="1187.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.8" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.07%)</title><rect x="311.7" y="1171.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.7" y="1182.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.07%)</title><rect x="311.7" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.07%)</title><rect x="311.7" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.07%)</title><rect x="311.7" y="1123.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.07%)</title><rect x="311.7" y="1107.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.07%)</title><rect x="311.7" y="1091.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.07%)</title><rect x="311.7" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.7" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (7 samples, 0.48%)</title><rect x="312.5" y="1267.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.5" y="1278.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (6 samples, 0.41%)</title><rect x="313.3" y="1251.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.3" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (6 samples, 0.41%)</title><rect x="313.3" y="1235.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.3" y="1246.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (6 samples, 0.41%)</title><rect x="313.3" y="1219.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.3" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (6 samples, 0.41%)</title><rect x="313.3" y="1203.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.3" y="1214.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (2 samples, 0.14%)</title><rect x="313.3" y="1187.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="316.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.21%)</title><rect x="314.9" y="1187.0" width="2.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="317.9" y="1198.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (3 samples, 0.21%)</title><rect x="314.9" y="1171.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="317.9" y="1182.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.07%)</title><rect x="317.3" y="1187.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="320.3" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (3 samples, 0.21%)</title><rect x="318.1" y="1315.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.1" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.21%)</title><rect x="318.1" y="1299.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.1" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.21%)</title><rect x="318.1" y="1283.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.1" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.07%)</title><rect x="318.1" y="1267.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.1" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitField (1 samples, 0.07%)</title><rect x="318.1" y="1251.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.1" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.&lt;init&gt; (1 samples, 0.07%)</title><rect x="318.1" y="1235.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.1" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.14%)</title><rect x="318.9" y="1267.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.9" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.07%)</title><rect x="318.9" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.9" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="318.9" y="1235.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="318.9" y="1219.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.9" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (1 samples, 0.07%)</title><rect x="319.7" y="1251.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.7" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (1 samples, 0.07%)</title><rect x="319.7" y="1235.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.7" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.27%)</title><rect x="320.5" y="1459.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.5" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.27%)</title><rect x="320.5" y="1443.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.5" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.27%)</title><rect x="320.5" y="1427.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.5" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (4 samples, 0.27%)</title><rect x="320.5" y="1411.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.5" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.linkNodeLast (4 samples, 0.27%)</title><rect x="320.5" y="1395.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.5" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="321.3" y="1379.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="324.3" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForLoadedTypes.size (1 samples, 0.07%)</title><rect x="322.1" y="1379.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.1" y="1390.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="322.9" y="1379.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="325.9" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (1 samples, 0.07%)</title><rect x="323.8" y="1475.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.8" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getSuperClass (1 samples, 0.07%)</title><rect x="323.8" y="1459.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.8" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.getSuperClass (1 samples, 0.07%)</title><rect x="323.8" y="1443.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.8" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getSuperClass (1 samples, 0.07%)</title><rect x="323.8" y="1427.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.getSuperclass (1 samples, 0.07%)</title><rect x="323.8" y="1411.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.8" y="1422.0"></text>
</g>
<g>
<title>jni_GetSuperclass (1 samples, 0.07%)</title><rect x="323.8" y="1395.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="326.8" y="1406.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.07%)</title><rect x="323.8" y="1379.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="326.8" y="1390.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="324.6" y="1475.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="327.6" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (28 samples, 1.91%)</title><rect x="326.2" y="1475.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.2" y="1486.0">n..</text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (28 samples, 1.91%)</title><rect x="326.2" y="1459.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.2" y="1470.0">n..</text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (28 samples, 1.91%)</title><rect x="326.2" y="1443.0" width="22.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.2" y="1454.0">n..</text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (6 samples, 0.41%)</title><rect x="326.2" y="1427.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.2" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.07%)</title><rect x="328.6" y="1411.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="331.6" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.07%)</title><rect x="328.6" y="1395.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="331.6" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.14%)</title><rect x="329.4" y="1411.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.14%)</title><rect x="329.4" y="1395.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.4" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.14%)</title><rect x="329.4" y="1379.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.14%)</title><rect x="329.4" y="1363.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="332.4" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.14%)</title><rect x="329.4" y="1347.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.4" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentClassLoading.begin (2 samples, 0.14%)</title><rect x="329.4" y="1331.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.14%)</title><rect x="329.4" y="1315.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.4" y="1326.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.14%)</title><rect x="329.4" y="1299.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="332.4" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (22 samples, 1.50%)</title><rect x="331.0" y="1427.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.0" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingResolution.resolve (1 samples, 0.07%)</title><rect x="331.0" y="1411.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.0" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$CachingTypeDescription.&lt;init&gt; (1 samples, 0.07%)</title><rect x="331.0" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.0" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (21 samples, 1.44%)</title><rect x="331.8" y="1411.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.8" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (5 samples, 0.34%)</title><rect x="331.8" y="1395.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.8" y="1406.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (5 samples, 0.34%)</title><rect x="331.8" y="1379.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.8" y="1390.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (5 samples, 0.34%)</title><rect x="331.8" y="1363.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.8" y="1374.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (5 samples, 0.34%)</title><rect x="331.8" y="1347.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.8" y="1358.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (5 samples, 0.34%)</title><rect x="331.8" y="1331.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.8" y="1342.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (3 samples, 0.21%)</title><rect x="332.6" y="1315.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.6" y="1326.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainWriteBuffer (2 samples, 0.14%)</title><rect x="333.4" y="1299.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.4" y="1310.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$AddTask.run (2 samples, 0.14%)</title><rect x="333.4" y="1283.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.4" y="1294.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.evict (1 samples, 0.07%)</title><rect x="333.4" y="1267.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.4" y="1278.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.remove (1 samples, 0.07%)</title><rect x="333.4" y="1251.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.4" y="1262.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.replaceNode (1 samples, 0.07%)</title><rect x="333.4" y="1235.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.4" y="1246.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.add (1 samples, 0.07%)</title><rect x="334.2" y="1267.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.2" y="1278.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.offerLast (1 samples, 0.07%)</title><rect x="334.2" y="1251.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.2" y="1262.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.linkLast (1 samples, 0.07%)</title><rect x="334.2" y="1235.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="335.0" y="1315.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="335.0" y="1299.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.07%)</title><rect x="335.0" y="1283.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.0" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (16 samples, 1.09%)</title><rect x="335.9" y="1395.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (16 samples, 1.09%)</title><rect x="335.9" y="1379.0" width="12.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.9" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (16 samples, 1.09%)</title><rect x="335.9" y="1363.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.9" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (13 samples, 0.89%)</title><rect x="335.9" y="1347.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (13 samples, 0.89%)</title><rect x="335.9" y="1331.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="337.5" y="1315.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.5" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitOuterClass (1 samples, 0.07%)</title><rect x="337.5" y="1299.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.07%)</title><rect x="338.3" y="1315.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.3" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.07%)</title><rect x="338.3" y="1299.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.3" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visitArray (1 samples, 0.07%)</title><rect x="338.3" y="1283.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.3" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor$ArrayLookup.&lt;init&gt; (1 samples, 0.07%)</title><rect x="338.3" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.3" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForAnnotationProperty.bind (1 samples, 0.07%)</title><rect x="338.3" y="1251.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.3" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (6 samples, 0.41%)</title><rect x="339.1" y="1315.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="339.1" y="1299.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.07%)</title><rect x="339.1" y="1283.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.1" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.07%)</title><rect x="339.9" y="1299.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.07%)</title><rect x="339.9" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visitArray (1 samples, 0.07%)</title><rect x="339.9" y="1267.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.9" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor$ArrayLookup.&lt;init&gt; (1 samples, 0.07%)</title><rect x="339.9" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.9" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="339.9" y="1235.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitTypeAnnotation (1 samples, 0.07%)</title><rect x="340.7" y="1299.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.7" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$ForTypeVariable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="340.7" y="1283.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.7" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$AnnotationRegistrant$AbstractBase$ForTypeVariable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="340.7" y="1267.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.7" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitMethod (3 samples, 0.21%)</title><rect x="341.5" y="1299.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.&lt;init&gt; (3 samples, 0.21%)</title><rect x="341.5" y="1283.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.07%)</title><rect x="343.9" y="1315.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="343.9" y="1299.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="343.9" y="1283.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visit (1 samples, 0.07%)</title><rect x="344.7" y="1315.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.7" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion.ofMinorMajor (1 samples, 0.07%)</title><rect x="344.7" y="1299.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.7" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitInnerClass (1 samples, 0.07%)</title><rect x="345.5" y="1315.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.5" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="345.5" y="1299.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.&lt;init&gt; (2 samples, 0.14%)</title><rect x="346.3" y="1347.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.3" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="346.3" y="1331.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.3" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.&lt;init&gt; (1 samples, 0.07%)</title><rect x="347.1" y="1331.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.1" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.&lt;init&gt; (1 samples, 0.07%)</title><rect x="347.1" y="1315.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.1" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (1 samples, 0.07%)</title><rect x="347.9" y="1347.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="347.9" y="1331.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="347.9" y="1315.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="347.9" y="1299.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.07%)</title><rect x="347.9" y="1283.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (2 samples, 0.14%)</title><rect x="348.8" y="1475.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.8" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.14%)</title><rect x="350.4" y="1507.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.4" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.14%)</title><rect x="350.4" y="1491.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.4" y="1502.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="351.2" y="1475.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="354.2" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Disjunction.matches (33 samples, 2.26%)</title><rect x="352.0" y="1539.0" width="26.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.0" y="1550.0">n..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (10 samples, 0.68%)</title><rect x="352.8" y="1523.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.8" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (22 samples, 1.50%)</title><rect x="360.9" y="1523.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.9" y="1534.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (6 samples, 0.41%)</title><rect x="362.5" y="1507.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.5" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.matches (6 samples, 0.41%)</title><rect x="362.5" y="1491.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.5" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/AdditionalLibraryIgnoresMatcher.matches (4 samples, 0.27%)</title><rect x="362.5" y="1475.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.5" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/AdditionalLibraryIgnoresMatcher.matches (4 samples, 0.27%)</title><rect x="362.5" y="1459.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.5" y="1470.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="362.5" y="1443.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="365.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.21%)</title><rect x="363.3" y="1443.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.07%)</title><rect x="364.9" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="364.9" y="1411.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.07%)</title><rect x="364.9" y="1395.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.07%)</title><rect x="365.7" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="365.7" y="1459.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.07%)</title><rect x="365.7" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.7" y="1454.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.matches (1 samples, 0.07%)</title><rect x="366.5" y="1475.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.5" y="1486.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.match (1 samples, 0.07%)</title><rect x="366.5" y="1459.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.5" y="1470.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Begin.match (1 samples, 0.07%)</title><rect x="366.5" y="1443.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.5" y="1454.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Slice.match (1 samples, 0.07%)</title><rect x="366.5" y="1427.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.5" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (14 samples, 0.96%)</title><rect x="367.3" y="1507.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.3" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (14 samples, 0.96%)</title><rect x="367.3" y="1491.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.3" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (11 samples, 0.75%)</title><rect x="369.7" y="1475.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="372.7" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (16 samples, 1.09%)</title><rect x="378.6" y="1539.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.6" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (16 samples, 1.09%)</title><rect x="378.6" y="1523.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.6" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (16 samples, 1.09%)</title><rect x="378.6" y="1507.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.6" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (16 samples, 1.09%)</title><rect x="378.6" y="1491.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="381.6" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (6 samples, 0.41%)</title><rect x="378.6" y="1475.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.6" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (6 samples, 0.41%)</title><rect x="378.6" y="1459.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.6" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="378.6" y="1443.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.6" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="378.6" y="1427.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.6" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.07%)</title><rect x="378.6" y="1411.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.6" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.07%)</title><rect x="378.6" y="1395.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.6" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForAllArguments$Factory.getAnnotationType (1 samples, 0.07%)</title><rect x="378.6" y="1379.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.6" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="378.6" y="1363.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="381.6" y="1374.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="378.6" y="1347.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="381.6" y="1358.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="378.6" y="1331.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="381.6" y="1342.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.07%)</title><rect x="378.6" y="1315.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="381.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (5 samples, 0.34%)</title><rect x="379.4" y="1443.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (5 samples, 0.34%)</title><rect x="379.4" y="1427.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (5 samples, 0.34%)</title><rect x="379.4" y="1411.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (4 samples, 0.27%)</title><rect x="380.2" y="1395.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (4 samples, 0.27%)</title><rect x="380.2" y="1379.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForTypeDescription.filter (1 samples, 0.07%)</title><rect x="380.2" y="1363.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (3 samples, 0.21%)</title><rect x="381.0" y="1363.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (3 samples, 0.21%)</title><rect x="381.0" y="1347.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.0" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (3 samples, 0.21%)</title><rect x="381.0" y="1331.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.0" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (3 samples, 0.21%)</title><rect x="381.0" y="1315.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.0" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (3 samples, 0.21%)</title><rect x="381.0" y="1299.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.0" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="381.0" y="1283.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.0" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="381.0" y="1267.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.0" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="381.0" y="1251.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.0" y="1262.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="381.0" y="1235.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="381.0" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.07%)</title><rect x="381.0" y="1203.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="381.0" y="1187.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="381.0" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="381.0" y="1155.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.0" y="1166.0"></text>
</g>
<g>
<title>java/net/URI.toURL (1 samples, 0.07%)</title><rect x="381.0" y="1139.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.0" y="1150.0"></text>
</g>
<g>
<title>java/net/URL.fromURI (1 samples, 0.07%)</title><rect x="381.0" y="1123.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.0" y="1134.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="381.0" y="1107.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="381.0" y="1091.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="381.0" y="1075.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.0" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (2 samples, 0.14%)</title><rect x="381.8" y="1283.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.8" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="381.8" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.8" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="381.8" y="1251.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.8" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readClass (1 samples, 0.07%)</title><rect x="381.8" y="1235.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readStringish (1 samples, 0.07%)</title><rect x="381.8" y="1219.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.8" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.07%)</title><rect x="381.8" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.8" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="381.8" y="1187.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.8" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (1 samples, 0.07%)</title><rect x="382.6" y="1267.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.6" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="382.6" y="1251.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="382.6" y="1235.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.6" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="382.6" y="1219.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.6" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (1 samples, 0.07%)</title><rect x="383.4" y="1475.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.4" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (1 samples, 0.07%)</title><rect x="383.4" y="1459.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.4" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler.&lt;init&gt; (1 samples, 0.07%)</title><rect x="383.4" y="1443.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.&lt;init&gt; (1 samples, 0.07%)</title><rect x="383.4" y="1427.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.07%)</title><rect x="383.4" y="1411.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.07%)</title><rect x="383.4" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.4" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThrowable$Factory.make (1 samples, 0.07%)</title><rect x="383.4" y="1379.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.07%)</title><rect x="383.4" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.4" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.07%)</title><rect x="383.4" y="1347.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getDefaultValue (1 samples, 0.07%)</title><rect x="383.4" y="1331.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.4" y="1342.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.07%)</title><rect x="383.4" y="1315.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.4" y="1326.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumValue (1 samples, 0.07%)</title><rect x="383.4" y="1299.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ConstantPool.getUTF8At (1 samples, 0.07%)</title><rect x="383.4" y="1283.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ConstantPool.getUTF8At0 (1 samples, 0.07%)</title><rect x="383.4" y="1267.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.4" y="1278.0"></text>
</g>
<g>
<title>JVM_ConstantPoolGetUTF8At (1 samples, 0.07%)</title><rect x="383.4" y="1251.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="386.4" y="1262.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (1 samples, 0.07%)</title><rect x="383.4" y="1235.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="386.4" y="1246.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="383.4" y="1219.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="386.4" y="1230.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="383.4" y="1203.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="386.4" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="383.4" y="1187.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="386.4" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="383.4" y="1171.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="386.4" y="1182.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.07%)</title><rect x="383.4" y="1155.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="386.4" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (7 samples, 0.48%)</title><rect x="384.2" y="1475.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.2" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (5 samples, 0.34%)</title><rect x="384.2" y="1459.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.2" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (5 samples, 0.34%)</title><rect x="384.2" y="1443.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.2" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (5 samples, 0.34%)</title><rect x="384.2" y="1427.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.2" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (5 samples, 0.34%)</title><rect x="384.2" y="1411.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (5 samples, 0.34%)</title><rect x="384.2" y="1395.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (5 samples, 0.34%)</title><rect x="384.2" y="1379.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (5 samples, 0.34%)</title><rect x="384.2" y="1363.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (5 samples, 0.34%)</title><rect x="384.2" y="1347.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (5 samples, 0.34%)</title><rect x="384.2" y="1331.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.2" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (5 samples, 0.34%)</title><rect x="384.2" y="1315.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.2" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.34%)</title><rect x="384.2" y="1299.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.2" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.34%)</title><rect x="384.2" y="1283.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.2" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.34%)</title><rect x="384.2" y="1267.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.2" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (5 samples, 0.34%)</title><rect x="384.2" y="1251.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.2" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (5 samples, 0.34%)</title><rect x="384.2" y="1235.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.2" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (5 samples, 0.34%)</title><rect x="384.2" y="1219.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.2" y="1230.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (3 samples, 0.21%)</title><rect x="384.2" y="1203.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.2" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (2 samples, 0.14%)</title><rect x="384.2" y="1187.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.14%)</title><rect x="384.2" y="1171.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.2" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.07%)</title><rect x="384.2" y="1155.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="384.2" y="1139.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.2" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.07%)</title><rect x="384.2" y="1123.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.2" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="384.2" y="1107.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.2" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.07%)</title><rect x="384.2" y="1091.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.2" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.07%)</title><rect x="384.2" y="1075.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.07%)</title><rect x="384.2" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.07%)</title><rect x="384.2" y="1043.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.2" y="1054.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="384.2" y="1027.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.2" y="1038.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="384.2" y="1011.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="384.2" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.07%)</title><rect x="384.2" y="979.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.2" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.07%)</title><rect x="385.1" y="1155.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.1" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="385.1" y="1139.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.1" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.07%)</title><rect x="385.1" y="1123.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.1" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.07%)</title><rect x="385.1" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.07%)</title><rect x="385.1" y="1091.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.07%)</title><rect x="385.1" y="1075.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.1" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.close (1 samples, 0.07%)</title><rect x="385.1" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.07%)</title><rect x="385.1" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.07%)</title><rect x="385.1" y="1027.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="388.1" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$InflaterCleanupAction.run (1 samples, 0.07%)</title><rect x="385.1" y="1011.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.1" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.releaseInflater (1 samples, 0.07%)</title><rect x="385.1" y="995.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.1" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.reset (1 samples, 0.07%)</title><rect x="385.1" y="979.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.1" y="990.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.reset (1 samples, 0.07%)</title><rect x="385.1" y="963.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.1" y="974.0"></text>
</g>
<g>
<title>inflateReset (1 samples, 0.07%)</title><rect x="385.1" y="947.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="388.1" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="385.9" y="1187.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.9" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.07%)</title><rect x="385.9" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.9" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="385.9" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.9" y="1166.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.07%)</title><rect x="385.9" y="1139.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="388.9" y="1150.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.07%)</title><rect x="385.9" y="1123.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="388.9" y="1134.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="385.9" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="388.9" y="1118.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.07%)</title><rect x="385.9" y="1091.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="388.9" y="1102.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.07%)</title><rect x="385.9" y="1075.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="388.9" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (2 samples, 0.14%)</title><rect x="386.7" y="1203.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.7" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.14%)</title><rect x="386.7" y="1187.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.7" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (2 samples, 0.14%)</title><rect x="386.7" y="1171.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.7" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (2 samples, 0.14%)</title><rect x="386.7" y="1155.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="386.7" y="1139.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="389.7" y="1150.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="386.7" y="1123.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="389.7" y="1134.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.07%)</title><rect x="387.5" y="1139.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="390.5" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationList$AbstractBase.ofType (1 samples, 0.07%)</title><rect x="388.3" y="1459.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="391.3" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.represents (1 samples, 0.07%)</title><rect x="388.3" y="1443.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.3" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.07%)</title><rect x="388.3" y="1427.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.3" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDefinition$Sort.isNonGeneric (1 samples, 0.07%)</title><rect x="388.3" y="1411.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.3" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.07%)</title><rect x="389.1" y="1459.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.1" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.07%)</title><rect x="389.1" y="1443.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.1" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DefinedShapeMatcher.matches (1 samples, 0.07%)</title><rect x="389.1" y="1427.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.1" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DefinedShapeMatcher.matches (1 samples, 0.07%)</title><rect x="389.1" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.1" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/EqualityMatcher.matches (1 samples, 0.07%)</title><rect x="389.1" y="1395.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.1" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.equals (1 samples, 0.07%)</title><rect x="389.1" y="1379.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.1" y="1390.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.07%)</title><rect x="389.1" y="1363.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.1" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.07%)</title><rect x="389.9" y="1475.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="392.9" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="389.9" y="1459.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.9" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="389.9" y="1443.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.9" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="389.9" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="392.9" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="389.9" y="1411.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.9" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="389.9" y="1395.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="389.9" y="1379.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.9" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="389.9" y="1363.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.9" y="1374.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="389.9" y="1347.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.9" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.07%)</title><rect x="389.9" y="1331.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="389.9" y="1315.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.9" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.07%)</title><rect x="389.9" y="1299.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="389.9" y="1283.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="392.9" y="1294.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.07%)</title><rect x="389.9" y="1267.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.9" y="1278.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="389.9" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.9" y="1262.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.07%)</title><rect x="389.9" y="1235.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.9" y="1246.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.07%)</title><rect x="389.9" y="1219.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.07%)</title><rect x="389.9" y="1203.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.07%)</title><rect x="389.9" y="1187.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.9" y="1198.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="389.9" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.9" y="1182.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="389.9" y="1155.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.9" y="1166.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.07%)</title><rect x="389.9" y="1139.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.9" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (1 samples, 0.07%)</title><rect x="390.7" y="1475.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.7" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="390.7" y="1459.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.7" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="390.7" y="1443.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.7" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="390.7" y="1427.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.7" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$TypeStrategy$Default$3.builder (1 samples, 0.07%)</title><rect x="391.5" y="1539.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.5" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter.ignoreAlso (1 samples, 0.07%)</title><rect x="391.5" y="1523.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="394.5" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/LatentMatcher$Disjunction.&lt;init&gt; (1 samples, 0.07%)</title><rect x="391.5" y="1507.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.5" y="1518.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f20688b7080 (1 samples, 0.07%)</title><rect x="391.5" y="1491.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.5" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (45 samples, 3.08%)</title><rect x="392.3" y="1539.0" width="36.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.3" y="1550.0">net..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (28 samples, 1.91%)</title><rect x="392.3" y="1523.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.3" y="1534.0">n..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (15 samples, 1.03%)</title><rect x="392.3" y="1507.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.3" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (15 samples, 1.03%)</title><rect x="392.3" y="1491.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.3" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (7 samples, 0.48%)</title><rect x="393.1" y="1475.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.1" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (4 samples, 0.27%)</title><rect x="393.1" y="1459.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.1" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getReturnType (2 samples, 0.14%)</title><rect x="393.1" y="1443.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="396.1" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.07%)</title><rect x="393.1" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.1" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getReturnType (1 samples, 0.07%)</title><rect x="393.9" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.9" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.access$2300 (1 samples, 0.07%)</title><rect x="393.9" y="1411.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="396.9" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.07%)</title><rect x="394.7" y="1443.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.7" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$AbstractBase.asErasures (1 samples, 0.07%)</title><rect x="395.5" y="1443.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.5" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (2 samples, 0.14%)</title><rect x="396.3" y="1459.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.3" y="1470.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.14%)</title><rect x="396.3" y="1443.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.3" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.14%)</title><rect x="396.3" y="1427.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.3" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.14%)</title><rect x="396.3" y="1411.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.3" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeToken.equals (2 samples, 0.14%)</title><rect x="396.3" y="1395.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.3" y="1406.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.07%)</title><rect x="396.3" y="1379.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.3" y="1390.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.07%)</title><rect x="396.3" y="1363.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.3" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.07%)</title><rect x="396.3" y="1347.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.3" y="1358.0"></text>
</g>
<g>
<title>java/util/AbstractList$ListItr.&lt;init&gt; (1 samples, 0.07%)</title><rect x="396.3" y="1331.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.3" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.&lt;init&gt; (1 samples, 0.07%)</title><rect x="396.3" y="1315.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.3" y="1326.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="397.1" y="1379.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="400.1" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.asNode (1 samples, 0.07%)</title><rect x="398.0" y="1459.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.0" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.07%)</title><rect x="398.0" y="1443.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.0" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Detached.&lt;init&gt; (1 samples, 0.07%)</title><rect x="398.0" y="1427.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.0" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key.&lt;init&gt; (1 samples, 0.07%)</title><rect x="398.0" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.0" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (7 samples, 0.48%)</title><rect x="398.8" y="1475.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.8" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.07%)</title><rect x="398.8" y="1459.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.8" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.extendBy (1 samples, 0.07%)</title><rect x="398.8" y="1443.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.8" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.07%)</title><rect x="398.8" y="1427.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.8" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="398.8" y="1411.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.8" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="398.8" y="1395.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.8" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod$Token.equals (1 samples, 0.07%)</title><rect x="398.8" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.8" y="1390.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.07%)</title><rect x="398.8" y="1363.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.8" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.07%)</title><rect x="398.8" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Explicit.size (1 samples, 0.07%)</title><rect x="398.8" y="1331.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="401.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (6 samples, 0.41%)</title><rect x="399.6" y="1459.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.6" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.07%)</title><rect x="399.6" y="1443.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.6" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying$1.onNonGenericType (1 samples, 0.07%)</title><rect x="399.6" y="1427.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.6" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Reifying.onNonGenericType (1 samples, 0.07%)</title><rect x="399.6" y="1411.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.6" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.07%)</title><rect x="399.6" y="1395.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.6" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isGenerified (1 samples, 0.07%)</title><rect x="399.6" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.6" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.07%)</title><rect x="399.6" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.6" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="399.6" y="1347.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.6" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="399.6" y="1331.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.6" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="399.6" y="1315.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="399.6" y="1299.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.6" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="399.6" y="1283.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.6" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="399.6" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.6" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="399.6" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.07%)</title><rect x="399.6" y="1235.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.6" y="1246.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.07%)</title><rect x="399.6" y="1219.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.6" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="399.6" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.6" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="399.6" y="1187.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.6" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="399.6" y="1171.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="399.6" y="1155.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="402.6" y="1166.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="399.6" y="1139.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="402.6" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (5 samples, 0.34%)</title><rect x="400.4" y="1443.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (5 samples, 0.34%)</title><rect x="400.4" y="1427.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (2 samples, 0.14%)</title><rect x="400.4" y="1411.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.4" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="400.4" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.4" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="400.4" y="1379.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="403.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key.equals (1 samples, 0.07%)</title><rect x="400.4" y="1363.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.4" y="1374.0"></text>
</g>
<g>
<title>java/util/Collections.disjoint (1 samples, 0.07%)</title><rect x="400.4" y="1347.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.4" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.contains (1 samples, 0.07%)</title><rect x="400.4" y="1331.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.4" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.07%)</title><rect x="400.4" y="1315.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.4" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.07%)</title><rect x="401.2" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.07%)</title><rect x="401.2" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.asErasure (1 samples, 0.07%)</title><rect x="401.2" y="1363.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.of (1 samples, 0.07%)</title><rect x="401.2" y="1347.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="401.2" y="1331.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.2" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="401.2" y="1315.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.2" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (3 samples, 0.21%)</title><rect x="402.0" y="1411.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.0" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (3 samples, 0.21%)</title><rect x="402.0" y="1395.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.0" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (3 samples, 0.21%)</title><rect x="402.0" y="1379.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.0" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.07%)</title><rect x="402.0" y="1363.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (2 samples, 0.14%)</title><rect x="402.8" y="1363.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (2 samples, 0.14%)</title><rect x="402.8" y="1347.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.14%)</title><rect x="402.8" y="1331.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.07%)</title><rect x="402.8" y="1315.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.8" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.07%)</title><rect x="402.8" y="1299.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getParameters (1 samples, 0.07%)</title><rect x="402.8" y="1283.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.8" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.07%)</title><rect x="403.6" y="1315.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="406.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.07%)</title><rect x="403.6" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.6" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.07%)</title><rect x="403.6" y="1283.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.6" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.07%)</title><rect x="403.6" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.6" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.isVisibleTo (1 samples, 0.07%)</title><rect x="403.6" y="1251.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.6" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.07%)</title><rect x="403.6" y="1235.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.6" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.07%)</title><rect x="403.6" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.6" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.07%)</title><rect x="403.6" y="1203.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="406.6" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.07%)</title><rect x="403.6" y="1187.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="406.6" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.07%)</title><rect x="403.6" y="1171.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="406.6" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.07%)</title><rect x="403.6" y="1155.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="406.6" y="1166.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="403.6" y="1139.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="406.6" y="1150.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.07%)</title><rect x="403.6" y="1123.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="406.6" y="1134.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.07%)</title><rect x="403.6" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="406.6" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode, Thread*) (1 samples, 0.07%)</title><rect x="403.6" y="1091.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="406.6" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.07%)</title><rect x="403.6" y="1075.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="406.6" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.07%)</title><rect x="403.6" y="1059.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="406.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (8 samples, 0.55%)</title><rect x="404.4" y="1507.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.4" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.14%)</title><rect x="405.2" y="1491.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.2" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.14%)</title><rect x="405.2" y="1475.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.2" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.07%)</title><rect x="405.2" y="1459.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.2" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.07%)</title><rect x="405.2" y="1443.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.2" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.07%)</title><rect x="405.2" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.2" y="1438.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="405.2" y="1411.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="408.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.07%)</title><rect x="406.0" y="1459.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.0" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.07%)</title><rect x="406.0" y="1443.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.0" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.07%)</title><rect x="406.0" y="1427.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.0" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.07%)</title><rect x="406.0" y="1411.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.0" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeSubstituting.getModifiers (1 samples, 0.07%)</title><rect x="406.0" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.0" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="406.0" y="1379.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="409.0" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1491.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.8" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1475.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.8" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1459.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.8" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1443.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.8" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1427.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.8" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1411.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.8" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1395.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.8" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1379.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.8" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1363.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1347.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1331.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (2 samples, 0.14%)</title><rect x="406.8" y="1315.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.8" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (2 samples, 0.14%)</title><rect x="406.8" y="1299.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (2 samples, 0.14%)</title><rect x="406.8" y="1283.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.8" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (2 samples, 0.14%)</title><rect x="406.8" y="1267.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.8" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.14%)</title><rect x="406.8" y="1251.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.8" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.14%)</title><rect x="406.8" y="1235.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.14%)</title><rect x="406.8" y="1219.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.8" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.14%)</title><rect x="406.8" y="1203.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.8" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.14%)</title><rect x="406.8" y="1187.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.8" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (2 samples, 0.14%)</title><rect x="406.8" y="1171.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.8" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.14%)</title><rect x="406.8" y="1155.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.8" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.14%)</title><rect x="406.8" y="1139.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (2 samples, 0.14%)</title><rect x="406.8" y="1123.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="409.8" y="1134.0"></text>
</g>
<g>
<title>java/net/URL.openStream (2 samples, 0.14%)</title><rect x="406.8" y="1107.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.8" y="1118.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (2 samples, 0.14%)</title><rect x="406.8" y="1091.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.8" y="1102.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.07%)</title><rect x="406.8" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.8" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.07%)</title><rect x="406.8" y="1059.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.8" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.07%)</title><rect x="406.8" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.8" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.getInflater (1 samples, 0.07%)</title><rect x="406.8" y="1027.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.8" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.poll (1 samples, 0.07%)</title><rect x="406.8" y="1011.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.8" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.07%)</title><rect x="406.8" y="995.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.8" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.07%)</title><rect x="406.8" y="979.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="409.8" y="990.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.07%)</title><rect x="407.6" y="1075.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.6" y="1086.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.07%)</title><rect x="407.6" y="1059.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.6" y="1070.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.07%)</title><rect x="407.6" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.6" y="1054.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.urlKey (1 samples, 0.07%)</title><rect x="407.6" y="1027.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.6" y="1038.0"></text>
</g>
<g>
<title>sun/net/util/URLUtil.urlNoFragString (1 samples, 0.07%)</title><rect x="407.6" y="1011.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="407.6" y="995.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="407.6" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.6" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.07%)</title><rect x="407.6" y="963.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="407.6" y="947.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (3 samples, 0.21%)</title><rect x="408.4" y="1491.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.4" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodReturnTypeMatcher.matches (3 samples, 0.21%)</title><rect x="408.4" y="1475.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.4" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (3 samples, 0.21%)</title><rect x="408.4" y="1459.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.4" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (3 samples, 0.21%)</title><rect x="408.4" y="1443.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.4" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (3 samples, 0.21%)</title><rect x="408.4" y="1427.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (3 samples, 0.21%)</title><rect x="408.4" y="1411.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (3 samples, 0.21%)</title><rect x="408.4" y="1395.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.4" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (2 samples, 0.14%)</title><rect x="408.4" y="1379.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (2 samples, 0.14%)</title><rect x="408.4" y="1363.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.4" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.14%)</title><rect x="408.4" y="1347.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.4" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.14%)</title><rect x="408.4" y="1331.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.4" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.14%)</title><rect x="408.4" y="1315.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.4" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.14%)</title><rect x="408.4" y="1299.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.4" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.14%)</title><rect x="408.4" y="1283.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.4" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="408.4" y="1267.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.4" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="408.4" y="1251.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.4" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="408.4" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.4" y="1246.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="408.4" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.4" y="1230.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.07%)</title><rect x="408.4" y="1203.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.4" y="1214.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.07%)</title><rect x="408.4" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.4" y="1198.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.07%)</title><rect x="408.4" y="1171.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.4" y="1182.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.07%)</title><rect x="408.4" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.4" y="1166.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="408.4" y="1139.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.4" y="1150.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="408.4" y="1123.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.4" y="1134.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="408.4" y="1107.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.4" y="1118.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.07%)</title><rect x="408.4" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.4" y="1102.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.setURL (1 samples, 0.07%)</title><rect x="408.4" y="1075.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.4" y="1086.0"></text>
</g>
<g>
<title>java/net/URL.set (1 samples, 0.07%)</title><rect x="408.4" y="1059.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="409.2" y="1267.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.2" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="409.2" y="1251.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.2" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="409.2" y="1235.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.2" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="409.2" y="1219.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitAnnotationDefault (1 samples, 0.07%)</title><rect x="409.2" y="1203.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.2" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$ComponentTypeLocator$ForArrayType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="409.2" y="1187.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.2" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.07%)</title><rect x="410.1" y="1379.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.1" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.07%)</title><rect x="410.1" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.1" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.07%)</title><rect x="410.1" y="1347.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.1" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.07%)</title><rect x="410.1" y="1331.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.1" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="410.1" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.1" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="410.1" y="1299.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.1" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="410.1" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.1" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="410.1" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.1" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="410.1" y="1251.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.1" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="410.1" y="1235.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.1" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="410.1" y="1219.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.1" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="410.1" y="1203.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.1" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (5 samples, 0.34%)</title><rect x="410.9" y="1507.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.9" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 0.34%)</title><rect x="410.9" y="1491.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.9" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1475.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.9" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1459.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.9" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1443.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.9" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1427.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.9" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1411.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.9" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1395.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1379.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.9" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1363.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.9" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1347.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1331.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1315.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (5 samples, 0.34%)</title><rect x="410.9" y="1299.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (5 samples, 0.34%)</title><rect x="410.9" y="1283.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (5 samples, 0.34%)</title><rect x="410.9" y="1267.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.9" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (5 samples, 0.34%)</title><rect x="410.9" y="1251.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.9" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (5 samples, 0.34%)</title><rect x="410.9" y="1235.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (5 samples, 0.34%)</title><rect x="410.9" y="1219.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.9" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.34%)</title><rect x="410.9" y="1203.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.9" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.34%)</title><rect x="410.9" y="1187.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.9" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.34%)</title><rect x="410.9" y="1171.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.9" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (4 samples, 0.27%)</title><rect x="410.9" y="1155.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.9" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (4 samples, 0.27%)</title><rect x="410.9" y="1139.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.9" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (4 samples, 0.27%)</title><rect x="410.9" y="1123.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="410.9" y="1107.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="410.9" y="1091.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="410.9" y="1075.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="410.9" y="1059.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.07%)</title><rect x="410.9" y="1043.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.9" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="410.9" y="1027.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="410.9" y="1011.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="410.9" y="995.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.07%)</title><rect x="410.9" y="979.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.07%)</title><rect x="410.9" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.07%)</title><rect x="410.9" y="947.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.07%)</title><rect x="410.9" y="931.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.07%)</title><rect x="410.9" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.07%)</title><rect x="410.9" y="899.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.07%)</title><rect x="410.9" y="883.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="410.9" y="867.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.9" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (2 samples, 0.14%)</title><rect x="411.7" y="1107.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (2 samples, 0.14%)</title><rect x="411.7" y="1091.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="414.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (2 samples, 0.14%)</title><rect x="411.7" y="1075.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (2 samples, 0.14%)</title><rect x="411.7" y="1059.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (2 samples, 0.14%)</title><rect x="411.7" y="1043.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.7" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.14%)</title><rect x="411.7" y="1027.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.14%)</title><rect x="411.7" y="1011.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="414.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (2 samples, 0.14%)</title><rect x="411.7" y="995.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (2 samples, 0.14%)</title><rect x="411.7" y="979.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (2 samples, 0.14%)</title><rect x="411.7" y="963.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (2 samples, 0.14%)</title><rect x="411.7" y="947.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (2 samples, 0.14%)</title><rect x="411.7" y="931.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.07%)</title><rect x="411.7" y="915.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.07%)</title><rect x="411.7" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.07%)</title><rect x="411.7" y="883.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.slice (1 samples, 0.07%)</title><rect x="411.7" y="867.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.07%)</title><rect x="412.5" y="915.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.07%)</title><rect x="412.5" y="899.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="412.5" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.07%)</title><rect x="413.3" y="1107.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.3" y="1118.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.07%)</title><rect x="413.3" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.3" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="413.3" y="1075.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.3" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="413.3" y="1059.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.3" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="413.3" y="1043.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="413.3" y="1027.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="416.3" y="1038.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="413.3" y="1011.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="416.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="414.1" y="1155.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.1" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="414.1" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.1" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="414.1" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.1" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="414.1" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.1" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUnsignedShort (1 samples, 0.07%)</title><rect x="414.1" y="1091.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (16 samples, 1.09%)</title><rect x="414.9" y="1523.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.9" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (16 samples, 1.09%)</title><rect x="414.9" y="1507.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.9" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default$1.resolve (2 samples, 0.14%)</title><rect x="414.9" y="1491.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.9" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter.&lt;init&gt; (2 samples, 0.14%)</title><rect x="414.9" y="1475.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.9" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (2 samples, 0.14%)</title><rect x="414.9" y="1459.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.9" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.&lt;init&gt; (2 samples, 0.14%)</title><rect x="414.9" y="1443.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.9" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="414.9" y="1427.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.9" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="414.9" y="1411.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.9" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8 (1 samples, 0.07%)</title><rect x="415.7" y="1427.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.7" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (14 samples, 0.96%)</title><rect x="416.5" y="1491.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.5" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (14 samples, 0.96%)</title><rect x="416.5" y="1475.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.5" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (2 samples, 0.14%)</title><rect x="416.5" y="1459.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.5" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.07%)</title><rect x="416.5" y="1443.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.5" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods.wrap (1 samples, 0.07%)</title><rect x="416.5" y="1427.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.5" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="416.5" y="1411.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.5" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="416.5" y="1395.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="419.5" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.07%)</title><rect x="416.5" y="1379.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.5" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.07%)</title><rect x="417.3" y="1443.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.3" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.07%)</title><rect x="417.3" y="1427.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.3" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/TypeConstantAdjustment$TypeConstantDissolvingClassVisitor.visit (1 samples, 0.07%)</title><rect x="417.3" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.3" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.07%)</title><rect x="417.3" y="1395.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.3" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector$1.visit (1 samples, 0.07%)</title><rect x="417.3" y="1379.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.3" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (1 samples, 0.07%)</title><rect x="417.3" y="1363.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.3" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (1 samples, 0.07%)</title><rect x="417.3" y="1347.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.3" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.07%)</title><rect x="417.3" y="1331.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.3" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.isAssignableFrom (1 samples, 0.07%)</title><rect x="417.3" y="1315.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.3" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.07%)</title><rect x="417.3" y="1299.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.3" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.07%)</title><rect x="417.3" y="1283.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.3" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.isAssignableFrom (1 samples, 0.07%)</title><rect x="417.3" y="1267.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.3" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.07%)</title><rect x="417.3" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.3" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.07%)</title><rect x="417.3" y="1235.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.3" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.equals (1 samples, 0.07%)</title><rect x="417.3" y="1219.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.3" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (8 samples, 0.55%)</title><rect x="418.1" y="1459.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.1" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (6 samples, 0.41%)</title><rect x="418.1" y="1443.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.1" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (1 samples, 0.07%)</title><rect x="418.1" y="1427.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.1" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (1 samples, 0.07%)</title><rect x="418.1" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.1" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.07%)</title><rect x="418.1" y="1395.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.1" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="418.1" y="1379.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.1" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="418.1" y="1363.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.1" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="418.1" y="1347.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.1" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitEnd (1 samples, 0.07%)</title><rect x="418.1" y="1331.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.1" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitEnd (1 samples, 0.07%)</title><rect x="418.1" y="1315.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.1" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound.onEnd (1 samples, 0.07%)</title><rect x="418.1" y="1299.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.1" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$ForAdvice.injectExceptionFrame (1 samples, 0.07%)</title><rect x="418.1" y="1283.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.1" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.1" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/FramePaddingMethodVisitor.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1251.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.1" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.1" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.1" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1203.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.1" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1187.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.1" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.1" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.1" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitFrame (1 samples, 0.07%)</title><rect x="418.1" y="1139.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.1" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.putFrameType (1 samples, 0.07%)</title><rect x="418.1" y="1123.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.1" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantClass (1 samples, 0.07%)</title><rect x="418.1" y="1107.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.1" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8Reference (1 samples, 0.07%)</title><rect x="418.1" y="1091.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.get (1 samples, 0.07%)</title><rect x="418.1" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (2 samples, 0.14%)</title><rect x="418.9" y="1427.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.9" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (2 samples, 0.14%)</title><rect x="418.9" y="1411.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.9" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (2 samples, 0.14%)</title><rect x="418.9" y="1395.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (2 samples, 0.14%)</title><rect x="418.9" y="1379.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.9" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (2 samples, 0.14%)</title><rect x="418.9" y="1363.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.9" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.14%)</title><rect x="418.9" y="1347.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.14%)</title><rect x="418.9" y="1331.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.14%)</title><rect x="418.9" y="1315.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitEnd (2 samples, 0.14%)</title><rect x="418.9" y="1299.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitEnd (2 samples, 0.14%)</title><rect x="418.9" y="1283.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$SuppressionHandler$Suppressing$Bound.onEnd (2 samples, 0.14%)</title><rect x="418.9" y="1267.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.9" y="1278.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/ExceptionHandlers$1.apply (2 samples, 0.14%)</title><rect x="418.9" y="1251.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.9" y="1262.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xba000000)@0x00007f20688bce00 (1 samples, 0.07%)</title><rect x="418.9" y="1235.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1235.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.7" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1219.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.7" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/FramePaddingMethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.7" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.7" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1171.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1155.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1139.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.7" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1$1.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1123.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1107.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.7" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.7" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1075.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.7" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitLdcInsn (1 samples, 0.07%)</title><rect x="419.7" y="1059.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstant (1 samples, 0.07%)</title><rect x="419.7" y="1043.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantString (1 samples, 0.07%)</title><rect x="419.7" y="1027.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.7" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8Reference (1 samples, 0.07%)</title><rect x="419.7" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.7" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8 (1 samples, 0.07%)</title><rect x="419.7" y="995.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ByteVector.putUTF8 (1 samples, 0.07%)</title><rect x="419.7" y="979.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.7" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.07%)</title><rect x="419.7" y="963.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="422.7" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.07%)</title><rect x="419.7" y="947.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="422.7" y="958.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.07%)</title><rect x="419.7" y="931.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="422.7" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::lookup_osr_nmethod(Method const*, int, int, bool) const (1 samples, 0.07%)</title><rect x="419.7" y="915.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="422.7" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitJumpInsn (1 samples, 0.07%)</title><rect x="420.5" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.5" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor.visitJumpInsn (1 samples, 0.07%)</title><rect x="420.5" y="1411.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.5" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitJumpInsn (1 samples, 0.07%)</title><rect x="420.5" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="423.5" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitJumpInsn (1 samples, 0.07%)</title><rect x="420.5" y="1379.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.5" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.addSuccessorToCurrentBasicBlock (1 samples, 0.07%)</title><rect x="420.5" y="1363.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.5" y="1374.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (1 samples, 0.07%)</title><rect x="420.5" y="1347.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="423.5" y="1358.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.07%)</title><rect x="420.5" y="1331.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="423.5" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitJumpInsn (1 samples, 0.07%)</title><rect x="421.3" y="1427.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.3" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitJumpInsn (1 samples, 0.07%)</title><rect x="421.3" y="1411.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.3" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitJumpInsn (1 samples, 0.07%)</title><rect x="421.3" y="1395.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.3" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitJumpInsn (1 samples, 0.07%)</title><rect x="421.3" y="1379.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.3" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="421.3" y="1363.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.3" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="421.3" y="1347.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.3" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.07%)</title><rect x="421.3" y="1331.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.3" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.2" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1411.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1395.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/StackAwareMethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.2" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/FramePaddingMethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1347.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1331.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.2" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1315.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.2" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.onVisitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.2" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1283.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.2" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1$1.visitMethodInsn (1 samples, 0.07%)</title><rect x="422.2" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.2" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (2 samples, 0.14%)</title><rect x="423.0" y="1443.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.0" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (2 samples, 0.14%)</title><rect x="423.0" y="1427.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.0" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (2 samples, 0.14%)</title><rect x="423.0" y="1411.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.0" y="1422.0"></text>
</g>
<g>
<title>java/util/Collections$SingletonList.iterator (1 samples, 0.07%)</title><rect x="423.0" y="1395.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="426.0" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitMethod (1 samples, 0.07%)</title><rect x="423.8" y="1395.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.8" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter$1.visitMethod (1 samples, 0.07%)</title><rect x="423.8" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.8" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitMethod (1 samples, 0.07%)</title><rect x="423.8" y="1363.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.8" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/TypeConstantAdjustment$TypeConstantDissolvingClassVisitor.visitMethod (1 samples, 0.07%)</title><rect x="423.8" y="1347.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.8" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitMethod (1 samples, 0.07%)</title><rect x="423.8" y="1331.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.8" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.07%)</title><rect x="423.8" y="1315.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.8" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.07%)</title><rect x="423.8" y="1299.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.07%)</title><rect x="423.8" y="1283.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.8" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.07%)</title><rect x="423.8" y="1267.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.8" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling.&lt;init&gt; (1 samples, 0.07%)</title><rect x="423.8" y="1251.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.8" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.&lt;init&gt; (1 samples, 0.07%)</title><rect x="423.8" y="1235.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.&lt;init&gt; (1 samples, 0.07%)</title><rect x="423.8" y="1219.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.8" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.bind (1 samples, 0.07%)</title><rect x="423.8" y="1203.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.8" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.&lt;init&gt; (1 samples, 0.07%)</title><rect x="423.8" y="1187.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.8" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitInnerClass (3 samples, 0.21%)</title><rect x="424.6" y="1459.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.6" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitInnerClass (2 samples, 0.14%)</title><rect x="424.6" y="1443.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.6" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getInternalName (1 samples, 0.07%)</title><rect x="424.6" y="1427.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.07%)</title><rect x="424.6" y="1411.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.07%)</title><rect x="424.6" y="1395.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.6" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isMemberType (1 samples, 0.07%)</title><rect x="425.4" y="1427.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.4" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.isLocalType (1 samples, 0.07%)</title><rect x="425.4" y="1411.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="425.4" y="1395.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.4" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="425.4" y="1379.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="428.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="425.4" y="1363.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.4" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="425.4" y="1347.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.4" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="425.4" y="1331.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.4" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="425.4" y="1315.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.4" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="425.4" y="1299.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.4" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.07%)</title><rect x="425.4" y="1283.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.4" y="1294.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.07%)</title><rect x="425.4" y="1267.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.4" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="425.4" y="1251.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.4" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="425.4" y="1235.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.4" y="1246.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="425.4" y="1219.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="428.4" y="1230.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="425.4" y="1203.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="428.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.considerTriggerOuterClass (1 samples, 0.07%)</title><rect x="426.2" y="1443.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.2" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onOuterType (1 samples, 0.07%)</title><rect x="426.2" y="1427.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.2" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.isAnonymousType (1 samples, 0.07%)</title><rect x="426.2" y="1411.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.2" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="426.2" y="1395.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="429.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitOuterClass (1 samples, 0.07%)</title><rect x="427.0" y="1459.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.0" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitOuterClass (1 samples, 0.07%)</title><rect x="427.0" y="1443.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.0" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onOuterType (1 samples, 0.07%)</title><rect x="427.0" y="1427.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.0" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingMethod (1 samples, 0.07%)</title><rect x="427.0" y="1411.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.0" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getEnclosingMethod (1 samples, 0.07%)</title><rect x="427.0" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.0" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getEnclosingMethod (1 samples, 0.07%)</title><rect x="427.0" y="1379.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.0" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TypeContainment$WithinMethod.getEnclosingMethod (1 samples, 0.07%)</title><rect x="427.0" y="1363.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.0" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.07%)</title><rect x="427.0" y="1347.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.0" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="427.0" y="1331.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.0" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="427.0" y="1315.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.0" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="427.0" y="1299.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.0" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="427.0" y="1283.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.0" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.07%)</title><rect x="427.0" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.0" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="427.0" y="1251.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.0" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="427.0" y="1235.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.0" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="427.0" y="1219.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.0" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="427.0" y="1203.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.0" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.07%)</title><rect x="427.0" y="1187.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.0" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (1 samples, 0.07%)</title><rect x="427.8" y="1523.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.8" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.named (1 samples, 0.07%)</title><rect x="427.8" y="1507.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.8" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/StringMatcher.&lt;init&gt; (1 samples, 0.07%)</title><rect x="427.8" y="1491.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.8" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onComplete (1 samples, 0.07%)</title><rect x="428.6" y="1555.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.6" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller$ClassLoadListener.onComplete (1 samples, 0.07%)</title><rect x="428.6" y="1539.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.6" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onDiscovery (1 samples, 0.07%)</title><rect x="429.4" y="1555.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.4" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller$ClassLoadListener.onDiscovery (1 samples, 0.07%)</title><rect x="429.4" y="1539.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.4" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.&lt;init&gt; (1 samples, 0.07%)</title><rect x="430.2" y="1555.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.2" y="1566.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.&lt;init&gt; (1 samples, 0.07%)</title><rect x="430.2" y="1539.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.2" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="430.2" y="1523.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.2" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.07%)</title><rect x="430.2" y="1507.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.2" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="430.2" y="1491.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.2" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.07%)</title><rect x="430.2" y="1475.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.2" y="1486.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="430.2" y="1459.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.2" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClassSourceLocation (1 samples, 0.07%)</title><rect x="431.0" y="1715.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.0" y="1726.0"></text>
</g>
<g>
<title>java/net/URL.toString (1 samples, 0.07%)</title><rect x="431.0" y="1699.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.0" y="1710.0"></text>
</g>
<g>
<title>java/net/URL.toExternalForm (1 samples, 0.07%)</title><rect x="431.0" y="1683.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.0" y="1694.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.toExternalForm (1 samples, 0.07%)</title><rect x="431.0" y="1667.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.0" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="431.0" y="1651.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.0" y="1662.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (6 samples, 0.41%)</title><rect x="431.8" y="1715.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.8" y="1726.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (6 samples, 0.41%)</title><rect x="431.8" y="1699.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/Class.getName (4 samples, 0.27%)</title><rect x="431.8" y="1683.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.8" y="1694.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (4 samples, 0.27%)</title><rect x="431.8" y="1667.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.8" y="1678.0"></text>
</g>
<g>
<title>JVM_InitClassName (4 samples, 0.27%)</title><rect x="431.8" y="1651.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="434.8" y="1662.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (4 samples, 0.27%)</title><rect x="431.8" y="1635.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="434.8" y="1646.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (4 samples, 0.27%)</title><rect x="431.8" y="1619.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="434.8" y="1630.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (4 samples, 0.27%)</title><rect x="431.8" y="1603.0" width="3.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="434.8" y="1614.0"></text>
</g>
<g>
<title>WeakHandle&lt;(WeakHandleType)2&gt;::create(Handle) (1 samples, 0.07%)</title><rect x="431.8" y="1587.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="434.8" y="1598.0"></text>
</g>
<g>
<title>OopStorage::allocate() (1 samples, 0.07%)</title><rect x="431.8" y="1571.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="434.8" y="1582.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="431.8" y="1555.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="434.8" y="1566.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (3 samples, 0.21%)</title><rect x="432.6" y="1587.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="435.6" y="1598.0"></text>
</g>
<g>
<title>UNICODE::is_latin1(unsigned short*, int) (1 samples, 0.07%)</title><rect x="432.6" y="1571.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="435.6" y="1582.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (2 samples, 0.14%)</title><rect x="433.4" y="1571.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="436.4" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="433.4" y="1555.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="436.4" y="1566.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="433.4" y="1539.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="436.4" y="1550.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="433.4" y="1523.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="436.4" y="1534.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.07%)</title><rect x="433.4" y="1507.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="436.4" y="1518.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="434.3" y="1555.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="437.3" y="1566.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="434.3" y="1539.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="437.3" y="1550.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.07%)</title><rect x="434.3" y="1523.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="437.3" y="1534.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.07%)</title><rect x="435.1" y="1683.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.1" y="1694.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.07%)</title><rect x="435.9" y="1683.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.9" y="1694.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.07%)</title><rect x="435.9" y="1667.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="438.9" y="1678.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.07%)</title><rect x="435.9" y="1651.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="438.9" y="1662.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.07%)</title><rect x="435.9" y="1635.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="438.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.defineOrCheckPackage (3 samples, 0.21%)</title><rect x="436.7" y="1747.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineOrCheckPackage (3 samples, 0.21%)</title><rect x="436.7" y="1731.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="439.7" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.getAndVerifyPackage (3 samples, 0.21%)</title><rect x="436.7" y="1715.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.7" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getDefinedPackage (1 samples, 0.07%)</title><rect x="436.7" y="1699.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="439.7" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.definePackage (1 samples, 0.07%)</title><rect x="436.7" y="1683.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.7" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.07%)</title><rect x="436.7" y="1667.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.isSealed (2 samples, 0.14%)</title><rect x="437.5" y="1699.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.5" y="1710.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.getValue (1 samples, 0.07%)</title><rect x="437.5" y="1683.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.5" y="1694.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.get (1 samples, 0.07%)</title><rect x="437.5" y="1667.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.5" y="1678.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.07%)</title><rect x="437.5" y="1651.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.5" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="437.5" y="1635.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.5" y="1646.0"></text>
</g>
<g>
<title>java/util/jar/JavaUtilJarAccessImpl.getTrustedAttributes (1 samples, 0.07%)</title><rect x="438.3" y="1683.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.3" y="1694.0"></text>
</g>
<g>
<title>java/util/jar/Manifest.getTrustedAttributes (1 samples, 0.07%)</title><rect x="438.3" y="1667.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (2 samples, 0.14%)</title><rect x="439.1" y="1747.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.1" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (2 samples, 0.14%)</title><rect x="439.1" y="1731.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.1" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getInputStream (2 samples, 0.14%)</title><rect x="439.1" y="1715.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.1" y="1726.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (2 samples, 0.14%)</title><rect x="439.1" y="1699.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.1" y="1710.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (2 samples, 0.14%)</title><rect x="439.1" y="1683.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.1" y="1694.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (2 samples, 0.14%)</title><rect x="439.1" y="1667.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.1" y="1678.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (2 samples, 0.14%)</title><rect x="439.1" y="1651.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.1" y="1662.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.07%)</title><rect x="439.1" y="1635.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.07%)</title><rect x="439.1" y="1619.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.1" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="439.1" y="1603.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.1" y="1614.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.&lt;init&gt; (1 samples, 0.07%)</title><rect x="439.9" y="1635.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (28 samples, 1.91%)</title><rect x="440.7" y="1747.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.7" y="1758.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.07%)</title><rect x="441.5" y="1731.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.5" y="1742.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (26 samples, 1.78%)</title><rect x="442.3" y="1731.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.3" y="1742.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (24 samples, 1.64%)</title><rect x="442.3" y="1715.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.3" y="1726.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (24 samples, 1.64%)</title><rect x="442.3" y="1699.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.3" y="1710.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (4 samples, 0.27%)</title><rect x="442.3" y="1683.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="445.3" y="1694.0"></text>
</g>
<g>
<title>Java_java_util_zip_Inflater_inflateBytesBytes (1 samples, 0.07%)</title><rect x="445.5" y="1683.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="448.5" y="1694.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.89%)</title><rect x="446.3" y="1683.0" width="10.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="449.3" y="1694.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (13 samples, 0.89%)</title><rect x="446.3" y="1667.0" width="10.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="449.3" y="1678.0"></text>
</g>
<g>
<title>inflate (6 samples, 0.41%)</title><rect x="456.8" y="1683.0" width="4.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="459.8" y="1694.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (2 samples, 0.14%)</title><rect x="461.7" y="1715.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="464.7" y="1726.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (2 samples, 0.14%)</title><rect x="461.7" y="1699.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.7" y="1710.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (1 samples, 0.07%)</title><rect x="461.7" y="1683.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.7" y="1694.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.07%)</title><rect x="461.7" y="1667.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.7" y="1678.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.07%)</title><rect x="461.7" y="1651.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.7" y="1662.0"></text>
</g>
<g>
<title>readBytes (1 samples, 0.07%)</title><rect x="461.7" y="1635.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="464.7" y="1646.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="461.7" y="1619.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="464.7" y="1630.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="461.7" y="1603.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="464.7" y="1614.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.07%)</title><rect x="462.5" y="1683.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.5" y="1694.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readFullyAt (1 samples, 0.07%)</title><rect x="462.5" y="1667.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.5" y="1678.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readFully (1 samples, 0.07%)</title><rect x="462.5" y="1651.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.5" y="1662.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (1 samples, 0.07%)</title><rect x="462.5" y="1635.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.5" y="1646.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (1 samples, 0.07%)</title><rect x="462.5" y="1619.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.5" y="1630.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="462.5" y="1603.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="465.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (5 samples, 0.34%)</title><rect x="463.3" y="1763.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (5 samples, 0.34%)</title><rect x="463.3" y="1747.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.3" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (5 samples, 0.34%)</title><rect x="463.3" y="1731.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.3" y="1742.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (2 samples, 0.14%)</title><rect x="464.1" y="1715.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.1" y="1726.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (2 samples, 0.14%)</title><rect x="464.1" y="1699.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.1" y="1710.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (2 samples, 0.14%)</title><rect x="464.1" y="1683.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.1" y="1694.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.canonizeString (1 samples, 0.07%)</title><rect x="464.1" y="1667.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.1" y="1678.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x00007f20688bbe00 (1 samples, 0.07%)</title><rect x="464.1" y="1651.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.1" y="1662.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseContextSpec (1 samples, 0.07%)</title><rect x="464.9" y="1667.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.9" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.07%)</title><rect x="464.9" y="1651.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.9" y="1662.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.07%)</title><rect x="464.9" y="1635.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.07%)</title><rect x="464.9" y="1619.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.9" y="1630.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.encodePath (2 samples, 0.14%)</title><rect x="465.7" y="1715.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.7" y="1726.0"></text>
</g>
<g>
<title>sun/net/www/ParseUtil.firstEncodeIndex (2 samples, 0.14%)</title><rect x="465.7" y="1699.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (10 samples, 0.68%)</title><rect x="467.3" y="1779.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (10 samples, 0.68%)</title><rect x="467.3" y="1763.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.3" y="1774.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (2 samples, 0.14%)</title><rect x="467.3" y="1747.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (2 samples, 0.14%)</title><rect x="467.3" y="1731.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.3" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.14%)</title><rect x="467.3" y="1715.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.addCount (1 samples, 0.07%)</title><rect x="467.3" y="1699.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.3" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.transfer (1 samples, 0.07%)</title><rect x="467.3" y="1683.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.3" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.07%)</title><rect x="468.1" y="1699.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.1" y="1710.0"></text>
</g>
<g>
<title>java/security/CodeSource.&lt;init&gt; (1 samples, 0.07%)</title><rect x="468.9" y="1747.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.9" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (7 samples, 0.48%)</title><rect x="469.7" y="1747.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (6 samples, 0.41%)</title><rect x="470.5" y="1731.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.5" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (6 samples, 0.41%)</title><rect x="470.5" y="1715.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.5" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (6 samples, 0.41%)</title><rect x="470.5" y="1699.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.5" y="1710.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (6 samples, 0.41%)</title><rect x="470.5" y="1683.0" width="4.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="473.5" y="1694.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (5 samples, 0.34%)</title><rect x="470.5" y="1667.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="473.5" y="1678.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (5 samples, 0.34%)</title><rect x="470.5" y="1651.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="473.5" y="1662.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (5 samples, 0.34%)</title><rect x="470.5" y="1635.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="473.5" y="1646.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (2 samples, 0.14%)</title><rect x="470.5" y="1619.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="473.5" y="1630.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_stream(char const*, Thread*) (2 samples, 0.14%)</title><rect x="470.5" y="1603.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="473.5" y="1614.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_entry(char const*, int*, bool, Thread*) (2 samples, 0.14%)</title><rect x="470.5" y="1587.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="473.5" y="1598.0"></text>
</g>
<g>
<title>ZIP_FindEntry (1 samples, 0.07%)</title><rect x="471.4" y="1571.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="474.4" y="1582.0"></text>
</g>
<g>
<title>ZIP_GetEntry2 (1 samples, 0.07%)</title><rect x="471.4" y="1555.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="474.4" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::package_from_name(Symbol const*, Thread*) (2 samples, 0.14%)</title><rect x="472.2" y="1619.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="475.2" y="1630.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.07%)</title><rect x="472.2" y="1603.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="475.2" y="1614.0"></text>
</g>
<g>
<title>__strrchr_avx2 (1 samples, 0.07%)</title><rect x="473.0" y="1603.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="476.0" y="1614.0"></text>
</g>
<g>
<title>PackageEntryTable::lookup_only(Symbol*) (1 samples, 0.07%)</title><rect x="473.8" y="1619.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="476.8" y="1630.0"></text>
</g>
<g>
<title>VerifyClassname (1 samples, 0.07%)</title><rect x="474.6" y="1667.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="477.6" y="1678.0"></text>
</g>
<g>
<title>skip_over_fieldname.constprop.2 (1 samples, 0.07%)</title><rect x="474.6" y="1651.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="477.6" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.07%)</title><rect x="475.4" y="1875.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/946884592.invoke (1 samples, 0.07%)</title><rect x="475.4" y="1859.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.4" y="1870.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="476.2" y="1875.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.2" y="1886.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="476.2" y="1859.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.2" y="1870.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="476.2" y="1843.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.2" y="1854.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="476.2" y="1827.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.2" y="1838.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="476.2" y="1811.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.2" y="1822.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (1 samples, 0.07%)</title><rect x="476.2" y="1795.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.2" y="1806.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 0.07%)</title><rect x="476.2" y="1779.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.2" y="1790.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 0.07%)</title><rect x="476.2" y="1763.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.2" y="1774.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (1 samples, 0.07%)</title><rect x="476.2" y="1747.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.2" y="1758.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (1 samples, 0.07%)</title><rect x="476.2" y="1731.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.2" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.07%)</title><rect x="476.2" y="1715.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="479.2" y="1726.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="476.2" y="1699.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="479.2" y="1710.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="476.2" y="1683.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="479.2" y="1694.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="476.2" y="1667.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="479.2" y="1678.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.07%)</title><rect x="476.2" y="1651.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="479.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.14%)</title><rect x="477.0" y="1891.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.0" y="1902.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Worker.run (2 samples, 0.14%)</title><rect x="477.0" y="1875.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.0" y="1886.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.run (2 samples, 0.14%)</title><rect x="477.0" y="1859.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.0" y="1870.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.run (2 samples, 0.14%)</title><rect x="477.0" y="1843.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.0" y="1854.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.run (2 samples, 0.14%)</title><rect x="477.0" y="1827.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.0" y="1838.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.07%)</title><rect x="477.0" y="1811.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.0" y="1822.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.07%)</title><rect x="477.0" y="1795.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.0" y="1806.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.toJson (1 samples, 0.07%)</title><rect x="477.0" y="1779.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.0" y="1790.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.toJson (1 samples, 0.07%)</title><rect x="477.0" y="1763.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.0" y="1774.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.agentServiceCheck (1 samples, 0.07%)</title><rect x="477.0" y="1747.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.0" y="1758.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.07%)</title><rect x="477.0" y="1731.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.0" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="477.0" y="1715.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="480.0" y="1726.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="477.0" y="1699.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="480.0" y="1710.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="477.0" y="1683.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="480.0" y="1694.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.07%)</title><rect x="477.0" y="1667.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="480.0" y="1678.0"></text>
</g>
<g>
<title>methodHandle::methodHandle(methodHandle const&amp;) (1 samples, 0.07%)</title><rect x="477.0" y="1651.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="480.0" y="1662.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.info (1 samples, 0.07%)</title><rect x="477.8" y="1811.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.8" y="1822.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.formatLog (1 samples, 0.07%)</title><rect x="477.8" y="1795.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.8" y="1806.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.alwaysLog (1 samples, 0.07%)</title><rect x="477.8" y="1779.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.8" y="1790.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory$Helper.log (1 samples, 0.07%)</title><rect x="477.8" y="1763.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.8" y="1774.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.log (1 samples, 0.07%)</title><rect x="477.8" y="1747.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.8" y="1758.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.log (1 samples, 0.07%)</title><rect x="477.8" y="1731.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.8" y="1742.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatHelper.log (1 samples, 0.07%)</title><rect x="477.8" y="1715.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.8" y="1726.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$NewDTFormatter.appendFormattedDate (1 samples, 0.07%)</title><rect x="477.8" y="1699.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethod (1 samples, 0.07%)</title><rect x="477.8" y="1683.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.8" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodImpl (1 samples, 0.07%)</title><rect x="477.8" y="1667.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.8" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.methodHandleInvokeLinkerMethod (1 samples, 0.07%)</title><rect x="477.8" y="1651.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.8" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.invokeHandleForm (1 samples, 0.07%)</title><rect x="477.8" y="1635.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.8" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.07%)</title><rect x="477.8" y="1619.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.8" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.07%)</title><rect x="477.8" y="1603.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.lookupPregenerated (1 samples, 0.07%)</title><rect x="477.8" y="1587.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.8" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.resolveFrom (1 samples, 0.07%)</title><rect x="477.8" y="1571.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.8" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrNull (1 samples, 0.07%)</title><rect x="477.8" y="1555.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.8" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.07%)</title><rect x="477.8" y="1539.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.8" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 0.07%)</title><rect x="477.8" y="1523.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/NoSuchMethodError.&lt;init&gt; (1 samples, 0.07%)</title><rect x="477.8" y="1507.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/IncompatibleClassChangeError.&lt;init&gt; (1 samples, 0.07%)</title><rect x="477.8" y="1491.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/LinkageError.&lt;init&gt; (1 samples, 0.07%)</title><rect x="477.8" y="1475.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/Error.&lt;init&gt; (1 samples, 0.07%)</title><rect x="477.8" y="1459.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.07%)</title><rect x="477.8" y="1443.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.07%)</title><rect x="477.8" y="1427.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.07%)</title><rect x="477.8" y="1411.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.8" y="1422.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.07%)</title><rect x="477.8" y="1395.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="480.8" y="1406.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.07%)</title><rect x="477.8" y="1379.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="480.8" y="1390.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.07%)</title><rect x="477.8" y="1363.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="480.8" y="1374.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="477.8" y="1347.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="480.8" y="1358.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.07%)</title><rect x="477.8" y="1331.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="480.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.21%)</title><rect x="478.6" y="1891.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLL.make (1 samples, 0.07%)</title><rect x="478.6" y="1875.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="478.6" y="1859.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.6" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.07%)</title><rect x="478.6" y="1843.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.6" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.07%)</title><rect x="478.6" y="1827.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.6" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.07%)</title><rect x="478.6" y="1811.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.6" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.07%)</title><rect x="478.6" y="1795.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.6" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.07%)</title><rect x="478.6" y="1779.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.6" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.07%)</title><rect x="478.6" y="1763.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.6" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.07%)</title><rect x="478.6" y="1747.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.6" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.07%)</title><rect x="478.6" y="1731.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.6" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (1 samples, 0.07%)</title><rect x="478.6" y="1715.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.6" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (1 samples, 0.07%)</title><rect x="478.6" y="1699.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (1 samples, 0.07%)</title><rect x="478.6" y="1683.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitReferenceCast (1 samples, 0.07%)</title><rect x="478.6" y="1667.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.6" y="1678.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/classes.jsa (1 samples, 0.07%)</title><rect x="478.6" y="1651.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="481.6" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLLLLII.make (1 samples, 0.07%)</title><rect x="479.4" y="1875.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLLLLLLII.&lt;init&gt; (1 samples, 0.07%)</title><rect x="479.4" y="1859.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.07%)</title><rect x="479.4" y="1843.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.07%)</title><rect x="479.4" y="1827.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.4" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.07%)</title><rect x="479.4" y="1811.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.4" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.07%)</title><rect x="479.4" y="1795.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.4" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.07%)</title><rect x="479.4" y="1779.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.4" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.07%)</title><rect x="479.4" y="1763.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.4" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.07%)</title><rect x="479.4" y="1747.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.4" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.07%)</title><rect x="479.4" y="1731.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (1 samples, 0.07%)</title><rect x="479.4" y="1715.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (1 samples, 0.07%)</title><rect x="479.4" y="1699.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.pop (1 samples, 0.07%)</title><rect x="479.4" y="1683.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getArgumentsAndReturnSizes (1 samples, 0.07%)</title><rect x="479.4" y="1667.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 0.07%)</title><rect x="480.2" y="1875.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (1 samples, 0.07%)</title><rect x="480.2" y="1859.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.2" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (1 samples, 0.07%)</title><rect x="480.2" y="1843.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.2" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (1 samples, 0.07%)</title><rect x="480.2" y="1827.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.2" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArguments (1 samples, 0.07%)</title><rect x="480.2" y="1811.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.2" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.foldArgumentsForm (1 samples, 0.07%)</title><rect x="480.2" y="1795.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.2" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1 samples, 0.07%)</title><rect x="480.2" y="1779.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.2" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (1 samples, 0.07%)</title><rect x="480.2" y="1763.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.2" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$NamedFunction.&lt;init&gt; (1 samples, 0.07%)</title><rect x="480.2" y="1747.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.2" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.basicInvoker (1 samples, 0.07%)</title><rect x="480.2" y="1731.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.2" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.07%)</title><rect x="480.2" y="1715.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.2" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.07%)</title><rect x="480.2" y="1699.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.2" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.07%)</title><rect x="480.2" y="1683.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.2" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.07%)</title><rect x="480.2" y="1667.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.2" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.07%)</title><rect x="480.2" y="1651.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (1 samples, 0.07%)</title><rect x="480.2" y="1635.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.insertParameterTypes (1 samples, 0.07%)</title><rect x="480.2" y="1619.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.2" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (1 samples, 0.07%)</title><rect x="481.0" y="1891.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.0" y="1902.0"></text>
</g>
<g>
<title>java/time/ZoneId.systemDefault (1 samples, 0.07%)</title><rect x="481.0" y="1875.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.0" y="1886.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.07%)</title><rect x="481.0" y="1859.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.0" y="1870.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.07%)</title><rect x="481.0" y="1843.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.0" y="1854.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.07%)</title><rect x="481.0" y="1827.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.0" y="1838.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.07%)</title><rect x="481.0" y="1811.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.0" y="1822.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.07%)</title><rect x="481.0" y="1795.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.0" y="1806.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.07%)</title><rect x="481.0" y="1779.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.0" y="1790.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.07%)</title><rect x="481.0" y="1763.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.0" y="1774.0"></text>
</g>
<g>
<title>java/time/ZoneRegion.ofId (1 samples, 0.07%)</title><rect x="481.0" y="1747.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.0" y="1758.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRulesProvider.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="481.0" y="1731.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.0" y="1742.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.iterator (1 samples, 0.07%)</title><rect x="481.0" y="1715.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.0" y="1726.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.newLookupIterator (1 samples, 0.07%)</title><rect x="481.0" y="1699.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.0" y="1710.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.&lt;init&gt; (1 samples, 0.07%)</title><rect x="481.0" y="1683.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.0" y="1694.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.iteratorFor (1 samples, 0.07%)</title><rect x="481.0" y="1667.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.0" y="1678.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.providers (1 samples, 0.07%)</title><rect x="481.0" y="1651.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.0" y="1662.0"></text>
</g>
<g>
<title>java/lang/System$2.getServicesCatalog (1 samples, 0.07%)</title><rect x="481.0" y="1635.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.0" y="1646.0"></text>
</g>
<g>
<title>java/lang/ModuleLayer.getServicesCatalog (1 samples, 0.07%)</title><rect x="481.0" y="1619.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.07%)</title><rect x="481.0" y="1603.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.07%)</title><rect x="481.0" y="1587.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.0" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.checkSymbolicClass (1 samples, 0.07%)</title><rect x="481.0" y="1571.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.0" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.isClassAccessible (1 samples, 0.07%)</title><rect x="481.0" y="1555.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.0" y="1566.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isClassAccessible (1 samples, 0.07%)</title><rect x="481.0" y="1539.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.0" y="1550.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.getClassModifiers (1 samples, 0.07%)</title><rect x="481.0" y="1523.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="484.0" y="1534.0"></text>
</g>
<g>
<title>start_thread (780 samples, 53.32%)</title><rect x="481.8" y="1891.0" width="629.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="484.8" y="1902.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (780 samples, 53.32%)</title><rect x="481.8" y="1875.0" width="629.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="484.8" y="1886.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (780 samples, 53.32%)</title><rect x="481.8" y="1859.0" width="629.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="484.8" y="1870.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.75%)</title><rect x="481.8" y="1843.0" width="8.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="484.8" y="1854.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (1 samples, 0.07%)</title><rect x="481.8" y="1827.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="484.8" y="1838.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.07%)</title><rect x="481.8" y="1811.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="484.8" y="1822.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (1 samples, 0.07%)</title><rect x="481.8" y="1795.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="484.8" y="1806.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (2 samples, 0.14%)</title><rect x="482.6" y="1827.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="485.6" y="1838.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (1 samples, 0.07%)</title><rect x="482.6" y="1811.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="485.6" y="1822.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (1 samples, 0.07%)</title><rect x="483.5" y="1811.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="486.5" y="1822.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.48%)</title><rect x="484.3" y="1827.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="487.3" y="1838.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.21%)</title><rect x="484.3" y="1811.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="487.3" y="1822.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.14%)</title><rect x="484.3" y="1795.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="487.3" y="1806.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.14%)</title><rect x="484.3" y="1779.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="487.3" y="1790.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="485.9" y="1795.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="488.9" y="1806.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.14%)</title><rect x="486.7" y="1811.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="489.7" y="1822.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.14%)</title><rect x="486.7" y="1795.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="489.7" y="1806.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.14%)</title><rect x="486.7" y="1779.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="489.7" y="1790.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.14%)</title><rect x="486.7" y="1763.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="489.7" y="1774.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.14%)</title><rect x="486.7" y="1747.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="489.7" y="1758.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.14%)</title><rect x="486.7" y="1731.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="489.7" y="1742.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.14%)</title><rect x="486.7" y="1715.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="489.7" y="1726.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.14%)</title><rect x="488.3" y="1811.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="491.3" y="1822.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.14%)</title><rect x="488.3" y="1795.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="491.3" y="1806.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.07%)</title><rect x="488.3" y="1779.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="491.3" y="1790.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.07%)</title><rect x="488.3" y="1763.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="491.3" y="1774.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.07%)</title><rect x="488.3" y="1747.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="491.3" y="1758.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.07%)</title><rect x="488.3" y="1731.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="491.3" y="1742.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.07%)</title><rect x="488.3" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="491.3" y="1726.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.07%)</title><rect x="488.3" y="1699.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="491.3" y="1710.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.07%)</title><rect x="489.1" y="1779.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="492.1" y="1790.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.07%)</title><rect x="489.1" y="1763.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="492.1" y="1774.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.07%)</title><rect x="489.1" y="1747.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="492.1" y="1758.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.07%)</title><rect x="489.1" y="1731.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="492.1" y="1742.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::HeapRegionGatheringOopClosure::do_oop(oopDesc**) (1 samples, 0.07%)</title><rect x="489.1" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="492.1" y="1726.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.07%)</title><rect x="489.1" y="1699.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="492.1" y="1710.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (1 samples, 0.07%)</title><rect x="489.9" y="1827.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="492.9" y="1838.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (1 samples, 0.07%)</title><rect x="489.9" y="1811.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="492.9" y="1822.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.07%)</title><rect x="489.9" y="1795.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="492.9" y="1806.0"></text>
</g>
<g>
<title>JavaThread::run() (767 samples, 52.43%)</title><rect x="490.7" y="1843.0" width="618.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="493.7" y="1854.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (756 samples, 51.67%)</title><rect x="490.7" y="1827.0" width="609.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="493.7" y="1838.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (754 samples, 51.54%)</title><rect x="490.7" y="1811.0" width="608.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="493.7" y="1822.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (649 samples, 44.36%)</title><rect x="490.7" y="1795.0" width="523.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="493.7" y="1806.0">C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (648 samples, 44.29%)</title><rect x="491.5" y="1779.0" width="522.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="494.5" y="1790.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, ..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.14%)</title><rect x="491.5" y="1763.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="494.5" y="1774.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.14%)</title><rect x="491.5" y="1747.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="494.5" y="1758.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.14%)</title><rect x="491.5" y="1731.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="494.5" y="1742.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.14%)</title><rect x="491.5" y="1715.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="494.5" y="1726.0"></text>
</g>
<g>
<title>ciType::make(BasicType) (1 samples, 0.07%)</title><rect x="491.5" y="1699.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="494.5" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.07%)</title><rect x="492.3" y="1699.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="495.3" y="1710.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.07%)</title><rect x="492.3" y="1683.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="495.3" y="1694.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.07%)</title><rect x="492.3" y="1667.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="495.3" y="1678.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.07%)</title><rect x="492.3" y="1651.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="495.3" y="1662.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.07%)</title><rect x="492.3" y="1635.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="495.3" y="1646.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.07%)</title><rect x="492.3" y="1619.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="495.3" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="492.3" y="1603.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="495.3" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="492.3" y="1587.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="495.3" y="1598.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.07%)</title><rect x="492.3" y="1571.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="495.3" y="1582.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.07%)</title><rect x="492.3" y="1555.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="495.3" y="1566.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.07%)</title><rect x="492.3" y="1539.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="495.3" y="1550.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.07%)</title><rect x="492.3" y="1523.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="495.3" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.07%)</title><rect x="492.3" y="1507.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="495.3" y="1518.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (413 samples, 28.23%)</title><rect x="493.1" y="1763.0" width="333.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="496.1" y="1774.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (20 samples, 1.37%)</title><rect x="493.1" y="1747.0" width="16.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="496.1" y="1758.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (12 samples, 0.82%)</title><rect x="493.1" y="1731.0" width="9.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="496.1" y="1742.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.14%)</title><rect x="501.2" y="1715.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="504.2" y="1726.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.07%)</title><rect x="502.0" y="1699.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="505.0" y="1710.0"></text>
</g>
<g>
<title>StartNode::bottom_type() const (1 samples, 0.07%)</title><rect x="502.0" y="1683.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="505.0" y="1694.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (6 samples, 0.41%)</title><rect x="502.8" y="1731.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="505.8" y="1742.0"></text>
</g>
<g>
<title>C2Compiler::initial_code_buffer_size(int) (1 samples, 0.07%)</title><rect x="502.8" y="1715.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="505.8" y="1726.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.07%)</title><rect x="503.6" y="1715.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="506.6" y="1726.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (4 samples, 0.27%)</title><rect x="504.4" y="1715.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="507.4" y="1726.0"></text>
</g>
<g>
<title>Block::code_alignment() const (1 samples, 0.07%)</title><rect x="506.8" y="1699.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="509.8" y="1710.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.14%)</title><rect x="507.6" y="1731.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="510.6" y="1742.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (9 samples, 0.62%)</title><rect x="509.3" y="1747.0" width="7.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="512.3" y="1758.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.21%)</title><rect x="510.1" y="1731.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="513.1" y="1742.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.07%)</title><rect x="510.1" y="1715.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="513.1" y="1726.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.07%)</title><rect x="510.9" y="1715.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="513.9" y="1726.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.07%)</title><rect x="510.9" y="1699.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="513.9" y="1710.0"></text>
</g>
<g>
<title>DebugInformationRecorder::dump_object_pool(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.07%)</title><rect x="511.7" y="1715.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="514.7" y="1726.0"></text>
</g>
<g>
<title>MachUEPNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.07%)</title><rect x="512.5" y="1731.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="515.5" y="1742.0"></text>
</g>
<g>
<title>Assembler::nop(int) (1 samples, 0.07%)</title><rect x="512.5" y="1715.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="515.5" y="1726.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (4 samples, 0.27%)</title><rect x="513.3" y="1731.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="516.3" y="1742.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.14%)</title><rect x="514.1" y="1715.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="517.1" y="1726.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.14%)</title><rect x="514.1" y="1699.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="517.1" y="1710.0"></text>
</g>
<g>
<title>JVMState::of_depth(int) const (1 samples, 0.07%)</title><rect x="515.7" y="1715.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="518.7" y="1726.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.07%)</title><rect x="516.5" y="1747.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="519.5" y="1758.0"></text>
</g>
<g>
<title>Matcher::match() (25 samples, 1.71%)</title><rect x="517.3" y="1747.0" width="20.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="520.3" y="1758.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.07%)</title><rect x="517.3" y="1731.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="520.3" y="1742.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.07%)</title><rect x="517.3" y="1715.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="520.3" y="1726.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (5 samples, 0.34%)</title><rect x="518.1" y="1731.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="521.1" y="1742.0"></text>
</g>
<g>
<title>ConNode::Opcode() const (1 samples, 0.07%)</title><rect x="519.7" y="1715.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="522.7" y="1726.0"></text>
</g>
<g>
<title>Matcher::clone_address_expressions(AddPNode*, Matcher::MStack&amp;, VectorSet&amp;) (1 samples, 0.07%)</title><rect x="520.6" y="1715.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="523.6" y="1726.0"></text>
</g>
<g>
<title>RootNode::Opcode() const (1 samples, 0.07%)</title><rect x="521.4" y="1715.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="524.4" y="1726.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (19 samples, 1.30%)</title><rect x="522.2" y="1731.0" width="15.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="525.2" y="1742.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (7 samples, 0.48%)</title><rect x="525.4" y="1715.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="528.4" y="1726.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.07%)</title><rect x="531.0" y="1715.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="534.0" y="1726.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.07%)</title><rect x="531.0" y="1699.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="534.0" y="1710.0"></text>
</g>
<g>
<title>Node::ins_req(unsigned int, Node*) (1 samples, 0.07%)</title><rect x="531.0" y="1683.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="534.0" y="1694.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.27%)</title><rect x="531.8" y="1715.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="534.8" y="1726.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (4 samples, 0.27%)</title><rect x="531.8" y="1699.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="534.8" y="1710.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (4 samples, 0.27%)</title><rect x="531.8" y="1683.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="534.8" y="1694.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (3 samples, 0.21%)</title><rect x="531.8" y="1667.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="534.8" y="1678.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.07%)</title><rect x="532.7" y="1651.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="535.7" y="1662.0"></text>
</g>
<g>
<title>TypeOopPtr::singleton() const (1 samples, 0.07%)</title><rect x="532.7" y="1635.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="535.7" y="1646.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.07%)</title><rect x="533.5" y="1651.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="536.5" y="1662.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.07%)</title><rect x="533.5" y="1635.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="536.5" y="1646.0"></text>
</g>
<g>
<title>State::_sub_Op_SubI(Node const*) (1 samples, 0.07%)</title><rect x="534.3" y="1667.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="537.3" y="1678.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.14%)</title><rect x="535.1" y="1715.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="538.1" y="1726.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="536.7" y="1715.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="539.7" y="1726.0"></text>
</g>
<g>
<title>Matcher::return_addr() const (1 samples, 0.07%)</title><rect x="537.5" y="1747.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="540.5" y="1758.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (3 samples, 0.21%)</title><rect x="538.3" y="1747.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="541.3" y="1758.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (3 samples, 0.21%)</title><rect x="538.3" y="1731.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="541.3" y="1742.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (40 samples, 2.73%)</title><rect x="540.7" y="1747.0" width="32.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="543.7" y="1758.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (3 samples, 0.21%)</title><rect x="540.7" y="1731.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="543.7" y="1742.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (2 samples, 0.14%)</title><rect x="541.5" y="1715.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="544.5" y="1726.0"></text>
</g>
<g>
<title>Block_Stack::most_frequent_successor(Block*) (1 samples, 0.07%)</title><rect x="542.3" y="1699.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="545.3" y="1710.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (1 samples, 0.07%)</title><rect x="543.1" y="1731.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="546.1" y="1742.0"></text>
</g>
<g>
<title>PhaseCFG::create_loop_tree() (1 samples, 0.07%)</title><rect x="543.1" y="1715.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="546.1" y="1726.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="543.1" y="1699.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="546.1" y="1710.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (36 samples, 2.46%)</title><rect x="543.9" y="1731.0" width="29.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="546.9" y="1742.0">Ph..</text>
</g>
<g>
<title>MachNode::oper_input_base() const (1 samples, 0.07%)</title><rect x="543.9" y="1715.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="546.9" y="1726.0"></text>
</g>
<g>
<title>PhaseCFG::call_catch_cleanup(Block*) (1 samples, 0.07%)</title><rect x="544.8" y="1715.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="547.8" y="1726.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.07%)</title><rect x="545.6" y="1715.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="548.6" y="1726.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (6 samples, 0.41%)</title><rect x="546.4" y="1715.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="549.4" y="1726.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (2 samples, 0.14%)</title><rect x="547.2" y="1699.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="550.2" y="1710.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (3 samples, 0.21%)</title><rect x="548.8" y="1699.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="551.8" y="1710.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.07%)</title><rect x="549.6" y="1683.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="552.6" y="1694.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (1 samples, 0.07%)</title><rect x="550.4" y="1683.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="553.4" y="1694.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="550.4" y="1667.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="553.4" y="1678.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="550.4" y="1651.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="553.4" y="1662.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="550.4" y="1635.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="553.4" y="1646.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (7 samples, 0.48%)</title><rect x="551.2" y="1715.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="554.2" y="1726.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.07%)</title><rect x="554.4" y="1699.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="557.4" y="1710.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.07%)</title><rect x="554.4" y="1683.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="557.4" y="1694.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (2 samples, 0.14%)</title><rect x="555.2" y="1699.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="558.2" y="1710.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (3 samples, 0.21%)</title><rect x="556.8" y="1715.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="559.8" y="1726.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.07%)</title><rect x="558.5" y="1699.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="561.5" y="1710.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.27%)</title><rect x="559.3" y="1715.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="562.3" y="1726.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (1 samples, 0.07%)</title><rect x="559.3" y="1699.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="562.3" y="1710.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.14%)</title><rect x="560.1" y="1699.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="563.1" y="1710.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.07%)</title><rect x="561.7" y="1699.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="564.7" y="1710.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.07%)</title><rect x="562.5" y="1715.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="565.5" y="1726.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.07%)</title><rect x="563.3" y="1715.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="566.3" y="1726.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (9 samples, 0.62%)</title><rect x="564.1" y="1715.0" width="7.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="567.1" y="1726.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.07%)</title><rect x="566.5" y="1699.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="569.5" y="1710.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.21%)</title><rect x="567.3" y="1699.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="570.3" y="1710.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.21%)</title><rect x="567.3" y="1683.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="570.3" y="1694.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (2 samples, 0.14%)</title><rect x="569.8" y="1699.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="572.8" y="1710.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.07%)</title><rect x="571.4" y="1715.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="574.4" y="1726.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.07%)</title><rect x="572.2" y="1715.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="575.2" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (314 samples, 21.46%)</title><rect x="573.0" y="1747.0" width="253.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="576.0" y="1758.0">PhaseChaitin::Register_Allocate()</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.07%)</title><rect x="573.0" y="1731.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="576.0" y="1742.0"></text>
</g>
<g>
<title>Compile::TracePhase::~TracePhase() (1 samples, 0.07%)</title><rect x="573.8" y="1731.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="576.8" y="1742.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.07%)</title><rect x="574.6" y="1731.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="577.6" y="1742.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.07%)</title><rect x="575.4" y="1731.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="578.4" y="1742.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.21%)</title><rect x="576.2" y="1731.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="579.2" y="1742.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.07%)</title><rect x="578.6" y="1731.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="581.6" y="1742.0"></text>
</g>
<g>
<title>MachNode::oper_input_base() const (1 samples, 0.07%)</title><rect x="579.4" y="1731.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="582.4" y="1742.0"></text>
</g>
<g>
<title>MachSpillCopyNode::oper_input_base() const (1 samples, 0.07%)</title><rect x="580.2" y="1731.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="583.2" y="1742.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (12 samples, 0.82%)</title><rect x="581.0" y="1731.0" width="9.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="584.0" y="1742.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (32 samples, 2.19%)</title><rect x="590.7" y="1731.0" width="25.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="593.7" y="1742.0">P..</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.27%)</title><rect x="596.4" y="1715.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="599.4" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (3 samples, 0.21%)</title><rect x="599.6" y="1715.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="602.6" y="1726.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (1 samples, 0.07%)</title><rect x="601.2" y="1699.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="604.2" y="1710.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (15 samples, 1.03%)</title><rect x="602.0" y="1715.0" width="12.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="605.0" y="1726.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.07%)</title><rect x="609.3" y="1699.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="612.3" y="1710.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.34%)</title><rect x="610.1" y="1699.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="613.1" y="1710.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (2 samples, 0.14%)</title><rect x="614.1" y="1715.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="617.1" y="1726.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.07%)</title><rect x="615.7" y="1715.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="618.7" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (20 samples, 1.37%)</title><rect x="616.5" y="1731.0" width="16.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="619.5" y="1742.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.48%)</title><rect x="618.1" y="1715.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="621.1" y="1726.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (11 samples, 0.75%)</title><rect x="623.8" y="1715.0" width="8.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="626.8" y="1726.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (8 samples, 0.55%)</title><rect x="626.2" y="1699.0" width="6.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="629.2" y="1710.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (38 samples, 2.60%)</title><rect x="632.7" y="1731.0" width="30.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="635.7" y="1742.0">Ph..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.07%)</title><rect x="657.7" y="1715.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="660.7" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::Union(Node const*, Node const*) (1 samples, 0.07%)</title><rect x="658.5" y="1715.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="661.5" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::new_lrg(Node const*, unsigned int) (1 samples, 0.07%)</title><rect x="659.3" y="1715.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="662.3" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (2 samples, 0.14%)</title><rect x="660.1" y="1715.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="663.1" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (2 samples, 0.14%)</title><rect x="660.1" y="1699.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="663.1" y="1710.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.07%)</title><rect x="660.9" y="1683.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="663.9" y="1694.0"></text>
</g>
<g>
<title>decodeKlass_not_nullNode::rule() const (1 samples, 0.07%)</title><rect x="661.7" y="1715.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="664.7" y="1726.0"></text>
</g>
<g>
<title>loadNNode::rule() const (1 samples, 0.07%)</title><rect x="662.5" y="1715.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="665.5" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (69 samples, 4.72%)</title><rect x="663.3" y="1731.0" width="55.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="666.3" y="1742.0">Phase..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (6 samples, 0.41%)</title><rect x="672.2" y="1715.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="675.2" y="1726.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.07%)</title><rect x="677.0" y="1715.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="680.0" y="1726.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.07%)</title><rect x="677.8" y="1715.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="680.8" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (4 samples, 0.27%)</title><rect x="678.6" y="1715.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="681.6" y="1726.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.07%)</title><rect x="679.4" y="1699.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="682.4" y="1710.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.07%)</title><rect x="680.3" y="1699.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="683.3" y="1710.0"></text>
</g>
<g>
<title>castP2XNode::rule() const (1 samples, 0.07%)</title><rect x="681.1" y="1699.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="684.1" y="1710.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (1 samples, 0.07%)</title><rect x="681.9" y="1715.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="684.9" y="1726.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.07%)</title><rect x="681.9" y="1699.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="684.9" y="1710.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (30 samples, 2.05%)</title><rect x="682.7" y="1715.0" width="24.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="685.7" y="1726.0">P..</text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.07%)</title><rect x="701.2" y="1699.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="704.2" y="1710.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.34%)</title><rect x="702.0" y="1699.0" width="4.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="705.0" y="1710.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="706.1" y="1699.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="709.1" y="1710.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (13 samples, 0.89%)</title><rect x="706.9" y="1715.0" width="10.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="709.9" y="1726.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.21%)</title><rect x="707.7" y="1699.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="710.7" y="1710.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.14%)</title><rect x="710.1" y="1699.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="713.1" y="1710.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (7 samples, 0.48%)</title><rect x="711.7" y="1699.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="714.7" y="1710.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.14%)</title><rect x="717.4" y="1715.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="720.4" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (5 samples, 0.34%)</title><rect x="719.0" y="1731.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="722.0" y="1742.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.27%)</title><rect x="719.8" y="1715.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="722.8" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (22 samples, 1.50%)</title><rect x="723.0" y="1731.0" width="17.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="726.0" y="1742.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.07%)</title><rect x="734.3" y="1715.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="737.3" y="1726.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.34%)</title><rect x="735.1" y="1715.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="738.1" y="1726.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.07%)</title><rect x="739.1" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="742.1" y="1726.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.07%)</title><rect x="739.9" y="1715.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="742.9" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.85] (8 samples, 0.55%)</title><rect x="740.7" y="1731.0" width="6.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="743.7" y="1742.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.21%)</title><rect x="743.2" y="1715.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="746.2" y="1726.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.07%)</title><rect x="745.6" y="1715.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="748.6" y="1726.0"></text>
</g>
<g>
<title>andI_rRegNode::cisc_RegMask() const (1 samples, 0.07%)</title><rect x="746.4" y="1715.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="749.4" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (4 samples, 0.27%)</title><rect x="747.2" y="1731.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="750.2" y="1742.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (33 samples, 2.26%)</title><rect x="750.4" y="1731.0" width="26.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="753.4" y="1742.0">P..</text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.07%)</title><rect x="762.5" y="1715.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="765.5" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (12 samples, 0.82%)</title><rect x="763.3" y="1715.0" width="9.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="766.3" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.07%)</title><rect x="772.2" y="1699.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="775.2" y="1710.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.07%)</title><rect x="772.2" y="1683.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="775.2" y="1694.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (5 samples, 0.34%)</title><rect x="773.0" y="1715.0" width="4.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="776.0" y="1726.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (3 samples, 0.21%)</title><rect x="777.0" y="1731.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="780.0" y="1742.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.07%)</title><rect x="778.7" y="1715.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="781.7" y="1726.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (9 samples, 0.62%)</title><rect x="779.5" y="1731.0" width="7.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="782.5" y="1742.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.07%)</title><rect x="779.5" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="782.5" y="1726.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (8 samples, 0.55%)</title><rect x="780.3" y="1715.0" width="6.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="783.3" y="1726.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (3 samples, 0.21%)</title><rect x="781.1" y="1699.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="784.1" y="1710.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.07%)</title><rect x="782.7" y="1683.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="785.7" y="1694.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.07%)</title><rect x="783.5" y="1699.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="786.5" y="1710.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (3 samples, 0.21%)</title><rect x="784.3" y="1699.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="787.3" y="1710.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.07%)</title><rect x="785.9" y="1683.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="788.9" y="1694.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (10 samples, 0.68%)</title><rect x="786.7" y="1731.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="789.7" y="1742.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.27%)</title><rect x="791.6" y="1715.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="794.6" y="1726.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (11 samples, 0.75%)</title><rect x="794.8" y="1731.0" width="8.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="797.8" y="1742.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.21%)</title><rect x="801.2" y="1715.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="804.2" y="1726.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.21%)</title><rect x="803.7" y="1731.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="806.7" y="1742.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.21%)</title><rect x="803.7" y="1715.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="806.7" y="1726.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (21 samples, 1.44%)</title><rect x="806.1" y="1731.0" width="16.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="809.1" y="1742.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.21%)</title><rect x="813.3" y="1715.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="816.3" y="1726.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (9 samples, 0.62%)</title><rect x="815.8" y="1715.0" width="7.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="818.8" y="1726.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.07%)</title><rect x="819.8" y="1699.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="822.8" y="1710.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.14%)</title><rect x="820.6" y="1699.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="823.6" y="1710.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.07%)</title><rect x="822.2" y="1699.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="825.2" y="1710.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.07%)</title><rect x="823.0" y="1731.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="826.0" y="1742.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.07%)</title><rect x="823.8" y="1731.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="826.8" y="1742.0"></text>
</g>
<g>
<title>RegMask::is_vector(unsigned int) (1 samples, 0.07%)</title><rect x="824.6" y="1731.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="827.6" y="1742.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.07%)</title><rect x="825.4" y="1731.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="828.4" y="1742.0"></text>
</g>
<g>
<title>Compile::Init(int) (1 samples, 0.07%)</title><rect x="826.2" y="1763.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="829.2" y="1774.0"></text>
</g>
<g>
<title>Compile::Optimize() (174 samples, 11.89%)</title><rect x="827.0" y="1763.0" width="140.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="830.0" y="1774.0">Compile::Optimize()</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (5 samples, 0.34%)</title><rect x="827.0" y="1747.0" width="4.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="830.0" y="1758.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (5 samples, 0.34%)</title><rect x="827.0" y="1731.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="830.0" y="1742.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.258] (1 samples, 0.07%)</title><rect x="829.5" y="1715.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="832.5" y="1726.0"></text>
</g>
<g>
<title>JVMState::interpreter_frame_size() const (1 samples, 0.07%)</title><rect x="830.3" y="1715.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="833.3" y="1726.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (70 samples, 4.78%)</title><rect x="831.1" y="1747.0" width="56.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="834.1" y="1758.0">Compil..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (70 samples, 4.78%)</title><rect x="831.1" y="1731.0" width="56.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="834.1" y="1742.0">PhaseI..</text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.07%)</title><rect x="831.1" y="1715.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="834.1" y="1726.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.07%)</title><rect x="831.1" y="1699.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="834.1" y="1710.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.07%)</title><rect x="831.1" y="1683.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="834.1" y="1694.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.07%)</title><rect x="831.1" y="1667.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="834.1" y="1678.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.07%)</title><rect x="831.1" y="1651.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="834.1" y="1662.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.14%)</title><rect x="831.9" y="1715.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="834.9" y="1726.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.07%)</title><rect x="831.9" y="1699.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="834.9" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.07%)</title><rect x="831.9" y="1683.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="834.9" y="1694.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.07%)</title><rect x="831.9" y="1667.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="834.9" y="1678.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.07%)</title><rect x="831.9" y="1651.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="834.9" y="1662.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.07%)</title><rect x="831.9" y="1635.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="834.9" y="1646.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="831.9" y="1619.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="834.9" y="1630.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="831.9" y="1603.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="834.9" y="1614.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="831.9" y="1587.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="834.9" y="1598.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.07%)</title><rect x="831.9" y="1571.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="834.9" y="1582.0"></text>
</g>
<g>
<title>TypeAryPtr::eq(Type const*) const (1 samples, 0.07%)</title><rect x="831.9" y="1555.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="834.9" y="1566.0"></text>
</g>
<g>
<title>PhaseIdealLoop::reorg_offsets(IdealLoopTree*) (1 samples, 0.07%)</title><rect x="832.7" y="1699.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="835.7" y="1710.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.07%)</title><rect x="833.5" y="1715.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="836.5" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.07%)</title><rect x="833.5" y="1699.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="836.5" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.07%)</title><rect x="833.5" y="1683.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="836.5" y="1694.0"></text>
</g>
<g>
<title>LShiftINode::Opcode() const (1 samples, 0.07%)</title><rect x="834.3" y="1715.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="837.3" y="1726.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.07%)</title><rect x="835.1" y="1715.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="838.1" y="1726.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.07%)</title><rect x="835.9" y="1715.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="838.9" y="1726.0"></text>
</g>
<g>
<title>ParmNode::is_CFG() const (1 samples, 0.07%)</title><rect x="836.7" y="1715.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="839.7" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (10 samples, 0.68%)</title><rect x="837.5" y="1715.0" width="8.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="840.5" y="1726.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (3 samples, 0.21%)</title><rect x="842.4" y="1699.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="845.4" y="1710.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.07%)</title><rect x="844.8" y="1699.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="847.8" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.41%)</title><rect x="845.6" y="1715.0" width="4.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="848.6" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.07%)</title><rect x="849.6" y="1699.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="852.6" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (20 samples, 1.37%)</title><rect x="850.4" y="1715.0" width="16.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="853.4" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (13 samples, 0.89%)</title><rect x="856.1" y="1699.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="859.1" y="1710.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.07%)</title><rect x="858.5" y="1683.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="861.5" y="1694.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.07%)</title><rect x="859.3" y="1683.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="862.3" y="1694.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.07%)</title><rect x="860.1" y="1683.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="863.1" y="1694.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (7 samples, 0.48%)</title><rect x="860.9" y="1683.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="863.9" y="1694.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.07%)</title><rect x="861.7" y="1667.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="864.7" y="1678.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="861.7" y="1651.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="864.7" y="1662.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="861.7" y="1635.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="864.7" y="1646.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="861.7" y="1619.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="864.7" y="1630.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.07%)</title><rect x="862.5" y="1667.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="865.5" y="1678.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.07%)</title><rect x="862.5" y="1651.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="865.5" y="1662.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (4 samples, 0.27%)</title><rect x="863.3" y="1667.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="866.3" y="1678.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.21%)</title><rect x="866.6" y="1715.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="869.6" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.34%)</title><rect x="869.0" y="1715.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="872.0" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (2 samples, 0.14%)</title><rect x="869.8" y="1699.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="872.8" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.07%)</title><rect x="870.6" y="1683.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="873.6" y="1694.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.14%)</title><rect x="871.4" y="1699.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="874.4" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.07%)</title><rect x="872.2" y="1683.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="875.2" y="1694.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (13 samples, 0.89%)</title><rect x="873.0" y="1715.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="876.0" y="1726.0"></text>
</g>
<g>
<title>ConvI2LNode::Value(PhaseGVN*) const (1 samples, 0.07%)</title><rect x="873.8" y="1699.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="876.8" y="1710.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (11 samples, 0.75%)</title><rect x="874.6" y="1699.0" width="8.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="877.6" y="1710.0"></text>
</g>
<g>
<title>AddPNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="875.4" y="1683.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="878.4" y="1694.0"></text>
</g>
<g>
<title>Node::set_req_X(unsigned int, Node*, PhaseIterGVN*) (1 samples, 0.07%)</title><rect x="875.4" y="1667.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="878.4" y="1678.0"></text>
</g>
<g>
<title>CastIINode::Value(PhaseGVN*) const (1 samples, 0.07%)</title><rect x="876.2" y="1683.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="879.2" y="1694.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="876.2" y="1667.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="879.2" y="1678.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.07%)</title><rect x="876.2" y="1651.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="879.2" y="1662.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.07%)</title><rect x="877.1" y="1683.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="880.1" y="1694.0"></text>
</g>
<g>
<title>MultiNode::hash() const (1 samples, 0.07%)</title><rect x="877.9" y="1683.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="880.9" y="1694.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.07%)</title><rect x="878.7" y="1683.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="881.7" y="1694.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.14%)</title><rect x="879.5" y="1683.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="882.5" y="1694.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.07%)</title><rect x="881.1" y="1683.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="884.1" y="1694.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.07%)</title><rect x="881.1" y="1667.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="884.1" y="1678.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="881.9" y="1683.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="884.9" y="1694.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="882.7" y="1683.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="885.7" y="1694.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.07%)</title><rect x="882.7" y="1667.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="885.7" y="1678.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.07%)</title><rect x="883.5" y="1715.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="886.5" y="1726.0"></text>
</g>
<g>
<title>SuperWord::transform_loop(IdealLoopTree*, bool) (4 samples, 0.27%)</title><rect x="884.3" y="1715.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="887.3" y="1726.0"></text>
</g>
<g>
<title>LoopNode::is_valid_counted_loop() const [clone .part.136] (1 samples, 0.07%)</title><rect x="884.3" y="1699.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="887.3" y="1710.0"></text>
</g>
<g>
<title>SuperWord::SLP_extract() (3 samples, 0.21%)</title><rect x="885.1" y="1699.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="888.1" y="1710.0"></text>
</g>
<g>
<title>SuperWord::find_adjacent_refs() (2 samples, 0.14%)</title><rect x="885.1" y="1683.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="888.1" y="1694.0"></text>
</g>
<g>
<title>SuperWord::find_align_to_ref(Node_List&amp;, int&amp;) (1 samples, 0.07%)</title><rect x="885.1" y="1667.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="888.1" y="1678.0"></text>
</g>
<g>
<title>SWPointer::SWPointer(MemNode*, SuperWord*, Node_Stack*, bool) [clone .constprop.203] (1 samples, 0.07%)</title><rect x="885.1" y="1651.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="888.1" y="1662.0"></text>
</g>
<g>
<title>SWPointer::scaled_iv_plus_offset(Node*) (1 samples, 0.07%)</title><rect x="885.1" y="1635.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="888.1" y="1646.0"></text>
</g>
<g>
<title>SWPointer::scaled_iv(Node*) [clone .part.145] (1 samples, 0.07%)</title><rect x="885.1" y="1619.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="888.1" y="1630.0"></text>
</g>
<g>
<title>SWPointer::scaled_iv_plus_offset(Node*) (1 samples, 0.07%)</title><rect x="885.1" y="1603.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="888.1" y="1614.0"></text>
</g>
<g>
<title>SuperWord::memory_alignment(MemNode*, int) (1 samples, 0.07%)</title><rect x="885.9" y="1667.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="888.9" y="1678.0"></text>
</g>
<g>
<title>SWPointer::SWPointer(MemNode*, SuperWord*, Node_Stack*, bool) [clone .constprop.203] (1 samples, 0.07%)</title><rect x="885.9" y="1651.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="888.9" y="1662.0"></text>
</g>
<g>
<title>SWPointer::scaled_iv_plus_offset(Node*) (1 samples, 0.07%)</title><rect x="885.9" y="1635.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="888.9" y="1646.0"></text>
</g>
<g>
<title>SWPointer::scaled_iv(Node*) [clone .part.145] (1 samples, 0.07%)</title><rect x="885.9" y="1619.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="888.9" y="1630.0"></text>
</g>
<g>
<title>SuperWord::output() (1 samples, 0.07%)</title><rect x="886.7" y="1683.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="889.7" y="1694.0"></text>
</g>
<g>
<title>CountedLoopReserveKit::CountedLoopReserveKit(PhaseIdealLoop*, IdealLoopTree*, bool) (1 samples, 0.07%)</title><rect x="886.7" y="1667.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="889.7" y="1678.0"></text>
</g>
<g>
<title>PhaseIdealLoop::create_reserve_version_of_loop(IdealLoopTree*, CountedLoopReserveKit*) (1 samples, 0.07%)</title><rect x="886.7" y="1651.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="889.7" y="1662.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.07%)</title><rect x="886.7" y="1635.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="889.7" y="1646.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.261] (1 samples, 0.07%)</title><rect x="887.5" y="1747.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="890.5" y="1758.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.07%)</title><rect x="887.5" y="1731.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="890.5" y="1742.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.07%)</title><rect x="887.5" y="1715.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="890.5" y="1726.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.07%)</title><rect x="887.5" y="1699.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="890.5" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (6 samples, 0.41%)</title><rect x="888.3" y="1747.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="891.3" y="1758.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (6 samples, 0.41%)</title><rect x="888.3" y="1731.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.3" y="1742.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.07%)</title><rect x="888.3" y="1715.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="891.3" y="1726.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.07%)</title><rect x="888.3" y="1699.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="891.3" y="1710.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.07%)</title><rect x="888.3" y="1683.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="891.3" y="1694.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.07%)</title><rect x="888.3" y="1667.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="891.3" y="1678.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.07%)</title><rect x="888.3" y="1651.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="891.3" y="1662.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.69] (1 samples, 0.07%)</title><rect x="888.3" y="1635.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="891.3" y="1646.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.07%)</title><rect x="888.3" y="1619.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="891.3" y="1630.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.07%)</title><rect x="888.3" y="1603.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="891.3" y="1614.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.07%)</title><rect x="888.3" y="1587.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="891.3" y="1598.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.07%)</title><rect x="888.3" y="1571.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="891.3" y="1582.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.69] (1 samples, 0.07%)</title><rect x="888.3" y="1555.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="891.3" y="1566.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.07%)</title><rect x="888.3" y="1539.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="891.3" y="1550.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.07%)</title><rect x="888.3" y="1523.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="891.3" y="1534.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.07%)</title><rect x="888.3" y="1507.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="891.3" y="1518.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.07%)</title><rect x="888.3" y="1491.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="891.3" y="1502.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.69] (1 samples, 0.07%)</title><rect x="888.3" y="1475.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="891.3" y="1486.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.07%)</title><rect x="888.3" y="1459.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.3" y="1470.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="888.3" y="1443.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="891.3" y="1454.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="888.3" y="1427.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.3" y="1438.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.07%)</title><rect x="888.3" y="1411.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="891.3" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.07%)</title><rect x="888.3" y="1395.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="891.3" y="1406.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="888.3" y="1379.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="891.3" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.07%)</title><rect x="888.3" y="1363.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="891.3" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.07%)</title><rect x="888.3" y="1347.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="891.3" y="1358.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.07%)</title><rect x="888.3" y="1331.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="891.3" y="1342.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.07%)</title><rect x="888.3" y="1315.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="891.3" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (3 samples, 0.21%)</title><rect x="889.2" y="1715.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="892.2" y="1726.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.274] (2 samples, 0.14%)</title><rect x="889.2" y="1699.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="892.2" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::add_edge(PointsToNode*, PointsToNode*) [clone .isra.196] (1 samples, 0.07%)</title><rect x="890.0" y="1683.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="893.0" y="1694.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (1 samples, 0.07%)</title><rect x="890.8" y="1699.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="893.8" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (1 samples, 0.07%)</title><rect x="891.6" y="1715.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="894.6" y="1726.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.07%)</title><rect x="891.6" y="1699.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="894.6" y="1710.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.07%)</title><rect x="891.6" y="1683.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="894.6" y="1694.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.07%)</title><rect x="891.6" y="1667.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="894.6" y="1678.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.07%)</title><rect x="891.6" y="1651.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="894.6" y="1662.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.69] (1 samples, 0.07%)</title><rect x="891.6" y="1635.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="894.6" y="1646.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.07%)</title><rect x="891.6" y="1619.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="894.6" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.07%)</title><rect x="891.6" y="1603.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="894.6" y="1614.0"></text>
</g>
<g>
<title>ciConstantPoolCache::get(int) (1 samples, 0.07%)</title><rect x="891.6" y="1587.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="894.6" y="1598.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.07%)</title><rect x="892.4" y="1715.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="895.4" y="1726.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.34%)</title><rect x="893.2" y="1747.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="896.2" y="1758.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="896.4" y="1731.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="899.4" y="1742.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.07%)</title><rect x="896.4" y="1715.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="899.4" y="1726.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.07%)</title><rect x="896.4" y="1699.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="899.4" y="1710.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.07%)</title><rect x="897.2" y="1747.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="900.2" y="1758.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.07%)</title><rect x="897.2" y="1731.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="900.2" y="1742.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, LoopOptsMode) (1 samples, 0.07%)</title><rect x="898.0" y="1747.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="901.0" y="1758.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.07%)</title><rect x="898.0" y="1731.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="901.0" y="1742.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (55 samples, 3.76%)</title><rect x="898.8" y="1747.0" width="44.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="901.8" y="1758.0">Phas..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.07%)</title><rect x="898.8" y="1731.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="901.8" y="1742.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.07%)</title><rect x="898.8" y="1715.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="901.8" y="1726.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.07%)</title><rect x="898.8" y="1699.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="901.8" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.07%)</title><rect x="898.8" y="1683.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="901.8" y="1694.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.07%)</title><rect x="898.8" y="1667.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="901.8" y="1678.0"></text>
</g>
<g>
<title>LoadNKlassNode::Opcode() const (1 samples, 0.07%)</title><rect x="898.8" y="1651.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="901.8" y="1662.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.07%)</title><rect x="899.6" y="1731.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="902.6" y="1742.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.07%)</title><rect x="899.6" y="1715.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="902.6" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.07%)</title><rect x="899.6" y="1699.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.6" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::rc_predicate(IdealLoopTree*, Node*, int, Node*, Node*, Node*, int, Node*, bool, bool&amp;) (1 samples, 0.07%)</title><rect x="899.6" y="1683.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="902.6" y="1694.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.07%)</title><rect x="899.6" y="1667.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="902.6" y="1678.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (8 samples, 0.55%)</title><rect x="900.4" y="1731.0" width="6.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="1742.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (3 samples, 0.21%)</title><rect x="904.5" y="1715.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="907.5" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.27%)</title><rect x="906.9" y="1731.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="909.9" y="1742.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.07%)</title><rect x="909.3" y="1715.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="912.3" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (20 samples, 1.37%)</title><rect x="910.1" y="1731.0" width="16.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="913.1" y="1742.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (11 samples, 0.75%)</title><rect x="917.4" y="1715.0" width="8.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="920.4" y="1726.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.07%)</title><rect x="919.8" y="1699.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="922.8" y="1710.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.07%)</title><rect x="920.6" y="1699.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="923.6" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (6 samples, 0.41%)</title><rect x="921.4" y="1699.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="924.4" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (3 samples, 0.21%)</title><rect x="922.2" y="1683.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="925.2" y="1694.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (3 samples, 0.21%)</title><rect x="922.2" y="1667.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="925.2" y="1678.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.14%)</title><rect x="924.6" y="1683.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="927.6" y="1694.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.07%)</title><rect x="926.3" y="1731.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="929.3" y="1742.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (4 samples, 0.27%)</title><rect x="927.1" y="1731.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="930.1" y="1742.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.14%)</title><rect x="928.7" y="1715.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="931.7" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.34%)</title><rect x="930.3" y="1731.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="933.3" y="1742.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (2 samples, 0.14%)</title><rect x="931.1" y="1715.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="934.1" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.14%)</title><rect x="932.7" y="1715.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="935.7" y="1726.0"></text>
</g>
<g>
<title>PhaseIdealLoop::conditional_move(Node*) (1 samples, 0.07%)</title><rect x="932.7" y="1699.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="935.7" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.07%)</title><rect x="933.5" y="1699.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="936.5" y="1710.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.07%)</title><rect x="934.3" y="1731.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="937.3" y="1742.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 0.62%)</title><rect x="935.1" y="1731.0" width="7.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="938.1" y="1742.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 0.55%)</title><rect x="935.1" y="1715.0" width="6.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="938.1" y="1726.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.07%)</title><rect x="935.1" y="1699.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="938.1" y="1710.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="935.1" y="1683.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="938.1" y="1694.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="935.1" y="1667.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="938.1" y="1678.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.07%)</title><rect x="935.1" y="1651.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="938.1" y="1662.0"></text>
</g>
<g>
<title>TypeInt::eq(Type const*) const (1 samples, 0.07%)</title><rect x="935.1" y="1635.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="938.1" y="1646.0"></text>
</g>
<g>
<title>HaltNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="935.9" y="1699.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="938.9" y="1710.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="935.9" y="1683.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="938.9" y="1694.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="936.7" y="1699.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="939.7" y="1710.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.14%)</title><rect x="937.5" y="1699.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="940.5" y="1710.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.07%)</title><rect x="938.4" y="1683.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="941.4" y="1694.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.14%)</title><rect x="939.2" y="1699.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="942.2" y="1710.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.14%)</title><rect x="939.2" y="1683.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="942.2" y="1694.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.07%)</title><rect x="939.2" y="1667.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="942.2" y="1678.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.07%)</title><rect x="940.0" y="1667.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="943.0" y="1678.0"></text>
</g>
<g>
<title>VectorSet::operator[](unsigned int) const (1 samples, 0.07%)</title><rect x="940.0" y="1651.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="943.0" y="1662.0"></text>
</g>
<g>
<title>ThreadLocalNode::Opcode() const (1 samples, 0.07%)</title><rect x="940.8" y="1699.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="943.8" y="1710.0"></text>
</g>
<g>
<title>Type::singleton() const (1 samples, 0.07%)</title><rect x="941.6" y="1715.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="944.6" y="1726.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.07%)</title><rect x="942.4" y="1731.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="945.4" y="1742.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.07%)</title><rect x="943.2" y="1747.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="946.2" y="1758.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (25 samples, 1.71%)</title><rect x="944.0" y="1747.0" width="20.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="947.0" y="1758.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (25 samples, 1.71%)</title><rect x="944.0" y="1731.0" width="20.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="947.0" y="1742.0"></text>
</g>
<g>
<title>ConvI2LNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="944.8" y="1715.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="947.8" y="1726.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="944.8" y="1699.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.8" y="1710.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="944.8" y="1683.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="947.8" y="1694.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.14%)</title><rect x="945.6" y="1715.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="948.6" y="1726.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.07%)</title><rect x="945.6" y="1699.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="948.6" y="1710.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.07%)</title><rect x="946.4" y="1699.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="949.4" y="1710.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.07%)</title><rect x="946.4" y="1683.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="949.4" y="1694.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.07%)</title><rect x="946.4" y="1667.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="949.4" y="1678.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 0.14%)</title><rect x="947.2" y="1715.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="950.2" y="1726.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (2 samples, 0.14%)</title><rect x="947.2" y="1699.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="950.2" y="1710.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.07%)</title><rect x="947.2" y="1683.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="950.2" y="1694.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="947.2" y="1667.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="950.2" y="1678.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="947.2" y="1651.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="950.2" y="1662.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="947.2" y="1635.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="950.2" y="1646.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.07%)</title><rect x="948.0" y="1683.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="951.0" y="1694.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.07%)</title><rect x="948.0" y="1667.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="951.0" y="1678.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.07%)</title><rect x="948.8" y="1715.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="951.8" y="1726.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.07%)</title><rect x="948.8" y="1699.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="951.8" y="1710.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.07%)</title><rect x="948.8" y="1683.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="951.8" y="1694.0"></text>
</g>
<g>
<title>PhaseTransform::find_long_type(Node*) (1 samples, 0.07%)</title><rect x="948.8" y="1667.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="951.8" y="1678.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="949.6" y="1715.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="952.6" y="1726.0"></text>
</g>
<g>
<title>Node::destruct() (2 samples, 0.14%)</title><rect x="950.5" y="1715.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="953.5" y="1726.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.14%)</title><rect x="952.1" y="1715.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="955.1" y="1726.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.07%)</title><rect x="952.9" y="1699.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="955.9" y="1710.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.07%)</title><rect x="952.9" y="1683.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="955.9" y="1694.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.21%)</title><rect x="953.7" y="1715.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="956.7" y="1726.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.07%)</title><rect x="955.3" y="1699.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="958.3" y="1710.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.07%)</title><rect x="955.3" y="1683.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="958.3" y="1694.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.07%)</title><rect x="956.1" y="1715.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="959.1" y="1726.0"></text>
</g>
<g>
<title>ProjNode::hash() const (1 samples, 0.07%)</title><rect x="956.9" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="959.9" y="1726.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (5 samples, 0.34%)</title><rect x="957.7" y="1715.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="960.7" y="1726.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.21%)</title><rect x="957.7" y="1699.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="960.7" y="1710.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (3 samples, 0.21%)</title><rect x="957.7" y="1683.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="960.7" y="1694.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (3 samples, 0.21%)</title><rect x="957.7" y="1667.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="960.7" y="1678.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.14%)</title><rect x="960.1" y="1699.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="963.1" y="1710.0"></text>
</g>
<g>
<title>StoreCMNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="961.7" y="1715.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="964.7" y="1726.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="961.7" y="1699.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="964.7" y="1710.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.14%)</title><rect x="962.5" y="1715.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="965.5" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (2 samples, 0.14%)</title><rect x="962.5" y="1699.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="965.5" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.14%)</title><rect x="962.5" y="1683.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="965.5" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.14%)</title><rect x="962.5" y="1667.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="965.5" y="1678.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.14%)</title><rect x="962.5" y="1651.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="965.5" y="1662.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.14%)</title><rect x="962.5" y="1635.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="965.5" y="1646.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1619.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="965.5" y="1630.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1603.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.5" y="1614.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1587.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="965.5" y="1598.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1571.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="965.5" y="1582.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1555.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="965.5" y="1566.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1539.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="965.5" y="1550.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1523.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="965.5" y="1534.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1507.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="965.5" y="1518.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1491.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="965.5" y="1502.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1475.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.5" y="1486.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.07%)</title><rect x="962.5" y="1459.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="965.5" y="1470.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.07%)</title><rect x="962.5" y="1443.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="965.5" y="1454.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.07%)</title><rect x="963.4" y="1619.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="966.4" y="1630.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.07%)</title><rect x="963.4" y="1603.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="966.4" y="1614.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (3 samples, 0.21%)</title><rect x="964.2" y="1747.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="967.2" y="1758.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.14%)</title><rect x="964.2" y="1731.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="967.2" y="1742.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.14%)</title><rect x="964.2" y="1715.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="967.2" y="1726.0"></text>
</g>
<g>
<title>ConvI2LNode::Value(PhaseGVN*) const (1 samples, 0.07%)</title><rect x="964.2" y="1699.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="967.2" y="1710.0"></text>
</g>
<g>
<title>TypeLong::make(long, long, int) (1 samples, 0.07%)</title><rect x="964.2" y="1683.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="967.2" y="1694.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="965.0" y="1699.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.0" y="1710.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="965.0" y="1683.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="968.0" y="1694.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.07%)</title><rect x="965.8" y="1731.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="968.8" y="1742.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.07%)</title><rect x="965.8" y="1715.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.8" y="1726.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.07%)</title><rect x="965.8" y="1699.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="968.8" y="1710.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.07%)</title><rect x="966.6" y="1747.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="969.6" y="1758.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.07%)</title><rect x="966.6" y="1731.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="969.6" y="1742.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (3 samples, 0.21%)</title><rect x="967.4" y="1763.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="970.4" y="1774.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (2 samples, 0.14%)</title><rect x="967.4" y="1747.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="970.4" y="1758.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="967.4" y="1731.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="970.4" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="967.4" y="1715.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="970.4" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="967.4" y="1699.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="970.4" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="967.4" y="1683.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="970.4" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="967.4" y="1667.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="970.4" y="1678.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="967.4" y="1651.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="970.4" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="967.4" y="1635.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="970.4" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="967.4" y="1619.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="970.4" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="967.4" y="1603.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="967.4" y="1587.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="970.4" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="967.4" y="1571.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="970.4" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="967.4" y="1555.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="970.4" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="967.4" y="1539.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="970.4" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="967.4" y="1523.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="970.4" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="967.4" y="1507.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="967.4" y="1491.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="970.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="967.4" y="1475.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="970.4" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="967.4" y="1459.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="970.4" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="967.4" y="1443.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.4" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="967.4" y="1427.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="970.4" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="967.4" y="1411.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="970.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="967.4" y="1395.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="970.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="967.4" y="1379.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="970.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="967.4" y="1363.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="970.4" y="1374.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.07%)</title><rect x="967.4" y="1347.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="970.4" y="1358.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="968.2" y="1459.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="971.2" y="1470.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="968.2" y="1443.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="971.2" y="1454.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.07%)</title><rect x="968.2" y="1427.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="971.2" y="1438.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="968.2" y="1411.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="971.2" y="1422.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="968.2" y="1395.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.2" y="1406.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.07%)</title><rect x="968.2" y="1379.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="971.2" y="1390.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.07%)</title><rect x="968.2" y="1363.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="971.2" y="1374.0"></text>
</g>
<g>
<title>IdealKit::copy_cvstate() (1 samples, 0.07%)</title><rect x="968.2" y="1347.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="971.2" y="1358.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.07%)</title><rect x="968.2" y="1331.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="971.2" y="1342.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.07%)</title><rect x="968.2" y="1315.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="971.2" y="1326.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.07%)</title><rect x="969.0" y="1747.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="972.0" y="1758.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.07%)</title><rect x="969.0" y="1731.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="972.0" y="1742.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (1 samples, 0.07%)</title><rect x="969.8" y="1763.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="972.8" y="1774.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (5 samples, 0.34%)</title><rect x="970.6" y="1763.0" width="4.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="973.6" y="1774.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.07%)</title><rect x="974.6" y="1763.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="977.6" y="1774.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.07%)</title><rect x="974.6" y="1747.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="977.6" y="1758.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="974.6" y="1731.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="977.6" y="1742.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="974.6" y="1715.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="977.6" y="1726.0"></text>
</g>
<g>
<title>Node::add_out(Node*) (1 samples, 0.07%)</title><rect x="975.5" y="1763.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="978.5" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (43 samples, 2.94%)</title><rect x="976.3" y="1763.0" width="34.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="979.3" y="1774.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (43 samples, 2.94%)</title><rect x="976.3" y="1747.0" width="34.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="979.3" y="1758.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (43 samples, 2.94%)</title><rect x="976.3" y="1731.0" width="34.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="979.3" y="1742.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (43 samples, 2.94%)</title><rect x="976.3" y="1715.0" width="34.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="979.3" y="1726.0">Pa..</text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.07%)</title><rect x="976.3" y="1699.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="979.3" y="1710.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.07%)</title><rect x="977.1" y="1699.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="980.1" y="1710.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.07%)</title><rect x="977.1" y="1683.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="980.1" y="1694.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.07%)</title><rect x="977.1" y="1667.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="980.1" y="1678.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="977.1" y="1651.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.1" y="1662.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="977.1" y="1635.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="980.1" y="1646.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.07%)</title><rect x="977.1" y="1619.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="980.1" y="1630.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="977.1" y="1603.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="980.1" y="1614.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="977.1" y="1587.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.1" y="1598.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="977.1" y="1571.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="980.1" y="1582.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.07%)</title><rect x="977.1" y="1555.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="980.1" y="1566.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.07%)</title><rect x="977.1" y="1539.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="980.1" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (41 samples, 2.80%)</title><rect x="977.9" y="1699.0" width="33.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="980.9" y="1710.0">Pa..</text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.07%)</title><rect x="978.7" y="1683.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="981.7" y="1694.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const*&amp;) (1 samples, 0.07%)</title><rect x="978.7" y="1667.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="981.7" y="1678.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.07%)</title><rect x="978.7" y="1651.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="981.7" y="1662.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.07%)</title><rect x="978.7" y="1635.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="981.7" y="1646.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.07%)</title><rect x="978.7" y="1619.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="981.7" y="1630.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.07%)</title><rect x="978.7" y="1603.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="981.7" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (38 samples, 2.60%)</title><rect x="979.5" y="1683.0" width="30.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="982.5" y="1694.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (4 samples, 0.27%)</title><rect x="979.5" y="1667.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="982.5" y="1678.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.14%)</title><rect x="979.5" y="1651.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="982.5" y="1662.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.07%)</title><rect x="979.5" y="1635.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="982.5" y="1646.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.07%)</title><rect x="979.5" y="1619.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="982.5" y="1630.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.07%)</title><rect x="979.5" y="1603.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="982.5" y="1614.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.07%)</title><rect x="980.3" y="1635.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="983.3" y="1646.0"></text>
</g>
<g>
<title>ciMethod::is_boxing_method() const (1 samples, 0.07%)</title><rect x="981.1" y="1651.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="984.1" y="1662.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.07%)</title><rect x="981.9" y="1651.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="984.9" y="1662.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.07%)</title><rect x="981.9" y="1635.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="984.9" y="1646.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.07%)</title><rect x="981.9" y="1619.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="984.9" y="1630.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="981.9" y="1603.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.9" y="1614.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.07%)</title><rect x="981.9" y="1587.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="984.9" y="1598.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.07%)</title><rect x="981.9" y="1571.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="984.9" y="1582.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.07%)</title><rect x="981.9" y="1555.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="984.9" y="1566.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.07%)</title><rect x="981.9" y="1539.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="984.9" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (17 samples, 1.16%)</title><rect x="982.7" y="1667.0" width="13.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="985.7" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (17 samples, 1.16%)</title><rect x="982.7" y="1651.0" width="13.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="985.7" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 1.16%)</title><rect x="982.7" y="1635.0" width="13.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="985.7" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 1.16%)</title><rect x="982.7" y="1619.0" width="13.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="985.7" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 1.16%)</title><rect x="982.7" y="1603.0" width="13.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="985.7" y="1614.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.07%)</title><rect x="982.7" y="1587.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.7" y="1598.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const*&amp;) (1 samples, 0.07%)</title><rect x="982.7" y="1571.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="985.7" y="1582.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.07%)</title><rect x="982.7" y="1555.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="985.7" y="1566.0"></text>
</g>
<g>
<title>PhaseTransform::intcon(int) (1 samples, 0.07%)</title><rect x="982.7" y="1539.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="985.7" y="1550.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="982.7" y="1523.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="985.7" y="1534.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="982.7" y="1507.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="985.7" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (15 samples, 1.03%)</title><rect x="983.5" y="1587.0" width="12.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="986.5" y="1598.0"></text>
</g>
<g>
<title>Parse::can_not_compile_call_site(ciMethod*, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="983.5" y="1571.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="986.5" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.82%)</title><rect x="984.3" y="1571.0" width="9.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="987.3" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.82%)</title><rect x="984.3" y="1555.0" width="9.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.3" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.82%)</title><rect x="984.3" y="1539.0" width="9.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.3" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.82%)</title><rect x="984.3" y="1523.0" width="9.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="987.3" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.82%)</title><rect x="984.3" y="1507.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="987.3" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.75%)</title><rect x="984.3" y="1491.0" width="8.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="987.3" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.75%)</title><rect x="984.3" y="1475.0" width="8.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="987.3" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.75%)</title><rect x="984.3" y="1459.0" width="8.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="987.3" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.75%)</title><rect x="984.3" y="1443.0" width="8.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="987.3" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.75%)</title><rect x="984.3" y="1427.0" width="8.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.3" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.75%)</title><rect x="984.3" y="1411.0" width="8.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="987.3" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.62%)</title><rect x="984.3" y="1395.0" width="7.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.3" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.55%)</title><rect x="984.3" y="1379.0" width="6.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="987.3" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.55%)</title><rect x="984.3" y="1363.0" width="6.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="987.3" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.55%)</title><rect x="984.3" y="1347.0" width="6.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="987.3" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.55%)</title><rect x="984.3" y="1331.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="987.3" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.55%)</title><rect x="984.3" y="1315.0" width="6.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="987.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.41%)</title><rect x="984.3" y="1299.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="987.3" y="1310.0"></text>
</g>
<g>
<title>GraphKit::transfer_exceptions_into_jvms() (1 samples, 0.07%)</title><rect x="984.3" y="1283.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="987.3" y="1294.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.07%)</title><rect x="985.1" y="1283.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="988.1" y="1294.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.07%)</title><rect x="985.1" y="1267.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="988.1" y="1278.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_arraycopy() (1 samples, 0.07%)</title><rect x="985.1" y="1251.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="988.1" y="1262.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.07%)</title><rect x="985.1" y="1235.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="988.1" y="1246.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.07%)</title><rect x="985.1" y="1219.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="988.1" y="1230.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="985.1" y="1203.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="988.1" y="1214.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="985.1" y="1187.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="988.1" y="1198.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.07%)</title><rect x="985.1" y="1171.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="988.1" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.27%)</title><rect x="985.9" y="1283.0" width="3.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="988.9" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.27%)</title><rect x="985.9" y="1267.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="988.9" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.27%)</title><rect x="985.9" y="1251.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="988.9" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.27%)</title><rect x="985.9" y="1235.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="988.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.27%)</title><rect x="985.9" y="1219.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="988.9" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.27%)</title><rect x="985.9" y="1203.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="988.9" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.27%)</title><rect x="985.9" y="1187.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="988.9" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.27%)</title><rect x="985.9" y="1171.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="988.9" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.27%)</title><rect x="985.9" y="1155.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.21%)</title><rect x="985.9" y="1139.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="988.9" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.21%)</title><rect x="985.9" y="1123.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="988.9" y="1134.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.07%)</title><rect x="985.9" y="1107.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="988.9" y="1118.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.07%)</title><rect x="985.9" y="1091.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="988.9" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="986.7" y="1107.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="989.7" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="986.7" y="1091.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="989.7" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="986.7" y="1075.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="989.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="986.7" y="1059.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.7" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="986.7" y="1043.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="989.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="986.7" y="1027.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="989.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="986.7" y="1011.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="989.7" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="986.7" y="995.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="989.7" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="986.7" y="979.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="989.7" y="990.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.07%)</title><rect x="986.7" y="963.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="989.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="987.6" y="963.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="987.6" y="947.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="990.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="987.6" y="931.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="990.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="987.6" y="915.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.6" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="987.6" y="899.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.6" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="987.6" y="883.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="990.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.07%)</title><rect x="987.6" y="867.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.6" y="878.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="987.6" y="851.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.6" y="862.0"></text>
</g>
<g>
<title>MulNode::Value(PhaseGVN*) const (1 samples, 0.07%)</title><rect x="987.6" y="835.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="990.6" y="846.0"></text>
</g>
<g>
<title>TypeInt::make(int, int, int) (1 samples, 0.07%)</title><rect x="987.6" y="819.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="990.6" y="830.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.07%)</title><rect x="988.4" y="1139.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="991.4" y="1150.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="988.4" y="1123.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="991.4" y="1134.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="988.4" y="1107.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="991.4" y="1118.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.07%)</title><rect x="988.4" y="1091.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="991.4" y="1102.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="989.2" y="1299.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="992.2" y="1310.0"></text>
</g>
<g>
<title>AddINode::Identity(PhaseGVN*) (1 samples, 0.07%)</title><rect x="989.2" y="1283.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="992.2" y="1294.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="989.2" y="1267.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="992.2" y="1278.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.07%)</title><rect x="989.2" y="1251.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="992.2" y="1262.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.07%)</title><rect x="989.2" y="1235.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="992.2" y="1246.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_appendix() (1 samples, 0.07%)</title><rect x="990.0" y="1299.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="993.0" y="1310.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="990.8" y="1379.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="993.8" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="990.8" y="1363.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="993.8" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="990.8" y="1347.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="993.8" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="990.8" y="1331.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="993.8" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="990.8" y="1315.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="993.8" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="990.8" y="1299.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.8" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="990.8" y="1283.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="993.8" y="1294.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.07%)</title><rect x="990.8" y="1267.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="993.8" y="1278.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.07%)</title><rect x="990.8" y="1251.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="993.8" y="1262.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.07%)</title><rect x="990.8" y="1235.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="993.8" y="1246.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.07%)</title><rect x="990.8" y="1219.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="993.8" y="1230.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.14%)</title><rect x="991.6" y="1395.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="994.6" y="1406.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.14%)</title><rect x="991.6" y="1379.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="994.6" y="1390.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.14%)</title><rect x="991.6" y="1363.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="994.6" y="1374.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.14%)</title><rect x="991.6" y="1347.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="994.6" y="1358.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.14%)</title><rect x="991.6" y="1331.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.6" y="1342.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (2 samples, 0.14%)</title><rect x="991.6" y="1315.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="994.6" y="1326.0"></text>
</g>
<g>
<title>IdealKit::make_leaf_call(TypeFunc const*, unsigned char*, char const*, Node*, Node*, Node*, Node*) (1 samples, 0.07%)</title><rect x="991.6" y="1299.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="994.6" y="1310.0"></text>
</g>
<g>
<title>PhaseTransform::longcon(long) (1 samples, 0.07%)</title><rect x="992.4" y="1299.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="995.4" y="1310.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.07%)</title><rect x="992.4" y="1283.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.4" y="1294.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.07%)</title><rect x="992.4" y="1267.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="995.4" y="1278.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.07%)</title><rect x="993.2" y="1491.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="996.2" y="1502.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.07%)</title><rect x="993.2" y="1475.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.2" y="1486.0"></text>
</g>
<g>
<title>GraphKit::stopped() (1 samples, 0.07%)</title><rect x="993.2" y="1459.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="996.2" y="1470.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="994.0" y="1571.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="997.0" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="994.0" y="1555.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.0" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="994.0" y="1539.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.0" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="994.0" y="1523.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="997.0" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="994.0" y="1507.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="997.0" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="994.0" y="1491.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="997.0" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="994.0" y="1475.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="997.0" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="994.0" y="1459.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.0" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="994.0" y="1443.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="997.0" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="994.0" y="1427.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="997.0" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="994.0" y="1411.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="997.0" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="994.0" y="1395.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="997.0" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="994.0" y="1379.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="997.0" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="994.0" y="1363.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="997.0" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="994.0" y="1347.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="997.0" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="994.0" y="1331.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="997.0" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="994.0" y="1315.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="997.0" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="994.0" y="1299.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="997.0" y="1310.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.07%)</title><rect x="994.0" y="1283.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="997.0" y="1294.0"></text>
</g>
<g>
<title>ReplacedNodes::record(Node*, Node*) (1 samples, 0.07%)</title><rect x="994.0" y="1267.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="997.0" y="1278.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.07%)</title><rect x="994.0" y="1251.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="997.0" y="1262.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="994.8" y="1283.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.8" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="994.8" y="1267.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.8" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="994.8" y="1251.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="997.8" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="994.8" y="1235.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="997.8" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="994.8" y="1219.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="997.8" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="994.8" y="1203.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.8" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="994.8" y="1187.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="997.8" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="994.8" y="1171.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="997.8" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="994.8" y="1155.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="997.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="994.8" y="1139.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="997.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="994.8" y="1123.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="997.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="994.8" y="1107.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="997.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="994.8" y="1091.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="997.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="994.8" y="1075.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="997.8" y="1086.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.07%)</title><rect x="994.8" y="1059.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="997.8" y="1070.0"></text>
</g>
<g>
<title>TypeAry::make(Type const*, TypeInt const*, bool) (1 samples, 0.07%)</title><rect x="994.8" y="1043.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="997.8" y="1054.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="994.8" y="1027.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="997.8" y="1038.0"></text>
</g>
<g>
<title>TypeNarrowOop::isa_same_narrowptr(Type const*) const (1 samples, 0.07%)</title><rect x="994.8" y="1011.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="995.6" y="1587.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="998.6" y="1598.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="995.6" y="1571.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="998.6" y="1582.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.07%)</title><rect x="995.6" y="1555.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="998.6" y="1566.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="995.6" y="1539.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="998.6" y="1550.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="995.6" y="1523.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="998.6" y="1534.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.07%)</title><rect x="995.6" y="1507.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="998.6" y="1518.0"></text>
</g>
<g>
<title>IdealKit::load(Node*, Node*, Type const*, BasicType, int, bool) (1 samples, 0.07%)</title><rect x="995.6" y="1491.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="998.6" y="1502.0"></text>
</g>
<g>
<title>LoadPNode::Opcode() const (1 samples, 0.07%)</title><rect x="995.6" y="1475.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="998.6" y="1486.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (16 samples, 1.09%)</title><rect x="996.4" y="1667.0" width="12.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="999.4" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.82%)</title><rect x="996.4" y="1651.0" width="9.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="999.4" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.82%)</title><rect x="996.4" y="1635.0" width="9.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="999.4" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.82%)</title><rect x="996.4" y="1619.0" width="9.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="999.4" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.82%)</title><rect x="996.4" y="1603.0" width="9.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="999.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.82%)</title><rect x="996.4" y="1587.0" width="9.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="999.4" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.82%)</title><rect x="996.4" y="1571.0" width="9.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="999.4" y="1582.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.07%)</title><rect x="996.4" y="1555.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="999.4" y="1566.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.07%)</title><rect x="996.4" y="1539.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="999.4" y="1550.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_reference_get() (1 samples, 0.07%)</title><rect x="996.4" y="1523.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="999.4" y="1534.0"></text>
</g>
<g>
<title>ciSymbol::make(char const*) (1 samples, 0.07%)</title><rect x="996.4" y="1507.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="999.4" y="1518.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.07%)</title><rect x="996.4" y="1491.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="999.4" y="1502.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.07%)</title><rect x="996.4" y="1475.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="999.4" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.62%)</title><rect x="997.2" y="1555.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.2" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.62%)</title><rect x="997.2" y="1539.0" width="7.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.2" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.62%)</title><rect x="997.2" y="1523.0" width="7.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1000.2" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.62%)</title><rect x="997.2" y="1507.0" width="7.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1000.2" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.62%)</title><rect x="997.2" y="1491.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1000.2" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.62%)</title><rect x="997.2" y="1475.0" width="7.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1000.2" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.48%)</title><rect x="997.2" y="1459.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1000.2" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.48%)</title><rect x="997.2" y="1443.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1000.2" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.48%)</title><rect x="997.2" y="1427.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1000.2" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.48%)</title><rect x="997.2" y="1411.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1000.2" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.48%)</title><rect x="997.2" y="1395.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1000.2" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.48%)</title><rect x="997.2" y="1379.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.2" y="1390.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.07%)</title><rect x="997.2" y="1363.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1000.2" y="1374.0"></text>
</g>
<g>
<title>InlineTree::find_subtree_from_root(InlineTree*, JVMState*, ciMethod*) (1 samples, 0.07%)</title><rect x="997.2" y="1347.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1000.2" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.41%)</title><rect x="998.0" y="1363.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1001.0" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.41%)</title><rect x="998.0" y="1347.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1001.0" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.41%)</title><rect x="998.0" y="1331.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1001.0" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.34%)</title><rect x="998.0" y="1315.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1001.0" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.34%)</title><rect x="998.0" y="1299.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1001.0" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.34%)</title><rect x="998.0" y="1283.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.0" y="1294.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.07%)</title><rect x="998.0" y="1267.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1001.0" y="1278.0"></text>
</g>
<g>
<title>WarmCallInfo::is_cold() const (1 samples, 0.07%)</title><rect x="998.0" y="1251.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1001.0" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="998.8" y="1267.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1001.8" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="998.8" y="1251.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.8" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="998.8" y="1235.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.8" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="998.8" y="1219.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1001.8" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="998.8" y="1203.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1001.8" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="998.8" y="1187.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1001.8" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="998.8" y="1171.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.8" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="998.8" y="1155.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1001.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="998.8" y="1139.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1001.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="998.8" y="1123.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.8" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="998.8" y="1107.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1001.8" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="998.8" y="1091.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1001.8" y="1102.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="998.8" y="1075.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1001.8" y="1086.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="998.8" y="1059.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1001.8" y="1070.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.07%)</title><rect x="998.8" y="1043.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.8" y="1054.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.21%)</title><rect x="999.7" y="1267.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1002.7" y="1278.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.21%)</title><rect x="999.7" y="1251.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.7" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.21%)</title><rect x="999.7" y="1235.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1002.7" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.21%)</title><rect x="999.7" y="1219.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="999.7" y="1203.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="999.7" y="1187.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1002.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="999.7" y="1171.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="999.7" y="1155.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.7" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="999.7" y="1139.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.7" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="999.7" y="1123.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1002.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="999.7" y="1107.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1002.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="999.7" y="1091.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1002.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="999.7" y="1075.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1002.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="999.7" y="1059.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.7" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="999.7" y="1043.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.7" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="999.7" y="1027.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="999.7" y="1011.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1002.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="999.7" y="995.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="999.7" y="979.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="999.7" y="963.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1002.7" y="974.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.07%)</title><rect x="999.7" y="947.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1002.7" y="958.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.07%)</title><rect x="999.7" y="931.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1002.7" y="942.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.07%)</title><rect x="999.7" y="915.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.7" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.07%)</title><rect x="999.7" y="899.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.7" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.07%)</title><rect x="999.7" y="883.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.7" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.07%)</title><rect x="999.7" y="867.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.7" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.07%)</title><rect x="999.7" y="851.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1002.7" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.07%)</title><rect x="999.7" y="835.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1002.7" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.07%)</title><rect x="999.7" y="819.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1002.7" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.07%)</title><rect x="999.7" y="803.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1002.7" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.07%)</title><rect x="999.7" y="787.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1002.7" y="798.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.07%)</title><rect x="999.7" y="771.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1002.7" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="999.7" y="755.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.7" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.07%)</title><rect x="999.7" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.7" y="750.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.07%)</title><rect x="999.7" y="723.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1002.7" y="734.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.07%)</title><rect x="999.7" y="707.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1002.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="947.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1003.5" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="931.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1003.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="915.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1003.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="899.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="883.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1003.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="867.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.5" y="878.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="851.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1003.5" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="835.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1003.5" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="819.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1003.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1003.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="787.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1003.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="771.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1003.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="755.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1003.5" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="739.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1003.5" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="723.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1003.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="707.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1003.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="691.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1003.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="675.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="659.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1003.5" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="643.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1003.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="627.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="611.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1003.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="595.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1003.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="579.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1003.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="563.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1003.5" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="547.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1003.5" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="531.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1003.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="515.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1003.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="499.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1003.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="483.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1003.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="467.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1003.5" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="451.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1003.5" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="435.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1003.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="419.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1003.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="403.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1003.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="387.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1003.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="371.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1003.5" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="355.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1003.5" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="339.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="323.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1003.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="307.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1003.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="291.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1003.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="275.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1003.5" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="259.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1003.5" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="243.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1003.5" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="227.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1003.5" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="211.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1003.5" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="195.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1003.5" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1000.5" y="179.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1003.5" y="190.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1000.5" y="163.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1003.5" y="174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1000.5" y="147.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.5" y="158.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1000.5" y="131.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1003.5" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1000.5" y="115.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1003.5" y="126.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1000.5" y="99.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1003.5" y="110.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.07%)</title><rect x="1000.5" y="83.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1003.5" y="94.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.07%)</title><rect x="1000.5" y="67.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1003.5" y="78.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.07%)</title><rect x="1000.5" y="51.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1003.5" y="62.0"></text>
</g>
<g>
<title>GraphKit::set_predefined_output_for_runtime_call(Node*, Node*, TypePtr const*) (1 samples, 0.07%)</title><rect x="1000.5" y="35.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1003.5" y="46.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.07%)</title><rect x="1001.3" y="1203.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1004.3" y="1214.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="1001.3" y="1187.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1004.3" y="1198.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.07%)</title><rect x="1002.1" y="1315.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.1" y="1326.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="1002.1" y="1299.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1005.1" y="1310.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.07%)</title><rect x="1002.1" y="1283.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1005.1" y="1294.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1002.9" y="1459.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1005.9" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1002.9" y="1443.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1005.9" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1002.9" y="1427.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1005.9" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1002.9" y="1411.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1005.9" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1002.9" y="1395.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1005.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1002.9" y="1379.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1005.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1002.9" y="1363.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1005.9" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1002.9" y="1347.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1005.9" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1002.9" y="1331.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1005.9" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1002.9" y="1315.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1005.9" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1002.9" y="1299.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1005.9" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1002.9" y="1283.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.9" y="1294.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="1002.9" y="1267.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1005.9" y="1278.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.07%)</title><rect x="1002.9" y="1251.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1005.9" y="1262.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1003.7" y="1443.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.7" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1003.7" y="1427.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.7" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1003.7" y="1411.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1006.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1003.7" y="1395.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1006.7" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1003.7" y="1379.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1003.7" y="1363.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1006.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1003.7" y="1347.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1006.7" y="1358.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1003.7" y="1331.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1006.7" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1003.7" y="1315.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1006.7" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1003.7" y="1299.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1006.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1003.7" y="1283.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1006.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1003.7" y="1267.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1006.7" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1003.7" y="1251.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.7" y="1262.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="1003.7" y="1235.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1006.7" y="1246.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="1003.7" y="1219.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1006.7" y="1230.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.07%)</title><rect x="1003.7" y="1203.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1006.7" y="1214.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="1003.7" y="1187.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.7" y="1198.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.07%)</title><rect x="1003.7" y="1171.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1006.7" y="1182.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.07%)</title><rect x="1003.7" y="1155.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1006.7" y="1166.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.07%)</title><rect x="1003.7" y="1139.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1006.7" y="1150.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.07%)</title><rect x="1003.7" y="1123.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1006.7" y="1134.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.07%)</title><rect x="1003.7" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1006.7" y="1118.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1004.5" y="1555.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1007.5" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1004.5" y="1539.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1007.5" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="1004.5" y="1523.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1007.5" y="1534.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.07%)</title><rect x="1004.5" y="1507.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1007.5" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1004.5" y="1491.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1007.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1005.3" y="1507.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1008.3" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1005.3" y="1491.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1008.3" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1005.3" y="1475.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1008.3" y="1486.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="1005.3" y="1459.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1008.3" y="1470.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="1005.3" y="1443.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1008.3" y="1454.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="1005.3" y="1427.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.3" y="1438.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.07%)</title><rect x="1005.3" y="1411.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1008.3" y="1422.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="1005.3" y="1395.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1008.3" y="1406.0"></text>
</g>
<g>
<title>TypeInstPtr::xdual() const (1 samples, 0.07%)</title><rect x="1005.3" y="1379.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.3" y="1390.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.27%)</title><rect x="1006.1" y="1651.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1009.1" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.27%)</title><rect x="1006.1" y="1635.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.1" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.27%)</title><rect x="1006.1" y="1619.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1009.1" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.27%)</title><rect x="1006.1" y="1603.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.1" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.27%)</title><rect x="1006.1" y="1587.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1009.1" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.27%)</title><rect x="1006.1" y="1571.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.1" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.27%)</title><rect x="1006.1" y="1555.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1009.1" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.27%)</title><rect x="1006.1" y="1539.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.1" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.27%)</title><rect x="1006.1" y="1523.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.1" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.27%)</title><rect x="1006.1" y="1507.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.1" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.27%)</title><rect x="1006.1" y="1491.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.1" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.27%)</title><rect x="1006.1" y="1475.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1009.1" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.27%)</title><rect x="1006.1" y="1459.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1009.1" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1006.1" y="1443.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1009.1" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="1006.1" y="1427.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1009.1" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="1006.1" y="1411.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.1" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="1006.1" y="1395.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1009.1" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="1006.1" y="1379.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1009.1" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="1006.1" y="1363.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.1" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1006.1" y="1347.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.1" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="1006.1" y="1331.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.1" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="1006.1" y="1315.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.1" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="1006.1" y="1299.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.1" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="1006.1" y="1283.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.1" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="1006.1" y="1267.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1009.1" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1006.1" y="1251.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.1" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="1006.1" y="1235.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1009.1" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="1006.1" y="1219.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1009.1" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="1006.1" y="1203.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.1" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="1006.1" y="1187.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.1" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="1006.1" y="1171.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.1" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1006.1" y="1155.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.1" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="1006.1" y="1139.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="1006.1" y="1123.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1009.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="1006.1" y="1107.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="1006.1" y="1091.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.1" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="1006.1" y="1075.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.1" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1006.1" y="1059.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.1" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="1006.1" y="1043.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1009.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="1006.1" y="1027.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1009.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="1006.1" y="1011.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1009.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="1006.1" y="995.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1006.1" y="979.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.1" y="990.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.07%)</title><rect x="1006.1" y="963.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.1" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1006.1" y="947.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1009.1" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1006.1" y="931.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.1" y="942.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.07%)</title><rect x="1006.1" y="915.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1009.1" y="926.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.07%)</title><rect x="1006.1" y="899.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1009.1" y="910.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1006.1" y="883.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.1" y="894.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.07%)</title><rect x="1006.1" y="867.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.1" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.07%)</title><rect x="1006.1" y="851.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1009.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.07%)</title><rect x="1006.1" y="835.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1009.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="1006.9" y="979.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1009.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="1006.9" y="963.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.9" y="974.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.07%)</title><rect x="1006.9" y="947.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.9" y="958.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="1006.9" y="931.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.9" y="942.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="1006.9" y="915.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.9" y="926.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.07%)</title><rect x="1006.9" y="899.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.9" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1007.7" y="1443.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.7" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.14%)</title><rect x="1007.7" y="1427.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1010.7" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.14%)</title><rect x="1007.7" y="1411.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.14%)</title><rect x="1007.7" y="1395.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1010.7" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.14%)</title><rect x="1007.7" y="1379.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1010.7" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.14%)</title><rect x="1007.7" y="1363.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.14%)</title><rect x="1007.7" y="1347.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1010.7" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1007.7" y="1331.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1010.7" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1007.7" y="1315.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1010.7" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1007.7" y="1299.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1010.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1007.7" y="1283.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1010.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1007.7" y="1267.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1010.7" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1007.7" y="1251.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1010.7" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1007.7" y="1235.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.7" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1007.7" y="1219.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1010.7" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1007.7" y="1203.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1007.7" y="1187.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1010.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1007.7" y="1171.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1007.7" y="1155.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.7" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1007.7" y="1139.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1010.7" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1007.7" y="1123.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1010.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1007.7" y="1107.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1010.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1007.7" y="1091.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1007.7" y="1075.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1010.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1007.7" y="1059.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1010.7" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1007.7" y="1043.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.7" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1007.7" y="1027.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1010.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1007.7" y="1011.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1010.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1007.7" y="995.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1010.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1007.7" y="979.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1010.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1007.7" y="963.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.7" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1007.7" y="947.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1010.7" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1007.7" y="931.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1010.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1007.7" y="915.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1007.7" y="899.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1010.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1007.7" y="883.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1010.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1007.7" y="867.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1010.7" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1007.7" y="851.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1010.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1007.7" y="835.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1010.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.07%)</title><rect x="1007.7" y="819.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1010.7" y="830.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="1007.7" y="803.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.7" y="814.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.07%)</title><rect x="1007.7" y="787.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1010.7" y="798.0"></text>
</g>
<g>
<title>Type::filter_helper(Type const*, bool) const (1 samples, 0.07%)</title><rect x="1007.7" y="771.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1010.7" y="782.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.07%)</title><rect x="1007.7" y="755.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1010.7" y="766.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="1331.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1011.5" y="1342.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="1315.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1011.5" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="1299.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="1283.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1011.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="1267.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="1251.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1011.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="1235.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1011.5" y="1246.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="1219.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1011.5" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="1203.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1011.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="1187.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="1171.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="1155.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.5" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="1139.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1011.5" y="1150.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="1123.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.5" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="1107.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1011.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="1091.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1011.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="1075.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="1059.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1011.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="1043.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.5" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="1027.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1011.5" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="1011.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1011.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="995.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1011.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="979.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1011.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="963.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1011.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="947.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1011.5" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="931.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.5" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="915.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1011.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="899.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="883.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="867.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1011.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="851.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1011.5" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="835.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1011.5" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="819.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1011.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="803.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="787.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="771.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="755.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.5" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="739.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1011.5" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="723.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1011.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="707.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="691.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1011.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="675.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1011.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="659.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1011.5" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="643.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="627.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="611.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="595.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="579.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1011.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="563.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1011.5" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="547.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.5" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="531.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1011.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="515.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="499.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1011.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="483.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1011.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="467.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1011.5" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="451.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1011.5" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="435.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1011.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="419.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="403.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1011.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="387.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="371.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1011.5" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="355.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.5" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.07%)</title><rect x="1008.5" y="339.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1011.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="323.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1011.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.07%)</title><rect x="1008.5" y="307.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1011.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.07%)</title><rect x="1008.5" y="291.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.07%)</title><rect x="1008.5" y="275.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.5" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="259.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.5" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.07%)</title><rect x="1008.5" y="243.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1011.5" y="254.0"></text>
</g>
<g>
<title>Parse::init_blocks() (1 samples, 0.07%)</title><rect x="1008.5" y="227.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.5" y="238.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.07%)</title><rect x="1009.3" y="1667.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1012.3" y="1678.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1009.3" y="1651.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1012.3" y="1662.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1009.3" y="1635.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1012.3" y="1646.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1009.3" y="1619.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1012.3" y="1630.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.07%)</title><rect x="1009.3" y="1603.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1012.3" y="1614.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.07%)</title><rect x="1010.1" y="1683.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1013.1" y="1694.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.07%)</title><rect x="1010.1" y="1667.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1013.1" y="1678.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.07%)</title><rect x="1010.1" y="1651.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1013.1" y="1662.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="1010.1" y="1635.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1013.1" y="1646.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.07%)</title><rect x="1010.1" y="1619.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1013.1" y="1630.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.07%)</title><rect x="1010.1" y="1603.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1013.1" y="1614.0"></text>
</g>
<g>
<title>G1BarrierSetC2::g1_mark_card(GraphKit*, IdealKit&amp;, Node*, Node*, unsigned int, Node*, Node*, Node*, TypeFunc const*) const (1 samples, 0.07%)</title><rect x="1010.1" y="1587.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1013.1" y="1598.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="1010.1" y="1571.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1013.1" y="1582.0"></text>
</g>
<g>
<title>AddPNode::Ideal(PhaseGVN*, bool) (1 samples, 0.07%)</title><rect x="1010.1" y="1555.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1013.1" y="1566.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.07%)</title><rect x="1010.1" y="1539.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1013.1" y="1550.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.14%)</title><rect x="1010.9" y="1763.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1013.9" y="1774.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.07%)</title><rect x="1011.7" y="1747.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1014.7" y="1758.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (2 samples, 0.14%)</title><rect x="1012.6" y="1763.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1015.6" y="1774.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.07%)</title><rect x="1013.4" y="1747.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1016.4" y="1758.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.07%)</title><rect x="1013.4" y="1731.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.4" y="1742.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (2 samples, 0.14%)</title><rect x="1014.2" y="1795.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1017.2" y="1806.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (1 samples, 0.07%)</title><rect x="1014.2" y="1779.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.2" y="1790.0"></text>
</g>
<g>
<title>Symbol::as_klass_external_name() const (1 samples, 0.07%)</title><rect x="1014.2" y="1763.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1017.2" y="1774.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.07%)</title><rect x="1015.0" y="1779.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1018.0" y="1790.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.07%)</title><rect x="1015.0" y="1763.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1018.0" y="1774.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (99 samples, 6.77%)</title><rect x="1015.8" y="1795.0" width="79.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1018.8" y="1806.0">Compiler:..</text>
</g>
<g>
<title>Chunk::next_chop() (2 samples, 0.14%)</title><rect x="1015.8" y="1779.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1018.8" y="1790.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="1016.6" y="1763.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1019.6" y="1774.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (97 samples, 6.63%)</title><rect x="1017.4" y="1779.0" width="78.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.4" y="1790.0">Compilati..</text>
</g>
<g>
<title>Compilation::compile_method() (97 samples, 6.63%)</title><rect x="1017.4" y="1763.0" width="78.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.4" y="1774.0">Compilati..</text>
</g>
<g>
<title>Compilation::compile_java_method() (92 samples, 6.29%)</title><rect x="1017.4" y="1747.0" width="74.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.4" y="1758.0">Compilat..</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (36 samples, 2.46%)</title><rect x="1017.4" y="1731.0" width="29.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1020.4" y="1742.0">Co..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (6 samples, 0.41%)</title><rect x="1017.4" y="1715.0" width="4.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1020.4" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (4 samples, 0.27%)</title><rect x="1017.4" y="1699.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1020.4" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (4 samples, 0.27%)</title><rect x="1017.4" y="1683.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1020.4" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.14%)</title><rect x="1017.4" y="1667.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1020.4" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1651.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.4" y="1662.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1635.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.4" y="1646.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1619.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1020.4" y="1630.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1603.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.4" y="1614.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1587.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1020.4" y="1598.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1571.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1020.4" y="1582.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1555.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1020.4" y="1566.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1539.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.4" y="1550.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1523.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.4" y="1534.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1507.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1020.4" y="1518.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1491.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1020.4" y="1502.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1475.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.4" y="1486.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1459.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1020.4" y="1470.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1017.4" y="1443.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1020.4" y="1454.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.07%)</title><rect x="1017.4" y="1427.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.4" y="1438.0"></text>
</g>
<g>
<title>StateSplit::state_values_do(ValueVisitor*) (1 samples, 0.07%)</title><rect x="1018.2" y="1651.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1021.2" y="1662.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (2 samples, 0.14%)</title><rect x="1019.0" y="1667.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1022.0" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.07%)</title><rect x="1019.0" y="1651.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1022.0" y="1662.0"></text>
</g>
<g>
<title>Invoke::state_values_do(ValueVisitor*) (1 samples, 0.07%)</title><rect x="1019.8" y="1651.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1022.8" y="1662.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.07%)</title><rect x="1019.8" y="1635.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1022.8" y="1646.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (2 samples, 0.14%)</title><rect x="1020.6" y="1699.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1023.6" y="1710.0"></text>
</g>
<g>
<title>Constant::hash() const (1 samples, 0.07%)</title><rect x="1021.4" y="1683.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1024.4" y="1694.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (27 samples, 1.85%)</title><rect x="1022.2" y="1715.0" width="21.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1025.2" y="1726.0">I..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (27 samples, 1.85%)</title><rect x="1022.2" y="1699.0" width="21.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1025.2" y="1710.0">I..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (27 samples, 1.85%)</title><rect x="1022.2" y="1683.0" width="21.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1025.2" y="1694.0">G..</text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.07%)</title><rect x="1022.2" y="1667.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1025.2" y="1678.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.07%)</title><rect x="1023.0" y="1667.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1026.0" y="1678.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.07%)</title><rect x="1023.0" y="1651.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1026.0" y="1662.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.07%)</title><rect x="1023.0" y="1635.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1026.0" y="1646.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.07%)</title><rect x="1023.0" y="1619.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1026.0" y="1630.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.07%)</title><rect x="1023.0" y="1603.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1026.0" y="1614.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.07%)</title><rect x="1023.0" y="1587.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1026.0" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (24 samples, 1.64%)</title><rect x="1023.8" y="1667.0" width="19.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1026.8" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (23 samples, 1.57%)</title><rect x="1023.8" y="1651.0" width="18.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1026.8" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.21%)</title><rect x="1023.8" y="1635.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1026.8" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::copy_state_for_exception_with_bci(int) (1 samples, 0.07%)</title><rect x="1023.8" y="1619.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1026.8" y="1630.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.07%)</title><rect x="1023.8" y="1603.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1026.8" y="1614.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1023.8" y="1587.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1026.8" y="1598.0"></text>
</g>
<g>
<title>Instruction::as_Phi() (1 samples, 0.07%)</title><rect x="1024.7" y="1619.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1027.7" y="1630.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.07%)</title><rect x="1025.5" y="1619.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1028.5" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.07%)</title><rect x="1025.5" y="1603.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1028.5" y="1614.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.07%)</title><rect x="1025.5" y="1587.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1028.5" y="1598.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.07%)</title><rect x="1025.5" y="1571.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1028.5" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.07%)</title><rect x="1026.3" y="1635.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1029.3" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::check_cast(int) (1 samples, 0.07%)</title><rect x="1027.1" y="1635.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1030.1" y="1646.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.07%)</title><rect x="1027.1" y="1619.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1030.1" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1027.1" y="1603.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1030.1" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.07%)</title><rect x="1027.1" y="1587.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1030.1" y="1598.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.07%)</title><rect x="1027.1" y="1571.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1030.1" y="1582.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.07%)</title><rect x="1027.1" y="1555.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1030.1" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (16 samples, 1.09%)</title><rect x="1027.9" y="1635.0" width="12.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1030.9" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.07%)</title><rect x="1027.9" y="1619.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.9" y="1630.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.07%)</title><rect x="1027.9" y="1603.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1030.9" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.07%)</title><rect x="1028.7" y="1619.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1031.7" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::null_check(Instruction*) (1 samples, 0.07%)</title><rect x="1029.5" y="1619.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1032.5" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::copy_state_for_exception_with_bci(int) (1 samples, 0.07%)</title><rect x="1029.5" y="1603.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1032.5" y="1614.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.68%)</title><rect x="1030.3" y="1619.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1033.3" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 0.68%)</title><rect x="1030.3" y="1603.0" width="8.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1033.3" y="1614.0"></text>
</g>
<g>
<title>Compilation::profile_calls() (1 samples, 0.07%)</title><rect x="1030.3" y="1587.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1033.3" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.07%)</title><rect x="1031.1" y="1587.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1034.1" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.55%)</title><rect x="1031.9" y="1587.0" width="6.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1034.9" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.55%)</title><rect x="1031.9" y="1571.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1034.9" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (4 samples, 0.27%)</title><rect x="1031.9" y="1555.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1034.9" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.07%)</title><rect x="1031.9" y="1539.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1034.9" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::handle_exception(Instruction*) (1 samples, 0.07%)</title><rect x="1031.9" y="1523.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1034.9" y="1534.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1031.9" y="1507.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1034.9" y="1518.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (3 samples, 0.21%)</title><rect x="1032.7" y="1539.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1035.7" y="1550.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (3 samples, 0.21%)</title><rect x="1032.7" y="1523.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1035.7" y="1534.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (3 samples, 0.21%)</title><rect x="1032.7" y="1507.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1035.7" y="1518.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.14%)</title><rect x="1032.7" y="1491.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1035.7" y="1502.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.07%)</title><rect x="1032.7" y="1475.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1035.7" y="1486.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.07%)</title><rect x="1032.7" y="1459.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1035.7" y="1470.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.07%)</title><rect x="1033.5" y="1475.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1036.5" y="1486.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.07%)</title><rect x="1034.3" y="1491.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.3" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.27%)</title><rect x="1035.1" y="1555.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1038.1" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.27%)</title><rect x="1035.1" y="1539.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1038.1" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.27%)</title><rect x="1035.1" y="1523.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1038.1" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.21%)</title><rect x="1035.9" y="1507.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1038.9" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.21%)</title><rect x="1035.9" y="1491.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1038.9" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.21%)</title><rect x="1035.9" y="1475.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.9" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.07%)</title><rect x="1035.9" y="1459.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1038.9" y="1470.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.07%)</title><rect x="1035.9" y="1443.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1038.9" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.07%)</title><rect x="1035.9" y="1427.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1038.9" y="1438.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.07%)</title><rect x="1035.9" y="1411.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1038.9" y="1422.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1035.9" y="1395.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1038.9" y="1406.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.07%)</title><rect x="1035.9" y="1379.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1038.9" y="1390.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1035.9" y="1363.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1038.9" y="1374.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1035.9" y="1347.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.9" y="1358.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.07%)</title><rect x="1035.9" y="1331.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1038.9" y="1342.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.07%)</title><rect x="1035.9" y="1315.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.9" y="1326.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1035.9" y="1299.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.9" y="1310.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.07%)</title><rect x="1035.9" y="1283.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1038.9" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.07%)</title><rect x="1035.9" y="1267.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1038.9" y="1278.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.07%)</title><rect x="1035.9" y="1251.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1038.9" y="1262.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.07%)</title><rect x="1036.8" y="1459.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1039.8" y="1470.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1036.8" y="1443.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1039.8" y="1454.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.07%)</title><rect x="1036.8" y="1427.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1039.8" y="1438.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.07%)</title><rect x="1037.6" y="1459.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1040.6" y="1470.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1037.6" y="1443.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1040.6" y="1454.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1037.6" y="1427.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1040.6" y="1438.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.07%)</title><rect x="1037.6" y="1411.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1040.6" y="1422.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.21%)</title><rect x="1038.4" y="1619.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.4" y="1630.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.21%)</title><rect x="1038.4" y="1603.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.4" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.21%)</title><rect x="1038.4" y="1587.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1041.4" y="1598.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1038.4" y="1571.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.4" y="1582.0"></text>
</g>
<g>
<title>ciInstanceKlass::loader_handle() (1 samples, 0.07%)</title><rect x="1038.4" y="1555.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.4" y="1566.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.14%)</title><rect x="1039.2" y="1571.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1042.2" y="1582.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.14%)</title><rect x="1039.2" y="1555.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1042.2" y="1566.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.14%)</title><rect x="1039.2" y="1539.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1042.2" y="1550.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.07%)</title><rect x="1039.2" y="1523.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1042.2" y="1534.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.07%)</title><rect x="1040.0" y="1523.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1043.0" y="1534.0"></text>
</g>
<g>
<title>GraphBuilder::store_indexed(BasicType) (1 samples, 0.07%)</title><rect x="1040.8" y="1635.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1043.8" y="1646.0"></text>
</g>
<g>
<title>ciObjArrayKlass::make(ciKlass*) (1 samples, 0.07%)</title><rect x="1040.8" y="1619.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1043.8" y="1630.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1041.6" y="1635.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1044.6" y="1646.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.07%)</title><rect x="1042.4" y="1651.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1045.4" y="1662.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1042.4" y="1635.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1045.4" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*) (1 samples, 0.07%)</title><rect x="1043.2" y="1667.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1046.2" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.07%)</title><rect x="1043.2" y="1651.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.2" y="1662.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.07%)</title><rect x="1043.2" y="1635.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.2" y="1646.0"></text>
</g>
<g>
<title>IR::compute_code() (1 samples, 0.07%)</title><rect x="1044.0" y="1715.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1047.0" y="1726.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 0.07%)</title><rect x="1044.0" y="1699.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1047.0" y="1710.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::assign_loop_depth(BlockBegin*) (1 samples, 0.07%)</title><rect x="1044.0" y="1683.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1047.0" y="1694.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (2 samples, 0.14%)</title><rect x="1044.8" y="1715.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1047.8" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::insert_block_between(BlockBegin*) (1 samples, 0.07%)</title><rect x="1044.8" y="1699.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.8" y="1710.0"></text>
</g>
<g>
<title>free (1 samples, 0.07%)</title><rect x="1045.6" y="1699.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1048.6" y="1710.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (15 samples, 1.03%)</title><rect x="1046.4" y="1731.0" width="12.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1049.4" y="1742.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (14 samples, 0.96%)</title><rect x="1046.4" y="1715.0" width="11.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1049.4" y="1726.0"></text>
</g>
<g>
<title>Compilation::debug_info_recorder() const (1 samples, 0.07%)</title><rect x="1048.9" y="1699.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1051.9" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::comp_op(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_Op2*) (1 samples, 0.07%)</title><rect x="1049.7" y="1699.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1052.7" y="1710.0"></text>
</g>
<g>
<title>Assembler::cmpl(RegisterImpl*, int) (1 samples, 0.07%)</title><rect x="1049.7" y="1683.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1052.7" y="1694.0"></text>
</g>
<g>
<title>LIR_Assembler::const2reg(LIR_OprDesc*, LIR_OprDesc*, LIR_PatchCode, CodeEmitInfo*) (1 samples, 0.07%)</title><rect x="1050.5" y="1699.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1053.5" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (2 samples, 0.14%)</title><rect x="1051.3" y="1699.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.3" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (2 samples, 0.14%)</title><rect x="1051.3" y="1683.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1054.3" y="1694.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.14%)</title><rect x="1051.3" y="1667.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1054.3" y="1678.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.07%)</title><rect x="1051.3" y="1651.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.3" y="1662.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.07%)</title><rect x="1051.3" y="1635.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1054.3" y="1646.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.07%)</title><rect x="1051.3" y="1619.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.3" y="1630.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.07%)</title><rect x="1052.1" y="1651.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.1" y="1662.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.07%)</title><rect x="1052.1" y="1635.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1055.1" y="1646.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.07%)</title><rect x="1052.1" y="1619.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1055.1" y="1630.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (1 samples, 0.07%)</title><rect x="1052.9" y="1699.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1055.9" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (4 samples, 0.27%)</title><rect x="1053.7" y="1699.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1056.7" y="1710.0"></text>
</g>
<g>
<title>DebugInformationRecorder::end_scopes(int, bool) (1 samples, 0.07%)</title><rect x="1053.7" y="1683.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.7" y="1694.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (2 samples, 0.14%)</title><rect x="1054.5" y="1683.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1057.5" y="1694.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.14%)</title><rect x="1054.5" y="1667.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1057.5" y="1678.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.07%)</title><rect x="1055.3" y="1651.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1058.3" y="1662.0"></text>
</g>
<g>
<title>StateSplit::as_StateSplit() (1 samples, 0.07%)</title><rect x="1056.1" y="1683.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1059.1" y="1694.0"></text>
</g>
<g>
<title>LIR_Assembler::throw_op(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) (1 samples, 0.07%)</title><rect x="1056.9" y="1699.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1059.9" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.07%)</title><rect x="1056.9" y="1683.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1059.9" y="1694.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.07%)</title><rect x="1056.9" y="1667.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1059.9" y="1678.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.07%)</title><rect x="1056.9" y="1651.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1059.9" y="1662.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_exception_handler() (1 samples, 0.07%)</title><rect x="1057.7" y="1715.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1060.7" y="1726.0"></text>
</g>
<g>
<title>MacroAssembler::call(AddressLiteral) (1 samples, 0.07%)</title><rect x="1057.7" y="1699.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1060.7" y="1710.0"></text>
</g>
<g>
<title>runtime_call_Relocation::type() (1 samples, 0.07%)</title><rect x="1057.7" y="1683.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1060.7" y="1694.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (38 samples, 2.60%)</title><rect x="1058.5" y="1731.0" width="30.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1061.5" y="1742.0">Co..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (12 samples, 0.82%)</title><rect x="1058.5" y="1715.0" width="9.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1061.5" y="1726.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (12 samples, 0.82%)</title><rect x="1058.5" y="1699.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1061.5" y="1710.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (8 samples, 0.55%)</title><rect x="1058.5" y="1683.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1061.5" y="1694.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (6 samples, 0.41%)</title><rect x="1058.5" y="1667.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1061.5" y="1678.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (1 samples, 0.07%)</title><rect x="1058.5" y="1651.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1061.5" y="1662.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (1 samples, 0.07%)</title><rect x="1058.5" y="1635.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.5" y="1646.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (5 samples, 0.34%)</title><rect x="1059.3" y="1651.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1062.3" y="1662.0"></text>
</g>
<g>
<title>LIR_OpBranch::LIR_OpBranch(LIR_Condition, BasicType, BlockBegin*) (1 samples, 0.07%)</title><rect x="1063.4" y="1667.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1066.4" y="1678.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.07%)</title><rect x="1064.2" y="1667.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1067.2" y="1678.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1064.2" y="1651.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1067.2" y="1662.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (1 samples, 0.07%)</title><rect x="1065.0" y="1683.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.0" y="1694.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadField(LoadField*) (1 samples, 0.07%)</title><rect x="1065.8" y="1683.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1068.8" y="1694.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.07%)</title><rect x="1065.8" y="1667.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1068.8" y="1678.0"></text>
</g>
<g>
<title>LIRGenerator::do_StoreIndexed(StoreIndexed*) (1 samples, 0.07%)</title><rect x="1066.6" y="1683.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1069.6" y="1694.0"></text>
</g>
<g>
<title>LIRGenerator::array_range_check(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*, CodeEmitInfo*) (1 samples, 0.07%)</title><rect x="1066.6" y="1667.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1069.6" y="1678.0"></text>
</g>
<g>
<title>RangeCheckStub::RangeCheckStub(CodeEmitInfo*, LIR_OprDesc*, LIR_OprDesc*) (1 samples, 0.07%)</title><rect x="1066.6" y="1651.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1069.6" y="1662.0"></text>
</g>
<g>
<title>CodeEmitInfo::CodeEmitInfo(CodeEmitInfo*, ValueStack*) (1 samples, 0.07%)</title><rect x="1066.6" y="1635.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.6" y="1646.0"></text>
</g>
<g>
<title>XHandlers::XHandlers(XHandlers*) (1 samples, 0.07%)</title><rect x="1066.6" y="1619.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1069.6" y="1630.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.07%)</title><rect x="1066.6" y="1603.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1069.6" y="1614.0"></text>
</g>
<g>
<title>LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.98] (1 samples, 0.07%)</title><rect x="1067.4" y="1683.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1070.4" y="1694.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (26 samples, 1.78%)</title><rect x="1068.2" y="1715.0" width="21.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1071.2" y="1726.0"></text>
</g>
<g>
<title>Instruction::as_Constant() (1 samples, 0.07%)</title><rect x="1068.2" y="1699.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1071.2" y="1710.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (7 samples, 0.48%)</title><rect x="1069.0" y="1699.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.0" y="1710.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (7 samples, 0.48%)</title><rect x="1069.0" y="1683.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.0" y="1694.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (1 samples, 0.07%)</title><rect x="1069.8" y="1667.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1072.8" y="1678.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (5 samples, 0.34%)</title><rect x="1070.6" y="1667.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1073.6" y="1678.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (1 samples, 0.07%)</title><rect x="1070.6" y="1651.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1073.6" y="1662.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (4 samples, 0.27%)</title><rect x="1071.4" y="1651.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1074.4" y="1662.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (3 samples, 0.21%)</title><rect x="1072.2" y="1635.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.2" y="1646.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (6 samples, 0.41%)</title><rect x="1074.7" y="1699.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1077.7" y="1710.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (6 samples, 0.41%)</title><rect x="1074.7" y="1683.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1077.7" y="1694.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.07%)</title><rect x="1075.5" y="1667.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1078.5" y="1678.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.14%)</title><rect x="1076.3" y="1667.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1079.3" y="1678.0"></text>
</g>
<g>
<title>GrowableArray&lt;ScopeValue*&gt;::append(ScopeValue* const&amp;) (1 samples, 0.07%)</title><rect x="1076.3" y="1651.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1079.3" y="1662.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.07%)</title><rect x="1077.1" y="1651.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.1" y="1662.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.07%)</title><rect x="1077.1" y="1635.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1080.1" y="1646.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (2 samples, 0.14%)</title><rect x="1077.9" y="1667.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.9" y="1678.0"></text>
</g>
<g>
<title>Deoptimization::last_frame_adjust(int, int) (1 samples, 0.07%)</title><rect x="1077.9" y="1651.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1080.9" y="1662.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.07%)</title><rect x="1078.7" y="1651.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1081.7" y="1662.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.07%)</title><rect x="1078.7" y="1635.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1081.7" y="1646.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (7 samples, 0.48%)</title><rect x="1079.5" y="1699.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1082.5" y="1710.0"></text>
</g>
<g>
<title>Interval::add_use_pos(int, IntervalUseKind) (1 samples, 0.07%)</title><rect x="1081.9" y="1683.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1084.9" y="1694.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (2 samples, 0.14%)</title><rect x="1082.7" y="1683.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.7" y="1694.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (1 samples, 0.07%)</title><rect x="1084.3" y="1683.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1087.3" y="1694.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (1 samples, 0.07%)</title><rect x="1084.3" y="1667.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1087.3" y="1678.0"></text>
</g>
<g>
<title>Interval::Interval(int) (1 samples, 0.07%)</title><rect x="1084.3" y="1651.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1087.3" y="1662.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 0.07%)</title><rect x="1085.1" y="1699.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1088.1" y="1710.0"></text>
</g>
<g>
<title>LinearScan::eliminate_spill_moves() (1 samples, 0.07%)</title><rect x="1086.0" y="1699.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.0" y="1710.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (1 samples, 0.07%)</title><rect x="1086.8" y="1699.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1089.8" y="1710.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1086.8" y="1683.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1089.8" y="1694.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (2 samples, 0.14%)</title><rect x="1087.6" y="1699.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.6" y="1710.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (2 samples, 0.14%)</title><rect x="1087.6" y="1683.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1090.6" y="1694.0"></text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.194] (1 samples, 0.07%)</title><rect x="1087.6" y="1667.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.6" y="1678.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.07%)</title><rect x="1088.4" y="1667.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.4" y="1678.0"></text>
</g>
<g>
<title>IRScope::max_stack() const (1 samples, 0.07%)</title><rect x="1089.2" y="1731.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1092.2" y="1742.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.14%)</title><rect x="1090.0" y="1731.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.0" y="1742.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (2 samples, 0.14%)</title><rect x="1090.0" y="1715.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1093.0" y="1726.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1090.0" y="1699.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1093.0" y="1710.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1090.0" y="1683.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1093.0" y="1694.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 0.07%)</title><rect x="1090.0" y="1667.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1093.0" y="1678.0"></text>
</g>
<g>
<title>ProfileData::post_initialize(BytecodeStream*, MethodData*) (1 samples, 0.07%)</title><rect x="1090.0" y="1651.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1093.0" y="1662.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.07%)</title><rect x="1090.8" y="1699.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1093.8" y="1710.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::is_mature(Method*) (1 samples, 0.07%)</title><rect x="1090.8" y="1683.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.8" y="1694.0"></text>
</g>
<g>
<title>Method::is_constant_getter() const (1 samples, 0.07%)</title><rect x="1090.8" y="1667.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1093.8" y="1678.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.07%)</title><rect x="1091.6" y="1747.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.6" y="1758.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (4 samples, 0.27%)</title><rect x="1092.4" y="1747.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1095.4" y="1758.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.07%)</title><rect x="1092.4" y="1731.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1095.4" y="1742.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (3 samples, 0.21%)</title><rect x="1093.2" y="1731.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1096.2" y="1742.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (3 samples, 0.21%)</title><rect x="1093.2" y="1715.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1096.2" y="1726.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (2 samples, 0.14%)</title><rect x="1093.2" y="1699.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1096.2" y="1710.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (2 samples, 0.14%)</title><rect x="1093.2" y="1683.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.2" y="1694.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (2 samples, 0.14%)</title><rect x="1093.2" y="1667.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1096.2" y="1678.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.07%)</title><rect x="1094.0" y="1651.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1097.0" y="1662.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="1094.8" y="1699.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1097.8" y="1710.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.07%)</title><rect x="1095.6" y="1795.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1098.6" y="1806.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (2 samples, 0.14%)</title><rect x="1096.4" y="1795.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.4" y="1806.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (1 samples, 0.07%)</title><rect x="1096.4" y="1779.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1099.4" y="1790.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1096.4" y="1763.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1099.4" y="1774.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="1096.4" y="1747.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1099.4" y="1758.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 0.07%)</title><rect x="1097.2" y="1779.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1100.2" y="1790.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.07%)</title><rect x="1098.1" y="1795.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1101.1" y="1806.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.07%)</title><rect x="1098.1" y="1779.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1101.1" y="1790.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.07%)</title><rect x="1098.1" y="1763.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.1" y="1774.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.07%)</title><rect x="1098.1" y="1747.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1101.1" y="1758.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.07%)</title><rect x="1098.1" y="1731.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1101.1" y="1742.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.07%)</title><rect x="1098.1" y="1715.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1101.1" y="1726.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1098.1" y="1699.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1101.1" y="1710.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.07%)</title><rect x="1098.1" y="1683.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1101.1" y="1694.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.07%)</title><rect x="1098.9" y="1811.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1101.9" y="1822.0"></text>
</g>
<g>
<title>CompileTask::select_for_compilation() (1 samples, 0.07%)</title><rect x="1098.9" y="1795.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.9" y="1806.0"></text>
</g>
<g>
<title>JNIHandles::destroy_weak_global(_jobject*) (1 samples, 0.07%)</title><rect x="1098.9" y="1779.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.9" y="1790.0"></text>
</g>
<g>
<title>G1BarrierSet::enqueue(oopDesc*) (1 samples, 0.07%)</title><rect x="1098.9" y="1763.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.9" y="1774.0"></text>
</g>
<g>
<title>Monitor::try_lock() (1 samples, 0.07%)</title><rect x="1099.7" y="1811.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1102.7" y="1822.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (11 samples, 0.75%)</title><rect x="1100.5" y="1827.0" width="8.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1103.5" y="1838.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (11 samples, 0.75%)</title><rect x="1100.5" y="1811.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.5" y="1822.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (11 samples, 0.75%)</title><rect x="1100.5" y="1795.0" width="8.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.5" y="1806.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.07%)</title><rect x="1100.5" y="1779.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1103.5" y="1790.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.14%)</title><rect x="1101.3" y="1779.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.3" y="1790.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, bool, bool, bool) (1 samples, 0.07%)</title><rect x="1101.3" y="1763.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.3" y="1774.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.07%)</title><rect x="1102.1" y="1763.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1105.1" y="1774.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.07%)</title><rect x="1102.1" y="1747.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1105.1" y="1758.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1102.1" y="1731.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1105.1" y="1742.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.07%)</title><rect x="1102.9" y="1779.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.9" y="1790.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.07%)</title><rect x="1102.9" y="1763.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1105.9" y="1774.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (7 samples, 0.48%)</title><rect x="1103.7" y="1779.0" width="5.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1106.7" y="1790.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.14%)</title><rect x="1104.5" y="1763.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1107.5" y="1774.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.07%)</title><rect x="1104.5" y="1747.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.5" y="1758.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.07%)</title><rect x="1105.3" y="1747.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1108.3" y="1758.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1105.3" y="1731.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1108.3" y="1742.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1105.3" y="1715.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1108.3" y="1726.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (4 samples, 0.27%)</title><rect x="1106.1" y="1763.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1109.1" y="1774.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1106.1" y="1747.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.1" y="1758.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1106.1" y="1731.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1109.1" y="1742.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.07%)</title><rect x="1106.1" y="1715.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1109.1" y="1726.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.14%)</title><rect x="1106.9" y="1747.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1109.9" y="1758.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.07%)</title><rect x="1108.5" y="1747.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1111.5" y="1758.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.14%)</title><rect x="1109.3" y="1843.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1112.3" y="1854.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.14%)</title><rect x="1109.3" y="1827.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1112.3" y="1838.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.67] (2 samples, 0.14%)</title><rect x="1109.3" y="1811.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1112.3" y="1822.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.14%)</title><rect x="1109.3" y="1795.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1112.3" y="1806.0"></text>
</g>
<g>
<title>VM_Deoptimize::doit() (1 samples, 0.07%)</title><rect x="1109.3" y="1779.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1112.3" y="1790.0"></text>
</g>
<g>
<title>CodeCache::make_marked_nmethods_not_entrant() (1 samples, 0.07%)</title><rect x="1109.3" y="1763.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.3" y="1774.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (1 samples, 0.07%)</title><rect x="1109.3" y="1747.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1112.3" y="1758.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit() (1 samples, 0.07%)</title><rect x="1110.2" y="1779.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1113.2" y="1790.0"></text>
</g>
<g>
<title>VM_RedefineClasses::redefine_single_class(_jclass*, InstanceKlass*, Thread*) (1 samples, 0.07%)</title><rect x="1110.2" y="1763.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1113.2" y="1774.0"></text>
</g>
<g>
<title>CodeCache::flush_evol_dependents_on(InstanceKlass*) (1 samples, 0.07%)</title><rect x="1110.2" y="1747.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1113.2" y="1758.0"></text>
</g>
<g>
<title>CodeCache::mark_for_evol_deoptimization(InstanceKlass*) (1 samples, 0.07%)</title><rect x="1110.2" y="1731.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1113.2" y="1742.0"></text>
</g>
<g>
<title>CompiledMethod::clear_inline_caches() (1 samples, 0.07%)</title><rect x="1110.2" y="1715.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1113.2" y="1726.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (98 samples, 6.70%)</title><rect x="1111.0" y="1891.0" width="79.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.0" y="1902.0">sun/instr..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (98 samples, 6.70%)</title><rect x="1111.0" y="1875.0" width="79.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.0" y="1886.0">sun/instr..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.14%)</title><rect x="1111.0" y="1859.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.14%)</title><rect x="1111.0" y="1843.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.14%)</title><rect x="1111.0" y="1827.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.14%)</title><rect x="1111.0" y="1811.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.14%)</title><rect x="1111.0" y="1795.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.14%)</title><rect x="1111.0" y="1779.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.14%)</title><rect x="1111.0" y="1763.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.14%)</title><rect x="1111.0" y="1747.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.0" y="1758.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.14%)</title><rect x="1111.0" y="1731.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.14%)</title><rect x="1111.0" y="1715.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.14%)</title><rect x="1111.0" y="1699.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (2 samples, 0.14%)</title><rect x="1111.0" y="1683.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (2 samples, 0.14%)</title><rect x="1111.0" y="1667.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.0" y="1678.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.14%)</title><rect x="1111.0" y="1651.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1114.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.14%)</title><rect x="1111.0" y="1635.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.14%)</title><rect x="1111.0" y="1619.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (1 samples, 0.07%)</title><rect x="1111.0" y="1603.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.0" y="1614.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1111.0" y="1587.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.0" y="1598.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1111.0" y="1571.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.0" y="1582.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1111.0" y="1555.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.0" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (1 samples, 0.07%)</title><rect x="1111.0" y="1539.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.0" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1111.0" y="1523.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.0" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 0.07%)</title><rect x="1111.0" y="1507.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.0" y="1518.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1111.0" y="1491.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.0" y="1502.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (1 samples, 0.07%)</title><rect x="1111.0" y="1475.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/util/jar/JarIndex.getJarIndex (1 samples, 0.07%)</title><rect x="1111.8" y="1603.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.8" y="1614.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.07%)</title><rect x="1111.8" y="1587.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.8" y="1598.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.07%)</title><rect x="1111.8" y="1571.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.8" y="1582.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.isMultiRelease (1 samples, 0.07%)</title><rect x="1111.8" y="1555.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.8" y="1566.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.checkForSpecialAttributes (1 samples, 0.07%)</title><rect x="1111.8" y="1539.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.8" y="1550.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getBytes (1 samples, 0.07%)</title><rect x="1111.8" y="1523.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.8" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.07%)</title><rect x="1111.8" y="1507.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.8" y="1518.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1111.8" y="1491.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.8" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1111.8" y="1475.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1114.8" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1111.8" y="1459.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.8" y="1470.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1111.8" y="1443.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1114.8" y="1454.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.07%)</title><rect x="1111.8" y="1427.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1114.8" y="1438.0"></text>
</g>
<g>
<title>LinkResolver::check_field_accessability(Klass*, Klass*, Klass*, fieldDescriptor const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1111.8" y="1411.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1114.8" y="1422.0"></text>
</g>
<g>
<title>Reflection::verify_member_access(Klass const*, Klass const*, Klass const*, AccessFlags, bool, bool, Thread*) (1 samples, 0.07%)</title><rect x="1111.8" y="1395.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1114.8" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::has_nestmate_access_to(InstanceKlass*, Thread*) (1 samples, 0.07%)</title><rect x="1111.8" y="1379.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1114.8" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::nest_host(Symbol*, Thread*) (1 samples, 0.07%)</title><rect x="1111.8" y="1363.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1114.8" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::nest_host(Symbol*, Thread*) [clone .part.116] (1 samples, 0.07%)</title><rect x="1111.8" y="1347.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1114.8" y="1358.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.07%)</title><rect x="1111.8" y="1331.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1114.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (96 samples, 6.56%)</title><rect x="1112.6" y="1859.0" width="77.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.6" y="1870.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (96 samples, 6.56%)</title><rect x="1112.6" y="1843.0" width="77.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.6" y="1854.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (96 samples, 6.56%)</title><rect x="1112.6" y="1827.0" width="77.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.6" y="1838.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (96 samples, 6.56%)</title><rect x="1112.6" y="1811.0" width="77.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.6" y="1822.0">jdk/inter..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.premain (96 samples, 6.56%)</title><rect x="1112.6" y="1795.0" width="77.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.6" y="1806.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.agentmain (96 samples, 6.56%)</title><rect x="1112.6" y="1779.0" width="77.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.6" y="1790.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.installBootstrapJar (1 samples, 0.07%)</title><rect x="1112.6" y="1763.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.6" y="1774.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.checkJarManifestMainClassIsThis (1 samples, 0.07%)</title><rect x="1112.6" y="1747.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.6" y="1758.0"></text>
</g>
<g>
<title>java/net/URL.openStream (1 samples, 0.07%)</title><rect x="1112.6" y="1731.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.6" y="1742.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.07%)</title><rect x="1112.6" y="1715.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.6" y="1726.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.openConnection (1 samples, 0.07%)</title><rect x="1112.6" y="1699.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.6" y="1710.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1112.6" y="1683.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1115.6" y="1694.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1667.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.6" y="1678.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1651.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1115.6" y="1662.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1635.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1115.6" y="1646.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1619.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.6" y="1630.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1603.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.6" y="1614.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1587.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.6" y="1598.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1571.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.6" y="1582.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1555.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.6" y="1566.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1539.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.6" y="1550.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1523.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1115.6" y="1534.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1507.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.6" y="1518.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1491.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1115.6" y="1502.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1475.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1115.6" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1459.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1115.6" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1443.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1115.6" y="1454.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1427.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1115.6" y="1438.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1411.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1115.6" y="1422.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1395.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.6" y="1406.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1379.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1115.6" y="1390.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1112.6" y="1363.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.6" y="1374.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1347.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1115.6" y="1358.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1331.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1115.6" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::copy_localvariable_table(ConstMethod const*, int, unsigned short*, void const**, int, unsigned short*, void const**, Thread*) (1 samples, 0.07%)</title><rect x="1112.6" y="1315.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1115.6" y="1326.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.07%)</title><rect x="1112.6" y="1299.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (95 samples, 6.49%)</title><rect x="1113.4" y="1763.0" width="76.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1116.4" y="1774.0">java/lan..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (95 samples, 6.49%)</title><rect x="1113.4" y="1747.0" width="76.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.4" y="1758.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (95 samples, 6.49%)</title><rect x="1113.4" y="1731.0" width="76.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.4" y="1742.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (95 samples, 6.49%)</title><rect x="1113.4" y="1715.0" width="76.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1116.4" y="1726.0">jdk/inte..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.&lt;clinit&gt; (2 samples, 0.14%)</title><rect x="1113.4" y="1699.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.4" y="1710.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (2 samples, 0.14%)</title><rect x="1113.4" y="1683.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1116.4" y="1694.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (2 samples, 0.14%)</title><rect x="1113.4" y="1667.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.4" y="1678.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getILoggerFactory (1 samples, 0.07%)</title><rect x="1113.4" y="1651.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1116.4" y="1662.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.performInitialization (1 samples, 0.07%)</title><rect x="1113.4" y="1635.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1116.4" y="1646.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.bind (1 samples, 0.07%)</title><rect x="1113.4" y="1619.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.4" y="1630.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.findPossibleStaticLoggerBinderPathSet (1 samples, 0.07%)</title><rect x="1113.4" y="1603.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getSystemResources (1 samples, 0.07%)</title><rect x="1113.4" y="1587.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResources (1 samples, 0.07%)</title><rect x="1113.4" y="1571.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResources (1 samples, 0.07%)</title><rect x="1113.4" y="1555.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResources (1 samples, 0.07%)</title><rect x="1113.4" y="1539.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.4" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.07%)</title><rect x="1113.4" y="1523.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.4" y="1534.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1113.4" y="1507.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="1113.4" y="1491.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="1113.4" y="1475.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.07%)</title><rect x="1113.4" y="1459.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.07%)</title><rect x="1113.4" y="1443.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.07%)</title><rect x="1113.4" y="1427.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1116.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.07%)</title><rect x="1113.4" y="1411.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.07%)</title><rect x="1113.4" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.07%)</title><rect x="1113.4" y="1379.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.4" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="1113.4" y="1363.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1116.4" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getLogger (1 samples, 0.07%)</title><rect x="1114.2" y="1651.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.2" y="1662.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getHelperFactory (1 samples, 0.07%)</title><rect x="1114.2" y="1635.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.2" y="1646.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.getSettingsDescription (1 samples, 0.07%)</title><rect x="1114.2" y="1619.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.2" y="1630.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettingsDescription (1 samples, 0.07%)</title><rect x="1114.2" y="1603.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.2" y="1614.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettings (1 samples, 0.07%)</title><rect x="1114.2" y="1587.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.2" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1114.2" y="1571.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.2" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1114.2" y="1555.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.2" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1114.2" y="1539.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.2" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$DTFormatter.create (1 samples, 0.07%)</title><rect x="1114.2" y="1523.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.2" y="1534.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$NewDTFormatter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1114.2" y="1507.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.2" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findVirtual (1 samples, 0.07%)</title><rect x="1114.2" y="1491.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.2" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethod (1 samples, 0.07%)</title><rect x="1114.2" y="1475.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.07%)</title><rect x="1114.2" y="1459.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.2" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.07%)</title><rect x="1114.2" y="1443.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.07%)</title><rect x="1114.2" y="1427.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.07%)</title><rect x="1114.2" y="1411.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.07%)</title><rect x="1114.2" y="1395.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.07%)</title><rect x="1114.2" y="1379.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.07%)</title><rect x="1114.2" y="1363.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.07%)</title><rect x="1114.2" y="1347.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.07%)</title><rect x="1114.2" y="1331.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.07%)</title><rect x="1114.2" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (1 samples, 0.07%)</title><rect x="1114.2" y="1299.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (1 samples, 0.07%)</title><rect x="1114.2" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.initInputFrame (1 samples, 0.07%)</title><rect x="1114.2" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getDescriptor (1 samples, 0.07%)</title><rect x="1114.2" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1114.2" y="1235.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1114.2" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.2" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.start (93 samples, 6.36%)</title><rect x="1115.0" y="1699.0" width="75.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.0" y="1710.0">datadog/..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createParentClassloader (2 samples, 0.14%)</title><rect x="1115.0" y="1683.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.0" y="1694.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDatadogClassLoader (1 samples, 0.07%)</title><rect x="1115.0" y="1667.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.0" y="1678.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.07%)</title><rect x="1115.0" y="1651.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1115.0" y="1635.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1115.0" y="1619.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.07%)</title><rect x="1115.0" y="1603.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.0" y="1614.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1115.0" y="1587.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.0" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1115.0" y="1571.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.0" y="1582.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.07%)</title><rect x="1115.0" y="1555.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.0" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.07%)</title><rect x="1115.0" y="1539.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.0" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.07%)</title><rect x="1115.0" y="1523.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.0" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.07%)</title><rect x="1115.0" y="1507.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.0" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getPlatformClassLoader (1 samples, 0.07%)</title><rect x="1115.8" y="1667.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.8" y="1678.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="1115.8" y="1651.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.8" y="1662.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.07%)</title><rect x="1115.8" y="1635.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.8" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.07%)</title><rect x="1115.8" y="1619.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.8" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.07%)</title><rect x="1115.8" y="1603.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.07%)</title><rect x="1115.8" y="1587.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.8" y="1598.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.07%)</title><rect x="1115.8" y="1571.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.8" y="1582.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.07%)</title><rect x="1115.8" y="1555.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.8" y="1566.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.07%)</title><rect x="1115.8" y="1539.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.8" y="1550.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.07%)</title><rect x="1115.8" y="1523.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.07%)</title><rect x="1115.8" y="1507.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.8" y="1518.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.07%)</title><rect x="1115.8" y="1491.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.8" y="1502.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.07%)</title><rect x="1115.8" y="1475.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.8" y="1486.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.07%)</title><rect x="1115.8" y="1459.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.8" y="1470.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.getInstance (1 samples, 0.07%)</title><rect x="1115.8" y="1443.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.8" y="1454.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1115.8" y="1427.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.8" y="1438.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSelectAnnotations (1 samples, 0.07%)</title><rect x="1115.8" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.8" y="1422.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.07%)</title><rect x="1115.8" y="1395.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.8" y="1406.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.07%)</title><rect x="1115.8" y="1379.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.8" y="1390.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.07%)</title><rect x="1115.8" y="1363.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1118.8" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1115.8" y="1347.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.8" y="1358.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.07%)</title><rect x="1115.8" y="1331.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.8" y="1342.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.07%)</title><rect x="1115.8" y="1315.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.07%)</title><rect x="1115.8" y="1299.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.07%)</title><rect x="1115.8" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.07%)</title><rect x="1115.8" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.07%)</title><rect x="1115.8" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.07%)</title><rect x="1115.8" y="1235.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.07%)</title><rect x="1115.8" y="1219.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.8" y="1230.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1115.8" y="1203.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1118.8" y="1214.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1115.8" y="1187.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.8" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1115.8" y="1171.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.8" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1115.8" y="1155.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1118.8" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1115.8" y="1139.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1118.8" y="1150.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1115.8" y="1123.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1118.8" y="1134.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1115.8" y="1107.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1118.8" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1115.8" y="1091.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.8" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1115.8" y="1075.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.8" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.07%)</title><rect x="1115.8" y="1059.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1118.8" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.installDatadogTracer (13 samples, 0.89%)</title><rect x="1116.6" y="1683.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (13 samples, 0.89%)</title><rect x="1116.6" y="1667.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.89%)</title><rect x="1116.6" y="1651.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (13 samples, 0.89%)</title><rect x="1116.6" y="1635.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.6" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (13 samples, 0.89%)</title><rect x="1116.6" y="1619.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.6" y="1630.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/TracerInstaller.installGlobalTracer (13 samples, 0.89%)</title><rect x="1116.6" y="1603.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.6" y="1614.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.build (12 samples, 0.82%)</title><rect x="1116.6" y="1587.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.6" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (12 samples, 0.82%)</title><rect x="1116.6" y="1571.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.6" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (12 samples, 0.82%)</title><rect x="1116.6" y="1555.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.6" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (11 samples, 0.75%)</title><rect x="1116.6" y="1539.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.6" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (11 samples, 0.75%)</title><rect x="1116.6" y="1523.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.6" y="1534.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter$DDAgentWriterBuilder.build (1 samples, 0.07%)</title><rect x="1117.4" y="1507.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.4" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1117.4" y="1491.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.4" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1117.4" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.4" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1117.4" y="1459.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.4" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker.createQueue (1 samples, 0.07%)</title><rect x="1117.4" y="1443.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.4" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1117.4" y="1427.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1120.4" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1411.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1120.4" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1395.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1120.4" y="1406.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1379.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.4" y="1390.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1363.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1120.4" y="1374.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1347.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.4" y="1358.0"></text>
</g>
<g>
<title>StackMapFrame::set_locals_from_arg(methodHandle const&amp;, VerificationType, Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1331.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1120.4" y="1342.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1315.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.4" y="1326.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.07%)</title><rect x="1117.4" y="1299.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.4" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1118.2" y="1507.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.2" y="1518.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi$Builder.build (1 samples, 0.07%)</title><rect x="1118.2" y="1491.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.2" y="1502.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1118.2" y="1475.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.2" y="1486.0"></text>
</g>
<g>
<title>com/squareup/moshi/ClassJsonAdapter.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1118.2" y="1459.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.2" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1118.2" y="1443.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1121.2" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1427.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1121.2" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1411.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1121.2" y="1422.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1395.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1121.2" y="1406.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1379.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.2" y="1390.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1363.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1121.2" y="1374.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1347.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1121.2" y="1358.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1331.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1121.2" y="1342.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1315.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.2" y="1326.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.07%)</title><rect x="1118.2" y="1299.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1121.2" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (6 samples, 0.41%)</title><rect x="1119.0" y="1507.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.0" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (6 samples, 0.41%)</title><rect x="1119.0" y="1491.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.0" y="1502.0"></text>
</g>
<g>
<title>okhttp3/OkHttpClient$Builder.&lt;init&gt; (6 samples, 0.41%)</title><rect x="1119.0" y="1475.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.0" y="1486.0"></text>
</g>
<g>
<title>java/net/ProxySelector.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1119.0" y="1459.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.07%)</title><rect x="1119.0" y="1443.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.07%)</title><rect x="1119.0" y="1427.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.0" y="1438.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1119.0" y="1411.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.0" y="1422.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.07%)</title><rect x="1119.0" y="1395.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.0" y="1406.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.0" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.0" y="1390.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.0" y="1363.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.0" y="1374.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableCollection.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.0" y="1347.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.0" y="1358.0"></text>
</g>
<g>
<title>okhttp3/ConnectionPool.&lt;clinit&gt; (4 samples, 0.27%)</title><rect x="1119.8" y="1459.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.21%)</title><rect x="1119.8" y="1443.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 0.21%)</title><rect x="1119.8" y="1427.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 0.21%)</title><rect x="1119.8" y="1411.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 0.21%)</title><rect x="1119.8" y="1395.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (3 samples, 0.21%)</title><rect x="1119.8" y="1379.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (3 samples, 0.21%)</title><rect x="1119.8" y="1363.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (3 samples, 0.21%)</title><rect x="1119.8" y="1347.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (3 samples, 0.21%)</title><rect x="1119.8" y="1331.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.8" y="1342.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (3 samples, 0.21%)</title><rect x="1119.8" y="1315.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.8" y="1326.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (3 samples, 0.21%)</title><rect x="1119.8" y="1299.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (3 samples, 0.21%)</title><rect x="1119.8" y="1283.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.8" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.21%)</title><rect x="1119.8" y="1267.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.8" y="1278.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.21%)</title><rect x="1119.8" y="1251.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.8" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.21%)</title><rect x="1119.8" y="1235.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 0.21%)</title><rect x="1119.8" y="1219.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.8" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (3 samples, 0.21%)</title><rect x="1119.8" y="1203.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.8" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 0.21%)</title><rect x="1119.8" y="1187.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.8" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (3 samples, 0.21%)</title><rect x="1119.8" y="1171.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.8" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.07%)</title><rect x="1119.8" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.8" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.07%)</title><rect x="1119.8" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.8" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.07%)</title><rect x="1119.8" y="1123.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.8" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.07%)</title><rect x="1119.8" y="1107.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.8" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.07%)</title><rect x="1119.8" y="1091.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.07%)</title><rect x="1119.8" y="1075.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.8" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.07%)</title><rect x="1119.8" y="1059.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.8" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.07%)</title><rect x="1119.8" y="1043.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.8" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.07%)</title><rect x="1119.8" y="1027.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.8" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.07%)</title><rect x="1119.8" y="1011.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="1119.8" y="995.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.8" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.07%)</title><rect x="1119.8" y="979.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="1119.8" y="963.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="1119.8" y="947.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.07%)</title><rect x="1119.8" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="1119.8" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.07%)</title><rect x="1119.8" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.8" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1119.8" y="883.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="1119.8" y="867.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.07%)</title><rect x="1119.8" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.07%)</title><rect x="1119.8" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.07%)</title><rect x="1119.8" y="819.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.07%)</title><rect x="1119.8" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.07%)</title><rect x="1119.8" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.07%)</title><rect x="1119.8" y="771.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.07%)</title><rect x="1119.8" y="755.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.07%)</title><rect x="1119.8" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.07%)</title><rect x="1119.8" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.slice (1 samples, 0.07%)</title><rect x="1119.8" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1 samples, 0.07%)</title><rect x="1119.8" y="691.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.8" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.8" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.8" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.8" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.8" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.8" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.8" y="627.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.8" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.8" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1119.8" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.8" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.07%)</title><rect x="1119.8" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.8" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.07%)</title><rect x="1119.8" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="1119.8" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (2 samples, 0.14%)</title><rect x="1120.6" y="1155.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.6" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.07%)</title><rect x="1120.6" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.6" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.07%)</title><rect x="1120.6" y="1123.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.6" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.07%)</title><rect x="1120.6" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.6" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.07%)</title><rect x="1120.6" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.07%)</title><rect x="1120.6" y="1075.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.6" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.07%)</title><rect x="1120.6" y="1059.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.6" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.07%)</title><rect x="1120.6" y="1043.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.6" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.07%)</title><rect x="1120.6" y="1027.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.6" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.07%)</title><rect x="1120.6" y="1011.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.6" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.07%)</title><rect x="1120.6" y="995.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.6" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.07%)</title><rect x="1120.6" y="979.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1123.6" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.07%)</title><rect x="1120.6" y="963.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$AbstractBase.asErasures (1 samples, 0.07%)</title><rect x="1120.6" y="947.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.6" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.size (1 samples, 0.07%)</title><rect x="1120.6" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.6" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.07%)</title><rect x="1120.6" y="915.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$Explicit.get (1 samples, 0.07%)</title><rect x="1120.6" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AbstractBase.asGenericType (1 samples, 0.07%)</title><rect x="1120.6" y="883.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.07%)</title><rect x="1121.4" y="1139.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.4" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.07%)</title><rect x="1121.4" y="1123.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.4" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="1121.4" y="1107.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.4" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="1121.4" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="1121.4" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.07%)</title><rect x="1121.4" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.07%)</title><rect x="1121.4" y="1043.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.07%)</title><rect x="1121.4" y="1027.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitMethod (1 samples, 0.07%)</title><rect x="1121.4" y="1011.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.07%)</title><rect x="1121.4" y="995.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.07%)</title><rect x="1121.4" y="979.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.07%)</title><rect x="1121.4" y="963.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.07%)</title><rect x="1121.4" y="947.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithoutExitAdvice.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1121.4" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.4" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1121.4" y="915.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$ArgumentHandler$Factory$1.resolve (1 samples, 0.07%)</title><rect x="1121.4" y="899.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.4" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1121.4" y="883.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.4" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1121.4" y="867.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.4" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1121.4" y="851.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.4" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1121.4" y="835.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1121.4" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.4" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1121.4" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1121.4" y="787.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.4" y="798.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1121.4" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.4" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1121.4" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1121.4" y="739.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.4" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1121.4" y="723.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1124.4" y="734.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1121.4" y="707.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1124.4" y="718.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1121.4" y="691.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1124.4" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1121.4" y="675.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1124.4" y="686.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1121.4" y="659.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.4" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1121.4" y="643.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1124.4" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1121.4" y="627.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.4" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.07%)</title><rect x="1121.4" y="611.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1124.4" y="622.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.07%)</title><rect x="1121.4" y="595.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1122.2" y="1443.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1125.2" y="1454.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.07%)</title><rect x="1122.2" y="1427.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.2" y="1438.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.07%)</title><rect x="1122.2" y="1411.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.2" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.07%)</title><rect x="1122.2" y="1395.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.2" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="1122.2" y="1379.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.2" y="1390.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1122.2" y="1363.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.2" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="1122.2" y="1347.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.2" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.07%)</title><rect x="1122.2" y="1331.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.2" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.07%)</title><rect x="1122.2" y="1315.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.2" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.07%)</title><rect x="1122.2" y="1299.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.2" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.07%)</title><rect x="1122.2" y="1283.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.2" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.07%)</title><rect x="1122.2" y="1267.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.2" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.07%)</title><rect x="1122.2" y="1251.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.2" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.07%)</title><rect x="1122.2" y="1235.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.2" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.07%)</title><rect x="1122.2" y="1219.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (1 samples, 0.07%)</title><rect x="1122.2" y="1203.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.2" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (1 samples, 0.07%)</title><rect x="1122.2" y="1187.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.2" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1122.2" y="1171.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.2" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1122.2" y="1155.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.2" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1122.2" y="1139.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.2" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1122.2" y="1123.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.2" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved$Factory.make (1 samples, 0.07%)</title><rect x="1122.2" y="1107.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.2" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1122.2" y="1091.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.2" y="1102.0"></text>
</g>
<g>
<title>com/sun/proxy/$Proxy10.readOnly (1 samples, 0.07%)</title><rect x="1122.2" y="1075.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.2" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.invoke (1 samples, 0.07%)</title><rect x="1122.2" y="1059.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.2" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.07%)</title><rect x="1122.2" y="1043.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.2" y="1054.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbab00000)@0x00007f20688be580 (1 samples, 0.07%)</title><rect x="1122.2" y="1027.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.2" y="1038.0"></text>
</g>
<g>
<title>okhttp3/Dns.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1123.1" y="1459.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.1" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.07%)</title><rect x="1123.1" y="1443.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1126.1" y="1454.0"></text>
</g>
<g>
<title>Method::build_method_counters(Method*, Thread*) (1 samples, 0.07%)</title><rect x="1123.1" y="1427.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1126.1" y="1438.0"></text>
</g>
<g>
<title>InvocationCounter::init() (1 samples, 0.07%)</title><rect x="1123.1" y="1411.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1126.1" y="1422.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl.get (2 samples, 0.14%)</title><rect x="1123.9" y="1507.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.9" y="1518.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.parse (2 samples, 0.14%)</title><rect x="1123.9" y="1491.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.9" y="1502.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.canonicalizeHost (1 samples, 0.07%)</title><rect x="1123.9" y="1475.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.9" y="1486.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.canonicalizeHost (1 samples, 0.07%)</title><rect x="1123.9" y="1459.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.9" y="1470.0"></text>
</g>
<g>
<title>java/net/IDN.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1123.9" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.9" y="1454.0"></text>
</g>
<g>
<title>sun/net/idn/StringPrep.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1123.9" y="1427.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.9" y="1438.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacter.getUnicodeVersion (1 samples, 0.07%)</title><rect x="1123.9" y="1411.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.9" y="1422.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1123.9" y="1395.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.9" y="1406.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1123.9" y="1379.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.9" y="1390.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.07%)</title><rect x="1123.9" y="1363.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.9" y="1374.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1124.7" y="1475.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.7" y="1486.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.forName (1 samples, 0.07%)</title><rect x="1124.7" y="1459.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1127.7" y="1470.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup (1 samples, 0.07%)</title><rect x="1124.7" y="1443.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.7" y="1454.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup2 (1 samples, 0.07%)</title><rect x="1124.7" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.7" y="1438.0"></text>
</g>
<g>
<title>sun/nio/cs/StandardCharsets.charsetForName (1 samples, 0.07%)</title><rect x="1124.7" y="1411.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.7" y="1422.0"></text>
</g>
<g>
<title>sun/nio/cs/StandardCharsets.lookup (1 samples, 0.07%)</title><rect x="1124.7" y="1395.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.07%)</title><rect x="1124.7" y="1379.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.07%)</title><rect x="1124.7" y="1363.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.7" y="1374.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.07%)</title><rect x="1124.7" y="1347.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1127.7" y="1358.0"></text>
</g>
<g>
<title>JVM_FindClassFromCaller (1 samples, 0.07%)</title><rect x="1124.7" y="1331.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1127.7" y="1342.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1315.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1127.7" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1299.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1127.7" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1283.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1127.7" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1267.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1127.7" y="1278.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1251.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1127.7" y="1262.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1235.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1127.7" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1219.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.7" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1124.7" y="1203.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.7" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1187.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.7" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.07%)</title><rect x="1124.7" y="1171.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1127.7" y="1182.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.07%)</title><rect x="1124.7" y="1155.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1127.7" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.createStatsDClient (1 samples, 0.07%)</title><rect x="1125.5" y="1539.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.5" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/DDAgentStatsDClientManager.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1125.5" y="1523.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.5" y="1534.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/DDAgentStatsDClientManager.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1125.5" y="1507.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.5" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/api/cache/DDCaches.newUnboundedCache (1 samples, 0.07%)</title><rect x="1125.5" y="1491.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.5" y="1502.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="1125.5" y="1475.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1128.5" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.builder (1 samples, 0.07%)</title><rect x="1126.3" y="1587.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1126.3" y="1571.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.3" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.config (1 samples, 0.07%)</title><rect x="1126.3" y="1555.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.3" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/propagation/HttpCodec.createExtractor (1 samples, 0.07%)</title><rect x="1126.3" y="1539.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.3" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/propagation/DatadogHttpCodec.newExtractor (1 samples, 0.07%)</title><rect x="1126.3" y="1523.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.3" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1126.3" y="1507.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.3" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1126.3" y="1491.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.3" y="1502.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1126.3" y="1475.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.3" y="1486.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1126.3" y="1459.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.3" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1126.3" y="1443.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.3" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1126.3" y="1427.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.3" y="1438.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1126.3" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1126.3" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="1406.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="1126.3" y="1379.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.3" y="1390.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="1126.3" y="1363.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.3" y="1374.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="1126.3" y="1347.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.3" y="1358.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.07%)</title><rect x="1126.3" y="1331.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1129.3" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.scheduleJmxStart (1 samples, 0.07%)</title><rect x="1127.1" y="1683.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.1" y="1694.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleWithJitter (1 samples, 0.07%)</title><rect x="1127.1" y="1667.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.1" y="1678.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.07%)</title><rect x="1127.1" y="1651.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.1" y="1662.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.07%)</title><rect x="1127.1" y="1635.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.1" y="1646.0"></text>
</g>
<g>
<title>java/lang/Runtime.addShutdownHook (1 samples, 0.07%)</title><rect x="1127.1" y="1619.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/ApplicationShutdownHooks.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1127.1" y="1603.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.1" y="1614.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1127.1" y="1587.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.1" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1127.1" y="1571.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.1" y="1582.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1127.1" y="1555.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1130.1" y="1566.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.07%)</title><rect x="1127.1" y="1539.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.1" y="1550.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1127.1" y="1523.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.1" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1127.1" y="1507.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.1" y="1518.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1127.1" y="1491.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1130.1" y="1502.0"></text>
</g>
<g>
<title>SystemDictionary::load_shared_class(InstanceKlass*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1127.1" y="1475.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.1" y="1486.0"></text>
</g>
<g>
<title>KlassFactory::check_shared_class_file_load_hook(InstanceKlass*, Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1127.1" y="1459.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.1" y="1470.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.07%)</title><rect x="1127.1" y="1443.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.1" y="1454.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.07%)</title><rect x="1127.1" y="1427.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.1" y="1438.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (1 samples, 0.07%)</title><rect x="1127.1" y="1411.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1130.1" y="1422.0"></text>
</g>
<g>
<title>transformClassFile (1 samples, 0.07%)</title><rect x="1127.1" y="1395.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1130.1" y="1406.0"></text>
</g>
<g>
<title>releaseReentrancyToken (1 samples, 0.07%)</title><rect x="1127.1" y="1379.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1130.1" y="1390.0"></text>
</g>
<g>
<title>assertTLSValue (1 samples, 0.07%)</title><rect x="1127.1" y="1363.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1130.1" y="1374.0"></text>
</g>
<g>
<title>JvmtiEnv::GetThreadLocalStorage(_jobject*, void**) (1 samples, 0.07%)</title><rect x="1127.1" y="1347.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.1" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startDatadogAgent (73 samples, 4.99%)</title><rect x="1127.9" y="1683.0" width="58.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.9" y="1694.0">datado..</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDelegateClassLoader (1 samples, 0.07%)</title><rect x="1127.9" y="1667.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.9" y="1678.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.07%)</title><rect x="1127.9" y="1651.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.9" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1127.9" y="1635.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1127.9" y="1619.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.9" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.07%)</title><rect x="1127.9" y="1603.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.9" y="1614.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1127.9" y="1587.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.9" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1127.9" y="1571.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.9" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1127.9" y="1555.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.9" y="1566.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.07%)</title><rect x="1127.9" y="1539.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.9" y="1550.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.07%)</title><rect x="1127.9" y="1523.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.9" y="1534.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.07%)</title><rect x="1127.9" y="1507.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.9" y="1518.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.07%)</title><rect x="1127.9" y="1491.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.9" y="1502.0"></text>
</g>
<g>
<title>java/util/zip/ZipCoder$UTF8.toString (1 samples, 0.07%)</title><rect x="1127.9" y="1475.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.9" y="1486.0"></text>
</g>
<g>
<title>java/lang/System$2.newStringUTF8NoRepl (1 samples, 0.07%)</title><rect x="1127.9" y="1459.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.9" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringCoding.newStringUTF8NoRepl (1 samples, 0.07%)</title><rect x="1127.9" y="1443.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (72 samples, 4.92%)</title><rect x="1128.7" y="1667.0" width="58.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.7" y="1678.0">java/l..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (72 samples, 4.92%)</title><rect x="1128.7" y="1651.0" width="58.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.7" y="1662.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (72 samples, 4.92%)</title><rect x="1128.7" y="1635.0" width="58.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.7" y="1646.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (72 samples, 4.92%)</title><rect x="1128.7" y="1619.0" width="58.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.7" y="1630.0">jdk/in..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.&lt;clinit&gt; (4 samples, 0.27%)</title><rect x="1128.7" y="1603.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.7" y="1614.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.addByteBuddyRawSetting (1 samples, 0.07%)</title><rect x="1128.7" y="1587.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1128.7" y="1571.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.7" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1128.7" y="1555.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1131.7" y="1566.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1128.7" y="1539.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.7" y="1550.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1128.7" y="1523.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.7" y="1534.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1128.7" y="1507.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.7" y="1518.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1128.7" y="1491.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.7" y="1502.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1128.7" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.7" y="1486.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1128.7" y="1459.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1128.7" y="1443.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.7" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1128.7" y="1427.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1128.7" y="1411.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.7" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1128.7" y="1395.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.7" y="1406.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1128.7" y="1379.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.7" y="1390.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1128.7" y="1363.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1131.7" y="1374.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1128.7" y="1347.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.7" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1128.7" y="1331.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.7" y="1342.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1128.7" y="1315.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.7" y="1326.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1128.7" y="1299.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.7" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (1 samples, 0.07%)</title><rect x="1128.7" y="1283.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.7" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.&lt;clinit&gt; (3 samples, 0.21%)</title><rect x="1129.5" y="1587.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.5" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.&lt;init&gt; (3 samples, 0.21%)</title><rect x="1129.5" y="1571.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.5" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (2 samples, 0.14%)</title><rect x="1129.5" y="1555.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.5" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache$Provider.newWeakCache (2 samples, 0.14%)</title><rect x="1129.5" y="1539.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.5" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.&lt;init&gt; (2 samples, 0.14%)</title><rect x="1129.5" y="1523.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.5" y="1534.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1129.5" y="1507.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1129.5" y="1491.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.5" y="1502.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1129.5" y="1475.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.5" y="1486.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1129.5" y="1459.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.5" y="1470.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1129.5" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.5" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1129.5" y="1427.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.5" y="1438.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1129.5" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.07%)</title><rect x="1129.5" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.07%)</title><rect x="1129.5" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.5" y="1390.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1129.5" y="1363.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.5" y="1374.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1129.5" y="1347.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.5" y="1358.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.07%)</title><rect x="1129.5" y="1331.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.5" y="1342.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build (1 samples, 0.07%)</title><rect x="1130.3" y="1507.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.3" y="1518.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1130.3" y="1491.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.3" y="1502.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1130.3" y="1475.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1130.3" y="1459.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.3" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1130.3" y="1443.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.3" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1130.3" y="1427.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.3" y="1438.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1130.3" y="1411.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.3" y="1422.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1130.3" y="1395.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.3" y="1406.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1130.3" y="1379.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.3" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1130.3" y="1363.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.3" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1130.3" y="1347.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1130.3" y="1331.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1130.3" y="1315.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.3" y="1326.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1130.3" y="1299.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1133.3" y="1310.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1130.3" y="1283.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1133.3" y="1294.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1130.3" y="1267.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1133.3" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1130.3" y="1251.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.3" y="1262.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1130.3" y="1235.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1133.3" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.07%)</title><rect x="1130.3" y="1219.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.3" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1130.3" y="1203.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.3" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1130.3" y="1187.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.3" y="1198.0"></text>
</g>
<g>
<title>Dictionary::is_valid_protection_domain(unsigned int, Symbol*, Handle) (1 samples, 0.07%)</title><rect x="1130.3" y="1171.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1133.3" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1131.1" y="1555.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.1" y="1566.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1131.1" y="1539.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.1" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1131.1" y="1523.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1131.1" y="1507.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.1" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1131.1" y="1491.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.1" y="1502.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1131.1" y="1475.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.1" y="1486.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1131.1" y="1459.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.1" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1131.1" y="1443.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.1" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1131.1" y="1427.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.concat (1 samples, 0.07%)</title><rect x="1131.1" y="1411.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.07%)</title><rect x="1131.1" y="1395.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.1" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (68 samples, 4.65%)</title><rect x="1131.9" y="1603.0" width="54.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.9" y="1614.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (68 samples, 4.65%)</title><rect x="1131.9" y="1587.0" width="54.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.9" y="1598.0">datad..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.instrument (4 samples, 0.27%)</title><rect x="1131.9" y="1571.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.9" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.applyInstrumentationTransformers (3 samples, 0.21%)</title><rect x="1131.9" y="1555.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.9" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/okhttp3/OkHttp3Instrumentation.transformers (1 samples, 0.07%)</title><rect x="1131.9" y="1539.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.9" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1131.9" y="1523.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.9" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1131.9" y="1507.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.9" y="1518.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1131.9" y="1491.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1134.9" y="1502.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.07%)</title><rect x="1131.9" y="1475.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.9" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1131.9" y="1459.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.9" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1131.9" y="1443.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.9" y="1454.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.07%)</title><rect x="1131.9" y="1427.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.9" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1132.7" y="1539.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.7" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1132.7" y="1523.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1135.7" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1132.7" y="1507.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.7" y="1518.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1132.7" y="1491.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.7" y="1502.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1132.7" y="1475.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.7" y="1486.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1132.7" y="1459.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.7" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1132.7" y="1443.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.7" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1132.7" y="1427.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.7" y="1438.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1132.7" y="1411.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.7" y="1422.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1132.7" y="1395.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1132.7" y="1379.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1132.7" y="1363.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.7" y="1374.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1132.7" y="1347.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1135.7" y="1358.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1132.7" y="1331.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1135.7" y="1342.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1315.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1135.7" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1299.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1135.7" y="1310.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1283.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.7" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1267.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.7" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1132.7" y="1251.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.7" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1235.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.7" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1219.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.7" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::copy_method_annotations(ConstMethod*, unsigned char const*, int, unsigned char const*, int, unsigned char const*, int, unsigned char const*, int, unsigned char const*, int, unsigned char const*, int, unsigned char const*, int, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1203.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.7" y="1214.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.07%)</title><rect x="1132.7" y="1187.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.7" y="1198.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.07%)</title><rect x="1132.7" y="1171.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1135.7" y="1182.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="1132.7" y="1155.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.include (1 samples, 0.07%)</title><rect x="1133.5" y="1539.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.5" y="1550.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="1133.5" y="1523.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.5" y="1534.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="1133.5" y="1507.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.5" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="1133.5" y="1491.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.5" y="1502.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="1133.5" y="1475.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1136.5" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.injectHelperClasses (1 samples, 0.07%)</title><rect x="1134.3" y="1555.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1137.3" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/servlet2/Servlet2Instrumentation.helperClassNames (1 samples, 0.07%)</title><rect x="1134.3" y="1539.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.3" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1134.3" y="1523.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1137.3" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1134.3" y="1507.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.3" y="1518.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1134.3" y="1491.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.3" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1134.3" y="1475.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1137.3" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1134.3" y="1459.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1137.3" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1134.3" y="1443.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.3" y="1454.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.07%)</title><rect x="1134.3" y="1427.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.3" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/AsyncPropagatingDisableInstrumentation.instrument (1 samples, 0.07%)</title><rect x="1135.2" y="1571.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.2" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1135.2" y="1555.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.2" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1539.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.2" y="1550.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1523.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.2" y="1534.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1507.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.2" y="1518.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1491.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.2" y="1502.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1475.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.2" y="1486.0"></text>
</g>
<g>
<title>ClassVerifier::verify_anewarray(unsigned short, unsigned short, constantPoolHandle const&amp;, StackMapFrame*, Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1459.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.2" y="1470.0"></text>
</g>
<g>
<title>ClassVerifier::create_temporary_symbol(char const*, int, Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1443.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.2" y="1454.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.07%)</title><rect x="1135.2" y="1427.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1138.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1136.0" y="1571.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.0" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1136.0" y="1555.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.0" y="1566.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1136.0" y="1539.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.0" y="1550.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1136.0" y="1523.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.0" y="1534.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1136.0" y="1507.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.0" y="1518.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1136.0" y="1491.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.0" y="1502.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1136.0" y="1475.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.0" y="1486.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1136.0" y="1459.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1136.0" y="1443.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1136.0" y="1427.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.0" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1136.0" y="1411.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.0" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1136.0" y="1395.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.0" y="1406.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1136.0" y="1379.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.0" y="1390.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1136.0" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.0" y="1374.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1136.0" y="1347.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.0" y="1358.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1136.0" y="1331.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.07%)</title><rect x="1136.0" y="1315.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.07%)</title><rect x="1136.0" y="1299.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.0" y="1310.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (20 samples, 1.37%)</title><rect x="1136.8" y="1571.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.8" y="1582.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (20 samples, 1.37%)</title><rect x="1136.8" y="1555.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.8" y="1566.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (20 samples, 1.37%)</title><rect x="1136.8" y="1539.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.8" y="1550.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (20 samples, 1.37%)</title><rect x="1136.8" y="1523.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.8" y="1534.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (10 samples, 0.68%)</title><rect x="1136.8" y="1507.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/Class.forName (9 samples, 0.62%)</title><rect x="1136.8" y="1491.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (9 samples, 0.62%)</title><rect x="1136.8" y="1475.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (9 samples, 0.62%)</title><rect x="1136.8" y="1459.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.8" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (9 samples, 0.62%)</title><rect x="1136.8" y="1443.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.8" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (9 samples, 0.62%)</title><rect x="1136.8" y="1427.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.8" y="1438.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.62%)</title><rect x="1136.8" y="1411.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.8" y="1422.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.07%)</title><rect x="1136.8" y="1395.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1139.8" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.07%)</title><rect x="1136.8" y="1379.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.8" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.07%)</title><rect x="1136.8" y="1363.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.8" y="1374.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (8 samples, 0.55%)</title><rect x="1137.6" y="1395.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.6" y="1406.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (8 samples, 0.55%)</title><rect x="1137.6" y="1379.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.6" y="1390.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (8 samples, 0.55%)</title><rect x="1137.6" y="1363.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.6" y="1374.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.07%)</title><rect x="1137.6" y="1347.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1140.6" y="1358.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.07%)</title><rect x="1137.6" y="1331.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.6" y="1342.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.07%)</title><rect x="1137.6" y="1315.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1140.6" y="1326.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(CompiledMethod*, NativeCall*) (1 samples, 0.07%)</title><rect x="1137.6" y="1299.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.6" y="1310.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.07%)</title><rect x="1137.6" y="1283.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.6" y="1294.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (4 samples, 0.27%)</title><rect x="1138.4" y="1347.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (4 samples, 0.27%)</title><rect x="1138.4" y="1331.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (4 samples, 0.27%)</title><rect x="1138.4" y="1315.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.4" y="1326.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (4 samples, 0.27%)</title><rect x="1138.4" y="1299.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1141.4" y="1310.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (4 samples, 0.27%)</title><rect x="1138.4" y="1283.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1141.4" y="1294.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (4 samples, 0.27%)</title><rect x="1138.4" y="1267.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1141.4" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (4 samples, 0.27%)</title><rect x="1138.4" y="1251.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.4" y="1262.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (3 samples, 0.21%)</title><rect x="1138.4" y="1235.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.4" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (3 samples, 0.21%)</title><rect x="1138.4" y="1219.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.4" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (3 samples, 0.21%)</title><rect x="1138.4" y="1203.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.4" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.14%)</title><rect x="1138.4" y="1187.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.4" y="1198.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.07%)</title><rect x="1138.4" y="1171.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.4" y="1182.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.07%)</title><rect x="1139.2" y="1171.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1142.2" y="1182.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.07%)</title><rect x="1140.0" y="1187.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.0" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.07%)</title><rect x="1140.8" y="1235.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.8" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.07%)</title><rect x="1140.8" y="1219.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.8" y="1230.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_load(JavaThread*, Klass*) (1 samples, 0.07%)</title><rect x="1140.8" y="1203.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.8" y="1214.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.07%)</title><rect x="1140.8" y="1187.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1143.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (3 samples, 0.21%)</title><rect x="1141.6" y="1347.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.6" y="1358.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (3 samples, 0.21%)</title><rect x="1141.6" y="1331.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.6" y="1342.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (3 samples, 0.21%)</title><rect x="1141.6" y="1315.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.6" y="1326.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (3 samples, 0.21%)</title><rect x="1141.6" y="1299.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.21%)</title><rect x="1141.6" y="1283.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1144.6" y="1294.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (2 samples, 0.14%)</title><rect x="1141.6" y="1267.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1144.6" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="1143.2" y="1267.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1146.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="1143.2" y="1251.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1146.2" y="1262.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.07%)</title><rect x="1143.2" y="1235.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1146.2" y="1246.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.parse (1 samples, 0.07%)</title><rect x="1144.0" y="1491.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.0" y="1502.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.parseLine (1 samples, 0.07%)</title><rect x="1144.0" y="1475.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.0" y="1486.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 0.07%)</title><rect x="1144.0" y="1459.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.0" y="1470.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 0.07%)</title><rect x="1144.0" y="1443.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.0" y="1454.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (10 samples, 0.68%)</title><rect x="1144.8" y="1507.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.8" y="1518.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.68%)</title><rect x="1144.8" y="1491.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.8" y="1502.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.07%)</title><rect x="1144.8" y="1475.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1147.8" y="1486.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.07%)</title><rect x="1144.8" y="1459.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.8" y="1470.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="1144.8" y="1443.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.8" y="1454.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="1144.8" y="1427.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1147.8" y="1438.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 0.62%)</title><rect x="1145.6" y="1475.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.6" y="1486.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 0.62%)</title><rect x="1145.6" y="1459.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 0.62%)</title><rect x="1145.6" y="1443.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (9 samples, 0.62%)</title><rect x="1145.6" y="1427.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (9 samples, 0.62%)</title><rect x="1145.6" y="1411.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (9 samples, 0.62%)</title><rect x="1145.6" y="1395.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.6" y="1406.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (9 samples, 0.62%)</title><rect x="1145.6" y="1379.0" width="7.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1148.6" y="1390.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (9 samples, 0.62%)</title><rect x="1145.6" y="1363.0" width="7.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1148.6" y="1374.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (9 samples, 0.62%)</title><rect x="1145.6" y="1347.0" width="7.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.6" y="1358.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (2 samples, 0.14%)</title><rect x="1145.6" y="1331.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.6" y="1342.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (2 samples, 0.14%)</title><rect x="1145.6" y="1315.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.6" y="1326.0"></text>
</g>
<g>
<title>ConstantPoolCache::allocate(ClassLoaderData*, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1145.6" y="1299.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.6" y="1310.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.07%)</title><rect x="1146.4" y="1299.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.4" y="1310.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.07%)</title><rect x="1146.4" y="1283.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.4" y="1294.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (7 samples, 0.48%)</title><rect x="1147.3" y="1331.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.3" y="1342.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (7 samples, 0.48%)</title><rect x="1147.3" y="1315.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.3" y="1326.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (7 samples, 0.48%)</title><rect x="1147.3" y="1299.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1150.3" y="1310.0"></text>
</g>
<g>
<title>ClassVerifier::verify_cp_class_type(unsigned short, int, constantPoolHandle const&amp;, Thread*) (1 samples, 0.07%)</title><rect x="1148.1" y="1283.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.1" y="1294.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (2 samples, 0.14%)</title><rect x="1148.9" y="1283.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.9" y="1294.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.07%)</title><rect x="1148.9" y="1267.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.9" y="1278.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.07%)</title><rect x="1148.9" y="1251.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.9" y="1262.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.07%)</title><rect x="1148.9" y="1235.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.9" y="1246.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.07%)</title><rect x="1149.7" y="1267.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.7" y="1278.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (3 samples, 0.21%)</title><rect x="1150.5" y="1283.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.5" y="1294.0"></text>
</g>
<g>
<title>SignatureInfo::do_array(int, int) (1 samples, 0.07%)</title><rect x="1151.3" y="1267.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.3" y="1278.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.07%)</title><rect x="1152.1" y="1267.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.1" y="1278.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (1 samples, 0.07%)</title><rect x="1152.9" y="1571.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.9" y="1582.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (1 samples, 0.07%)</title><rect x="1152.9" y="1555.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.9" y="1566.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (1 samples, 0.07%)</title><rect x="1152.9" y="1539.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.9" y="1550.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.07%)</title><rect x="1152.9" y="1523.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.9" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1152.9" y="1507.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1152.9" y="1491.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.07%)</title><rect x="1152.9" y="1475.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.9" y="1486.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinPoolInstrumentation.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1152.9" y="1459.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.9" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1152.9" y="1443.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.9" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1152.9" y="1427.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.getPackage (1 samples, 0.07%)</title><rect x="1152.9" y="1411.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.definePackage (1 samples, 0.07%)</title><rect x="1152.9" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.9" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.installOn (24 samples, 1.64%)</title><rect x="1153.7" y="1571.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.7" y="1582.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.installOn (24 samples, 1.64%)</title><rect x="1153.7" y="1555.0" width="19.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.7" y="1566.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.doInstall (24 samples, 1.64%)</title><rect x="1153.7" y="1539.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.7" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.makeRaw (3 samples, 0.21%)</title><rect x="1153.7" y="1523.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.7" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.&lt;clinit&gt; (3 samples, 0.21%)</title><rect x="1153.7" y="1507.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.7" y="1518.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.21%)</title><rect x="1153.7" y="1491.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.7" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 0.21%)</title><rect x="1153.7" y="1475.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.7" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 0.21%)</title><rect x="1153.7" y="1459.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.7" y="1470.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (2 samples, 0.14%)</title><rect x="1153.7" y="1443.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.7" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (2 samples, 0.14%)</title><rect x="1153.7" y="1427.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.7" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.14%)</title><rect x="1153.7" y="1411.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.7" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.14%)</title><rect x="1153.7" y="1395.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.7" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.07%)</title><rect x="1153.7" y="1379.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.7" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (1 samples, 0.07%)</title><rect x="1153.7" y="1363.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.7" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getGenericSignature (1 samples, 0.07%)</title><rect x="1153.7" y="1347.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.7" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.07%)</title><rect x="1153.7" y="1331.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.7" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.07%)</title><rect x="1153.7" y="1315.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.7" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor.onNonGenericType (1 samples, 0.07%)</title><rect x="1153.7" y="1299.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.7" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor.onNonGenericType (1 samples, 0.07%)</title><rect x="1153.7" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.7" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getInternalName (1 samples, 0.07%)</title><rect x="1153.7" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.07%)</title><rect x="1153.7" y="1251.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1156.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.replace (1 samples, 0.07%)</title><rect x="1153.7" y="1235.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.7" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.applyConstructorStrategy (1 samples, 0.07%)</title><rect x="1154.5" y="1379.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.5" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default.extractConstructors (1 samples, 0.07%)</title><rect x="1154.5" y="1363.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.5" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default$5.doExtractConstructors (1 samples, 0.07%)</title><rect x="1154.5" y="1347.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.5" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$AbstractBase.asTokenList (1 samples, 0.07%)</title><rect x="1154.5" y="1331.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.5" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asToken (1 samples, 0.07%)</title><rect x="1154.5" y="1315.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.5" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asToken (1 samples, 0.07%)</title><rect x="1154.5" y="1299.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTokenList (1 samples, 0.07%)</title><rect x="1154.5" y="1283.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$AbstractBase.asToken (1 samples, 0.07%)</title><rect x="1154.5" y="1267.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$AbstractBase.asToken (1 samples, 0.07%)</title><rect x="1154.5" y="1251.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1157.5" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getType (1 samples, 0.07%)</title><rect x="1154.5" y="1235.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.5" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Default$Unloaded.load (1 samples, 0.07%)</title><rect x="1155.3" y="1443.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.3" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/TypeResolutionStrategy$Passive.initialize (1 samples, 0.07%)</title><rect x="1155.3" y="1427.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.3" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$WrappingDispatcher.load (1 samples, 0.07%)</title><rect x="1155.3" y="1411.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.3" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1155.3" y="1395.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1158.3" y="1406.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1155.3" y="1379.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.3" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$CreationAction.run (1 samples, 0.07%)</title><rect x="1155.3" y="1363.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.3" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader$SynchronizationStrategy$CreationAction.run (1 samples, 0.07%)</title><rect x="1155.3" y="1347.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.3" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader.access$000 (1 samples, 0.07%)</title><rect x="1155.3" y="1331.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.3" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader.methodHandle (1 samples, 0.07%)</title><rect x="1155.3" y="1315.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="1155.3" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1158.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.07%)</title><rect x="1155.3" y="1283.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.07%)</title><rect x="1155.3" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.07%)</title><rect x="1155.3" y="1251.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1158.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.07%)</title><rect x="1155.3" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.07%)</title><rect x="1155.3" y="1219.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1158.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.07%)</title><rect x="1155.3" y="1203.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.07%)</title><rect x="1155.3" y="1187.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.07%)</title><rect x="1155.3" y="1171.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.07%)</title><rect x="1155.3" y="1155.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.3" y="1166.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.07%)</title><rect x="1155.3" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.3" y="1150.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.07%)</title><rect x="1155.3" y="1123.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1158.3" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy.apply (21 samples, 1.44%)</title><rect x="1156.1" y="1523.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.1" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.apply (7 samples, 0.48%)</title><rect x="1156.1" y="1507.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.1" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation.doApply (7 samples, 0.48%)</title><rect x="1156.1" y="1491.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.1" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.retransformClasses (7 samples, 0.48%)</title><rect x="1156.1" y="1475.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.48%)</title><rect x="1156.1" y="1459.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.48%)</title><rect x="1156.1" y="1443.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1159.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (7 samples, 0.48%)</title><rect x="1156.1" y="1427.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.1" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (7 samples, 0.48%)</title><rect x="1156.1" y="1411.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.1" y="1422.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses (7 samples, 0.48%)</title><rect x="1156.1" y="1395.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.1" y="1406.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses0 (7 samples, 0.48%)</title><rect x="1156.1" y="1379.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.1" y="1390.0"></text>
</g>
<g>
<title>retransformClasses (1 samples, 0.07%)</title><rect x="1156.1" y="1363.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1159.1" y="1374.0"></text>
</g>
<g>
<title>jvmti_RetransformClasses (1 samples, 0.07%)</title><rect x="1156.1" y="1347.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1159.1" y="1358.0"></text>
</g>
<g>
<title>JvmtiEnv::RetransformClasses(int, _jclass* const*) (1 samples, 0.07%)</title><rect x="1156.1" y="1331.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.1" y="1342.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.07%)</title><rect x="1156.1" y="1315.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.1" y="1326.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit_prologue() (1 samples, 0.07%)</title><rect x="1156.1" y="1299.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.1" y="1310.0"></text>
</g>
<g>
<title>VM_RedefineClasses::load_new_class_versions(Thread*) (1 samples, 0.07%)</title><rect x="1156.1" y="1283.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.1" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1156.1" y="1267.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.1" y="1278.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1156.1" y="1251.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.1" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1156.1" y="1235.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.1" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1156.1" y="1219.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.1" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.07%)</title><rect x="1156.1" y="1203.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.1" y="1214.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.07%)</title><rect x="1156.1" y="1187.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.1" y="1198.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (6 samples, 0.41%)</title><rect x="1156.9" y="1363.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.9" y="1374.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (6 samples, 0.41%)</title><rect x="1156.9" y="1347.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (6 samples, 0.41%)</title><rect x="1156.9" y="1331.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (6 samples, 0.41%)</title><rect x="1156.9" y="1315.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.9" y="1326.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.41%)</title><rect x="1156.9" y="1299.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (6 samples, 0.41%)</title><rect x="1156.9" y="1283.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (6 samples, 0.41%)</title><rect x="1156.9" y="1267.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.9" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (6 samples, 0.41%)</title><rect x="1156.9" y="1251.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.9" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (6 samples, 0.41%)</title><rect x="1156.9" y="1235.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1159.9" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (6 samples, 0.41%)</title><rect x="1156.9" y="1219.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.9" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (3 samples, 0.21%)</title><rect x="1156.9" y="1203.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1156.9" y="1187.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.9" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1156.9" y="1171.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.9" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1156.9" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.9" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1156.9" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.9" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1156.9" y="1123.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.9" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1156.9" y="1107.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.9" y="1118.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1156.9" y="1091.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1156.9" y="1075.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.9" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="1156.9" y="1059.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.9" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="1156.9" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.9" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="1156.9" y="1027.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="1156.9" y="1011.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1159.9" y="1022.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="1156.9" y="995.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1159.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (2 samples, 0.14%)</title><rect x="1157.7" y="1187.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.7" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (2 samples, 0.14%)</title><rect x="1157.7" y="1171.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1160.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (2 samples, 0.14%)</title><rect x="1157.7" y="1155.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.7" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.07%)</title><rect x="1157.7" y="1139.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.7" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.07%)</title><rect x="1157.7" y="1123.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.7" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1157.7" y="1107.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.7" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1157.7" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1157.7" y="1075.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.7" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1157.7" y="1059.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.7" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1157.7" y="1043.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.7" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1157.7" y="1027.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.7" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1157.7" y="1011.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.7" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1157.7" y="995.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.07%)</title><rect x="1157.7" y="979.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.07%)</title><rect x="1157.7" y="963.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.7" y="974.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.07%)</title><rect x="1157.7" y="947.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.7" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.07%)</title><rect x="1157.7" y="931.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1160.7" y="942.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.07%)</title><rect x="1157.7" y="915.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.7" y="926.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.07%)</title><rect x="1157.7" y="899.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.7" y="910.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.07%)</title><rect x="1157.7" y="883.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.7" y="894.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.07%)</title><rect x="1157.7" y="867.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.7" y="878.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.07%)</title><rect x="1157.7" y="851.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.7" y="862.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.getEntryPos (1 samples, 0.07%)</title><rect x="1157.7" y="835.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.7" y="846.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.CENNAM (1 samples, 0.07%)</title><rect x="1157.7" y="819.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.7" y="830.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.SH (1 samples, 0.07%)</title><rect x="1157.7" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1160.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (1 samples, 0.07%)</title><rect x="1158.5" y="1139.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.5" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1158.5" y="1123.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.5" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1158.5" y="1107.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.5" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1158.5" y="1091.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.5" y="1102.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.07%)</title><rect x="1158.5" y="1075.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.5" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1158.5" y="1059.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.5" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1158.5" y="1043.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.5" y="1054.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1158.5" y="1027.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.5" y="1038.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1158.5" y="1011.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.5" y="1022.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.07%)</title><rect x="1158.5" y="995.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1161.5" y="1006.0"></text>
</g>
<g>
<title>JVM_GetCPFieldSignatureUTF (1 samples, 0.07%)</title><rect x="1158.5" y="979.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1161.5" y="990.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.07%)</title><rect x="1158.5" y="963.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.5" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (3 samples, 0.21%)</title><rect x="1159.4" y="1203.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.07%)</title><rect x="1159.4" y="1187.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1162.4" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.07%)</title><rect x="1159.4" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.4" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.07%)</title><rect x="1159.4" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.4" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.07%)</title><rect x="1159.4" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.4" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.07%)</title><rect x="1159.4" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.4" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.extendBy (1 samples, 0.07%)</title><rect x="1159.4" y="1107.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.4" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.07%)</title><rect x="1159.4" y="1091.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="1159.4" y="1075.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="1159.4" y="1059.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="1159.4" y="1043.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeToken.hashCode (1 samples, 0.07%)</title><rect x="1159.4" y="1027.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.4" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractList.hashCode (1 samples, 0.07%)</title><rect x="1159.4" y="1011.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.hashCode (1 samples, 0.07%)</title><rect x="1159.4" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.14%)</title><rect x="1160.2" y="1187.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1163.2" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (2 samples, 0.14%)</title><rect x="1160.2" y="1171.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.2" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing.writeTo (1 samples, 0.07%)</title><rect x="1160.2" y="1155.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1160.2" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.2" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1160.2" y="1123.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.2" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1160.2" y="1107.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.2" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1160.2" y="1091.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1163.2" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1160.2" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1163.2" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1160.2" y="1059.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1163.2" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1160.2" y="1043.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1160.2" y="1027.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.2" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="1160.2" y="1011.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1163.2" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="1160.2" y="995.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.2" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="1160.2" y="979.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.2" y="990.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.07%)</title><rect x="1160.2" y="963.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1163.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="1161.0" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1164.0" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.07%)</title><rect x="1161.0" y="1139.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.0" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.07%)</title><rect x="1161.0" y="1123.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.0" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.07%)</title><rect x="1161.0" y="1107.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.0" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readStackMapFrame (1 samples, 0.07%)</title><rect x="1161.0" y="1091.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.0" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readVerificationTypeInfo (1 samples, 0.07%)</title><rect x="1161.0" y="1075.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1161.0" y="1059.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.0" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1161.0" y="1043.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.0" y="1054.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1161.0" y="1027.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.0" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1161.0" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.0" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1161.0" y="995.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.0" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1161.0" y="979.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.0" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1161.0" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.0" y="974.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1161.0" y="947.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.0" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1161.0" y="931.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.0" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1161.0" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.0" y="926.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1161.0" y="899.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1164.0" y="910.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1161.0" y="883.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1164.0" y="894.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="867.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1164.0" y="878.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="851.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.0" y="862.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="835.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.0" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="819.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.0" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="803.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.0" y="814.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="787.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.0" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::do_local_static_fields(void (*)(fieldDescriptor*, Handle, Thread*), Handle, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="771.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.0" y="782.0"></text>
</g>
<g>
<title>initialize_static_field(fieldDescriptor*, Handle, Thread*) (1 samples, 0.07%)</title><rect x="1161.0" y="755.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1164.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.consider (14 samples, 0.96%)</title><rect x="1161.8" y="1507.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.8" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.07%)</title><rect x="1161.8" y="1491.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.8" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.resolve (1 samples, 0.07%)</title><rect x="1161.8" y="1475.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.8" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.doConsider (12 samples, 0.82%)</title><rect x="1162.6" y="1491.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1165.6" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher.matches (11 samples, 0.75%)</title><rect x="1163.4" y="1475.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.4" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (11 samples, 0.75%)</title><rect x="1163.4" y="1459.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.4" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.07%)</title><rect x="1164.2" y="1443.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.2" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.07%)</title><rect x="1164.2" y="1427.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.2" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.computeIfAbsent (1 samples, 0.07%)</title><rect x="1164.2" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.2" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.07%)</title><rect x="1164.2" y="1395.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.2" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.07%)</title><rect x="1164.2" y="1379.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.2" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.07%)</title><rect x="1164.2" y="1363.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.2" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.07%)</title><rect x="1164.2" y="1347.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.2" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.07%)</title><rect x="1164.2" y="1331.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.2" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.07%)</title><rect x="1164.2" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.traverseHierarchy (1 samples, 0.07%)</title><rect x="1164.2" y="1299.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.2" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findFieldsForType (1 samples, 0.07%)</title><rect x="1164.2" y="1283.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.2" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredFields (1 samples, 0.07%)</title><rect x="1164.2" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.2" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredFields (1 samples, 0.07%)</title><rect x="1164.2" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1167.2" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.getDeclaredFields (1 samples, 0.07%)</title><rect x="1164.2" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1167.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1164.2" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1167.2" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1164.2" y="1203.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.2" y="1214.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1164.2" y="1187.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.2" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1164.2" y="1171.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.2" y="1182.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1164.2" y="1155.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.2" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1164.2" y="1139.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1167.2" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1164.2" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1167.2" y="1134.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1164.2" y="1107.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1164.2" y="1091.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1164.2" y="1075.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1167.2" y="1086.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1164.2" y="1059.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1167.2" y="1070.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1164.2" y="1043.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1167.2" y="1054.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1164.2" y="1027.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1167.2" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1164.2" y="1011.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.2" y="1022.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1164.2" y="995.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.2" y="1006.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.07%)</title><rect x="1164.2" y="979.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.2" y="990.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.07%)</title><rect x="1164.2" y="963.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.2" y="974.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (1 samples, 0.07%)</title><rect x="1164.2" y="947.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1167.2" y="958.0"></text>
</g>
<g>
<title>transformClassFile (1 samples, 0.07%)</title><rect x="1164.2" y="931.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1167.2" y="942.0"></text>
</g>
<g>
<title>tryToAcquireReentrancyToken (1 samples, 0.07%)</title><rect x="1164.2" y="915.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1167.2" y="926.0"></text>
</g>
<g>
<title>JvmtiEnv::GetThreadLocalStorage(_jobject*, void**) (1 samples, 0.07%)</title><rect x="1164.2" y="899.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (9 samples, 0.62%)</title><rect x="1165.0" y="1443.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.0" y="1454.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (2 samples, 0.14%)</title><rect x="1165.0" y="1427.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.0" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.14%)</title><rect x="1165.0" y="1411.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1168.0" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="1165.8" y="1395.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.8" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.matches (1 samples, 0.07%)</title><rect x="1165.8" y="1379.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.8" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.34%)</title><rect x="1166.6" y="1427.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.6" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 0.34%)</title><rect x="1166.6" y="1411.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1169.6" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (5 samples, 0.34%)</title><rect x="1166.6" y="1395.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.6" y="1406.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (5 samples, 0.34%)</title><rect x="1166.6" y="1379.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.6" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (5 samples, 0.34%)</title><rect x="1166.6" y="1363.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.6" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (5 samples, 0.34%)</title><rect x="1166.6" y="1347.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.6" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (5 samples, 0.34%)</title><rect x="1166.6" y="1331.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.6" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (5 samples, 0.34%)</title><rect x="1166.6" y="1315.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1169.6" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (5 samples, 0.34%)</title><rect x="1166.6" y="1299.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.6" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.07%)</title><rect x="1166.6" y="1283.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.6" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.07%)</title><rect x="1166.6" y="1267.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.6" y="1278.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.07%)</title><rect x="1166.6" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.07%)</title><rect x="1166.6" y="1235.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.07%)</title><rect x="1166.6" y="1219.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.07%)</title><rect x="1166.6" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/module/Resources.toPackageName (1 samples, 0.07%)</title><rect x="1166.6" y="1187.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.replace (1 samples, 0.07%)</title><rect x="1166.6" y="1171.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.6" y="1182.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1166.6" y="1155.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.6" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1166.6" y="1139.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.6" y="1150.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_vtable_call(Bytecodes::Code, methodHandle const&amp;, int) (1 samples, 0.07%)</title><rect x="1166.6" y="1123.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.6" y="1134.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.07%)</title><rect x="1166.6" y="1107.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.6" y="1118.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.07%)</title><rect x="1166.6" y="1091.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.6" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (4 samples, 0.27%)</title><rect x="1167.4" y="1283.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.4" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.21%)</title><rect x="1167.4" y="1267.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.4" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 0.21%)</title><rect x="1167.4" y="1251.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.4" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 0.21%)</title><rect x="1167.4" y="1235.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.4" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.07%)</title><rect x="1167.4" y="1219.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.4" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.07%)</title><rect x="1168.2" y="1219.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.07%)</title><rect x="1168.2" y="1203.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.2" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visit (1 samples, 0.07%)</title><rect x="1168.2" y="1187.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.2" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.07%)</title><rect x="1168.2" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.2" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.07%)</title><rect x="1168.2" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1168.2" y="1139.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.2" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1168.2" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.2" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1168.2" y="1107.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.2" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1168.2" y="1091.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.2" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1168.2" y="1075.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1171.2" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1168.2" y="1059.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.2" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1168.2" y="1043.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.2" y="1054.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1168.2" y="1027.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1168.2" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1168.2" y="995.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.2" y="1006.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1168.2" y="979.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1171.2" y="990.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1168.2" y="963.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1171.2" y="974.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1168.2" y="947.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1171.2" y="958.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1168.2" y="931.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.2" y="942.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1168.2" y="915.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.2" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1168.2" y="899.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.2" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1168.2" y="883.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.2" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.07%)</title><rect x="1168.2" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.2" y="878.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.07%)</title><rect x="1168.2" y="851.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$MethodExtractor.visitEnd (1 samples, 0.07%)</title><rect x="1169.0" y="1219.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1169.0" y="1203.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.0" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1169.0" y="1187.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.0" y="1198.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1169.0" y="1171.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1172.0" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1169.0" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.0" y="1166.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1169.0" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1172.0" y="1150.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1169.0" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.0" y="1134.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1169.0" y="1107.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.0" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1169.0" y="1091.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1169.0" y="1075.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1169.0" y="1059.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1172.0" y="1070.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.07%)</title><rect x="1169.0" y="1043.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1172.0" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/OpenedClassReader.of (1 samples, 0.07%)</title><rect x="1169.8" y="1267.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.8" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1169.8" y="1251.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.8" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1169.8" y="1235.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.8" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1169.8" y="1219.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.8" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (2 samples, 0.14%)</title><rect x="1170.6" y="1427.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.6" y="1438.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.07%)</title><rect x="1171.4" y="1411.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1174.4" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.ofType (1 samples, 0.07%)</title><rect x="1172.3" y="1491.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.3" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule$Dispatcher$Enabled.moduleOf (1 samples, 0.07%)</title><rect x="1172.3" y="1475.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.07%)</title><rect x="1172.3" y="1459.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1175.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="1172.3" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.07%)</title><rect x="1172.3" y="1427.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generateMethod (1 samples, 0.07%)</title><rect x="1172.3" y="1411.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generate (1 samples, 0.07%)</title><rect x="1172.3" y="1395.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/reflect/AccessorGenerator.emitCommonConstantPoolEntries (1 samples, 0.07%)</title><rect x="1172.3" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.3" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (16 samples, 1.09%)</title><rect x="1173.1" y="1571.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.1" y="1582.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (3 samples, 0.21%)</title><rect x="1173.1" y="1555.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.1" y="1566.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (3 samples, 0.21%)</title><rect x="1173.1" y="1539.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.14%)</title><rect x="1173.1" y="1523.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1176.1" y="1534.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (2 samples, 0.14%)</title><rect x="1173.1" y="1507.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.1" y="1518.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (2 samples, 0.14%)</title><rect x="1173.1" y="1491.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.1" y="1502.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.14%)</title><rect x="1173.1" y="1475.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.1" y="1486.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.14%)</title><rect x="1173.1" y="1459.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.1" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.14%)</title><rect x="1173.1" y="1443.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1176.1" y="1454.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (2 samples, 0.14%)</title><rect x="1173.1" y="1427.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.1" y="1438.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1173.1" y="1411.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1173.1" y="1395.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1173.1" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1176.1" y="1390.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1173.1" y="1363.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1176.1" y="1374.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1173.1" y="1347.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1176.1" y="1358.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1173.1" y="1331.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1176.1" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1173.1" y="1315.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.1" y="1326.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1173.1" y="1299.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.1" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.07%)</title><rect x="1173.1" y="1283.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.1" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.07%)</title><rect x="1173.1" y="1267.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.1" y="1278.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.07%)</title><rect x="1173.1" y="1251.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.1" y="1262.0"></text>
</g>
<g>
<title>BytecodeAssembler::invokespecial(Symbol*, Symbol*, Symbol*) (1 samples, 0.07%)</title><rect x="1173.1" y="1235.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1173.9" y="1411.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.9" y="1422.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="1173.9" y="1395.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1176.9" y="1406.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="1173.9" y="1379.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.9" y="1390.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="1173.9" y="1363.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="1173.9" y="1347.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1176.9" y="1358.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="1173.9" y="1331.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1176.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isDefaultFinalizer (1 samples, 0.07%)</title><rect x="1174.7" y="1523.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.7" y="1534.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.isFinalizer (1 samples, 0.07%)</title><rect x="1174.7" y="1507.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.7" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.takesNoArguments (1 samples, 0.07%)</title><rect x="1174.7" y="1491.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.7" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.takesArguments (1 samples, 0.07%)</title><rect x="1174.7" y="1475.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1174.7" y="1459.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.7" y="1470.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1174.7" y="1443.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1177.7" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.07%)</title><rect x="1174.7" y="1427.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1177.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.07%)</title><rect x="1174.7" y="1411.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.7" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (13 samples, 0.89%)</title><rect x="1175.5" y="1555.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.5" y="1566.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split.&lt;init&gt; (13 samples, 0.89%)</title><rect x="1175.5" y="1539.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.5" y="1550.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor.&lt;clinit&gt; (13 samples, 0.89%)</title><rect x="1175.5" y="1523.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.5" y="1534.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.89%)</title><rect x="1175.5" y="1507.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1178.5" y="1518.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 0.89%)</title><rect x="1175.5" y="1491.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.5" y="1502.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 0.89%)</title><rect x="1175.5" y="1475.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.5" y="1486.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.&lt;clinit&gt; (13 samples, 0.89%)</title><rect x="1175.5" y="1459.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.5" y="1470.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.89%)</title><rect x="1175.5" y="1443.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.5" y="1454.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 0.89%)</title><rect x="1175.5" y="1427.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1178.5" y="1438.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 0.89%)</title><rect x="1175.5" y="1411.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.5" y="1422.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection.make (12 samples, 0.82%)</title><rect x="1175.5" y="1395.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1178.5" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1175.5" y="1379.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.5" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1175.5" y="1363.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1175.5" y="1347.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.5" y="1358.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.07%)</title><rect x="1175.5" y="1331.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1175.5" y="1315.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.5" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1175.5" y="1299.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.5" y="1310.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.07%)</title><rect x="1175.5" y="1283.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1294.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1175.5" y="1267.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.5" y="1278.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.07%)</title><rect x="1175.5" y="1251.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.5" y="1262.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.07%)</title><rect x="1175.5" y="1235.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.5" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.14%)</title><rect x="1176.3" y="1379.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.3" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.14%)</title><rect x="1176.3" y="1363.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1176.3" y="1347.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.3" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1176.3" y="1331.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.3" y="1342.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1176.3" y="1315.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.3" y="1326.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1176.3" y="1299.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.3" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1176.3" y="1283.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.3" y="1294.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1176.3" y="1267.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.3" y="1278.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1176.3" y="1251.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1176.3" y="1235.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.3" y="1246.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="1176.3" y="1219.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.3" y="1230.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.07%)</title><rect x="1176.3" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.3" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.07%)</title><rect x="1176.3" y="1187.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.3" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.asGenericType (1 samples, 0.07%)</title><rect x="1177.1" y="1347.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.1" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1177.1" y="1331.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.1" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1177.1" y="1315.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1177.1" y="1299.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.1" y="1310.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1177.1" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.1" y="1294.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1177.1" y="1267.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1180.1" y="1278.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1177.1" y="1251.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.1" y="1262.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1177.1" y="1235.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.1" y="1246.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1177.1" y="1219.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1180.1" y="1230.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1177.1" y="1203.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1180.1" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1177.1" y="1187.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1177.1" y="1171.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.07%)</title><rect x="1177.1" y="1155.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.1" y="1166.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.07%)</title><rect x="1177.1" y="1139.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1180.1" y="1150.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.07%)</title><rect x="1177.1" y="1123.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1180.1" y="1134.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.07%)</title><rect x="1177.1" y="1107.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1180.1" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.07%)</title><rect x="1177.1" y="1091.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.1" y="1102.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.07%)</title><rect x="1177.1" y="1075.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.1" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.07%)</title><rect x="1177.1" y="1059.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.1" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.07%)</title><rect x="1177.1" y="1043.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.1" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) [clone .part.139] (1 samples, 0.07%)</title><rect x="1177.1" y="1027.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.1" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.07%)</title><rect x="1177.1" y="1011.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.1" y="1022.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.07%)</title><rect x="1177.1" y="995.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.1" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (7 samples, 0.48%)</title><rect x="1177.9" y="1379.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.9" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (7 samples, 0.48%)</title><rect x="1177.9" y="1363.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.9" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 0.48%)</title><rect x="1177.9" y="1347.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.9" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 0.48%)</title><rect x="1177.9" y="1331.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1180.9" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (4 samples, 0.27%)</title><rect x="1177.9" y="1315.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.9" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1177.9" y="1299.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.9" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1177.9" y="1283.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.9" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1177.9" y="1267.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.9" y="1278.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1177.9" y="1251.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.9" y="1262.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1177.9" y="1235.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.9" y="1246.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.07%)</title><rect x="1177.9" y="1219.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1180.9" y="1230.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.07%)</title><rect x="1177.9" y="1203.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1180.9" y="1214.0"></text>
</g>
<g>
<title>__strchr_avx2 (1 samples, 0.07%)</title><rect x="1177.9" y="1187.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1180.9" y="1198.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1178.7" y="1299.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.7" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.07%)</title><rect x="1178.7" y="1283.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.7" y="1294.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="1178.7" y="1267.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.7" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="1178.7" y="1251.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.7" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="1178.7" y="1235.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.7" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.07%)</title><rect x="1178.7" y="1219.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.7" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.07%)</title><rect x="1178.7" y="1203.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.7" y="1214.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="1178.7" y="1187.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.7" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.07%)</title><rect x="1178.7" y="1171.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.7" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.07%)</title><rect x="1178.7" y="1155.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.7" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1178.7" y="1139.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.7" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1178.7" y="1123.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.7" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1178.7" y="1107.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.7" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1178.7" y="1091.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1178.7" y="1075.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.7" y="1086.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1178.7" y="1059.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.7" y="1070.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1178.7" y="1043.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.7" y="1054.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.07%)</title><rect x="1178.7" y="1027.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1181.7" y="1038.0"></text>
</g>
<g>
<title>signature_to_fieldtype (1 samples, 0.07%)</title><rect x="1178.7" y="1011.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1181.7" y="1022.0"></text>
</g>
<g>
<title>class_name_to_ID (1 samples, 0.07%)</title><rect x="1178.7" y="995.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1181.7" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (2 samples, 0.14%)</title><rect x="1179.5" y="1299.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.5" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (2 samples, 0.14%)</title><rect x="1179.5" y="1283.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.5" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.07%)</title><rect x="1179.5" y="1267.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.5" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.detach (1 samples, 0.07%)</title><rect x="1179.5" y="1251.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1182.5" y="1262.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.07%)</title><rect x="1179.5" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.5" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.07%)</title><rect x="1179.5" y="1219.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.5" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.07%)</title><rect x="1179.5" y="1203.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.5" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$TypeToken.equals (1 samples, 0.07%)</title><rect x="1179.5" y="1187.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1182.5" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractList.equals (1 samples, 0.07%)</title><rect x="1179.5" y="1171.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1182.5" y="1182.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.07%)</title><rect x="1179.5" y="1155.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.5" y="1166.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.07%)</title><rect x="1179.5" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.5" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractList$ListItr.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1179.5" y="1123.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.5" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1179.5" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.5" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.07%)</title><rect x="1180.3" y="1267.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.3" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Default.getSuperClass (1 samples, 0.07%)</title><rect x="1180.3" y="1251.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.3" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1180.3" y="1235.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.3" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1180.3" y="1219.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.3" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1180.3" y="1203.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.3" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1180.3" y="1187.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.3" y="1198.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1180.3" y="1171.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.3" y="1182.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1180.3" y="1155.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.3" y="1166.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.07%)</title><rect x="1180.3" y="1139.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1183.3" y="1150.0"></text>
</g>
<g>
<title>jni_GetSuperclass (1 samples, 0.07%)</title><rect x="1180.3" y="1123.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1183.3" y="1134.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (1 samples, 0.07%)</title><rect x="1180.3" y="1107.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.forCreation (1 samples, 0.07%)</title><rect x="1181.1" y="1315.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.1" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Default.getRecordComponents (1 samples, 0.07%)</title><rect x="1181.1" y="1299.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1181.1" y="1283.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.1" y="1294.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1181.1" y="1267.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.1" y="1278.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1181.1" y="1251.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.1" y="1262.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1181.1" y="1235.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.1" y="1246.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1181.1" y="1219.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.1" y="1230.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1181.1" y="1203.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.1" y="1214.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1181.1" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1184.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1181.1" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.07%)</title><rect x="1181.1" y="1155.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.07%)</title><rect x="1181.1" y="1139.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.1" y="1150.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.07%)</title><rect x="1181.1" y="1123.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1184.1" y="1134.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="1181.1" y="1107.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.1" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.14%)</title><rect x="1181.9" y="1315.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.9" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (2 samples, 0.14%)</title><rect x="1181.9" y="1299.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.9" y="1310.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getGenericSignature (1 samples, 0.07%)</title><rect x="1181.9" y="1283.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.9" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Default.getTypeVariables (1 samples, 0.07%)</title><rect x="1181.9" y="1267.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.9" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes.attachVariables (1 samples, 0.07%)</title><rect x="1181.9" y="1251.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.9" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1181.9" y="1235.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.9" y="1246.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1181.9" y="1219.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.9" y="1230.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1181.9" y="1203.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.9" y="1214.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.07%)</title><rect x="1181.9" y="1187.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.9" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.07%)</title><rect x="1182.7" y="1283.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.7" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyBody (1 samples, 0.07%)</title><rect x="1182.7" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.7" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyAttributes (1 samples, 0.07%)</title><rect x="1182.7" y="1251.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.7" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/attribute/MethodAttributeAppender$ForInstrumentedMethod.apply (1 samples, 0.07%)</title><rect x="1182.7" y="1235.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.7" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/attribute/MethodAttributeAppender$ForInstrumentedMethod$2.appendReceiver (1 samples, 0.07%)</title><rect x="1182.7" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.7" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$Latent.getReceiverType (1 samples, 0.07%)</title><rect x="1182.7" y="1203.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.7" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$InDefinedShape$AbstractBase.getReceiverType (1 samples, 0.07%)</title><rect x="1182.7" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.7" y="1198.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1182.7" y="1171.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.7" y="1182.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1182.7" y="1155.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.7" y="1166.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1182.7" y="1139.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.7" y="1150.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.07%)</title><rect x="1182.7" y="1123.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.7" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1182.7" y="1107.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.7" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1182.7" y="1091.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1182.7" y="1075.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.7" y="1086.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1182.7" y="1059.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.7" y="1070.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1182.7" y="1043.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.7" y="1054.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.07%)</title><rect x="1182.7" y="1027.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1185.7" y="1038.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.07%)</title><rect x="1182.7" y="1011.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1185.7" y="1022.0"></text>
</g>
<g>
<title>merge_fullinfo_types (1 samples, 0.07%)</title><rect x="1182.7" y="995.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1185.7" y="1006.0"></text>
</g>
<g>
<title>jni_IsSameObject (1 samples, 0.07%)</title><rect x="1182.7" y="979.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1185.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (1 samples, 0.07%)</title><rect x="1183.5" y="1379.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.5" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (1 samples, 0.07%)</title><rect x="1183.5" y="1363.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.5" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.defineMethod (1 samples, 0.07%)</title><rect x="1183.5" y="1347.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.5" y="1358.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter.defineMethod (1 samples, 0.07%)</title><rect x="1183.5" y="1331.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1183.5" y="1315.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1186.5" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1183.5" y="1299.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1186.5" y="1310.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1183.5" y="1283.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1186.5" y="1294.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1183.5" y="1267.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.5" y="1278.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1183.5" y="1251.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.5" y="1262.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1183.5" y="1235.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.5" y="1246.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1183.5" y="1219.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1183.5" y="1203.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1186.5" y="1214.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="1183.5" y="1187.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.5" y="1198.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.07%)</title><rect x="1183.5" y="1171.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.5" y="1182.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.07%)</title><rect x="1183.5" y="1155.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="1183.5" y="1139.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1186.5" y="1150.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.07%)</title><rect x="1183.5" y="1123.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1186.5" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase$Adapter.intercept (1 samples, 0.07%)</title><rect x="1184.4" y="1379.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.4" y="1390.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter.intercept (1 samples, 0.07%)</title><rect x="1184.4" y="1363.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.4" y="1374.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter.materialize (1 samples, 0.07%)</title><rect x="1184.4" y="1347.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.4" y="1358.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.07%)</title><rect x="1184.4" y="1331.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.4" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1184.4" y="1315.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.4" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1184.4" y="1299.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.4" y="1310.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1184.4" y="1283.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.4" y="1294.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1184.4" y="1267.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.4" y="1278.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.07%)</title><rect x="1184.4" y="1251.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1187.4" y="1262.0"></text>
</g>
<g>
<title>JVM_GetMethodIxExceptionTableLength (1 samples, 0.07%)</title><rect x="1184.4" y="1235.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1187.4" y="1246.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.07%)</title><rect x="1184.4" y="1219.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.4" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1185.2" y="1395.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.2" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1185.2" y="1379.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.2" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.07%)</title><rect x="1185.2" y="1363.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.07%)</title><rect x="1185.2" y="1347.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.2" y="1358.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.07%)</title><rect x="1185.2" y="1331.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.2" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.07%)</title><rect x="1185.2" y="1315.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.2" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.07%)</title><rect x="1185.2" y="1299.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.2" y="1310.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.07%)</title><rect x="1185.2" y="1283.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.2" y="1294.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1185.2" y="1267.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.2" y="1278.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.07%)</title><rect x="1185.2" y="1251.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1188.2" y="1262.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.07%)</title><rect x="1185.2" y="1235.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1188.2" y="1246.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.07%)</title><rect x="1185.2" y="1219.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.2" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.assureReadEdgeTo (1 samples, 0.07%)</title><rect x="1186.0" y="1571.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.0" y="1582.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.with (1 samples, 0.07%)</title><rect x="1186.0" y="1555.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.0" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1186.0" y="1539.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.0" y="1550.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.07%)</title><rect x="1186.0" y="1523.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.0" y="1534.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.07%)</title><rect x="1186.0" y="1507.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.0" y="1518.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1186.0" y="1491.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.0" y="1502.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1186.0" y="1475.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.0" y="1486.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.07%)</title><rect x="1186.0" y="1459.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.0" y="1470.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.07%)</title><rect x="1186.0" y="1443.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.07%)</title><rect x="1186.0" y="1427.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.0" y="1438.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.07%)</title><rect x="1186.0" y="1411.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.0" y="1422.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.07%)</title><rect x="1186.0" y="1395.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.0" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startProfilingAgent (4 samples, 0.27%)</title><rect x="1186.8" y="1683.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.8" y="1694.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getProfilingClassloader (1 samples, 0.07%)</title><rect x="1186.8" y="1667.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.8" y="1678.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDelegateClassLoader (1 samples, 0.07%)</title><rect x="1186.8" y="1651.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.8" y="1662.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.07%)</title><rect x="1186.8" y="1635.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.8" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1186.8" y="1619.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.8" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.07%)</title><rect x="1186.8" y="1603.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.07%)</title><rect x="1186.8" y="1587.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.8" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1186.8" y="1571.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.8" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1186.8" y="1555.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.8" y="1566.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1186.8" y="1539.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.8" y="1550.0"></text>
</g>
<g>
<title>java/io/File.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1186.8" y="1523.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.07%)</title><rect x="1186.8" y="1507.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.21%)</title><rect x="1187.6" y="1667.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.21%)</title><rect x="1187.6" y="1651.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.21%)</title><rect x="1187.6" y="1635.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.6" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.21%)</title><rect x="1187.6" y="1619.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.6" y="1630.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1187.6" y="1603.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.6" y="1614.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.asPredicate (1 samples, 0.07%)</title><rect x="1187.6" y="1587.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.6" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.findMethodHandleType (1 samples, 0.07%)</title><rect x="1187.6" y="1571.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.6" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodType.makeImpl (1 samples, 0.07%)</title><rect x="1187.6" y="1555.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.findForm (1 samples, 0.07%)</title><rect x="1187.6" y="1539.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (1 samples, 0.07%)</title><rect x="1187.6" y="1523.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.6" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalizeAll (1 samples, 0.07%)</title><rect x="1187.6" y="1507.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.6" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodTypeForm.canonicalize (1 samples, 0.07%)</title><rect x="1187.6" y="1491.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.6" y="1502.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.run (2 samples, 0.14%)</title><rect x="1188.4" y="1603.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.4" y="1614.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;clinit&gt; (2 samples, 0.14%)</title><rect x="1188.4" y="1587.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.4" y="1598.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (2 samples, 0.14%)</title><rect x="1188.4" y="1571.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.4" y="1582.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1188.4" y="1555.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.07%)</title><rect x="1188.4" y="1539.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.4" y="1550.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1188.4" y="1523.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.4" y="1534.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1188.4" y="1507.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.4" y="1518.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.07%)</title><rect x="1188.4" y="1491.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.4" y="1502.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.07%)</title><rect x="1188.4" y="1475.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.4" y="1486.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.07%)</title><rect x="1188.4" y="1459.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.4" y="1470.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.findAdapter (1 samples, 0.07%)</title><rect x="1188.4" y="1443.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.4" y="1454.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLocaleServiceProvider (1 samples, 0.07%)</title><rect x="1188.4" y="1427.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.4" y="1438.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getDecimalFormatSymbolsProvider (1 samples, 0.07%)</title><rect x="1188.4" y="1411.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.4" y="1422.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.07%)</title><rect x="1188.4" y="1395.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.4" y="1406.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter$$Lambda$35/1066376662.run (1 samples, 0.07%)</title><rect x="1188.4" y="1379.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.4" y="1390.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.lambda$getDecimalFormatSymbolsProvider$4 (1 samples, 0.07%)</title><rect x="1188.4" y="1363.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.4" y="1374.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLanguageTagSet (1 samples, 0.07%)</title><rect x="1188.4" y="1347.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.4" y="1358.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter.createLanguageTagSet (1 samples, 0.07%)</title><rect x="1188.4" y="1331.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.4" y="1342.0"></text>
</g>
<g>
<title>java/util/StringTokenizer.hasMoreTokens (1 samples, 0.07%)</title><rect x="1188.4" y="1315.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.4" y="1326.0"></text>
</g>
<g>
<title>java/util/StringTokenizer.skipDelimiters (1 samples, 0.07%)</title><rect x="1188.4" y="1299.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.4" y="1310.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (1 samples, 0.07%)</title><rect x="1189.2" y="1555.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.2" y="1566.0"></text>
</g>
<g>
<title>java/util/UUID$Holder.&lt;clinit&gt; (1 samples, 0.07%)</title><rect x="1189.2" y="1539.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.2" y="1550.0"></text>
</g>
<g>
<title>java/security/SecureRandom.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1189.2" y="1523.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1192.2" y="1534.0"></text>
</g>
<g>
<title>java/security/SecureRandom.getDefaultPRNG (1 samples, 0.07%)</title><rect x="1189.2" y="1507.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.2" y="1518.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.07%)</title><rect x="1189.2" y="1491.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.2" y="1502.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.07%)</title><rect x="1189.2" y="1475.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.2" y="1486.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.07%)</title><rect x="1189.2" y="1459.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1192.2" y="1470.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getProvider (1 samples, 0.07%)</title><rect x="1189.2" y="1443.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.2" y="1454.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderConfig.getProvider (1 samples, 0.07%)</title><rect x="1189.2" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.2" y="1438.0"></text>
</g>
<g>
<title>sun/security/provider/Sun.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1189.2" y="1411.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.2" y="1422.0"></text>
</g>
<g>
<title>sun/security/provider/Sun.putEntries (1 samples, 0.07%)</title><rect x="1189.2" y="1395.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.2" y="1406.0"></text>
</g>
</g>
</svg>
