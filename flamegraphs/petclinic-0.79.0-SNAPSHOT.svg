<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1365"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1365"> </text>
<g id="frames">
<g>
<title>all (207 samples, 100.00%)</title><rect x="10.0" y="1331.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1342.0">all</text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.97%)</title><rect x="10.0" y="1315.0" width="11.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1326.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.97%)</title><rect x="21.4" y="1315.0" width="11.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="24.4" y="1326.0"></text>
</g>
<g>
<title>Interpreter (2 samples, 0.97%)</title><rect x="21.4" y="1299.0" width="11.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="24.4" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.48%)</title><rect x="32.8" y="1315.0" width="5.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="35.8" y="1326.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.48%)</title><rect x="38.5" y="1315.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="41.5" y="1326.0"></text>
</g>
<g>
<title>datadog/trace/benchmark/LoadClasses.main (1 samples, 0.48%)</title><rect x="44.2" y="1315.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.48%)</title><rect x="44.2" y="1299.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.48%)</title><rect x="44.2" y="1283.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.2" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (1 samples, 0.48%)</title><rect x="44.2" y="1267.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.2" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="44.2" y="1251.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="47.2" y="1262.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.48%)</title><rect x="44.2" y="1235.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="47.2" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.48%)</title><rect x="44.2" y="1219.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="47.2" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.48%)</title><rect x="44.2" y="1203.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.2" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.48%)</title><rect x="44.2" y="1187.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="47.2" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::load_shared_class(InstanceKlass*, Handle, Handle, Thread*) (1 samples, 0.48%)</title><rect x="44.2" y="1171.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="47.2" y="1182.0"></text>
</g>
<g>
<title>KlassFactory::check_shared_class_file_load_hook(InstanceKlass*, Symbol*, Handle, Handle, Thread*) (1 samples, 0.48%)</title><rect x="44.2" y="1155.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.2" y="1166.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**) (1 samples, 0.48%)</title><rect x="44.2" y="1139.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="47.2" y="1150.0"></text>
</g>
<g>
<title>JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool) (1 samples, 0.48%)</title><rect x="44.2" y="1123.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="47.2" y="1134.0"></text>
</g>
<g>
<title>eventHandlerClassFileLoadHook (1 samples, 0.48%)</title><rect x="44.2" y="1107.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="47.2" y="1118.0"></text>
</g>
<g>
<title>transformClassFile (1 samples, 0.48%)</title><rect x="44.2" y="1091.0" width="5.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="47.2" y="1102.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.48%)</title><rect x="44.2" y="1075.0" width="5.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="47.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (1 samples, 0.48%)</title><rect x="49.9" y="1315.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.9" y="1326.0"></text>
</g>
<g>
<title>java/time/ZoneId.systemDefault (1 samples, 0.48%)</title><rect x="49.9" y="1299.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.9" y="1310.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefault (1 samples, 0.48%)</title><rect x="49.9" y="1283.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.9" y="1294.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefaultRef (1 samples, 0.48%)</title><rect x="49.9" y="1267.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.9" y="1278.0"></text>
</g>
<g>
<title>java/util/TimeZone.setDefaultZone (1 samples, 0.48%)</title><rect x="49.9" y="1251.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.9" y="1262.0"></text>
</g>
<g>
<title>java/util/TimeZone.getTimeZone (1 samples, 0.48%)</title><rect x="49.9" y="1235.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.9" y="1246.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTimeZone (1 samples, 0.48%)</title><rect x="49.9" y="1219.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.9" y="1230.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="49.9" y="1203.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.9" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="49.9" y="1187.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.9" y="1198.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 0.48%)</title><rect x="49.9" y="1171.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.9" y="1182.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 0.48%)</title><rect x="49.9" y="1155.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.9" y="1166.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.load (1 samples, 0.48%)</title><rect x="49.9" y="1139.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.9" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="49.9" y="1123.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="52.9" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="49.9" y="1107.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="52.9" y="1118.0"></text>
</g>
<g>
<title>start_thread (105 samples, 50.72%)</title><rect x="55.6" y="1315.0" width="598.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.6" y="1326.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (105 samples, 50.72%)</title><rect x="55.6" y="1299.0" width="598.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="58.6" y="1310.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (105 samples, 50.72%)</title><rect x="55.6" y="1283.0" width="598.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="58.6" y="1294.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (104 samples, 50.24%)</title><rect x="55.6" y="1267.0" width="592.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="58.6" y="1278.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (102 samples, 49.28%)</title><rect x="55.6" y="1251.0" width="581.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="58.6" y="1262.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (101 samples, 48.79%)</title><rect x="55.6" y="1235.0" width="575.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="58.6" y="1246.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (53 samples, 25.60%)</title><rect x="55.6" y="1219.0" width="302.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="58.6" y="1230.0">C2Compiler::compile_method(ciEnv*, ciMeth..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (53 samples, 25.60%)</title><rect x="55.6" y="1203.0" width="302.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="58.6" y="1214.0">Compile::Compile(ciEnv*, C2Compiler*, ciM..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.48%)</title><rect x="61.3" y="1187.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.3" y="1198.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.48%)</title><rect x="61.3" y="1171.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="64.3" y="1182.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.48%)</title><rect x="61.3" y="1155.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="64.3" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.48%)</title><rect x="61.3" y="1139.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="64.3" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.48%)</title><rect x="61.3" y="1123.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="64.3" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.48%)</title><rect x="61.3" y="1107.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="64.3" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.48%)</title><rect x="61.3" y="1091.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="64.3" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.48%)</title><rect x="61.3" y="1075.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="64.3" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.48%)</title><rect x="61.3" y="1059.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="64.3" y="1070.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.48%)</title><rect x="61.3" y="1043.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="64.3" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.48%)</title><rect x="61.3" y="1027.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="64.3" y="1038.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.48%)</title><rect x="61.3" y="1011.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="64.3" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.48%)</title><rect x="61.3" y="995.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="64.3" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.48%)</title><rect x="61.3" y="979.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="64.3" y="990.0"></text>
</g>
<g>
<title>JavaFieldStream::JavaFieldStream(InstanceKlass const*) (1 samples, 0.48%)</title><rect x="61.3" y="963.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="64.3" y="974.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (32 samples, 15.46%)</title><rect x="67.0" y="1187.0" width="182.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="70.0" y="1198.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.97%)</title><rect x="67.0" y="1171.0" width="11.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="70.0" y="1182.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.97%)</title><rect x="67.0" y="1155.0" width="11.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="70.0" y="1166.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.97%)</title><rect x="67.0" y="1139.0" width="11.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="70.0" y="1150.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.48%)</title><rect x="67.0" y="1123.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.0" y="1134.0"></text>
</g>
<g>
<title>cmpFastUnlockNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.48%)</title><rect x="67.0" y="1107.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="70.0" y="1118.0"></text>
</g>
<g>
<title>MacroAssembler::fast_unlock(RegisterImpl*, RegisterImpl*, RegisterImpl*, bool) (1 samples, 0.48%)</title><rect x="67.0" y="1091.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="70.0" y="1102.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, Address) (1 samples, 0.48%)</title><rect x="67.0" y="1075.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="70.0" y="1086.0"></text>
</g>
<g>
<title>Assembler::prefixq(Address, RegisterImpl*) (1 samples, 0.48%)</title><rect x="67.0" y="1059.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="70.0" y="1070.0"></text>
</g>
<g>
<title>jmpDirNode::short_branch_version() (1 samples, 0.48%)</title><rect x="72.7" y="1123.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="75.7" y="1134.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.48%)</title><rect x="72.7" y="1107.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="75.7" y="1118.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.48%)</title><rect x="78.4" y="1171.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="81.4" y="1182.0"></text>
</g>
<g>
<title>Compile::compute_loop_first_inst_sizes() [clone .part.127] (1 samples, 0.48%)</title><rect x="78.4" y="1155.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="81.4" y="1166.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 2.42%)</title><rect x="84.1" y="1171.0" width="28.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="87.1" y="1182.0">Ma..</text>
</g>
<g>
<title>ConNode::Opcode() const (1 samples, 0.48%)</title><rect x="84.1" y="1155.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="87.1" y="1166.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.48%)</title><rect x="89.8" y="1155.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="92.8" y="1166.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.97%)</title><rect x="95.5" y="1155.0" width="11.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="98.5" y="1166.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.97%)</title><rect x="95.5" y="1139.0" width="11.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="98.5" y="1150.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.48%)</title><rect x="101.2" y="1123.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="104.2" y="1134.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.48%)</title><rect x="101.2" y="1107.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="104.2" y="1118.0"></text>
</g>
<g>
<title>State::_sub_Op_CMoveI(Node const*) (1 samples, 0.48%)</title><rect x="101.2" y="1091.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="104.2" y="1102.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.48%)</title><rect x="106.9" y="1155.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="109.9" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 2.42%)</title><rect x="112.6" y="1171.0" width="28.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="115.6" y="1182.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 2.42%)</title><rect x="112.6" y="1155.0" width="28.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="115.6" y="1166.0">Ph..</text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.48%)</title><rect x="112.6" y="1139.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="115.6" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 1.45%)</title><rect x="118.3" y="1139.0" width="17.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="121.3" y="1150.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.48%)</title><rect x="118.3" y="1123.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.3" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.48%)</title><rect x="124.0" y="1123.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="127.0" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.48%)</title><rect x="129.7" y="1123.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="132.7" y="1134.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.48%)</title><rect x="129.7" y="1107.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="132.7" y="1118.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.48%)</title><rect x="129.7" y="1091.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="132.7" y="1102.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.48%)</title><rect x="129.7" y="1075.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="132.7" y="1086.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.48%)</title><rect x="129.7" y="1059.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="132.7" y="1070.0"></text>
</g>
<g>
<title>TypePtr::eq(Type const*) const [clone .part.90] (1 samples, 0.48%)</title><rect x="129.7" y="1043.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="132.7" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.48%)</title><rect x="135.4" y="1139.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="138.4" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (19 samples, 9.18%)</title><rect x="141.1" y="1171.0" width="108.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="144.1" y="1182.0">PhaseChaitin:..</text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (1 samples, 0.48%)</title><rect x="141.1" y="1155.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="144.1" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (4 samples, 1.93%)</title><rect x="146.8" y="1155.0" width="22.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="149.8" y="1166.0">P..</text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.48%)</title><rect x="158.2" y="1139.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="161.2" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.48%)</title><rect x="163.9" y="1139.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="166.9" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.48%)</title><rect x="169.6" y="1155.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="172.6" y="1166.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.48%)</title><rect x="169.6" y="1139.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="172.6" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.48%)</title><rect x="169.6" y="1123.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="172.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.48%)</title><rect x="175.3" y="1155.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="178.3" y="1166.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.48%)</title><rect x="175.3" y="1139.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="178.3" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 2.90%)</title><rect x="181.0" y="1155.0" width="34.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="184.0" y="1166.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.97%)</title><rect x="181.0" y="1139.0" width="11.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="184.0" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 1.45%)</title><rect x="192.4" y="1139.0" width="17.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="195.4" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.48%)</title><rect x="209.5" y="1139.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="212.5" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.48%)</title><rect x="209.5" y="1123.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="212.5" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.48%)</title><rect x="215.2" y="1155.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="218.2" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.97%)</title><rect x="220.9" y="1155.0" width="11.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="223.9" y="1166.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.48%)</title><rect x="226.6" y="1139.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="229.6" y="1150.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.48%)</title><rect x="232.3" y="1155.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="235.3" y="1166.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.48%)</title><rect x="232.3" y="1139.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="235.3" y="1150.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.48%)</title><rect x="238.0" y="1155.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="241.0" y="1166.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.48%)</title><rect x="243.7" y="1155.0" width="5.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="246.7" y="1166.0"></text>
</g>
<g>
<title>Compile::Optimize() (14 samples, 6.76%)</title><rect x="249.4" y="1187.0" width="79.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="252.4" y="1198.0">Compile::..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (5 samples, 2.42%)</title><rect x="249.4" y="1171.0" width="28.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="252.4" y="1182.0">Co..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 2.42%)</title><rect x="249.4" y="1155.0" width="28.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="252.4" y="1166.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.48%)</title><rect x="249.4" y="1139.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="252.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.48%)</title><rect x="249.4" y="1123.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="252.4" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.48%)</title><rect x="249.4" y="1107.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="252.4" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (3 samples, 1.45%)</title><rect x="255.1" y="1139.0" width="17.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="258.1" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.48%)</title><rect x="260.8" y="1123.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="263.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.48%)</title><rect x="266.5" y="1123.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="269.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.48%)</title><rect x="266.5" y="1107.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="269.5" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.48%)</title><rect x="266.5" y="1091.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="269.5" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.48%)</title><rect x="272.2" y="1139.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="275.2" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.48%)</title><rect x="272.2" y="1123.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="275.2" y="1134.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.48%)</title><rect x="272.2" y="1107.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="275.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.48%)</title><rect x="272.2" y="1091.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="275.2" y="1102.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.261] (1 samples, 0.48%)</title><rect x="277.9" y="1171.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="280.9" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 2.90%)</title><rect x="283.6" y="1171.0" width="34.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="286.6" y="1182.0">Ph..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.48%)</title><rect x="283.6" y="1155.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="286.6" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.48%)</title><rect x="283.6" y="1139.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="286.6" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl_helper(IdealLoopTree*, ProjNode*, ProjNode*, CountedLoopNode*, ConNode*, Invariance&amp;, Deoptimization::DeoptReason) (1 samples, 0.48%)</title><rect x="283.6" y="1123.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="286.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dominated_by(Node*, Node*, bool, bool) (1 samples, 0.48%)</title><rect x="283.6" y="1107.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="286.6" y="1118.0"></text>
</g>
<g>
<title>LoadNode::depends_only_on_test() const (1 samples, 0.48%)</title><rect x="283.6" y="1091.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="286.6" y="1102.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.48%)</title><rect x="283.6" y="1075.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="286.6" y="1086.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.48%)</title><rect x="283.6" y="1059.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="286.6" y="1070.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.48%)</title><rect x="283.6" y="1043.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="286.6" y="1054.0"></text>
</g>
<g>
<title>TypeAryPtr::make(TypePtr::PTR, ciObject*, TypeAry const*, ciKlass*, bool, int, int, TypePtr const*, int, bool) (1 samples, 0.48%)</title><rect x="283.6" y="1027.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="286.6" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.48%)</title><rect x="289.3" y="1155.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="292.3" y="1166.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.48%)</title><rect x="289.3" y="1139.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="292.3" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.97%)</title><rect x="295.0" y="1155.0" width="11.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="298.0" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.48%)</title><rect x="300.7" y="1139.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="303.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.48%)</title><rect x="306.4" y="1155.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="309.4" y="1166.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.48%)</title><rect x="306.4" y="1139.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="309.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.48%)</title><rect x="312.1" y="1155.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="315.1" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.48%)</title><rect x="312.1" y="1139.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="315.1" y="1150.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.48%)</title><rect x="312.1" y="1123.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="315.1" y="1134.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.48%)</title><rect x="312.1" y="1107.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="315.1" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.97%)</title><rect x="317.8" y="1171.0" width="11.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="320.8" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.97%)</title><rect x="317.8" y="1155.0" width="11.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="320.8" y="1166.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.48%)</title><rect x="317.8" y="1139.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="320.8" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.159] (1 samples, 0.48%)</title><rect x="317.8" y="1123.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="320.8" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="1107.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="320.8" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="1091.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="320.8" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="1075.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="320.8" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="1059.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="320.8" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="1043.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="320.8" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="1027.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="320.8" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="1011.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="320.8" y="1022.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.48%)</title><rect x="317.8" y="995.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="320.8" y="1006.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.48%)</title><rect x="317.8" y="979.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="320.8" y="990.0"></text>
</g>
<g>
<title>StoreNode::Value(PhaseGVN*) const (1 samples, 0.48%)</title><rect x="323.5" y="1139.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="326.5" y="1150.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.48%)</title><rect x="329.2" y="1187.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="332.2" y="1198.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (1 samples, 0.48%)</title><rect x="329.2" y="1171.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="332.2" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.48%)</title><rect x="329.2" y="1155.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="332.2" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.48%)</title><rect x="329.2" y="1139.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="332.2" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.48%)</title><rect x="329.2" y="1123.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="332.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.48%)</title><rect x="329.2" y="1107.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="332.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.48%)</title><rect x="329.2" y="1091.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="332.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.48%)</title><rect x="329.2" y="1075.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="332.2" y="1086.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.48%)</title><rect x="329.2" y="1059.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="332.2" y="1070.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.48%)</title><rect x="329.2" y="1043.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="332.2" y="1054.0"></text>
</g>
<g>
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.48%)</title><rect x="329.2" y="1027.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="332.2" y="1038.0"></text>
</g>
<g>
<title>ciMethod::interpreter_call_site_count(int) (1 samples, 0.48%)</title><rect x="329.2" y="1011.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="332.2" y="1022.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.48%)</title><rect x="329.2" y="995.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="332.2" y="1006.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.48%)</title><rect x="334.9" y="1187.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="337.9" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.97%)</title><rect x="340.6" y="1187.0" width="11.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="343.6" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.97%)</title><rect x="340.6" y="1171.0" width="11.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="343.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.97%)</title><rect x="340.6" y="1155.0" width="11.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="343.6" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.97%)</title><rect x="340.6" y="1139.0" width="11.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="343.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.97%)</title><rect x="340.6" y="1123.0" width="11.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="343.6" y="1134.0"></text>
</g>
<g>
<title>Parse::add_safepoint() (1 samples, 0.48%)</title><rect x="340.6" y="1107.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="343.6" y="1118.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.48%)</title><rect x="340.6" y="1091.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="343.6" y="1102.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.48%)</title><rect x="340.6" y="1075.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="343.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_monitor_enter() (1 samples, 0.48%)</title><rect x="346.3" y="1107.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="349.3" y="1118.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.48%)</title><rect x="346.3" y="1091.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="349.3" y="1102.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.48%)</title><rect x="346.3" y="1075.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="349.3" y="1086.0"></text>
</g>
<g>
<title>HaltNode::HaltNode(Node*, Node*, char const*, bool) (1 samples, 0.48%)</title><rect x="346.3" y="1059.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="349.3" y="1070.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.48%)</title><rect x="352.0" y="1187.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="355.0" y="1198.0"></text>
</g>
<g>
<title>CompileBroker::post_compile(CompilerThread*, CompileTask*, bool, ciEnv*, int, char const*) (1 samples, 0.48%)</title><rect x="357.7" y="1219.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="360.7" y="1230.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.48%)</title><rect x="357.7" y="1203.0" width="5.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="360.7" y="1214.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (45 samples, 21.74%)</title><rect x="363.4" y="1219.0" width="256.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="366.4" y="1230.0">Compiler::compile_method(ciEnv*, c..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (45 samples, 21.74%)</title><rect x="363.4" y="1203.0" width="256.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="366.4" y="1214.0">Compilation::Compilation(AbstractC..</text>
</g>
<g>
<title>Compilation::compile_method() (45 samples, 21.74%)</title><rect x="363.4" y="1187.0" width="256.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="366.4" y="1198.0">Compilation::compile_method()</text>
</g>
<g>
<title>Compilation::compile_java_method() (45 samples, 21.74%)</title><rect x="363.4" y="1171.0" width="256.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="366.4" y="1182.0">Compilation::compile_java_method()</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (14 samples, 6.76%)</title><rect x="363.4" y="1155.0" width="79.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="366.4" y="1166.0">Compilati..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.48%)</title><rect x="363.4" y="1139.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="366.4" y="1150.0"></text>
</g>
<g>
<title>Instruction::as_LoadField() (1 samples, 0.48%)</title><rect x="363.4" y="1123.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="366.4" y="1134.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (11 samples, 5.31%)</title><rect x="369.1" y="1139.0" width="62.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="372.1" y="1150.0">IR::IR..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (11 samples, 5.31%)</title><rect x="369.1" y="1123.0" width="62.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="372.1" y="1134.0">IRScop..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (11 samples, 5.31%)</title><rect x="369.1" y="1107.0" width="62.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="372.1" y="1118.0">GraphB..</text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.48%)</title><rect x="369.1" y="1091.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="372.1" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.48%)</title><rect x="369.1" y="1075.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="372.1" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.48%)</title><rect x="369.1" y="1059.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="372.1" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (10 samples, 4.83%)</title><rect x="374.8" y="1091.0" width="57.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="377.8" y="1102.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (10 samples, 4.83%)</title><rect x="374.8" y="1075.0" width="57.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="377.8" y="1086.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.48%)</title><rect x="374.8" y="1059.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="377.8" y="1070.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.48%)</title><rect x="374.8" y="1043.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="377.8" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.48%)</title><rect x="374.8" y="1027.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="377.8" y="1038.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.48%)</title><rect x="374.8" y="1011.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="377.8" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.48%)</title><rect x="374.8" y="995.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="377.8" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.48%)</title><rect x="374.8" y="979.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="377.8" y="990.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.48%)</title><rect x="374.8" y="963.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="377.8" y="974.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.48%)</title><rect x="374.8" y="947.0" width="5.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="377.8" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (9 samples, 4.35%)</title><rect x="380.5" y="1059.0" width="51.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="383.5" y="1070.0">Graph..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 3.38%)</title><rect x="380.5" y="1043.0" width="39.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="383.5" y="1054.0">Gra..</text>
</g>
<g>
<title>DirectiveSet::should_not_inline(ciMethod*) (1 samples, 0.48%)</title><rect x="380.5" y="1027.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="383.5" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 2.90%)</title><rect x="386.2" y="1027.0" width="34.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="389.2" y="1038.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 2.90%)</title><rect x="386.2" y="1011.0" width="34.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="389.2" y="1022.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 2.90%)</title><rect x="386.2" y="995.0" width="34.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="389.2" y="1006.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.48%)</title><rect x="386.2" y="979.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="389.2" y="990.0"></text>
</g>
<g>
<title>Canonicalizer::do_Op2(Op2*) (1 samples, 0.48%)</title><rect x="386.2" y="963.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="389.2" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 2.42%)</title><rect x="391.9" y="979.0" width="28.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="394.9" y="990.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 2.42%)</title><rect x="391.9" y="963.0" width="28.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="394.9" y="974.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 2.42%)</title><rect x="391.9" y="947.0" width="28.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="394.9" y="958.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 1.93%)</title><rect x="391.9" y="931.0" width="22.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="394.9" y="942.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 1.93%)</title><rect x="391.9" y="915.0" width="22.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="394.9" y="926.0">G..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 1.93%)</title><rect x="391.9" y="899.0" width="22.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="394.9" y="910.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.97%)</title><rect x="391.9" y="883.0" width="11.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="394.9" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.97%)</title><rect x="391.9" y="867.0" width="11.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="394.9" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.97%)</title><rect x="391.9" y="851.0" width="11.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="394.9" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.97%)</title><rect x="391.9" y="835.0" width="11.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="394.9" y="846.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.48%)</title><rect x="391.9" y="819.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="394.9" y="830.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.48%)</title><rect x="391.9" y="803.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="394.9" y="814.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.48%)</title><rect x="391.9" y="787.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="394.9" y="798.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.48%)</title><rect x="391.9" y="771.0" width="5.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="394.9" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.48%)</title><rect x="397.6" y="819.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="400.6" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.48%)</title><rect x="397.6" y="803.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="400.6" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.48%)</title><rect x="397.6" y="787.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="400.6" y="798.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.48%)</title><rect x="397.6" y="771.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="400.6" y="782.0"></text>
</g>
<g>
<title>FieldType::basic_type(Symbol*) (1 samples, 0.48%)</title><rect x="397.6" y="755.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="400.6" y="766.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.97%)</title><rect x="403.3" y="883.0" width="11.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="406.3" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.97%)</title><rect x="403.3" y="867.0" width="11.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="406.3" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.97%)</title><rect x="403.3" y="851.0" width="11.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="406.3" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.97%)</title><rect x="403.3" y="835.0" width="11.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="406.3" y="846.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.97%)</title><rect x="403.3" y="819.0" width="11.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="406.3" y="830.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.97%)</title><rect x="403.3" y="803.0" width="11.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="406.3" y="814.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.97%)</title><rect x="403.3" y="787.0" width="11.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="406.3" y="798.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.48%)</title><rect x="403.3" y="771.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="406.3" y="782.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.48%)</title><rect x="403.3" y="755.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="406.3" y="766.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.48%)</title><rect x="403.3" y="739.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="406.3" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.48%)</title><rect x="409.0" y="771.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="412.0" y="782.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.48%)</title><rect x="409.0" y="755.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="412.0" y="766.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.48%)</title><rect x="409.0" y="739.0" width="5.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="412.0" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.48%)</title><rect x="414.7" y="931.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="417.7" y="942.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.48%)</title><rect x="414.7" y="915.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="417.7" y="926.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 0.48%)</title><rect x="414.7" y="899.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="417.7" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.97%)</title><rect x="420.4" y="1043.0" width="11.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="423.4" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.97%)</title><rect x="420.4" y="1027.0" width="11.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="423.4" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.97%)</title><rect x="420.4" y="1011.0" width="11.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="423.4" y="1022.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.48%)</title><rect x="420.4" y="995.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="423.4" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.48%)</title><rect x="420.4" y="979.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="423.4" y="990.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.48%)</title><rect x="420.4" y="963.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="423.4" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.48%)</title><rect x="420.4" y="947.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="423.4" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.48%)</title><rect x="420.4" y="931.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="423.4" y="942.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.48%)</title><rect x="426.1" y="995.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="429.1" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.48%)</title><rect x="426.1" y="979.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="429.1" y="990.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.48%)</title><rect x="426.1" y="963.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="429.1" y="974.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.48%)</title><rect x="426.1" y="947.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="429.1" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.48%)</title><rect x="426.1" y="931.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="429.1" y="942.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.48%)</title><rect x="426.1" y="915.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="429.1" y="926.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.48%)</title><rect x="426.1" y="899.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="429.1" y="910.0"></text>
</g>
<g>
<title>IR::compute_code() (1 samples, 0.48%)</title><rect x="431.8" y="1139.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="434.8" y="1150.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 0.48%)</title><rect x="431.8" y="1123.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="434.8" y="1134.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_order(BlockBegin*) (1 samples, 0.48%)</title><rect x="431.8" y="1107.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="434.8" y="1118.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.48%)</title><rect x="437.5" y="1139.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="440.5" y="1150.0"></text>
</g>
<g>
<title>free (1 samples, 0.48%)</title><rect x="437.5" y="1123.0" width="5.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="440.5" y="1134.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (8 samples, 3.86%)</title><rect x="443.2" y="1155.0" width="45.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="446.2" y="1166.0">Comp..</text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (5 samples, 2.42%)</title><rect x="443.2" y="1139.0" width="28.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="446.2" y="1150.0">LI..</text>
</g>
<g>
<title>Instruction::as_StateSplit() (1 samples, 0.48%)</title><rect x="443.2" y="1123.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="446.2" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::append_code_stub(CodeStub*) (1 samples, 0.48%)</title><rect x="448.9" y="1123.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="451.9" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (2 samples, 0.97%)</title><rect x="454.6" y="1123.0" width="11.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="457.6" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::move_op(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (1 samples, 0.48%)</title><rect x="454.6" y="1107.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="457.6" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::reg2stack(LIR_OprDesc*, LIR_OprDesc*, BasicType, bool) (1 samples, 0.48%)</title><rect x="460.3" y="1107.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="463.3" y="1118.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.48%)</title><rect x="460.3" y="1091.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="463.3" y="1102.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.48%)</title><rect x="460.3" y="1075.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="463.3" y="1086.0"></text>
</g>
<g>
<title>LIR_OpBranch::emit_code(LIR_Assembler*) (1 samples, 0.48%)</title><rect x="466.0" y="1123.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="469.0" y="1134.0"></text>
</g>
<g>
<title>Assembler::jmp(Label&amp;, bool) (1 samples, 0.48%)</title><rect x="466.0" y="1107.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="469.0" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.48%)</title><rect x="471.7" y="1139.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="474.7" y="1150.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.48%)</title><rect x="477.4" y="1139.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="480.4" y="1150.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (1 samples, 0.48%)</title><rect x="477.4" y="1123.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="480.4" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.48%)</title><rect x="477.4" y="1107.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="480.4" y="1118.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.48%)</title><rect x="477.4" y="1091.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="480.4" y="1102.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.48%)</title><rect x="477.4" y="1075.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="480.4" y="1086.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.48%)</title><rect x="477.4" y="1059.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="480.4" y="1070.0"></text>
</g>
<g>
<title>LIR_OpJavaCall::emit_code(LIR_Assembler*) (1 samples, 0.48%)</title><rect x="483.1" y="1139.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="486.1" y="1150.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (22 samples, 10.63%)</title><rect x="488.8" y="1155.0" width="125.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="491.8" y="1166.0">Compilation::em..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (5 samples, 2.42%)</title><rect x="488.8" y="1139.0" width="28.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="491.8" y="1150.0">Bl..</text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (5 samples, 2.42%)</title><rect x="488.8" y="1123.0" width="28.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="491.8" y="1134.0">no..</text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.48%)</title><rect x="488.8" y="1107.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="491.8" y="1118.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::grow(int) (1 samples, 0.48%)</title><rect x="488.8" y="1091.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="491.8" y="1102.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (2 samples, 0.97%)</title><rect x="494.5" y="1107.0" width="11.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="497.5" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (2 samples, 0.97%)</title><rect x="494.5" y="1091.0" width="11.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="497.5" y="1102.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (1 samples, 0.48%)</title><rect x="494.5" y="1075.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="497.5" y="1086.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (1 samples, 0.48%)</title><rect x="494.5" y="1059.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="497.5" y="1070.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.48%)</title><rect x="500.2" y="1075.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="503.2" y="1086.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (2 samples, 0.97%)</title><rect x="505.9" y="1107.0" width="11.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="508.9" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (2 samples, 0.97%)</title><rect x="505.9" y="1091.0" width="11.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="508.9" y="1102.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (2 samples, 0.97%)</title><rect x="505.9" y="1075.0" width="11.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="508.9" y="1086.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (2 samples, 0.97%)</title><rect x="505.9" y="1059.0" width="11.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="508.9" y="1070.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::optimize(BlockList*) (1 samples, 0.48%)</title><rect x="517.3" y="1139.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="520.3" y="1150.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::delete_empty_blocks(BlockList*) (1 samples, 0.48%)</title><rect x="517.3" y="1123.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="520.3" y="1134.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (16 samples, 7.73%)</title><rect x="523.0" y="1139.0" width="91.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="526.0" y="1150.0">LinearScan:..</text>
</g>
<g>
<title>Constant::as_Constant() (1 samples, 0.48%)</title><rect x="523.0" y="1123.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="526.0" y="1134.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (5 samples, 2.42%)</title><rect x="528.7" y="1123.0" width="28.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="531.7" y="1134.0">Li..</text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (5 samples, 2.42%)</title><rect x="528.7" y="1107.0" width="28.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="531.7" y="1118.0">In..</text>
</g>
<g>
<title>LinearScanWalker::activate_current() (3 samples, 1.45%)</title><rect x="540.1" y="1091.0" width="17.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="543.1" y="1102.0"></text>
</g>
<g>
<title>IntervalWalker::append_to_unhandled(Interval**, Interval*) (1 samples, 0.48%)</title><rect x="540.1" y="1075.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="543.1" y="1086.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.97%)</title><rect x="545.8" y="1075.0" width="11.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="548.8" y="1086.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (1 samples, 0.48%)</title><rect x="545.8" y="1059.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="548.8" y="1070.0"></text>
</g>
<g>
<title>Interval::split(int) (1 samples, 0.48%)</title><rect x="545.8" y="1043.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="548.8" y="1054.0"></text>
</g>
<g>
<title>LinearScanWalker::split_when_partial_register_available(Interval*, int) (1 samples, 0.48%)</title><rect x="551.5" y="1059.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="554.5" y="1070.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (4 samples, 1.93%)</title><rect x="557.2" y="1123.0" width="22.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="560.2" y="1134.0">L..</text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (3 samples, 1.45%)</title><rect x="557.2" y="1107.0" width="17.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="560.2" y="1118.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (1 samples, 0.48%)</title><rect x="557.2" y="1091.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="560.2" y="1102.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (2 samples, 0.97%)</title><rect x="562.9" y="1091.0" width="11.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="565.9" y="1102.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (2 samples, 0.97%)</title><rect x="562.9" y="1075.0" width="11.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="565.9" y="1086.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.48%)</title><rect x="562.9" y="1059.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="565.9" y="1070.0"></text>
</g>
<g>
<title>OopMap::set_oop(VMRegImpl*) (1 samples, 0.48%)</title><rect x="568.6" y="1059.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="571.6" y="1070.0"></text>
</g>
<g>
<title>CompressedWriteStream::write_int_mb(int) (1 samples, 0.48%)</title><rect x="568.6" y="1043.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="571.6" y="1054.0"></text>
</g>
<g>
<title>LinearScan::init_compute_oop_maps() (1 samples, 0.48%)</title><rect x="574.3" y="1107.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="577.3" y="1118.0"></text>
</g>
<g>
<title>Interval::Interval(int) (1 samples, 0.48%)</title><rect x="574.3" y="1091.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="577.3" y="1102.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.48%)</title><rect x="574.3" y="1075.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="577.3" y="1086.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.97%)</title><rect x="580.0" y="1123.0" width="11.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="583.0" y="1134.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (2 samples, 0.97%)</title><rect x="591.4" y="1123.0" width="11.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="594.4" y="1134.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.48%)</title><rect x="597.1" y="1107.0" width="5.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="600.1" y="1118.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.48%)</title><rect x="597.1" y="1091.0" width="5.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="600.1" y="1102.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (1 samples, 0.48%)</title><rect x="602.9" y="1123.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="605.9" y="1134.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.48%)</title><rect x="602.9" y="1107.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="605.9" y="1118.0"></text>
</g>
<g>
<title>qsort_r (1 samples, 0.48%)</title><rect x="608.6" y="1123.0" width="5.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="611.6" y="1134.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.48%)</title><rect x="614.3" y="1155.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="617.3" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.48%)</title><rect x="614.3" y="1139.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="617.3" y="1150.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.48%)</title><rect x="614.3" y="1123.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="617.3" y="1134.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::is_mature(Method*) (1 samples, 0.48%)</title><rect x="614.3" y="1107.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="617.3" y="1118.0"></text>
</g>
<g>
<title>CompilerOracle::has_any_option() (1 samples, 0.48%)</title><rect x="620.0" y="1219.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="623.0" y="1230.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.48%)</title><rect x="625.7" y="1219.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="628.7" y="1230.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.48%)</title><rect x="625.7" y="1203.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="628.7" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.48%)</title><rect x="625.7" y="1187.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="628.7" y="1198.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.48%)</title><rect x="625.7" y="1171.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="628.7" y="1182.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.48%)</title><rect x="625.7" y="1155.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="628.7" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.48%)</title><rect x="625.7" y="1139.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="628.7" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.48%)</title><rect x="625.7" y="1123.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="628.7" y="1134.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.48%)</title><rect x="625.7" y="1107.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="628.7" y="1118.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.48%)</title><rect x="631.4" y="1235.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="634.4" y="1246.0"></text>
</g>
<g>
<title>__GI_sysinfo (1 samples, 0.48%)</title><rect x="631.4" y="1219.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="634.4" y="1230.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.97%)</title><rect x="637.1" y="1251.0" width="11.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="640.1" y="1262.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.97%)</title><rect x="637.1" y="1235.0" width="11.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="640.1" y="1246.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (2 samples, 0.97%)</title><rect x="637.1" y="1219.0" width="11.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="640.1" y="1230.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.97%)</title><rect x="637.1" y="1203.0" width="11.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="640.1" y="1214.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 0.48%)</title><rect x="637.1" y="1187.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="640.1" y="1198.0"></text>
</g>
<g>
<title>ScopeDesc::ScopeDesc(CompiledMethod const*, int, int, bool, bool, bool) (1 samples, 0.48%)</title><rect x="637.1" y="1171.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="640.1" y="1182.0"></text>
</g>
<g>
<title>ScopeValue::read_from(DebugInfoReadStream*) (1 samples, 0.48%)</title><rect x="637.1" y="1155.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="640.1" y="1166.0"></text>
</g>
<g>
<title>DebugInfoReadStream::read_object_value() (1 samples, 0.48%)</title><rect x="637.1" y="1139.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="640.1" y="1150.0"></text>
</g>
<g>
<title>ObjectValue::read_object(DebugInfoReadStream*) (1 samples, 0.48%)</title><rect x="637.1" y="1123.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="640.1" y="1134.0"></text>
</g>
<g>
<title>ScopeValue::read_from(DebugInfoReadStream*) (1 samples, 0.48%)</title><rect x="637.1" y="1107.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="640.1" y="1118.0"></text>
</g>
<g>
<title>ConstantOopReadValue::ConstantOopReadValue(DebugInfoReadStream*) (1 samples, 0.48%)</title><rect x="637.1" y="1091.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="640.1" y="1102.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.48%)</title><rect x="642.8" y="1187.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="645.8" y="1198.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.48%)</title><rect x="642.8" y="1171.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="645.8" y="1182.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.48%)</title><rect x="648.5" y="1267.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="651.5" y="1278.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.48%)</title><rect x="648.5" y="1251.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="651.5" y="1262.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.67] (1 samples, 0.48%)</title><rect x="648.5" y="1235.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="651.5" y="1246.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.48%)</title><rect x="648.5" y="1219.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="651.5" y="1230.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit() (1 samples, 0.48%)</title><rect x="648.5" y="1203.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="651.5" y="1214.0"></text>
</g>
<g>
<title>VM_RedefineClasses::redefine_single_class(_jclass*, InstanceKlass*, Thread*) (1 samples, 0.48%)</title><rect x="648.5" y="1187.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="651.5" y="1198.0"></text>
</g>
<g>
<title>CodeCache::flush_evol_dependents_on(InstanceKlass*) (1 samples, 0.48%)</title><rect x="648.5" y="1171.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="651.5" y="1182.0"></text>
</g>
<g>
<title>CodeCache::mark_for_evol_deoptimization(InstanceKlass*) (1 samples, 0.48%)</title><rect x="648.5" y="1155.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="651.5" y="1166.0"></text>
</g>
<g>
<title>CompiledMethod::clear_inline_caches() (1 samples, 0.48%)</title><rect x="648.5" y="1139.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="651.5" y="1150.0"></text>
</g>
<g>
<title>RelocIterator::reloc() (1 samples, 0.48%)</title><rect x="648.5" y="1123.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="651.5" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (94 samples, 45.41%)</title><rect x="654.2" y="1315.0" width="535.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.2" y="1326.0">sun/instrument/InstrumentationImpl.loadClassAndCallPremain</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (94 samples, 45.41%)</title><rect x="654.2" y="1299.0" width="535.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.2" y="1310.0">sun/instrument/InstrumentationImpl.loadClassAndStartAgent</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.97%)</title><rect x="654.2" y="1283.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.97%)</title><rect x="654.2" y="1267.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.97%)</title><rect x="654.2" y="1251.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.97%)</title><rect x="654.2" y="1235.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.97%)</title><rect x="654.2" y="1219.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.97%)</title><rect x="654.2" y="1203.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.97%)</title><rect x="654.2" y="1187.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (1 samples, 0.48%)</title><rect x="659.9" y="1171.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.9" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="659.9" y="1155.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (1 samples, 0.48%)</title><rect x="659.9" y="1139.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (1 samples, 0.48%)</title><rect x="659.9" y="1123.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (1 samples, 0.48%)</title><rect x="659.9" y="1107.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (1 samples, 0.48%)</title><rect x="659.9" y="1091.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.9" y="1102.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="659.9" y="1075.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (1 samples, 0.48%)</title><rect x="659.9" y="1059.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (1 samples, 0.48%)</title><rect x="659.9" y="1043.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (1 samples, 0.48%)</title><rect x="659.9" y="1027.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.9" y="1038.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.48%)</title><rect x="659.9" y="1011.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.9" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.48%)</title><rect x="659.9" y="995.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.9" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.48%)</title><rect x="659.9" y="979.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.9" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (1 samples, 0.48%)</title><rect x="659.9" y="963.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.9" y="974.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 0.48%)</title><rect x="659.9" y="947.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.9" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 0.48%)</title><rect x="659.9" y="931.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.9" y="942.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (1 samples, 0.48%)</title><rect x="659.9" y="915.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.9" y="926.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (1 samples, 0.48%)</title><rect x="659.9" y="899.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.9" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (92 samples, 44.44%)</title><rect x="665.6" y="1283.0" width="524.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.6" y="1294.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (92 samples, 44.44%)</title><rect x="665.6" y="1267.0" width="524.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.6" y="1278.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (92 samples, 44.44%)</title><rect x="665.6" y="1251.0" width="524.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.6" y="1262.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (92 samples, 44.44%)</title><rect x="665.6" y="1235.0" width="524.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.6" y="1246.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.premain (92 samples, 44.44%)</title><rect x="665.6" y="1219.0" width="524.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.6" y="1230.0">datadog/trace/bootstrap/AgentBootstrap.premain</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.agentmain (92 samples, 44.44%)</title><rect x="665.6" y="1203.0" width="524.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.6" y="1214.0">datadog/trace/bootstrap/AgentBootstrap.agentmain</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (92 samples, 44.44%)</title><rect x="665.6" y="1187.0" width="524.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.6" y="1198.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (92 samples, 44.44%)</title><rect x="665.6" y="1171.0" width="524.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.6" y="1182.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (92 samples, 44.44%)</title><rect x="665.6" y="1155.0" width="524.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.6" y="1166.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (92 samples, 44.44%)</title><rect x="665.6" y="1139.0" width="524.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.6" y="1150.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.&lt;clinit&gt; (2 samples, 0.97%)</title><rect x="665.6" y="1123.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.6" y="1134.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.48%)</title><rect x="665.6" y="1107.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.6" y="1118.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.48%)</title><rect x="665.6" y="1091.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getLogger (1 samples, 0.48%)</title><rect x="665.6" y="1075.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.6" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getHelperFactory (1 samples, 0.48%)</title><rect x="665.6" y="1059.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.6" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.getSettingsDescription (1 samples, 0.48%)</title><rect x="665.6" y="1043.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.6" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettingsDescription (1 samples, 0.48%)</title><rect x="665.6" y="1027.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.6" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettings (1 samples, 0.48%)</title><rect x="665.6" y="1011.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.6" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.48%)</title><rect x="665.6" y="995.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.48%)</title><rect x="665.6" y="979.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.48%)</title><rect x="665.6" y="963.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.6" y="974.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$DTFormatter.create (1 samples, 0.48%)</title><rect x="665.6" y="947.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$NewDTFormatter.&lt;init&gt; (1 samples, 0.48%)</title><rect x="665.6" y="931.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethod (1 samples, 0.48%)</title><rect x="665.6" y="915.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodImpl (1 samples, 0.48%)</title><rect x="665.6" y="899.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.methodHandleInvokeLinkerMethod (1 samples, 0.48%)</title><rect x="665.6" y="883.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.invokeHandleForm (1 samples, 0.48%)</title><rect x="665.6" y="867.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.6" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.48%)</title><rect x="665.6" y="851.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.6" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.48%)</title><rect x="665.6" y="835.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.48%)</title><rect x="665.6" y="819.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.48%)</title><rect x="665.6" y="803.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodEpilogue (1 samples, 0.48%)</title><rect x="665.6" y="787.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (1 samples, 0.48%)</title><rect x="665.6" y="771.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.configureLogger (1 samples, 0.48%)</title><rect x="671.3" y="1107.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.3" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.isDebugMode (1 samples, 0.48%)</title><rect x="671.3" y="1091.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.3" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.ddGetEnv (1 samples, 0.48%)</title><rect x="671.3" y="1075.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/System.getenv (1 samples, 0.48%)</title><rect x="671.3" y="1059.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="671.3" y="1043.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/ProcessEnvironment$Value.valueOf (1 samples, 0.48%)</title><rect x="671.3" y="1027.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.48%)</title><rect x="671.3" y="1011.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.48%)</title><rect x="671.3" y="995.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.start (90 samples, 43.48%)</title><rect x="677.0" y="1123.0" width="513.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.0" y="1134.0">datadog/trace/bootstrap/Agent.start</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createParentClassloader (2 samples, 0.97%)</title><rect x="677.0" y="1107.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.0" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDatadogClassLoader (1 samples, 0.48%)</title><rect x="677.0" y="1091.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.48%)</title><rect x="677.0" y="1075.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="677.0" y="1059.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="677.0" y="1043.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.48%)</title><rect x="677.0" y="1027.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.0" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.48%)</title><rect x="677.0" y="1011.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.0" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.48%)</title><rect x="677.0" y="995.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.0" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.48%)</title><rect x="677.0" y="979.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.0" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.48%)</title><rect x="677.0" y="963.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.0" y="974.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.48%)</title><rect x="677.0" y="947.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.0" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.48%)</title><rect x="677.0" y="931.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.0" y="942.0"></text>
</g>
<g>
<title>java/util/jar/JarFile$$Lambda$25/812265671.apply (1 samples, 0.48%)</title><rect x="677.0" y="915.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.0" y="926.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.lambda$entries$0 (1 samples, 0.48%)</title><rect x="677.0" y="899.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.0" y="910.0"></text>
</g>
<g>
<title>java/util/jar/JarFile$JarFileEntry.&lt;init&gt; (1 samples, 0.48%)</title><rect x="677.0" y="883.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.0" y="894.0"></text>
</g>
<g>
<title>java/util/jar/JarEntry.&lt;init&gt; (1 samples, 0.48%)</title><rect x="677.0" y="867.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.0" y="878.0"></text>
</g>
<g>
<title>java/util/zip/ZipEntry.&lt;init&gt; (1 samples, 0.48%)</title><rect x="677.0" y="851.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.0" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getPlatformClassLoader (1 samples, 0.48%)</title><rect x="682.7" y="1091.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.48%)</title><rect x="682.7" y="1075.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.48%)</title><rect x="682.7" y="1059.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.48%)</title><rect x="682.7" y="1043.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.48%)</title><rect x="682.7" y="1027.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.48%)</title><rect x="682.7" y="1011.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.48%)</title><rect x="682.7" y="995.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.48%)</title><rect x="682.7" y="979.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.7" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.48%)</title><rect x="682.7" y="963.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.7" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.48%)</title><rect x="682.7" y="947.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.7" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.48%)</title><rect x="682.7" y="931.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.7" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.48%)</title><rect x="682.7" y="915.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.7" y="926.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.48%)</title><rect x="682.7" y="899.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.7" y="910.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.48%)</title><rect x="682.7" y="883.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.7" y="894.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.48%)</title><rect x="682.7" y="867.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.7" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="682.7" y="851.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.7" y="862.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.48%)</title><rect x="682.7" y="835.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.7" y="846.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.48%)</title><rect x="682.7" y="819.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.7" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.48%)</title><rect x="682.7" y="803.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.7" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.48%)</title><rect x="682.7" y="787.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.48%)</title><rect x="682.7" y="771.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.48%)</title><rect x="682.7" y="755.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.7" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.48%)</title><rect x="682.7" y="739.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.7" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.48%)</title><rect x="682.7" y="723.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.7" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.48%)</title><rect x="682.7" y="707.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.7" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.48%)</title><rect x="682.7" y="691.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.7" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.mapToModule (1 samples, 0.48%)</title><rect x="682.7" y="675.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.7" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.getDynamicModule (1 samples, 0.48%)</title><rect x="682.7" y="659.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.48%)</title><rect x="682.7" y="643.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="685.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.48%)</title><rect x="682.7" y="627.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.7" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder$$Lambda$21/2108649164.apply (1 samples, 0.48%)</title><rect x="682.7" y="611.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.7" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.lambda$getDynamicModule$1 (1 samples, 0.48%)</title><rect x="682.7" y="595.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.7" y="606.0"></text>
</g>
<g>
<title>java/lang/module/ModuleDescriptor$Builder.build (1 samples, 0.48%)</title><rect x="682.7" y="579.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.7" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="682.7" y="563.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="685.7" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="682.7" y="547.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="685.7" y="558.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_call(Bytecodes::Code, methodHandle const&amp;, bool) (1 samples, 0.48%)</title><rect x="682.7" y="531.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="685.7" y="542.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.48%)</title><rect x="682.7" y="515.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="685.7" y="526.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.48%)</title><rect x="682.7" y="499.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="685.7" y="510.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.installDatadogTracer (15 samples, 7.25%)</title><rect x="688.4" y="1107.0" width="85.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.4" y="1118.0">datadog/tr..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 7.25%)</title><rect x="688.4" y="1091.0" width="85.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.4" y="1102.0">java/lang/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 7.25%)</title><rect x="688.4" y="1075.0" width="85.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.4" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (15 samples, 7.25%)</title><rect x="688.4" y="1059.0" width="85.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.4" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (15 samples, 7.25%)</title><rect x="688.4" y="1043.0" width="85.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.4" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/TracerInstaller.installGlobalTracer (15 samples, 7.25%)</title><rect x="688.4" y="1027.0" width="85.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.4" y="1038.0">datadog/tr..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.build (14 samples, 6.76%)</title><rect x="688.4" y="1011.0" width="79.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.4" y="1022.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (14 samples, 6.76%)</title><rect x="688.4" y="995.0" width="79.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.4" y="1006.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (14 samples, 6.76%)</title><rect x="688.4" y="979.0" width="79.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.4" y="990.0">datadog/t..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (13 samples, 6.28%)</title><rect x="688.4" y="963.0" width="74.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.4" y="974.0">datadog/..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (13 samples, 6.28%)</title><rect x="688.4" y="947.0" width="74.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.4" y="958.0">datadog/..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter$DDAgentWriterBuilder.build (1 samples, 0.48%)</title><rect x="688.4" y="931.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.4" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.48%)</title><rect x="688.4" y="915.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.48%)</title><rect x="688.4" y="899.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.4" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker.&lt;init&gt; (1 samples, 0.48%)</title><rect x="688.4" y="883.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.4" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker.createQueue (1 samples, 0.48%)</title><rect x="688.4" y="867.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.4" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="688.4" y="851.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="688.4" y="835.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="688.4" y="819.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.4" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="688.4" y="803.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="688.4" y="787.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.4" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="688.4" y="771.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.4" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="688.4" y="755.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.4" y="766.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="688.4" y="739.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="688.4" y="723.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="688.4" y="707.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.4" y="718.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.48%)</title><rect x="688.4" y="691.0" width="5.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="691.4" y="702.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.48%)</title><rect x="688.4" y="675.0" width="5.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="691.4" y="686.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.48%)</title><rect x="688.4" y="659.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="691.4" y="670.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.48%)</title><rect x="688.4" y="643.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="691.4" y="654.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="688.4" y="627.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="691.4" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.48%)</title><rect x="688.4" y="611.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="691.4" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.48%)</title><rect x="688.4" y="595.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="691.4" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.48%)</title><rect x="688.4" y="579.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="691.4" y="590.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.48%)</title><rect x="688.4" y="563.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="691.4" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="694.1" y="931.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.1" y="942.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi$Builder.build (1 samples, 0.48%)</title><rect x="694.1" y="915.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.1" y="926.0"></text>
</g>
<g>
<title>com/squareup/moshi/Moshi.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="694.1" y="899.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.1" y="910.0"></text>
</g>
<g>
<title>com/squareup/moshi/StandardJsonAdapters.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="694.1" y="883.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="694.1" y="867.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="697.1" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="694.1" y="851.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.48%)</title><rect x="694.1" y="835.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.hasPackage (1 samples, 0.48%)</title><rect x="694.1" y="819.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.48%)</title><rect x="694.1" y="803.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.48%)</title><rect x="694.1" y="787.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.48%)</title><rect x="694.1" y="771.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.1" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;init&gt; (1 samples, 0.48%)</title><rect x="699.8" y="931.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.8" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Monitoring.newTimer (1 samples, 0.48%)</title><rect x="699.8" y="915.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.48%)</title><rect x="699.8" y="899.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.8" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.48%)</title><rect x="699.8" y="883.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogramFactory.newHistogram (1 samples, 0.48%)</title><rect x="699.8" y="867.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.8" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogram.&lt;init&gt; (1 samples, 0.48%)</title><rect x="699.8" y="851.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.8" y="862.0"></text>
</g>
<g>
<title>com/datadoghq/sketch/ddsketch/DDSketch.&lt;init&gt; (1 samples, 0.48%)</title><rect x="699.8" y="835.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.8" y="846.0"></text>
</g>
<g>
<title>com/datadoghq/sketch/ddsketch/DDSketch.&lt;init&gt; (1 samples, 0.48%)</title><rect x="699.8" y="819.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogram$$Lambda$39/519019247.get (1 samples, 0.48%)</title><rect x="699.8" y="803.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="702.8" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogram.lambda$new$0 (1 samples, 0.48%)</title><rect x="699.8" y="787.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.8" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="699.8" y="771.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="702.8" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="755.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="702.8" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="739.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="702.8" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="723.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="702.8" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="707.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="702.8" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="691.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="702.8" y="702.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="675.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="702.8" y="686.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="659.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="702.8" y="670.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.48%)</title><rect x="699.8" y="643.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="702.8" y="654.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.48%)</title><rect x="699.8" y="627.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="702.8" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (7 samples, 3.38%)</title><rect x="705.5" y="931.0" width="39.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.5" y="942.0">dat..</text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (7 samples, 3.38%)</title><rect x="705.5" y="915.0" width="39.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.5" y="926.0">dat..</text>
</g>
<g>
<title>okhttp3/OkHttpClient$Builder.&lt;init&gt; (7 samples, 3.38%)</title><rect x="705.5" y="899.0" width="39.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.5" y="910.0">okh..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.97%)</title><rect x="705.5" y="883.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.97%)</title><rect x="705.5" y="867.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.5" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (2 samples, 0.97%)</title><rect x="705.5" y="851.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.5" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.97%)</title><rect x="705.5" y="835.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.5" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.97%)</title><rect x="705.5" y="819.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.5" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.97%)</title><rect x="705.5" y="803.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.5" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (2 samples, 0.97%)</title><rect x="705.5" y="787.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.5" y="798.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.97%)</title><rect x="705.5" y="771.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.97%)</title><rect x="705.5" y="755.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.5" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.97%)</title><rect x="705.5" y="739.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.5" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.48%)</title><rect x="705.5" y="723.0" width="5.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="708.5" y="734.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.48%)</title><rect x="705.5" y="707.0" width="5.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="708.5" y="718.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.48%)</title><rect x="705.5" y="691.0" width="5.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="708.5" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.48%)</title><rect x="705.5" y="675.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="708.5" y="686.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="705.5" y="659.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="708.5" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.48%)</title><rect x="705.5" y="643.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="708.5" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.48%)</title><rect x="705.5" y="627.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="708.5" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.48%)</title><rect x="705.5" y="611.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="708.5" y="622.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.48%)</title><rect x="705.5" y="595.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="708.5" y="606.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.48%)</title><rect x="711.2" y="723.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.2" y="734.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.48%)</title><rect x="711.2" y="707.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.48%)</title><rect x="711.2" y="691.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.48%)</title><rect x="711.2" y="675.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.2" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="711.2" y="659.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.48%)</title><rect x="711.2" y="643.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.48%)</title><rect x="711.2" y="627.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.48%)</title><rect x="711.2" y="611.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.48%)</title><rect x="711.2" y="595.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.48%)</title><rect x="711.2" y="579.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.48%)</title><rect x="711.2" y="563.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.2" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.48%)</title><rect x="711.2" y="547.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="714.2" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.48%)</title><rect x="711.2" y="531.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="714.2" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.48%)</title><rect x="711.2" y="515.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="714.2" y="526.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.48%)</title><rect x="711.2" y="499.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="714.2" y="510.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.48%)</title><rect x="711.2" y="483.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="714.2" y="494.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.48%)</title><rect x="711.2" y="467.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="714.2" y="478.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.48%)</title><rect x="711.2" y="451.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="714.2" y="462.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode, Thread*) (1 samples, 0.48%)</title><rect x="711.2" y="435.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="714.2" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.48%)</title><rect x="711.2" y="419.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="714.2" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.48%)</title><rect x="711.2" y="403.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="714.2" y="414.0"></text>
</g>
<g>
<title>okhttp3/ConnectionPool.&lt;clinit&gt; (5 samples, 2.42%)</title><rect x="716.9" y="883.0" width="28.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.9" y="894.0">ok..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (5 samples, 2.42%)</title><rect x="716.9" y="867.0" width="28.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.9" y="878.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (5 samples, 2.42%)</title><rect x="716.9" y="851.0" width="28.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.9" y="862.0">ja..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (5 samples, 2.42%)</title><rect x="716.9" y="835.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.9" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (5 samples, 2.42%)</title><rect x="716.9" y="819.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.9" y="830.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (5 samples, 2.42%)</title><rect x="716.9" y="803.0" width="28.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.9" y="814.0">jd..</text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (5 samples, 2.42%)</title><rect x="716.9" y="787.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.9" y="798.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (5 samples, 2.42%)</title><rect x="716.9" y="771.0" width="28.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.9" y="782.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (5 samples, 2.42%)</title><rect x="716.9" y="755.0" width="28.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.9" y="766.0">ja..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (5 samples, 2.42%)</title><rect x="716.9" y="739.0" width="28.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.9" y="750.0">su..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (5 samples, 2.42%)</title><rect x="716.9" y="723.0" width="28.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.9" y="734.0">su..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (5 samples, 2.42%)</title><rect x="716.9" y="707.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.9" y="718.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (5 samples, 2.42%)</title><rect x="716.9" y="691.0" width="28.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.9" y="702.0">ne..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 2.42%)</title><rect x="716.9" y="675.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.9" y="686.0">ja..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (5 samples, 2.42%)</title><rect x="716.9" y="659.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.9" y="670.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (5 samples, 2.42%)</title><rect x="716.9" y="643.0" width="28.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.9" y="654.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (5 samples, 2.42%)</title><rect x="716.9" y="627.0" width="28.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.9" y="638.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (5 samples, 2.42%)</title><rect x="716.9" y="611.0" width="28.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.9" y="622.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (5 samples, 2.42%)</title><rect x="716.9" y="595.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.9" y="606.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.48%)</title><rect x="716.9" y="579.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.48%)</title><rect x="722.6" y="579.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.48%)</title><rect x="722.6" y="563.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.48%)</title><rect x="722.6" y="547.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.6" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.48%)</title><rect x="722.6" y="531.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (1 samples, 0.48%)</title><rect x="722.6" y="515.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.48%)</title><rect x="722.6" y="499.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType.&lt;init&gt; (1 samples, 0.48%)</title><rect x="722.6" y="483.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.48%)</title><rect x="722.6" y="467.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.48%)</title><rect x="722.6" y="451.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.48%)</title><rect x="722.6" y="435.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForArgument$Unresolved$Factory.make (1 samples, 0.48%)</title><rect x="722.6" y="419.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.6" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.48%)</title><rect x="722.6" y="403.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.6" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.48%)</title><rect x="722.6" y="387.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.6" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.48%)</title><rect x="722.6" y="371.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.48%)</title><rect x="722.6" y="355.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.48%)</title><rect x="722.6" y="339.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.48%)</title><rect x="722.6" y="323.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.6" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.48%)</title><rect x="722.6" y="307.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.6" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.48%)</title><rect x="722.6" y="291.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.6" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.48%)</title><rect x="722.6" y="275.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.48%)</title><rect x="722.6" y="259.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.6" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.48%)</title><rect x="722.6" y="243.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.6" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.48%)</title><rect x="722.6" y="227.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.6" y="238.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (1 samples, 0.48%)</title><rect x="722.6" y="211.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.6" y="222.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (1 samples, 0.48%)</title><rect x="722.6" y="195.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="725.6" y="206.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 0.48%)</title><rect x="722.6" y="179.0" width="5.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="725.6" y="190.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="722.6" y="163.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="725.6" y="174.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="722.6" y="147.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="725.6" y="158.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="722.6" y="131.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="725.6" y="142.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="722.6" y="115.0" width="5.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="725.6" y="126.0"></text>
</g>
<g>
<title>merge_fullinfo_types (1 samples, 0.48%)</title><rect x="722.6" y="99.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="725.6" y="110.0"></text>
</g>
<g>
<title>JVM_IsInterface (1 samples, 0.48%)</title><rect x="722.6" y="83.0" width="5.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="725.6" y="94.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.48%)</title><rect x="722.6" y="67.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="725.6" y="78.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (3 samples, 1.45%)</title><rect x="728.3" y="579.0" width="17.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 1.45%)</title><rect x="728.3" y="563.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (3 samples, 1.45%)</title><rect x="728.3" y="547.0" width="17.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.3" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing.writeTo (1 samples, 0.48%)</title><rect x="728.3" y="531.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.3" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.&lt;init&gt; (1 samples, 0.48%)</title><rect x="728.3" y="515.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.toByteArray (2 samples, 0.97%)</title><rect x="734.0" y="531.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.putMethodInfo (2 samples, 0.97%)</title><rect x="734.0" y="515.0" width="11.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.0" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ByteVector.putInt (1 samples, 0.48%)</title><rect x="739.7" y="499.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.7" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="745.4" y="931.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.4" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="745.4" y="915.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.48%)</title><rect x="745.4" y="899.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.4" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="745.4" y="883.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="745.4" y="867.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.4" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="745.4" y="851.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="745.4" y="835.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="745.4" y="819.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="745.4" y="803.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.4" y="814.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="745.4" y="787.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.4" y="798.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl.get (2 samples, 0.97%)</title><rect x="751.1" y="931.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.1" y="942.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.parse (2 samples, 0.97%)</title><rect x="751.1" y="915.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.1" y="926.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.canonicalizeHost (1 samples, 0.48%)</title><rect x="751.1" y="899.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.1" y="910.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.canonicalizeHost (1 samples, 0.48%)</title><rect x="751.1" y="883.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.1" y="894.0"></text>
</g>
<g>
<title>java/net/IDN.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="751.1" y="867.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.1" y="878.0"></text>
</g>
<g>
<title>sun/net/idn/StringPrep.&lt;init&gt; (1 samples, 0.48%)</title><rect x="751.1" y="851.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.1" y="862.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacter.getUnicodeVersion (1 samples, 0.48%)</title><rect x="751.1" y="835.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.1" y="846.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="751.1" y="819.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.1" y="830.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;init&gt; (1 samples, 0.48%)</title><rect x="751.1" y="803.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.1" y="814.0"></text>
</g>
<g>
<title>sun/text/normalizer/Trie2_16.createFromSerialized (1 samples, 0.48%)</title><rect x="751.1" y="787.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.1" y="798.0"></text>
</g>
<g>
<title>sun/text/normalizer/Trie2.createFromSerialized (1 samples, 0.48%)</title><rect x="751.1" y="771.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.1" y="782.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="756.8" y="899.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="756.8" y="883.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.8" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="756.8" y="867.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.48%)</title><rect x="756.8" y="851.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.48%)</title><rect x="756.8" y="835.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.48%)</title><rect x="756.8" y="819.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.8" y="830.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.48%)</title><rect x="756.8" y="803.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.8" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.48%)</title><rect x="756.8" y="787.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.8" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.48%)</title><rect x="756.8" y="771.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.8" y="782.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.48%)</title><rect x="756.8" y="755.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="759.8" y="766.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.48%)</title><rect x="756.8" y="739.0" width="5.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="759.8" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.48%)</title><rect x="756.8" y="723.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="759.8" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.48%)</title><rect x="756.8" y="707.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="759.8" y="718.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.48%)</title><rect x="756.8" y="691.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="759.8" y="702.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_stream(char const*, Thread*) (1 samples, 0.48%)</title><rect x="756.8" y="675.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="759.8" y="686.0"></text>
</g>
<g>
<title>ClassPathZipEntry::open_entry(char const*, int*, bool, Thread*) (1 samples, 0.48%)</title><rect x="756.8" y="659.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="759.8" y="670.0"></text>
</g>
<g>
<title>ZIP_FindEntry (1 samples, 0.48%)</title><rect x="756.8" y="643.0" width="5.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="759.8" y="654.0"></text>
</g>
<g>
<title>ZIP_GetEntry2 (1 samples, 0.48%)</title><rect x="756.8" y="627.0" width="5.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="759.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.&lt;init&gt; (1 samples, 0.48%)</title><rect x="762.5" y="963.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="762.5" y="947.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.5" y="958.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.48%)</title><rect x="762.5" y="931.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.5" y="942.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.48%)</title><rect x="762.5" y="915.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.48%)</title><rect x="762.5" y="899.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.48%)</title><rect x="762.5" y="883.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.5" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="762.5" y="867.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.48%)</title><rect x="762.5" y="851.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.48%)</title><rect x="762.5" y="835.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.48%)</title><rect x="762.5" y="819.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.48%)</title><rect x="762.5" y="803.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.48%)</title><rect x="762.5" y="787.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.48%)</title><rect x="762.5" y="771.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.resolve (1 samples, 0.48%)</title><rect x="762.5" y="755.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.&lt;init&gt; (1 samples, 0.48%)</title><rect x="762.5" y="739.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.builder (1 samples, 0.48%)</title><rect x="768.2" y="1011.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.&lt;init&gt; (1 samples, 0.48%)</title><rect x="768.2" y="995.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.2" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.config (1 samples, 0.48%)</title><rect x="768.2" y="979.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.2" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="768.2" y="963.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="771.2" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="768.2" y="947.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="771.2" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="931.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="771.2" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="915.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="771.2" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="899.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="771.2" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="883.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="771.2" y="894.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="867.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="771.2" y="878.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="851.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="771.2" y="862.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="835.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="771.2" y="846.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.48%)</title><rect x="768.2" y="819.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="771.2" y="830.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.48%)</title><rect x="768.2" y="803.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="771.2" y="814.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.48%)</title><rect x="768.2" y="787.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="771.2" y="798.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.scheduleJmxStart (1 samples, 0.48%)</title><rect x="773.9" y="1107.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.9" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleWithJitter (1 samples, 0.48%)</title><rect x="773.9" y="1091.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.9" y="1102.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.48%)</title><rect x="773.9" y="1075.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.9" y="1086.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.48%)</title><rect x="773.9" y="1059.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.48%)</title><rect x="773.9" y="1043.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.48%)</title><rect x="773.9" y="1027.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.9" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="773.9" y="1011.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.48%)</title><rect x="773.9" y="995.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.9" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.48%)</title><rect x="773.9" y="979.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.9" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.48%)</title><rect x="773.9" y="963.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.9" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.48%)</title><rect x="773.9" y="947.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.48%)</title><rect x="773.9" y="931.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.9" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.48%)</title><rect x="773.9" y="915.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.48%)</title><rect x="773.9" y="899.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.48%)</title><rect x="773.9" y="883.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.48%)</title><rect x="773.9" y="867.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.48%)</title><rect x="773.9" y="851.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.9" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.48%)</title><rect x="773.9" y="835.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.9" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.48%)</title><rect x="773.9" y="819.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.9" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.48%)</title><rect x="773.9" y="803.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.48%)</title><rect x="773.9" y="787.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.48%)</title><rect x="773.9" y="771.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.48%)</title><rect x="773.9" y="755.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.48%)</title><rect x="773.9" y="739.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.48%)</title><rect x="773.9" y="723.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.48%)</title><rect x="773.9" y="707.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.48%)</title><rect x="773.9" y="691.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.9" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.48%)</title><rect x="773.9" y="675.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.9" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.48%)</title><rect x="773.9" y="659.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.9" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.48%)</title><rect x="773.9" y="643.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.9" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.48%)</title><rect x="773.9" y="627.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.9" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.48%)</title><rect x="773.9" y="611.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.48%)</title><rect x="773.9" y="595.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.48%)</title><rect x="773.9" y="579.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageBufferCache.releaseBuffer (1 samples, 0.48%)</title><rect x="773.9" y="563.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.48%)</title><rect x="773.9" y="547.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.9" y="558.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (1 samples, 0.48%)</title><rect x="773.9" y="531.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.9" y="542.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (1 samples, 0.48%)</title><rect x="773.9" y="515.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.9" y="526.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startDatadogAgent (70 samples, 33.82%)</title><rect x="779.6" y="1107.0" width="399.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.6" y="1118.0">datadog/trace/bootstrap/Agent.startDatadogAgent</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDelegateClassLoader (1 samples, 0.48%)</title><rect x="779.6" y="1091.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.48%)</title><rect x="779.6" y="1075.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="779.6" y="1059.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="779.6" y="1043.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.48%)</title><rect x="779.6" y="1027.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.6" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.&lt;init&gt; (1 samples, 0.48%)</title><rect x="779.6" y="1011.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.6" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.48%)</title><rect x="779.6" y="995.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.48%)</title><rect x="779.6" y="979.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.6" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.48%)</title><rect x="779.6" y="963.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.6" y="974.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.48%)</title><rect x="779.6" y="947.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.6" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.48%)</title><rect x="779.6" y="931.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.6" y="942.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.48%)</title><rect x="779.6" y="915.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.6" y="926.0"></text>
</g>
<g>
<title>java/util/jar/JarFile$$Lambda$25/812265671.apply (1 samples, 0.48%)</title><rect x="779.6" y="899.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.6" y="910.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.lambda$entries$0 (1 samples, 0.48%)</title><rect x="779.6" y="883.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.6" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (69 samples, 33.33%)</title><rect x="785.3" y="1091.0" width="393.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.3" y="1102.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (69 samples, 33.33%)</title><rect x="785.3" y="1075.0" width="393.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.3" y="1086.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (69 samples, 33.33%)</title><rect x="785.3" y="1059.0" width="393.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.3" y="1070.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (69 samples, 33.33%)</title><rect x="785.3" y="1043.0" width="393.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.3" y="1054.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.&lt;clinit&gt; (3 samples, 1.45%)</title><rect x="785.3" y="1027.0" width="17.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.3" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.addByteBuddyRawSetting (1 samples, 0.48%)</title><rect x="785.3" y="1011.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="785.3" y="995.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="785.3" y="979.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.3" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="785.3" y="963.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.3" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="785.3" y="947.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.3" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="785.3" y="931.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="785.3" y="915.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.3" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="785.3" y="899.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.3" y="910.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="785.3" y="883.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.3" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="785.3" y="867.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="785.3" y="851.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.3" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="785.3" y="835.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.3" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="785.3" y="819.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.3" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="785.3" y="803.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.3" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="785.3" y="787.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.3" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="785.3" y="771.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.3" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="785.3" y="755.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.3" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="785.3" y="739.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="785.3" y="723.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.3" y="734.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="785.3" y="707.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.3" y="718.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.48%)</title><rect x="785.3" y="691.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.3" y="702.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.48%)</title><rect x="785.3" y="675.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.3" y="686.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.48%)</title><rect x="785.3" y="659.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.3" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.&lt;clinit&gt; (2 samples, 0.97%)</title><rect x="791.0" y="1011.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.0" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.&lt;init&gt; (2 samples, 0.97%)</title><rect x="791.0" y="995.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.0" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (1 samples, 0.48%)</title><rect x="791.0" y="979.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.0" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache$Provider.newWeakCache (1 samples, 0.48%)</title><rect x="791.0" y="963.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.0" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.&lt;init&gt; (1 samples, 0.48%)</title><rect x="791.0" y="947.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.0" y="958.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build (1 samples, 0.48%)</title><rect x="791.0" y="931.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.0" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.48%)</title><rect x="791.0" y="915.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.0" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.48%)</title><rect x="791.0" y="899.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.0" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="791.0" y="883.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.0" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="791.0" y="867.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.0" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="791.0" y="851.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.0" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="791.0" y="835.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.0" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="791.0" y="819.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.0" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="791.0" y="803.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.0" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="791.0" y="787.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="791.0" y="771.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.48%)</title><rect x="791.0" y="755.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.0" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="796.7" y="979.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.7" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="796.7" y="963.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="796.7" y="947.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="796.7" y="931.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.7" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="796.7" y="915.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.7" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="796.7" y="899.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="796.7" y="883.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="796.7" y="867.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="796.7" y="851.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.7" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="796.7" y="835.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.7" y="846.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="796.7" y="819.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="799.7" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="796.7" y="803.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="796.7" y="787.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.48%)</title><rect x="796.7" y="771.0" width="5.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="799.7" y="782.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.48%)</title><rect x="796.7" y="755.0" width="5.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="799.7" y="766.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.48%)</title><rect x="796.7" y="739.0" width="5.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="799.7" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.48%)</title><rect x="796.7" y="723.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="799.7" y="734.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="796.7" y="707.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="799.7" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.48%)</title><rect x="796.7" y="691.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="799.7" y="702.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, bool) (1 samples, 0.48%)</title><rect x="796.7" y="675.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="799.7" y="686.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;false, Method*, int (*)(Method*, Method*)&gt;(Method**, unsigned long, int (*)(Method*, Method*)) (1 samples, 0.48%)</title><rect x="796.7" y="659.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.7" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (66 samples, 31.88%)</title><rect x="802.4" y="1027.0" width="376.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.4" y="1038.0">datadog/trace/agent/tooling/AgentInstaller.installB..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (66 samples, 31.88%)</title><rect x="802.4" y="1011.0" width="376.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.4" y="1022.0">datadog/trace/agent/tooling/AgentInstaller.installB..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.48%)</title><rect x="802.4" y="995.0" width="5.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="805.4" y="1006.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.48%)</title><rect x="802.4" y="979.0" width="5.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="805.4" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.instrument (5 samples, 2.42%)</title><rect x="808.1" y="995.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.1" y="1006.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.applyInstrumentationTransformers (2 samples, 0.97%)</title><rect x="808.1" y="979.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.1" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="808.1" y="963.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="811.1" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="808.1" y="947.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="811.1" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="808.1" y="931.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="811.1" y="942.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="808.1" y="915.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="811.1" y="926.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="808.1" y="899.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="811.1" y="910.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="808.1" y="883.0" width="5.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="811.1" y="894.0"></text>
</g>
<g>
<title>cp_index_to_class_fullinfo (1 samples, 0.48%)</title><rect x="808.1" y="867.0" width="5.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="811.1" y="878.0"></text>
</g>
<g>
<title>JVM_GetCPMethodClassNameUTF (1 samples, 0.48%)</title><rect x="808.1" y="851.0" width="5.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="811.1" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.48%)</title><rect x="808.1" y="835.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.1" y="846.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/guava10/ListenableFutureInstrumentation.transformers (1 samples, 0.48%)</title><rect x="813.8" y="963.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.8" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.takesArguments (1 samples, 0.48%)</title><rect x="813.8" y="947.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.erasures (1 samples, 0.48%)</title><rect x="813.8" y="931.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.8" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.erasures (1 samples, 0.48%)</title><rect x="813.8" y="915.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.erasures (1 samples, 0.48%)</title><rect x="813.8" y="899.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="813.8" y="883.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.8" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="813.8" y="867.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.8" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="813.8" y="851.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.8" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="813.8" y="835.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.8" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="813.8" y="819.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.8" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="813.8" y="803.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.8" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="813.8" y="787.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.8" y="798.0"></text>
</g>
<g>
<title>java/security/CodeSource.&lt;init&gt; (1 samples, 0.48%)</title><rect x="813.8" y="771.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.8" y="782.0"></text>
</g>
<g>
<title>sun/net/util/URLUtil.urlNoFragString (1 samples, 0.48%)</title><rect x="813.8" y="755.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.8" y="766.0"></text>
</g>
<g>
<title>java/net/URL.getFile (1 samples, 0.48%)</title><rect x="813.8" y="739.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.8" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.injectHelperClasses (1 samples, 0.48%)</title><rect x="819.5" y="979.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.5" y="990.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/lettuce5/LettuceClientInstrumentation.helperClassNames (1 samples, 0.48%)</title><rect x="819.5" y="963.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.5" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_ldc(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="819.5" y="947.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="822.5" y="958.0"></text>
</g>
<g>
<title>Bytecode_loadconstant::resolve_constant(Thread*) const (1 samples, 0.48%)</title><rect x="819.5" y="931.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="822.5" y="942.0"></text>
</g>
<g>
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (1 samples, 0.48%)</title><rect x="819.5" y="915.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="822.5" y="926.0"></text>
</g>
<g>
<title>ConstantPool::string_at_impl(constantPoolHandle const&amp;, int, int, Thread*) (1 samples, 0.48%)</title><rect x="819.5" y="899.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="822.5" y="910.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.48%)</title><rect x="819.5" y="883.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="822.5" y="894.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.48%)</title><rect x="819.5" y="867.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="822.5" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.lazyInit (1 samples, 0.48%)</title><rect x="825.2" y="979.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.2" y="990.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/completablefuture/CompletableFutureUniCompletionSubclassInstrumentation.contextStore (1 samples, 0.48%)</title><rect x="825.2" y="963.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.2" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.48%)</title><rect x="825.2" y="947.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="828.2" y="958.0"></text>
</g>
<g>
<title>Method::build_method_counters(Method*, Thread*) (1 samples, 0.48%)</title><rect x="825.2" y="931.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="828.2" y="942.0"></text>
</g>
<g>
<title>MethodCounters::allocate(methodHandle const&amp;, Thread*) (1 samples, 0.48%)</title><rect x="825.2" y="915.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="828.2" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextProvider.instrumentationTransformer (1 samples, 0.48%)</title><rect x="830.9" y="979.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.9" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextRequestRewriter.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="830.9" y="963.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.9" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="830.9" y="947.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.9" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="830.9" y="931.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.9" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.48%)</title><rect x="830.9" y="915.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.9" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="830.9" y="899.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.9" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="830.9" y="883.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.48%)</title><rect x="830.9" y="867.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.48%)</title><rect x="830.9" y="851.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.48%)</title><rect x="830.9" y="835.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.9" y="846.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.48%)</title><rect x="830.9" y="819.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.9" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.48%)</title><rect x="830.9" y="803.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.9" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.48%)</title><rect x="830.9" y="787.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.9" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.48%)</title><rect x="830.9" y="771.0" width="5.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="833.9" y="782.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.48%)</title><rect x="830.9" y="755.0" width="5.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="833.9" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.48%)</title><rect x="830.9" y="739.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="833.9" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.48%)</title><rect x="830.9" y="723.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="833.9" y="734.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.48%)</title><rect x="830.9" y="707.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="833.9" y="718.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="830.9" y="691.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="833.9" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.48%)</title><rect x="830.9" y="675.0" width="5.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="833.9" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.48%)</title><rect x="830.9" y="659.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="833.9" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.48%)</title><rect x="830.9" y="643.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="833.9" y="654.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (18 samples, 8.70%)</title><rect x="836.6" y="995.0" width="102.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.6" y="1006.0">java/util/Se..</text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (18 samples, 8.70%)</title><rect x="836.6" y="979.0" width="102.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.6" y="990.0">java/util/Se..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (18 samples, 8.70%)</title><rect x="836.6" y="963.0" width="102.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="839.6" y="974.0">java/util/Se..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (18 samples, 8.70%)</title><rect x="836.6" y="947.0" width="102.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.6" y="958.0">java/util/Se..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (6 samples, 2.90%)</title><rect x="836.6" y="931.0" width="34.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.6" y="942.0">ja..</text>
</g>
<g>
<title>java/lang/Class.forName (6 samples, 2.90%)</title><rect x="836.6" y="915.0" width="34.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.6" y="926.0">ja..</text>
</g>
<g>
<title>java/lang/Class.forName0 (6 samples, 2.90%)</title><rect x="836.6" y="899.0" width="34.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.6" y="910.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (6 samples, 2.90%)</title><rect x="836.6" y="883.0" width="34.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.6" y="894.0">ja..</text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (6 samples, 2.90%)</title><rect x="836.6" y="867.0" width="34.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.6" y="878.0">da..</text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (6 samples, 2.90%)</title><rect x="836.6" y="851.0" width="34.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.6" y="862.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 2.90%)</title><rect x="836.6" y="835.0" width="34.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.6" y="846.0">ja..</text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (6 samples, 2.90%)</title><rect x="836.6" y="819.0" width="34.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.6" y="830.0">ja..</text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (6 samples, 2.90%)</title><rect x="836.6" y="803.0" width="34.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.6" y="814.0">ja..</text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (6 samples, 2.90%)</title><rect x="836.6" y="787.0" width="34.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.6" y="798.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.definePackage (1 samples, 0.48%)</title><rect x="836.6" y="771.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Package.&lt;init&gt; (1 samples, 0.48%)</title><rect x="836.6" y="755.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Package$VersionInfo.getInstance (1 samples, 0.48%)</title><rect x="836.6" y="739.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.6" y="750.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (4 samples, 1.93%)</title><rect x="842.3" y="771.0" width="22.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.3" y="782.0">j..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (4 samples, 1.93%)</title><rect x="842.3" y="755.0" width="22.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.3" y="766.0">j..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (4 samples, 1.93%)</title><rect x="842.3" y="739.0" width="22.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.3" y="750.0">j..</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (4 samples, 1.93%)</title><rect x="842.3" y="723.0" width="22.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="845.3" y="734.0">J..</text>
</g>
<g>
<title>JVM_DefineClassWithSource (4 samples, 1.93%)</title><rect x="842.3" y="707.0" width="22.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="845.3" y="718.0">J..</text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (4 samples, 1.93%)</title><rect x="842.3" y="691.0" width="22.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="845.3" y="702.0">j..</text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (4 samples, 1.93%)</title><rect x="842.3" y="675.0" width="22.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="845.3" y="686.0">S..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (4 samples, 1.93%)</title><rect x="842.3" y="659.0" width="22.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="845.3" y="670.0">K..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (4 samples, 1.93%)</title><rect x="842.3" y="643.0" width="22.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="845.3" y="654.0">C..</text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (4 samples, 1.93%)</title><rect x="842.3" y="627.0" width="22.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="845.3" y="638.0">C..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (4 samples, 1.93%)</title><rect x="842.3" y="611.0" width="22.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="845.3" y="622.0">C..</text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (3 samples, 1.45%)</title><rect x="842.3" y="595.0" width="17.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="845.3" y="606.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.48%)</title><rect x="859.4" y="595.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="862.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="865.1" y="771.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.1" y="782.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="865.1" y="755.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.1" y="766.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="865.1" y="739.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.1" y="750.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="865.1" y="723.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.1" y="734.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.48%)</title><rect x="865.1" y="707.0" width="5.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="868.1" y="718.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (12 samples, 5.80%)</title><rect x="870.8" y="931.0" width="68.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.8" y="942.0">java/ut..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (12 samples, 5.80%)</title><rect x="870.8" y="915.0" width="68.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.8" y="926.0">java/se..</text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (12 samples, 5.80%)</title><rect x="870.8" y="899.0" width="68.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.8" y="910.0">java/ut..</text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (12 samples, 5.80%)</title><rect x="870.8" y="883.0" width="68.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.8" y="894.0">java/ut..</text>
</g>
<g>
<title>java/lang/Class.getConstructor (12 samples, 5.80%)</title><rect x="870.8" y="867.0" width="68.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.8" y="878.0">java/la..</text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (12 samples, 5.80%)</title><rect x="870.8" y="851.0" width="68.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.8" y="862.0">java/la..</text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (12 samples, 5.80%)</title><rect x="870.8" y="835.0" width="68.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.8" y="846.0">java/la..</text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (12 samples, 5.80%)</title><rect x="870.8" y="819.0" width="68.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.8" y="830.0">java/la..</text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (12 samples, 5.80%)</title><rect x="870.8" y="803.0" width="68.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="873.8" y="814.0">JVM_Get..</text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (12 samples, 5.80%)</title><rect x="870.8" y="787.0" width="68.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="873.8" y="798.0">get_cla..</text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (12 samples, 5.80%)</title><rect x="870.8" y="771.0" width="68.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="873.8" y="782.0">Instanc..</text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.48%)</title><rect x="870.8" y="755.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="873.8" y="766.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.48%)</title><rect x="870.8" y="739.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="873.8" y="750.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.48%)</title><rect x="870.8" y="723.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="873.8" y="734.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.48%)</title><rect x="870.8" y="707.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="873.8" y="718.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.48%)</title><rect x="876.5" y="755.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="879.5" y="766.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="876.5" y="739.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="879.5" y="750.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.48%)</title><rect x="876.5" y="723.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="879.5" y="734.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.48%)</title><rect x="876.5" y="707.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="879.5" y="718.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (10 samples, 4.83%)</title><rect x="882.2" y="755.0" width="57.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="885.2" y="766.0">Verifi..</text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (9 samples, 4.35%)</title><rect x="882.2" y="739.0" width="51.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="885.2" y="750.0">Class..</text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (9 samples, 4.35%)</title><rect x="882.2" y="723.0" width="51.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="885.2" y="734.0">Class..</text>
</g>
<g>
<title>ClassVerifier::verify_anewarray(unsigned short, unsigned short, constantPoolHandle const&amp;, StackMapFrame*, Thread*) (1 samples, 0.48%)</title><rect x="887.9" y="707.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="890.9" y="718.0"></text>
</g>
<g>
<title>os::snprintf(char*, unsigned long, char const*, ...) (1 samples, 0.48%)</title><rect x="887.9" y="691.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="890.9" y="702.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.48%)</title><rect x="893.6" y="707.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.6" y="718.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_type_signature(Symbol*) (1 samples, 0.48%)</title><rect x="893.6" y="691.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="896.6" y="702.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (5 samples, 2.42%)</title><rect x="899.3" y="707.0" width="28.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="902.3" y="718.0">Cl..</text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (2 samples, 0.97%)</title><rect x="910.7" y="691.0" width="11.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="913.7" y="702.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.48%)</title><rect x="916.4" y="675.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="919.4" y="686.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.48%)</title><rect x="916.4" y="659.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="919.4" y="670.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.48%)</title><rect x="916.4" y="643.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="919.4" y="654.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.48%)</title><rect x="922.1" y="691.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="925.1" y="702.0"></text>
</g>
<g>
<title>ClassVerifier::verify_ldc(int, unsigned short, StackMapFrame*, constantPoolHandle const&amp;, unsigned short, Thread*) (1 samples, 0.48%)</title><rect x="927.8" y="707.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="930.8" y="718.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.48%)</title><rect x="933.5" y="739.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="936.5" y="750.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (1 samples, 0.48%)</title><rect x="939.2" y="995.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="942.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (1 samples, 0.48%)</title><rect x="939.2" y="979.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.2" y="990.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (1 samples, 0.48%)</title><rect x="939.2" y="963.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.2" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.48%)</title><rect x="939.2" y="947.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="939.2" y="931.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="939.2" y="915.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.48%)</title><rect x="939.2" y="899.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.2" y="910.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/jedis30/JedisInstrumentation.&lt;init&gt; (1 samples, 0.48%)</title><rect x="939.2" y="883.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.2" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.48%)</title><rect x="939.2" y="867.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.installOn (24 samples, 11.59%)</title><rect x="944.9" y="995.0" width="136.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.9" y="1006.0">net/bytebuddy/age..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.installOn (24 samples, 11.59%)</title><rect x="944.9" y="979.0" width="136.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.9" y="990.0">net/bytebuddy/age..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.doInstall (24 samples, 11.59%)</title><rect x="944.9" y="963.0" width="136.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.9" y="974.0">net/bytebuddy/age..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.makeRaw (3 samples, 1.45%)</title><rect x="944.9" y="947.0" width="17.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.9" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.&lt;clinit&gt; (3 samples, 1.45%)</title><rect x="944.9" y="931.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.9" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 1.45%)</title><rect x="944.9" y="915.0" width="17.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.9" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 1.45%)</title><rect x="944.9" y="899.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.9" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (3 samples, 1.45%)</title><rect x="944.9" y="883.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.9" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (2 samples, 0.97%)</title><rect x="944.9" y="867.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="947.9" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (2 samples, 0.97%)</title><rect x="944.9" y="851.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.9" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.97%)</title><rect x="944.9" y="835.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.9" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.97%)</title><rect x="944.9" y="819.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="947.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.48%)</title><rect x="944.9" y="803.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (1 samples, 0.48%)</title><rect x="944.9" y="787.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.48%)</title><rect x="944.9" y="771.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyBody (1 samples, 0.48%)</title><rect x="944.9" y="755.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyCode (1 samples, 0.48%)</title><rect x="944.9" y="739.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$Appender.apply (1 samples, 0.48%)</title><rect x="944.9" y="723.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$TargetHandler$ForSelfOrStaticInvocation.resolve (1 samples, 0.48%)</title><rect x="944.9" y="707.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.9" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="944.9" y="691.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.9" y="702.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="944.9" y="675.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.9" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="944.9" y="659.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.9" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="944.9" y="643.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.9" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="944.9" y="627.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.9" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="944.9" y="611.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.9" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="944.9" y="595.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="947.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="944.9" y="579.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.9" y="590.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="944.9" y="563.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.9" y="574.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="944.9" y="547.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.9" y="558.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="944.9" y="531.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.9" y="542.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.48%)</title><rect x="944.9" y="515.0" width="5.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="947.9" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.applyConstructorStrategy (1 samples, 0.48%)</title><rect x="950.6" y="803.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default.extractConstructors (1 samples, 0.48%)</title><rect x="950.6" y="787.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/ConstructorStrategy$Default$5.doExtractConstructors (1 samples, 0.48%)</title><rect x="950.6" y="771.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$AbstractBase.asTokenList (1 samples, 0.48%)</title><rect x="950.6" y="755.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asToken (1 samples, 0.48%)</title><rect x="950.6" y="739.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asToken (1 samples, 0.48%)</title><rect x="950.6" y="723.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTokenList (1 samples, 0.48%)</title><rect x="950.6" y="707.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$AbstractBase.asToken (1 samples, 0.48%)</title><rect x="950.6" y="691.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$AbstractBase.asToken (1 samples, 0.48%)</title><rect x="950.6" y="675.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$TypeSubstituting.getDeclaredAnnotations (1 samples, 0.48%)</title><rect x="950.6" y="659.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$OfConstructor.getDeclaredAnnotations (1 samples, 0.48%)</title><rect x="950.6" y="643.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.6" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="950.6" y="627.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="953.6" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="950.6" y="611.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="953.6" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="950.6" y="595.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="953.6" y="606.0"></text>
</g>
<g>
<title>klassItable::initialize_itable(bool, Thread*) (1 samples, 0.48%)</title><rect x="950.6" y="579.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="953.6" y="590.0"></text>
</g>
<g>
<title>klassItable::initialize_itable_for_interface(int, Klass*, bool, Thread*) (1 samples, 0.48%)</title><rect x="950.6" y="563.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="953.6" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.48%)</title><rect x="950.6" y="547.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="953.6" y="558.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.48%)</title><rect x="950.6" y="531.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="953.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Default$Unloaded.load (1 samples, 0.48%)</title><rect x="956.3" y="867.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/TypeResolutionStrategy$Passive.initialize (1 samples, 0.48%)</title><rect x="956.3" y="851.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$WrappingDispatcher.load (1 samples, 0.48%)</title><rect x="956.3" y="835.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader.load (1 samples, 0.48%)</title><rect x="956.3" y="819.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="956.3" y="803.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="959.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="956.3" y="787.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.3" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="956.3" y="771.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.3" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="956.3" y="755.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.3" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="956.3" y="739.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="959.3" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="956.3" y="723.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.48%)</title><rect x="956.3" y="707.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="959.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.48%)</title><rect x="956.3" y="691.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.3" y="702.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.48%)</title><rect x="956.3" y="675.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.3" y="686.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.48%)</title><rect x="956.3" y="659.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="959.3" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.48%)</title><rect x="956.3" y="643.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy.apply (21 samples, 10.14%)</title><rect x="962.0" y="947.0" width="119.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.0" y="958.0">net/bytebuddy/a..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.apply (8 samples, 3.86%)</title><rect x="962.0" y="931.0" width="45.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.0" y="942.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation.doApply (8 samples, 3.86%)</title><rect x="962.0" y="915.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.0" y="926.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.retransformClasses (8 samples, 3.86%)</title><rect x="962.0" y="899.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.0" y="910.0">net/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 3.86%)</title><rect x="962.0" y="883.0" width="45.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.0" y="894.0">java..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 3.86%)</title><rect x="962.0" y="867.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.0" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (8 samples, 3.86%)</title><rect x="962.0" y="851.0" width="45.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.0" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (8 samples, 3.86%)</title><rect x="962.0" y="835.0" width="45.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.0" y="846.0">jdk/..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses (8 samples, 3.86%)</title><rect x="962.0" y="819.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.0" y="830.0">sun/..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses0 (8 samples, 3.86%)</title><rect x="962.0" y="803.0" width="45.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.0" y="814.0">sun/..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (8 samples, 3.86%)</title><rect x="962.0" y="787.0" width="45.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.0" y="798.0">sun/..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (8 samples, 3.86%)</title><rect x="962.0" y="771.0" width="45.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.0" y="782.0">sun/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (8 samples, 3.86%)</title><rect x="962.0" y="755.0" width="45.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.0" y="766.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (8 samples, 3.86%)</title><rect x="962.0" y="739.0" width="45.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.0" y="750.0">net/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 3.86%)</title><rect x="962.0" y="723.0" width="45.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.0" y="734.0">java..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (8 samples, 3.86%)</title><rect x="962.0" y="707.0" width="45.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.0" y="718.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (8 samples, 3.86%)</title><rect x="962.0" y="691.0" width="45.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.0" y="702.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (8 samples, 3.86%)</title><rect x="962.0" y="675.0" width="45.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.0" y="686.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (8 samples, 3.86%)</title><rect x="962.0" y="659.0" width="45.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.0" y="670.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (8 samples, 3.86%)</title><rect x="962.0" y="643.0" width="45.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.0" y="654.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (2 samples, 0.97%)</title><rect x="962.0" y="627.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (2 samples, 0.97%)</title><rect x="962.0" y="611.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (2 samples, 0.97%)</title><rect x="962.0" y="595.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (2 samples, 0.97%)</title><rect x="962.0" y="579.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (2 samples, 0.97%)</title><rect x="962.0" y="563.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.0" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="962.0" y="547.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.0" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="962.0" y="531.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="965.0" y="542.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.48%)</title><rect x="962.0" y="515.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="965.0" y="526.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.48%)</title><rect x="962.0" y="499.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="965.0" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="962.0" y="483.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="965.0" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="962.0" y="467.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="965.0" y="478.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.48%)</title><rect x="962.0" y="451.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="965.0" y="462.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="962.0" y="435.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="965.0" y="446.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.48%)</title><rect x="962.0" y="419.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="965.0" y="430.0"></text>
</g>
<g>
<title>Rewriter::compute_index_maps() (1 samples, 0.48%)</title><rect x="962.0" y="403.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="965.0" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (1 samples, 0.48%)</title><rect x="967.7" y="547.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.7" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (1 samples, 0.48%)</title><rect x="967.7" y="531.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (1 samples, 0.48%)</title><rect x="967.7" y="515.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.48%)</title><rect x="967.7" y="499.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.7" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.48%)</title><rect x="967.7" y="483.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.7" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$Factory.make (1 samples, 0.48%)</title><rect x="967.7" y="467.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.7" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="967.7" y="451.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="970.7" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="967.7" y="435.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="970.7" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="967.7" y="419.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="970.7" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="967.7" y="403.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="970.7" y="414.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="967.7" y="387.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="970.7" y="398.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="967.7" y="371.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="970.7" y="382.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="967.7" y="355.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="970.7" y="366.0"></text>
</g>
<g>
<title>cp_index_to_class_fullinfo (1 samples, 0.48%)</title><rect x="967.7" y="339.0" width="5.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="970.7" y="350.0"></text>
</g>
<g>
<title>class_name_to_ID (1 samples, 0.48%)</title><rect x="967.7" y="323.0" width="5.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="970.7" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$TypeStrategy$Default$3.builder (1 samples, 0.48%)</title><rect x="973.4" y="627.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.redefine (1 samples, 0.48%)</title><rect x="973.4" y="611.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Factory$Default$2.represent (1 samples, 0.48%)</title><rect x="973.4" y="595.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.4" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="973.4" y="579.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="976.4" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="973.4" y="563.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="976.4" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="973.4" y="547.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="976.4" y="558.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="973.4" y="531.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="976.4" y="542.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="973.4" y="515.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="976.4" y="526.0"></text>
</g>
<g>
<title>instruction_length (1 samples, 0.48%)</title><rect x="973.4" y="499.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="976.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (5 samples, 2.42%)</title><rect x="979.1" y="627.0" width="28.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.1" y="638.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.48%)</title><rect x="979.1" y="611.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.48%)</title><rect x="979.1" y="595.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.48%)</title><rect x="979.1" y="579.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="563.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="547.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.1" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="531.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="515.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.1" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="499.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.1" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="483.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.1" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParameterTypeMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="467.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.1" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="451.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.1" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ErasureMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="435.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.1" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="419.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.1" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="403.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.1" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/VisibilityMatcher.matches (1 samples, 0.48%)</title><rect x="979.1" y="387.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.1" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isVisibleTo (1 samples, 0.48%)</title><rect x="979.1" y="371.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.1" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isPublic (1 samples, 0.48%)</title><rect x="979.1" y="355.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.1" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.48%)</title><rect x="979.1" y="339.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.1" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.48%)</title><rect x="979.1" y="323.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.1" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.48%)</title><rect x="979.1" y="307.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.1" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.48%)</title><rect x="979.1" y="291.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.1" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.48%)</title><rect x="979.1" y="275.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.1" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.48%)</title><rect x="979.1" y="259.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.1" y="270.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.48%)</title><rect x="979.1" y="243.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.1" y="254.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.48%)</title><rect x="979.1" y="227.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.1" y="238.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.48%)</title><rect x="979.1" y="211.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.1" y="222.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.48%)</title><rect x="979.1" y="195.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.1" y="206.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.48%)</title><rect x="979.1" y="179.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResource (1 samples, 0.48%)</title><rect x="979.1" y="163.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getResource (1 samples, 0.48%)</title><rect x="979.1" y="147.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageBufferCache.releaseBuffer (1 samples, 0.48%)</title><rect x="979.1" y="131.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.48%)</title><rect x="979.1" y="115.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.1" y="126.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (1 samples, 0.48%)</title><rect x="979.1" y="99.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageBufferCache$2.compare (1 samples, 0.48%)</title><rect x="979.1" y="83.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.1" y="94.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.forRedefinition (1 samples, 0.48%)</title><rect x="984.8" y="611.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.8" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="984.8" y="595.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.8" y="606.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="984.8" y="579.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="987.8" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="984.8" y="563.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="987.8" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="984.8" y="547.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.8" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="984.8" y="531.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.8" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="984.8" y="515.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.8" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="984.8" y="499.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="984.8" y="483.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="987.8" y="494.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="984.8" y="467.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="987.8" y="478.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="984.8" y="451.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="987.8" y="462.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="984.8" y="435.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.8" y="446.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.48%)</title><rect x="984.8" y="419.0" width="5.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="987.8" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.97%)</title><rect x="990.5" y="611.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.5" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (2 samples, 0.97%)</title><rect x="990.5" y="595.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.5" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.97%)</title><rect x="990.5" y="579.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.5" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.97%)</title><rect x="990.5" y="563.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.5" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.97%)</title><rect x="990.5" y="547.0" width="11.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.48%)</title><rect x="990.5" y="531.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.5" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (1 samples, 0.48%)</title><rect x="990.5" y="515.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.5" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (1 samples, 0.48%)</title><rect x="990.5" y="499.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="993.5" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.48%)</title><rect x="990.5" y="483.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="993.5" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.48%)</title><rect x="990.5" y="467.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.5" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.48%)</title><rect x="990.5" y="451.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="993.5" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.48%)</title><rect x="990.5" y="435.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.5" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.48%)</title><rect x="990.5" y="419.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.5" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitVarInsn (1 samples, 0.48%)</title><rect x="990.5" y="403.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.5" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$CodeTranslationVisitor.visitVarInsn (1 samples, 0.48%)</title><rect x="990.5" y="387.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="993.5" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$Target$ForField.resolveRead (1 samples, 0.48%)</title><rect x="990.5" y="371.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="993.5" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="990.5" y="355.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.5" y="366.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="990.5" y="339.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.5" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="990.5" y="323.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.5" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="990.5" y="307.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.5" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="990.5" y="291.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.5" y="302.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="990.5" y="275.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="993.5" y="286.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="990.5" y="259.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.5" y="270.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="990.5" y="243.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.5" y="254.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="990.5" y="227.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.5" y="238.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="990.5" y="211.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="993.5" y="222.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.48%)</title><rect x="990.5" y="195.0" width="5.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="993.5" y="206.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.48%)</title><rect x="990.5" y="179.0" width="5.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="993.5" y="190.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.48%)</title><rect x="990.5" y="163.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="993.5" y="174.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.48%)</title><rect x="990.5" y="147.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="993.5" y="158.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="990.5" y="131.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="993.5" y="142.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.48%)</title><rect x="990.5" y="115.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="993.5" y="126.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.48%)</title><rect x="990.5" y="99.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="993.5" y="110.0"></text>
</g>
<g>
<title>ConstantPool::tag_at(int) const (1 samples, 0.48%)</title><rect x="990.5" y="83.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="993.5" y="94.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.48%)</title><rect x="996.2" y="531.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.48%)</title><rect x="996.2" y="515.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.2" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.48%)</title><rect x="996.2" y="499.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.2" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.48%)</title><rect x="996.2" y="483.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.2" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.48%)</title><rect x="996.2" y="467.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.2" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.48%)</title><rect x="996.2" y="451.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.2" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling.&lt;init&gt; (1 samples, 0.48%)</title><rect x="996.2" y="435.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.2" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.&lt;init&gt; (1 samples, 0.48%)</title><rect x="996.2" y="419.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.2" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.&lt;init&gt; (1 samples, 0.48%)</title><rect x="996.2" y="403.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.2" y="414.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="996.2" y="387.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.2" y="398.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="996.2" y="371.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.2" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="996.2" y="355.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.2" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="996.2" y="339.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.2" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="996.2" y="323.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.2" y="334.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="996.2" y="307.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="999.2" y="318.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="996.2" y="291.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="996.2" y="275.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.2" y="286.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="996.2" y="259.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="999.2" y="270.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="996.2" y="243.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.2" y="254.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="996.2" y="227.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.48%)</title><rect x="996.2" y="211.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="999.2" y="222.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.48%)</title><rect x="996.2" y="195.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="999.2" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (1 samples, 0.48%)</title><rect x="1001.9" y="611.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.9" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.takesArguments (1 samples, 0.48%)</title><rect x="1001.9" y="595.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.erasure (1 samples, 0.48%)</title><rect x="1001.9" y="579.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.9" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.is (1 samples, 0.48%)</title><rect x="1001.9" y="563.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.9" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.consider (12 samples, 5.80%)</title><rect x="1007.6" y="931.0" width="68.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.6" y="942.0">net/byt..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.48%)</title><rect x="1007.6" y="915.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.6" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.computeIfAbsent (1 samples, 0.48%)</title><rect x="1007.6" y="899.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.6" y="910.0"></text>
</g>
<g>
<title>com/blogspot/mydailyjava/weaklockfree/WeakConcurrentMap.getIfPresent (1 samples, 0.48%)</title><rect x="1007.6" y="883.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.6" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.48%)</title><rect x="1007.6" y="867.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.6" y="878.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.48%)</title><rect x="1007.6" y="851.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1010.6" y="862.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.48%)</title><rect x="1007.6" y="835.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.6" y="846.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.48%)</title><rect x="1007.6" y="819.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.6" y="830.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.48%)</title><rect x="1007.6" y="803.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.6" y="814.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.48%)</title><rect x="1007.6" y="787.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.6" y="798.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.48%)</title><rect x="1007.6" y="771.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.48%)</title><rect x="1013.3" y="915.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.48%)</title><rect x="1013.3" y="899.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.48%)</title><rect x="1013.3" y="883.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.48%)</title><rect x="1013.3" y="867.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1016.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.48%)</title><rect x="1013.3" y="851.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.48%)</title><rect x="1013.3" y="835.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.48%)</title><rect x="1013.3" y="819.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.doConsider (9 samples, 4.35%)</title><rect x="1019.0" y="915.0" width="51.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1022.0" y="926.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher.matches (9 samples, 4.35%)</title><rect x="1019.0" y="899.0" width="51.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.0" y="910.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (9 samples, 4.35%)</title><rect x="1019.0" y="883.0" width="51.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.0" y="894.0">net/b..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (3 samples, 1.45%)</title><rect x="1019.0" y="867.0" width="17.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.0" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="1019.0" y="851.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1022.0" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.48%)</title><rect x="1019.0" y="835.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1022.0" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.48%)</title><rect x="1019.0" y="819.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1022.0" y="830.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.48%)</title><rect x="1019.0" y="803.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1022.0" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (2 samples, 0.97%)</title><rect x="1024.7" y="851.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.7" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CLHMWeakCache.computeIfAbsent (2 samples, 0.97%)</title><rect x="1024.7" y="835.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.7" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.97%)</title><rect x="1024.7" y="819.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1027.7" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.97%)</title><rect x="1024.7" y="803.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.7" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (2 samples, 0.97%)</title><rect x="1024.7" y="787.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.7" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (2 samples, 0.97%)</title><rect x="1024.7" y="771.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.7" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.97%)</title><rect x="1024.7" y="755.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (2 samples, 0.97%)</title><rect x="1024.7" y="739.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.97%)</title><rect x="1024.7" y="723.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.97%)</title><rect x="1024.7" y="707.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.97%)</title><rect x="1024.7" y="691.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.7" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.97%)</title><rect x="1024.7" y="675.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.7" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.97%)</title><rect x="1024.7" y="659.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.7" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.48%)</title><rect x="1024.7" y="643.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.7" y="654.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.48%)</title><rect x="1024.7" y="627.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.7" y="638.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.48%)</title><rect x="1024.7" y="611.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.7" y="622.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getConnection (1 samples, 0.48%)</title><rect x="1024.7" y="595.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.7" y="606.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.48%)</title><rect x="1024.7" y="579.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.7" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.48%)</title><rect x="1030.4" y="643.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.4" y="654.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (1 samples, 0.48%)</title><rect x="1030.4" y="627.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.4" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="1030.4" y="611.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.4" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="1030.4" y="595.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.4" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="1030.4" y="579.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.4" y="590.0"></text>
</g>
<g>
<title>inflate (1 samples, 0.48%)</title><rect x="1030.4" y="563.0" width="5.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1033.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (6 samples, 2.90%)</title><rect x="1036.1" y="867.0" width="34.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.1" y="878.0">ne..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.48%)</title><rect x="1036.1" y="851.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.1" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.48%)</title><rect x="1036.1" y="835.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.48%)</title><rect x="1036.1" y="819.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.1" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringMethodMatcher.matches (1 samples, 0.48%)</title><rect x="1036.1" y="803.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.48%)</title><rect x="1036.1" y="787.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.48%)</title><rect x="1036.1" y="771.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.1" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.48%)</title><rect x="1036.1" y="755.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.48%)</title><rect x="1036.1" y="739.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodTokenList.get (1 samples, 0.48%)</title><rect x="1036.1" y="723.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.access$1200 (1 samples, 0.48%)</title><rect x="1036.1" y="707.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$MethodToken.toMethodDescription (1 samples, 0.48%)</title><rect x="1036.1" y="691.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.1" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="1036.1" y="675.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1039.1" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="1036.1" y="659.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1039.1" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="1036.1" y="643.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.1" y="654.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="1036.1" y="627.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1039.1" y="638.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="1036.1" y="611.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1039.1" y="622.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="1036.1" y="595.0" width="5.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1039.1" y="606.0"></text>
</g>
<g>
<title>cp_index_to_class_fullinfo (1 samples, 0.48%)</title><rect x="1036.1" y="579.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1039.1" y="590.0"></text>
</g>
<g>
<title>__strcmp_sse2_unaligned (1 samples, 0.48%)</title><rect x="1036.1" y="563.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1039.1" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 2.42%)</title><rect x="1041.8" y="851.0" width="28.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.8" y="862.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (5 samples, 2.42%)</title><rect x="1041.8" y="835.0" width="28.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.8" y="846.0">da..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.erasureMatches (1 samples, 0.48%)</title><rect x="1041.8" y="819.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.48%)</title><rect x="1041.8" y="803.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.48%)</title><rect x="1041.8" y="787.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getActualName (1 samples, 0.48%)</title><rect x="1041.8" y="771.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.8" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 1.45%)</title><rect x="1047.5" y="819.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (2 samples, 0.97%)</title><rect x="1047.5" y="803.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.5" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (2 samples, 0.97%)</title><rect x="1047.5" y="787.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.97%)</title><rect x="1047.5" y="771.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType$LazyRawAnnotatedTypeList.get (2 samples, 0.97%)</title><rect x="1047.5" y="755.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (2 samples, 0.97%)</title><rect x="1047.5" y="739.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (2 samples, 0.97%)</title><rect x="1047.5" y="723.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (2 samples, 0.97%)</title><rect x="1047.5" y="707.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (2 samples, 0.97%)</title><rect x="1047.5" y="691.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.48%)</title><rect x="1047.5" y="675.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.5" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.48%)</title><rect x="1047.5" y="659.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.5" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.48%)</title><rect x="1047.5" y="643.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.5" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainOnReadIfNeeded (1 samples, 0.48%)</title><rect x="1047.5" y="627.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.5" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.48%)</title><rect x="1047.5" y="611.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.5" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainBuffers (1 samples, 0.48%)</title><rect x="1047.5" y="595.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.5" y="606.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffers (1 samples, 0.48%)</title><rect x="1047.5" y="579.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="590.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.drainReadBuffer (1 samples, 0.48%)</title><rect x="1047.5" y="563.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.5" y="574.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.applyRead (1 samples, 0.48%)</title><rect x="1047.5" y="547.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.5" y="558.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.moveToBack (1 samples, 0.48%)</title><rect x="1047.5" y="531.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.5" y="542.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/LinkedDeque.unlink (1 samples, 0.48%)</title><rect x="1047.5" y="515.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.5" y="526.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x00007f89ec8bbe00 (1 samples, 0.48%)</title><rect x="1047.5" y="499.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.48%)</title><rect x="1053.2" y="675.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.48%)</title><rect x="1053.2" y="659.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.48%)</title><rect x="1053.2" y="643.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.2" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.48%)</title><rect x="1058.9" y="803.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.9" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1058.9" y="787.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.9" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1058.9" y="771.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1061.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.48%)</title><rect x="1058.9" y="755.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.48%)</title><rect x="1058.9" y="739.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.48%)</title><rect x="1058.9" y="723.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.48%)</title><rect x="1058.9" y="707.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.9" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.48%)</title><rect x="1058.9" y="691.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.9" y="702.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.48%)</title><rect x="1058.9" y="675.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.9" y="686.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.48%)</title><rect x="1058.9" y="659.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1061.9" y="670.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.48%)</title><rect x="1058.9" y="643.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1061.9" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.tryToDrainBuffers (1 samples, 0.48%)</title><rect x="1058.9" y="627.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.tryLock (1 samples, 0.48%)</title><rect x="1058.9" y="611.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.48%)</title><rect x="1058.9" y="595.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.9" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.48%)</title><rect x="1064.6" y="819.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.48%)</title><rect x="1064.6" y="803.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.48%)</title><rect x="1064.6" y="787.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.48%)</title><rect x="1064.6" y="771.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.48%)</title><rect x="1064.6" y="755.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.register (1 samples, 0.48%)</title><rect x="1064.6" y="739.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.6" y="750.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.48%)</title><rect x="1064.6" y="723.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.6" y="734.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.put (1 samples, 0.48%)</title><rect x="1064.6" y="707.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.6" y="718.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterWrite (1 samples, 0.48%)</title><rect x="1064.6" y="691.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.add (1 samples, 0.48%)</title><rect x="1064.6" y="675.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.offer (1 samples, 0.48%)</title><rect x="1064.6" y="659.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.ofType (1 samples, 0.48%)</title><rect x="1070.3" y="915.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule$Dispatcher$Enabled.moduleOf (1 samples, 0.48%)</title><rect x="1070.3" y="899.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.3" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.48%)</title><rect x="1070.3" y="883.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1073.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.48%)</title><rect x="1070.3" y="867.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.3" y="878.0"></text>
</g>
<g>
<title>JVM_GetCallerClass (1 samples, 0.48%)</title><rect x="1070.3" y="851.0" width="5.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1073.3" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.245] (1 samples, 0.48%)</title><rect x="1070.3" y="835.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1073.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$DiscoveryStrategy$Reiterating$ReiteratingIterator.hasNext (1 samples, 0.48%)</title><rect x="1076.0" y="931.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.0" y="942.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.getAllLoadedClasses (1 samples, 0.48%)</title><rect x="1076.0" y="915.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.0" y="926.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.getAllLoadedClasses0 (1 samples, 0.48%)</title><rect x="1076.0" y="899.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.0" y="910.0"></text>
</g>
<g>
<title>commonGetClassList (1 samples, 0.48%)</title><rect x="1076.0" y="883.0" width="5.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1079.0" y="894.0"></text>
</g>
<g>
<title>getObjectArrayFromClasses (1 samples, 0.48%)</title><rect x="1076.0" y="867.0" width="5.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1079.0" y="878.0"></text>
</g>
<g>
<title>jni_SetObjectArrayElement (1 samples, 0.48%)</title><rect x="1076.0" y="851.0" width="5.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1079.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1081.7" y="995.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1081.7" y="979.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.7" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1081.7" y="963.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.7" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1081.7" y="947.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.7" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1081.7" y="931.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1084.7" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1081.7" y="915.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.7" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1081.7" y="899.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1084.7" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1081.7" y="883.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.7" y="894.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1081.7" y="867.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.7" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1081.7" y="851.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.7" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="1081.7" y="835.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.7" y="846.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.48%)</title><rect x="1081.7" y="819.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1084.7" y="830.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.48%)</title><rect x="1081.7" y="803.0" width="5.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1084.7" y="814.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.48%)</title><rect x="1081.7" y="787.0" width="5.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1084.7" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.48%)</title><rect x="1081.7" y="771.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1084.7" y="782.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.48%)</title><rect x="1081.7" y="755.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1084.7" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.48%)</title><rect x="1081.7" y="739.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1084.7" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.48%)</title><rect x="1081.7" y="723.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1084.7" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.48%)</title><rect x="1081.7" y="707.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1084.7" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.48%)</title><rect x="1081.7" y="691.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (16 samples, 7.73%)</title><rect x="1087.4" y="995.0" width="91.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.4" y="1006.0">net/bytebud..</text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.97%)</title><rect x="1087.4" y="979.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.97%)</title><rect x="1087.4" y="963.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.4" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1087.4" y="947.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.4" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1087.4" y="931.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.4" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1087.4" y="915.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.4" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1087.4" y="899.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.4" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1087.4" y="883.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.4" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1087.4" y="867.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.4" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1087.4" y="851.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="1087.4" y="835.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.4" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.48%)</title><rect x="1087.4" y="819.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/VisibilityBridgeStrategy$Default.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1093.1" y="947.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/VisibilityBridgeStrategy$Default$1.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1093.1" y="931.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.1" y="942.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.48%)</title><rect x="1093.1" y="915.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.1" y="926.0"></text>
</g>
<g>
<title>MethodCounters::allocate(methodHandle const&amp;, Thread*) (1 samples, 0.48%)</title><rect x="1093.1" y="899.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (14 samples, 6.76%)</title><rect x="1098.8" y="979.0" width="79.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.8" y="990.0">net/byteb..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1098.8" y="963.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.8" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1098.8" y="947.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.8" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1098.8" y="931.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.8" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1098.8" y="915.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.8" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1098.8" y="899.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.8" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1098.8" y="883.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.8" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1098.8" y="867.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="1098.8" y="851.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.8" y="862.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.close (1 samples, 0.48%)</title><rect x="1098.8" y="835.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.48%)</title><rect x="1098.8" y="819.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.48%)</title><rect x="1098.8" y="803.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.8" y="814.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$InflaterCleanupAction.run (1 samples, 0.48%)</title><rect x="1098.8" y="787.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.8" y="798.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.releaseInflater (1 samples, 0.48%)</title><rect x="1098.8" y="771.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.8" y="782.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.reset (1 samples, 0.48%)</title><rect x="1098.8" y="755.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split.&lt;init&gt; (13 samples, 6.28%)</title><rect x="1104.5" y="963.0" width="74.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.5" y="974.0">net/byte..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor.&lt;clinit&gt; (13 samples, 6.28%)</title><rect x="1104.5" y="947.0" width="74.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.5" y="958.0">net/byte..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 6.28%)</title><rect x="1104.5" y="931.0" width="74.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.5" y="942.0">java/sec..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 6.28%)</title><rect x="1104.5" y="915.0" width="74.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1107.5" y="926.0">net/byte..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 6.28%)</title><rect x="1104.5" y="899.0" width="74.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1107.5" y="910.0">net/byte..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$AbstractBase.inject (1 samples, 0.48%)</title><rect x="1104.5" y="883.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.48%)</title><rect x="1104.5" y="867.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.getName (1 samples, 0.48%)</title><rect x="1104.5" y="851.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1107.5" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.48%)</title><rect x="1104.5" y="835.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.5" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.48%)</title><rect x="1104.5" y="819.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1107.5" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.48%)</title><rect x="1104.5" y="803.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.5" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.48%)</title><rect x="1104.5" y="787.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1107.5" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.48%)</title><rect x="1104.5" y="771.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.5" y="782.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.48%)</title><rect x="1104.5" y="755.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1107.5" y="766.0"></text>
</g>
<g>
<title>OopMapStream::find_next() [clone .part.39] (1 samples, 0.48%)</title><rect x="1104.5" y="739.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.&lt;clinit&gt; (12 samples, 5.80%)</title><rect x="1110.2" y="883.0" width="68.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1113.2" y="894.0">net/byt..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (12 samples, 5.80%)</title><rect x="1110.2" y="867.0" width="68.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.2" y="878.0">java/se..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (12 samples, 5.80%)</title><rect x="1110.2" y="851.0" width="68.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.2" y="862.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (12 samples, 5.80%)</title><rect x="1110.2" y="835.0" width="68.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.2" y="846.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection.make (11 samples, 5.31%)</title><rect x="1110.2" y="819.0" width="62.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.2" y="830.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.97%)</title><rect x="1110.2" y="803.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.97%)</title><rect x="1110.2" y="787.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="771.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.2" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="755.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1113.2" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1110.2" y="739.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.2" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1110.2" y="723.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="707.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="691.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.2" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="675.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.2" y="686.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="659.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="643.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="1110.2" y="627.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="611.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.2" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="595.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.2" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1110.2" y="579.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.2" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1110.2" y="563.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.2" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="547.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.2" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="531.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1113.2" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="515.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.2" y="526.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="499.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1113.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="483.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.2" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="1110.2" y="467.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.2" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="451.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.2" y="462.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="435.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.2" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1110.2" y="419.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.2" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1110.2" y="403.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.2" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="387.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.2" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="371.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.2" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="355.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.2" y="366.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="339.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.2" y="350.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1110.2" y="323.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.48%)</title><rect x="1110.2" y="307.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.2" y="318.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="291.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.2" y="302.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1110.2" y="275.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.2" y="286.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1110.2" y="259.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.2" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1110.2" y="243.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.2" y="254.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="227.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.2" y="238.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1110.2" y="211.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.48%)</title><rect x="1110.2" y="195.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.48%)</title><rect x="1110.2" y="179.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.2" y="190.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.48%)</title><rect x="1110.2" y="163.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.2" y="174.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.48%)</title><rect x="1110.2" y="147.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="158.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.48%)</title><rect x="1110.2" y="131.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.2" y="142.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.48%)</title><rect x="1110.2" y="115.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.2" y="126.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry0 (1 samples, 0.48%)</title><rect x="1110.2" y="99.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.2" y="110.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$1.getEntry (1 samples, 0.48%)</title><rect x="1110.2" y="83.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.2" y="94.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getEntry (1 samples, 0.48%)</title><rect x="1110.2" y="67.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.2" y="78.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.48%)</title><rect x="1110.2" y="51.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.2" y="62.0"></text>
</g>
<g>
<title>java/util/jar/JarFile$1.apply (1 samples, 0.48%)</title><rect x="1110.2" y="35.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1113.2" y="46.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Factory$Default.subclass (1 samples, 0.48%)</title><rect x="1115.9" y="771.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.9" y="782.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="1115.9" y="755.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1118.9" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="1115.9" y="739.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1118.9" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="1115.9" y="723.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.9" y="734.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="1115.9" y="707.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1118.9" y="718.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="1115.9" y="691.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1118.9" y="702.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="1115.9" y="675.0" width="5.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1118.9" y="686.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.48%)</title><rect x="1115.9" y="659.0" width="5.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1118.9" y="670.0"></text>
</g>
<g>
<title>merge_fullinfo_types (1 samples, 0.48%)</title><rect x="1115.9" y="643.0" width="5.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1118.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (8 samples, 3.86%)</title><rect x="1121.6" y="803.0" width="45.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="814.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (8 samples, 3.86%)</title><rect x="1121.6" y="787.0" width="45.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.6" y="798.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (8 samples, 3.86%)</title><rect x="1121.6" y="771.0" width="45.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.6" y="782.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 3.38%)</title><rect x="1121.6" y="755.0" width="39.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.6" y="766.0">net..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1121.6" y="739.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.6" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1121.6" y="723.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.6" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1121.6" y="707.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.6" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1121.6" y="691.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1121.6" y="675.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1121.6" y="659.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.48%)</title><rect x="1121.6" y="643.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.48%)</title><rect x="1121.6" y="627.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.6" y="638.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.48%)</title><rect x="1121.6" y="611.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.6" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.48%)</title><rect x="1121.6" y="595.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.6" y="606.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.48%)</title><rect x="1121.6" y="579.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.6" y="590.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.48%)</title><rect x="1121.6" y="563.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.6" y="574.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1121.6" y="547.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.6" y="558.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1121.6" y="531.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.6" y="542.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1121.6" y="515.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.6" y="526.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.48%)</title><rect x="1121.6" y="499.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1124.6" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.48%)</title><rect x="1121.6" y="483.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.6" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.48%)</title><rect x="1121.6" y="467.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1124.6" y="478.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.48%)</title><rect x="1121.6" y="451.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1124.6" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.48%)</title><rect x="1121.6" y="435.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.6" y="446.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.48%)</title><rect x="1121.6" y="419.0" width="5.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.6" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.48%)</title><rect x="1121.6" y="403.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.6" y="414.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.48%)</title><rect x="1121.6" y="387.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.6" y="398.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.48%)</title><rect x="1121.6" y="371.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.6" y="382.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.48%)</title><rect x="1121.6" y="355.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.6" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (3 samples, 1.45%)</title><rect x="1127.3" y="739.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.48%)</title><rect x="1127.3" y="723.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.48%)</title><rect x="1127.3" y="707.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.48%)</title><rect x="1127.3" y="691.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation.hashCode (1 samples, 0.48%)</title><rect x="1127.3" y="675.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.hashCode (1 samples, 0.48%)</title><rect x="1127.3" y="659.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$MethodLocator$ForExplicitMethod.hashCode (1 samples, 0.48%)</title><rect x="1127.3" y="643.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.48%)</title><rect x="1127.3" y="627.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.48%)</title><rect x="1127.3" y="611.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.3" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.48%)</title><rect x="1127.3" y="595.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfMethod.get (1 samples, 0.48%)</title><rect x="1127.3" y="579.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfMethod.get (1 samples, 0.48%)</title><rect x="1127.3" y="563.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1127.3" y="547.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.3" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1127.3" y="531.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.3" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$Dispatcher$CreationAction.run (1 samples, 0.48%)</title><rect x="1127.3" y="515.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$Dispatcher$CreationAction.run (1 samples, 0.48%)</title><rect x="1127.3" y="499.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.3" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="1127.3" y="483.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.3" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="1127.3" y="467.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.3" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="1127.3" y="451.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.3" y="462.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="1127.3" y="435.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.3" y="446.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="1127.3" y="419.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.3" y="430.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="1127.3" y="403.0" width="5.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1130.3" y="414.0"></text>
</g>
<g>
<title>merge_fullinfo_types (1 samples, 0.48%)</title><rect x="1127.3" y="387.0" width="5.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1130.3" y="398.0"></text>
</g>
<g>
<title>jni_IsSameObject (1 samples, 0.48%)</title><rect x="1127.3" y="371.0" width="5.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1130.3" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.268] (1 samples, 0.48%)</title><rect x="1127.3" y="355.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.3" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.48%)</title><rect x="1133.0" y="723.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.48%)</title><rect x="1133.0" y="707.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.48%)</title><rect x="1133.0" y="691.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.48%)</title><rect x="1133.0" y="675.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1136.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.48%)</title><rect x="1133.0" y="659.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.48%)</title><rect x="1133.0" y="643.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.48%)</title><rect x="1133.0" y="627.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.48%)</title><rect x="1133.0" y="611.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.48%)</title><rect x="1133.0" y="595.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1136.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.48%)</title><rect x="1133.0" y="579.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.48%)</title><rect x="1133.0" y="563.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.48%)</title><rect x="1133.0" y="547.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable.size (1 samples, 0.48%)</title><rect x="1133.0" y="531.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm.getParameterCount (1 samples, 0.48%)</title><rect x="1133.0" y="515.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.48%)</title><rect x="1133.0" y="499.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.0" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Entry.asPreparedEntry (1 samples, 0.48%)</title><rect x="1138.7" y="723.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.7" y="734.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="1138.7" y="707.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.7" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="1138.7" y="691.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.7" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="1138.7" y="675.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.7" y="686.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="1138.7" y="659.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.7" y="670.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="1138.7" y="643.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.7" y="654.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="1138.7" y="627.0" width="5.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1141.7" y="638.0"></text>
</g>
<g>
<title>jni_GetSuperclass (1 samples, 0.48%)</title><rect x="1138.7" y="611.0" width="5.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1141.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 1.45%)</title><rect x="1144.4" y="739.0" width="17.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (3 samples, 1.45%)</title><rect x="1144.4" y="723.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (2 samples, 0.97%)</title><rect x="1144.4" y="707.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyBody (2 samples, 0.97%)</title><rect x="1144.4" y="691.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1147.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyAttributes (2 samples, 0.97%)</title><rect x="1144.4" y="675.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/attribute/MethodAttributeAppender$ForInstrumentedMethod.apply (2 samples, 0.97%)</title><rect x="1144.4" y="659.0" width="11.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.4" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1144.4" y="643.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.4" y="654.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1144.4" y="627.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.4" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1144.4" y="611.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.4" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1144.4" y="595.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.4" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1144.4" y="579.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.4" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1144.4" y="563.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.4" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1144.4" y="547.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="1144.4" y="531.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.4" y="542.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="1144.4" y="515.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.4" y="526.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="1144.4" y="499.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.4" y="510.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="1144.4" y="483.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.4" y="494.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.48%)</title><rect x="1144.4" y="467.0" width="5.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1147.4" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$Latent.getType (1 samples, 0.48%)</title><rect x="1150.1" y="643.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.48%)</title><rect x="1150.1" y="627.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment.onNonGenericType (1 samples, 0.48%)</title><rect x="1150.1" y="611.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onNonGenericType (1 samples, 0.48%)</title><rect x="1150.1" y="595.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForAttachment.onSimpleType (1 samples, 0.48%)</title><rect x="1150.1" y="579.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.represents (1 samples, 0.48%)</title><rect x="1150.1" y="563.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1153.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.represents (1 samples, 0.48%)</title><rect x="1150.1" y="547.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.1" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.asErasure (1 samples, 0.48%)</title><rect x="1150.1" y="531.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1153.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.of (1 samples, 0.48%)</title><rect x="1150.1" y="515.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.1" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$ForLoadedType.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1150.1" y="499.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1153.1" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/Implementation$Context$Default$Factory.make (1 samples, 0.48%)</title><rect x="1155.8" y="707.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1158.8" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.48%)</title><rect x="1155.8" y="691.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.8" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.48%)</title><rect x="1155.8" y="675.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.8" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.48%)</title><rect x="1155.8" y="659.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.8" y="670.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.48%)</title><rect x="1155.8" y="643.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1158.8" y="654.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.48%)</title><rect x="1155.8" y="627.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.8" y="638.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.48%)</title><rect x="1155.8" y="611.0" width="5.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1158.8" y="622.0"></text>
</g>
<g>
<title>JVM_IsVMGeneratedMethodIx (1 samples, 0.48%)</title><rect x="1155.8" y="595.0" width="5.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1158.8" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1161.5" y="755.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.5" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1161.5" y="739.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.5" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1161.5" y="723.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.5" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1161.5" y="707.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.5" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1161.5" y="691.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.5" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1161.5" y="675.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.5" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1161.5" y="659.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.5" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1161.5" y="643.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="1161.5" y="627.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.5" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="1161.5" y="611.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.5" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="1161.5" y="595.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.5" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="1161.5" y="579.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.48%)</title><rect x="1161.5" y="563.0" width="5.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1164.5" y="574.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.48%)</title><rect x="1161.5" y="547.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1164.5" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial$AbstractBase.withParameters (1 samples, 0.48%)</title><rect x="1167.2" y="803.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial$AbstractBase.withParameters (1 samples, 0.48%)</title><rect x="1167.2" y="787.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Initial$AbstractBase.withParameters (1 samples, 0.48%)</title><rect x="1167.2" y="771.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter.withParameter (1 samples, 0.48%)</title><rect x="1167.2" y="755.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1167.2" y="739.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1170.2" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.48%)</title><rect x="1167.2" y="723.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.48%)</title><rect x="1167.2" y="707.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1167.2" y="691.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1170.2" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1167.2" y="675.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.2" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.48%)</title><rect x="1167.2" y="659.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.2" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.48%)</title><rect x="1167.2" y="643.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1170.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.48%)</title><rect x="1167.2" y="627.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.2" y="638.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.48%)</title><rect x="1167.2" y="611.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.2" y="622.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.48%)</title><rect x="1167.2" y="595.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.2" y="606.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.48%)</title><rect x="1167.2" y="579.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1170.2" y="590.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.48%)</title><rect x="1167.2" y="563.0" width="5.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1170.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1172.9" y="819.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.9" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1172.9" y="803.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$CreationAction.run (1 samples, 0.48%)</title><rect x="1172.9" y="787.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe$Dispatcher$CreationAction.run (1 samples, 0.48%)</title><rect x="1172.9" y="771.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1175.9" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.48%)</title><rect x="1172.9" y="755.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.9" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.48%)</title><rect x="1172.9" y="739.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.48%)</title><rect x="1172.9" y="723.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.48%)</title><rect x="1172.9" y="707.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.9" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.48%)</title><rect x="1172.9" y="691.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.9" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.48%)</title><rect x="1172.9" y="675.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.9" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.48%)</title><rect x="1172.9" y="659.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.9" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.48%)</title><rect x="1172.9" y="643.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.9" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.48%)</title><rect x="1172.9" y="627.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.9" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.48%)</title><rect x="1172.9" y="611.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.9" y="622.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.48%)</title><rect x="1172.9" y="595.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.9" y="606.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.48%)</title><rect x="1172.9" y="579.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.48%)</title><rect x="1172.9" y="563.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1175.9" y="574.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.48%)</title><rect x="1172.9" y="547.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1175.9" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1172.9" y="531.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.9" y="542.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.48%)</title><rect x="1172.9" y="515.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.9" y="526.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.48%)</title><rect x="1172.9" y="499.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.48%)</title><rect x="1172.9" y="483.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1175.9" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.48%)</title><rect x="1172.9" y="467.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.48%)</title><rect x="1172.9" y="451.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.48%)</title><rect x="1172.9" y="435.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1175.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.48%)</title><rect x="1172.9" y="419.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.9" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.48%)</title><rect x="1172.9" y="403.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.9" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1172.9" y="387.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1172.9" y="371.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.9" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.mapToModule (1 samples, 0.48%)</title><rect x="1172.9" y="355.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.9" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.getDynamicModule (1 samples, 0.48%)</title><rect x="1172.9" y="339.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.48%)</title><rect x="1172.9" y="323.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1175.9" y="334.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startProfilingAgent (2 samples, 0.97%)</title><rect x="1178.6" y="1107.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.6" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getProfilingClassloader (1 samples, 0.48%)</title><rect x="1178.6" y="1091.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.6" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDelegateClassLoader (1 samples, 0.48%)</title><rect x="1178.6" y="1075.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.48%)</title><rect x="1178.6" y="1059.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="1178.6" y="1043.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.48%)</title><rect x="1178.6" y="1027.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.48%)</title><rect x="1178.6" y="1011.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.6" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1178.6" y="995.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1178.6" y="979.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1178.6" y="963.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.6" y="974.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.48%)</title><rect x="1178.6" y="947.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.6" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.48%)</title><rect x="1178.6" y="931.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1181.6" y="942.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.48%)</title><rect x="1178.6" y="915.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.6" y="926.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.48%)</title><rect x="1178.6" y="899.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.6" y="910.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.CENCRC (1 samples, 0.48%)</title><rect x="1178.6" y="883.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.6" y="894.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.LG (1 samples, 0.48%)</title><rect x="1178.6" y="867.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.6" y="878.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.SH (1 samples, 0.48%)</title><rect x="1178.6" y="851.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.6" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.48%)</title><rect x="1184.3" y="1091.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.48%)</title><rect x="1184.3" y="1075.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1187.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.48%)</title><rect x="1184.3" y="1059.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.48%)</title><rect x="1184.3" y="1043.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.3" y="1054.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.run (1 samples, 0.48%)</title><rect x="1184.3" y="1027.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.3" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1184.3" y="1011.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1187.3" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1184.3" y="995.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1187.3" y="1006.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (1 samples, 0.48%)</title><rect x="1184.3" y="979.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.3" y="990.0"></text>
</g>
<g>
<title>java/util/UUID$Holder.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1184.3" y="963.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.3" y="974.0"></text>
</g>
<g>
<title>java/security/SecureRandom.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1184.3" y="947.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.3" y="958.0"></text>
</g>
<g>
<title>java/security/SecureRandom.getDefaultPRNG (1 samples, 0.48%)</title><rect x="1184.3" y="931.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.3" y="942.0"></text>
</g>
<g>
<title>sun/security/jca/Providers.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1184.3" y="915.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.3" y="926.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.fromSecurityProperties (1 samples, 0.48%)</title><rect x="1184.3" y="899.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.3" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1184.3" y="883.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.3" y="894.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$2.run (1 samples, 0.48%)</title><rect x="1184.3" y="867.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$2.run (1 samples, 0.48%)</title><rect x="1184.3" y="851.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.&lt;init&gt; (1 samples, 0.48%)</title><rect x="1184.3" y="835.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1187.3" y="846.0"></text>
</g>
<g>
<title>java/security/Security.&lt;clinit&gt; (1 samples, 0.48%)</title><rect x="1184.3" y="819.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.48%)</title><rect x="1184.3" y="803.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.3" y="814.0"></text>
</g>
<g>
<title>java/security/Security$1.run (1 samples, 0.48%)</title><rect x="1184.3" y="787.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.3" y="798.0"></text>
</g>
<g>
<title>java/security/Security$1.run (1 samples, 0.48%)</title><rect x="1184.3" y="771.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.3" y="782.0"></text>
</g>
<g>
<title>java/security/Security.initialize (1 samples, 0.48%)</title><rect x="1184.3" y="755.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>java/util/Properties.load (1 samples, 0.48%)</title><rect x="1184.3" y="739.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>java/util/Properties.load0 (1 samples, 0.48%)</title><rect x="1184.3" y="723.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
</g>
</svg>
