<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1301"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1301"> </text>
<g id="frames">
<g>
<title>all (270 samples, 100.00%)</title><rect x="10.0" y="1267.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1278.0">all</text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.74%)</title><rect x="10.0" y="1251.0" width="8.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1262.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 1.48%)</title><rect x="18.7" y="1251.0" width="17.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="21.7" y="1262.0"></text>
</g>
<g>
<title>Interpreter (4 samples, 1.48%)</title><rect x="18.7" y="1235.0" width="17.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="21.7" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.37%)</title><rect x="36.2" y="1251.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="39.2" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/benchmark/LoadClasses.main (1 samples, 0.37%)</title><rect x="40.6" y="1251.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.37%)</title><rect x="40.6" y="1235.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.37%)</title><rect x="40.6" y="1219.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="40.6" y="1203.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.37%)</title><rect x="40.6" y="1187.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.37%)</title><rect x="40.6" y="1171.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.37%)</title><rect x="40.6" y="1155.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 0.37%)</title><rect x="40.6" y="1139.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.37%)</title><rect x="40.6" y="1123.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.6" y="1134.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="40.6" y="1107.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="40.6" y="1091.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="40.6" y="1075.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="40.6" y="1059.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="43.6" y="1070.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.37%)</title><rect x="40.6" y="1043.0" width="4.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="43.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getNamedPackage (1 samples, 0.37%)</title><rect x="45.0" y="1251.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.0" y="1262.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.37%)</title><rect x="45.0" y="1235.0" width="4.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="48.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.37%)</title><rect x="49.3" y="1251.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.3" y="1262.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Worker.run (1 samples, 0.37%)</title><rect x="49.3" y="1235.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.take (1 samples, 0.37%)</title><rect x="49.3" y="1219.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.3" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.getDelay (1 samples, 0.37%)</title><rect x="49.3" y="1203.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.convert (1 samples, 0.37%)</title><rect x="49.3" y="1187.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.3" y="1198.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.37%)</title><rect x="49.3" y="1171.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.3" y="1182.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.37%)</title><rect x="49.3" y="1155.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.3" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.37%)</title><rect x="49.3" y="1139.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.3" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="49.3" y="1123.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.3" y="1134.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="49.3" y="1107.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="49.3" y="1091.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="49.3" y="1075.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.3" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.37%)</title><rect x="49.3" y="1059.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="49.3" y="1043.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.3" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.37%)</title><rect x="49.3" y="1027.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="49.3" y="1011.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="49.3" y="995.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.37%)</title><rect x="49.3" y="979.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="49.3" y="963.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.37%)</title><rect x="49.3" y="947.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.37%)</title><rect x="49.3" y="931.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.37%)</title><rect x="49.3" y="915.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.37%)</title><rect x="49.3" y="899.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.37%)</title><rect x="49.3" y="883.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.37%)</title><rect x="49.3" y="867.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.37%)</title><rect x="49.3" y="851.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.37%)</title><rect x="49.3" y="835.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.37%)</title><rect x="49.3" y="819.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="49.3" y="803.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="49.3" y="787.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.37%)</title><rect x="49.3" y="771.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.3" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (1 samples, 0.37%)</title><rect x="49.3" y="755.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.3" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="49.3" y="739.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.3" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="49.3" y="723.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.3" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="49.3" y="707.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.3" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="49.3" y="691.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.3" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="49.3" y="675.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.3" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="49.3" y="659.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.3" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="49.3" y="643.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.3" y="654.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="49.3" y="627.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="49.3" y="611.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.3" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="49.3" y="595.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="49.3" y="579.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.3" y="590.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="49.3" y="563.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.3" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="49.3" y="547.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.3" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="49.3" y="531.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.3" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="49.3" y="515.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.3" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="49.3" y="499.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="49.3" y="483.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="49.3" y="467.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.37%)</title><rect x="49.3" y="451.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.3" y="462.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.37%)</title><rect x="49.3" y="435.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.3" y="446.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.37%)</title><rect x="49.3" y="419.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.3" y="430.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.37%)</title><rect x="49.3" y="403.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.37%)</title><rect x="49.3" y="387.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.3" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.37%)</title><rect x="49.3" y="371.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="382.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="49.3" y="355.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.3" y="366.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="49.3" y="339.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.3" y="350.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="49.3" y="323.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.3" y="334.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.37%)</title><rect x="49.3" y="307.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.37%)</title><rect x="49.3" y="291.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.3" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="49.3" y="275.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.3" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="49.3" y="259.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.3" y="270.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.37%)</title><rect x="49.3" y="243.0" width="4.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="52.3" y="254.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.37%)</title><rect x="49.3" y="227.0" width="4.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="52.3" y="238.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="49.3" y="211.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="52.3" y="222.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="49.3" y="195.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="52.3" y="206.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.37%)</title><rect x="49.3" y="179.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (2 samples, 0.74%)</title><rect x="53.7" y="1251.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.7" y="1262.0"></text>
</g>
<g>
<title>java/time/ZoneId.systemDefault (2 samples, 0.74%)</title><rect x="53.7" y="1235.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.7" y="1246.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefault (1 samples, 0.37%)</title><rect x="53.7" y="1219.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.7" y="1230.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefaultRef (1 samples, 0.37%)</title><rect x="53.7" y="1203.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.7" y="1214.0"></text>
</g>
<g>
<title>java/util/TimeZone.setDefaultZone (1 samples, 0.37%)</title><rect x="53.7" y="1187.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.7" y="1198.0"></text>
</g>
<g>
<title>java/util/TimeZone.getTimeZone (1 samples, 0.37%)</title><rect x="53.7" y="1171.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.7" y="1182.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTimeZone (1 samples, 0.37%)</title><rect x="53.7" y="1155.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.7" y="1166.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="53.7" y="1139.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.7" y="1150.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="53.7" y="1123.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.7" y="1134.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 0.37%)</title><rect x="53.7" y="1107.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.7" y="1118.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 0.37%)</title><rect x="53.7" y="1091.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.7" y="1102.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.load (1 samples, 0.37%)</title><rect x="53.7" y="1075.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.7" y="1086.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readFully (1 samples, 0.37%)</title><rect x="53.7" y="1059.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.7" y="1070.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readFully (1 samples, 0.37%)</title><rect x="53.7" y="1043.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.7" y="1054.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (1 samples, 0.37%)</title><rect x="53.7" y="1027.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.37%)</title><rect x="58.1" y="1219.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.1" y="1230.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.37%)</title><rect x="58.1" y="1203.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.1" y="1214.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.37%)</title><rect x="58.1" y="1187.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.1" y="1198.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.37%)</title><rect x="58.1" y="1171.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.1" y="1182.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.37%)</title><rect x="58.1" y="1155.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.1" y="1166.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.37%)</title><rect x="58.1" y="1139.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.1" y="1150.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.37%)</title><rect x="58.1" y="1123.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.1" y="1134.0"></text>
</g>
<g>
<title>java/time/ZoneRegion.ofId (1 samples, 0.37%)</title><rect x="58.1" y="1107.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.1" y="1118.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRulesProvider.getRules (1 samples, 0.37%)</title><rect x="58.1" y="1091.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.1" y="1102.0"></text>
</g>
<g>
<title>java/time/zone/TzdbZoneRulesProvider.provideRules (1 samples, 0.37%)</title><rect x="58.1" y="1075.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.1" y="1086.0"></text>
</g>
<g>
<title>java/time/zone/Ser.read (1 samples, 0.37%)</title><rect x="58.1" y="1059.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.1" y="1070.0"></text>
</g>
<g>
<title>java/time/zone/Ser.readInternal (1 samples, 0.37%)</title><rect x="58.1" y="1043.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.1" y="1054.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRules.readExternal (1 samples, 0.37%)</title><rect x="58.1" y="1027.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.1" y="1038.0"></text>
</g>
<g>
<title>java/time/zone/ZoneOffsetTransitionRule.readExternal (1 samples, 0.37%)</title><rect x="58.1" y="1011.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.1" y="1022.0"></text>
</g>
<g>
<title>java/time/LocalTime.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="58.1" y="995.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.1" y="1006.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="58.1" y="979.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="61.1" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="58.1" y="963.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="61.1" y="974.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="58.1" y="947.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="61.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.37%)</title><rect x="62.4" y="1251.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.37%)</title><rect x="62.4" y="1235.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.37%)</title><rect x="62.4" y="1219.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.4" y="1230.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.37%)</title><rect x="62.4" y="1203.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="65.4" y="1214.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (1 samples, 0.37%)</title><rect x="66.8" y="1251.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="69.8" y="1262.0"></text>
</g>
<g>
<title>sort_dep_arg_1(ciBaseObject**, ciBaseObject**) (1 samples, 0.37%)</title><rect x="66.8" y="1235.0" width="4.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="69.8" y="1246.0"></text>
</g>
<g>
<title>start_thread (140 samples, 51.85%)</title><rect x="71.2" y="1251.0" width="611.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="74.2" y="1262.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (140 samples, 51.85%)</title><rect x="71.2" y="1235.0" width="611.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="74.2" y="1246.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (140 samples, 51.85%)</title><rect x="71.2" y="1219.0" width="611.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="74.2" y="1230.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (140 samples, 51.85%)</title><rect x="71.2" y="1203.0" width="611.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="74.2" y="1214.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (137 samples, 50.74%)</title><rect x="71.2" y="1187.0" width="598.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="74.2" y="1198.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (136 samples, 50.37%)</title><rect x="71.2" y="1171.0" width="594.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="74.2" y="1182.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (78 samples, 28.89%)</title><rect x="71.2" y="1155.0" width="340.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="74.2" y="1166.0">C2Compiler::compile_method(ciEnv*, ciMethod*, ..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (78 samples, 28.89%)</title><rect x="71.2" y="1139.0" width="340.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="74.2" y="1150.0">Compile::Compile(ciEnv*, C2Compiler*, ciMethod..</text>
</g>
<g>
<title>CallGenerator::for_osr(ciMethod*, int) (1 samples, 0.37%)</title><rect x="71.2" y="1123.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="74.2" y="1134.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.37%)</title><rect x="71.2" y="1107.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="74.2" y="1118.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.37%)</title><rect x="71.2" y="1091.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="74.2" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.37%)</title><rect x="71.2" y="1075.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="74.2" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.37%)</title><rect x="71.2" y="1059.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="74.2" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.37%)</title><rect x="71.2" y="1043.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="74.2" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.37%)</title><rect x="71.2" y="1027.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="74.2" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.37%)</title><rect x="71.2" y="1011.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="74.2" y="1022.0"></text>
</g>
<g>
<title>ciType::is_classless() const (1 samples, 0.37%)</title><rect x="71.2" y="995.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="74.2" y="1006.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (46 samples, 17.04%)</title><rect x="75.6" y="1123.0" width="201.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="78.6" y="1134.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.74%)</title><rect x="75.6" y="1107.0" width="8.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="78.6" y="1118.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.37%)</title><rect x="75.6" y="1091.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="78.6" y="1102.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.37%)</title><rect x="75.6" y="1075.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="78.6" y="1086.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.37%)</title><rect x="75.6" y="1059.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="78.6" y="1070.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.37%)</title><rect x="79.9" y="1091.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="82.9" y="1102.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.37%)</title><rect x="79.9" y="1075.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="82.9" y="1086.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.37%)</title><rect x="84.3" y="1107.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="87.3" y="1118.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.37%)</title><rect x="84.3" y="1091.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="87.3" y="1102.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.37%)</title><rect x="84.3" y="1075.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="87.3" y="1086.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 1.48%)</title><rect x="88.7" y="1107.0" width="17.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="91.7" y="1118.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 1.48%)</title><rect x="88.7" y="1091.0" width="17.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="91.7" y="1102.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (2 samples, 0.74%)</title><rect x="93.0" y="1075.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="96.0" y="1086.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.37%)</title><rect x="101.8" y="1075.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="104.8" y="1086.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.37%)</title><rect x="101.8" y="1059.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="104.8" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.74%)</title><rect x="106.1" y="1107.0" width="8.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.1" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.74%)</title><rect x="106.1" y="1091.0" width="8.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.1" y="1102.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.37%)</title><rect x="106.1" y="1075.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="109.1" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.37%)</title><rect x="110.5" y="1075.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="113.5" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (1 samples, 0.37%)</title><rect x="110.5" y="1059.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="113.5" y="1070.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.37%)</title><rect x="110.5" y="1043.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="113.5" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.37%)</title><rect x="114.9" y="1107.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="117.9" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (35 samples, 12.96%)</title><rect x="119.3" y="1107.0" width="152.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="122.3" y="1118.0">PhaseChaitin::Regis..</text>
</g>
<g>
<title>MachSpillCopyNode::bottom_type() const (1 samples, 0.37%)</title><rect x="123.6" y="1091.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="126.6" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (5 samples, 1.85%)</title><rect x="128.0" y="1091.0" width="21.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="131.0" y="1102.0">P..</text>
</g>
<g>
<title>PhaseChaitin::prompt_use(Block*, unsigned int) (1 samples, 0.37%)</title><rect x="136.7" y="1075.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="139.7" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.37%)</title><rect x="141.1" y="1075.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="144.1" y="1086.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.37%)</title><rect x="141.1" y="1059.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="144.1" y="1070.0"></text>
</g>
<g>
<title>ShouldNotReachHereNode::is_block_proj() const (1 samples, 0.37%)</title><rect x="145.5" y="1075.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="148.5" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 2.96%)</title><rect x="149.9" y="1091.0" width="34.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="152.9" y="1102.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.37%)</title><rect x="163.0" y="1075.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="166.0" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.74%)</title><rect x="167.3" y="1075.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.3" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.74%)</title><rect x="167.3" y="1059.0" width="8.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="170.3" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.37%)</title><rect x="176.1" y="1075.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="179.1" y="1086.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.37%)</title><rect x="180.4" y="1075.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="183.4" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (1 samples, 0.37%)</title><rect x="184.8" y="1091.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="187.8" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 1.48%)</title><rect x="189.2" y="1091.0" width="17.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="192.2" y="1102.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 1.11%)</title><rect x="193.6" y="1075.0" width="13.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="196.6" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (10 samples, 3.70%)</title><rect x="206.7" y="1091.0" width="43.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="209.7" y="1102.0">Phas..</text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 1.48%)</title><rect x="228.5" y="1075.0" width="17.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="231.5" y="1086.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.37%)</title><rect x="246.0" y="1075.0" width="4.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="249.0" y="1086.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 1.11%)</title><rect x="250.4" y="1091.0" width="13.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="253.4" y="1102.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (3 samples, 1.11%)</title><rect x="250.4" y="1075.0" width="13.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="253.4" y="1086.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (2 samples, 0.74%)</title><rect x="250.4" y="1059.0" width="8.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="253.4" y="1070.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.37%)</title><rect x="259.1" y="1059.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="262.1" y="1070.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.37%)</title><rect x="259.1" y="1043.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="262.1" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.37%)</title><rect x="263.5" y="1091.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="266.5" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.37%)</title><rect x="263.5" y="1075.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="266.5" y="1086.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.37%)</title><rect x="267.9" y="1091.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="270.9" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.37%)</title><rect x="272.2" y="1107.0" width="4.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="275.2" y="1118.0"></text>
</g>
<g>
<title>Compile::Optimize() (21 samples, 7.78%)</title><rect x="276.6" y="1123.0" width="91.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="279.6" y="1134.0">Compile::Op..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (8 samples, 2.96%)</title><rect x="281.0" y="1107.0" width="34.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="284.0" y="1118.0">Co..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (7 samples, 2.59%)</title><rect x="281.0" y="1091.0" width="30.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="284.0" y="1102.0">Ph..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.37%)</title><rect x="281.0" y="1075.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="284.0" y="1086.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.37%)</title><rect x="281.0" y="1059.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="284.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.37%)</title><rect x="281.0" y="1043.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="284.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.37%)</title><rect x="281.0" y="1027.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="284.0" y="1038.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.37%)</title><rect x="281.0" y="1011.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="284.0" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.74%)</title><rect x="285.3" y="1075.0" width="8.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="288.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.74%)</title><rect x="294.1" y="1075.0" width="8.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="297.1" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.37%)</title><rect x="298.4" y="1059.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="301.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.37%)</title><rect x="302.8" y="1075.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="305.8" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.37%)</title><rect x="302.8" y="1059.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="305.8" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.37%)</title><rect x="302.8" y="1043.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="305.8" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.37%)</title><rect x="307.2" y="1075.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="310.2" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.37%)</title><rect x="307.2" y="1059.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="310.2" y="1070.0"></text>
</g>
<g>
<title>CmpUNode::Value(PhaseGVN*) const (1 samples, 0.37%)</title><rect x="307.2" y="1043.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="310.2" y="1054.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.37%)</title><rect x="307.2" y="1027.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="310.2" y="1038.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.37%)</title><rect x="307.2" y="1011.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="310.2" y="1022.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.37%)</title><rect x="311.6" y="1091.0" width="4.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="314.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (7 samples, 2.59%)</title><rect x="315.9" y="1107.0" width="30.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="318.9" y="1118.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.37%)</title><rect x="315.9" y="1091.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="318.9" y="1102.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.37%)</title><rect x="315.9" y="1075.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="318.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.37%)</title><rect x="320.3" y="1091.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="323.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.37%)</title><rect x="320.3" y="1075.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="323.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.74%)</title><rect x="324.7" y="1091.0" width="8.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="327.7" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.37%)</title><rect x="333.4" y="1091.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="336.4" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.37%)</title><rect x="337.8" y="1091.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="340.8" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.37%)</title><rect x="337.8" y="1075.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="340.8" y="1086.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.37%)</title><rect x="337.8" y="1059.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="340.8" y="1070.0"></text>
</g>
<g>
<title>SafePointNode::pinned() const (1 samples, 0.37%)</title><rect x="342.1" y="1091.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="345.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (2 samples, 0.74%)</title><rect x="346.5" y="1107.0" width="8.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="349.5" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 1.11%)</title><rect x="355.3" y="1107.0" width="13.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="358.3" y="1118.0"></text>
</g>
<g>
<title>MemBarNode::hash() const (1 samples, 0.37%)</title><rect x="359.6" y="1091.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="362.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.37%)</title><rect x="364.0" y="1091.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="367.0" y="1102.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.37%)</title><rect x="364.0" y="1075.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="367.0" y="1086.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.37%)</title><rect x="364.0" y="1059.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="367.0" y="1070.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.37%)</title><rect x="364.0" y="1043.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="367.0" y="1054.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.37%)</title><rect x="368.4" y="1123.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="371.4" y="1134.0"></text>
</g>
<g>
<title>Node::has_special_unique_user() const (1 samples, 0.37%)</title><rect x="368.4" y="1107.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="371.4" y="1118.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.37%)</title><rect x="372.7" y="1123.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="375.7" y="1134.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.37%)</title><rect x="372.7" y="1107.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="375.7" y="1118.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.37%)</title><rect x="372.7" y="1091.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="375.7" y="1102.0"></text>
</g>
<g>
<title>TypeInt::eq(Type const*) const (1 samples, 0.37%)</title><rect x="372.7" y="1075.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="375.7" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 2.59%)</title><rect x="377.1" y="1123.0" width="30.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="380.1" y="1134.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 2.59%)</title><rect x="377.1" y="1107.0" width="30.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="380.1" y="1118.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 2.59%)</title><rect x="377.1" y="1091.0" width="30.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="380.1" y="1102.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 2.59%)</title><rect x="377.1" y="1075.0" width="30.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="380.1" y="1086.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 2.59%)</title><rect x="377.1" y="1059.0" width="30.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="380.1" y="1070.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (6 samples, 2.22%)</title><rect x="377.1" y="1043.0" width="26.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="380.1" y="1054.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.37%)</title><rect x="377.1" y="1027.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="380.1" y="1038.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.37%)</title><rect x="377.1" y="1011.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="380.1" y="1022.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.37%)</title><rect x="377.1" y="995.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="380.1" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.74%)</title><rect x="381.5" y="1027.0" width="8.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="384.5" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.74%)</title><rect x="381.5" y="1011.0" width="8.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="384.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.74%)</title><rect x="381.5" y="995.0" width="8.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="384.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.74%)</title><rect x="381.5" y="979.0" width="8.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="384.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.74%)</title><rect x="381.5" y="963.0" width="8.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="384.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="381.5" y="947.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="384.5" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="381.5" y="931.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="384.5" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="381.5" y="915.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="384.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="381.5" y="899.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="384.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="381.5" y="883.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="384.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="381.5" y="867.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="384.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="381.5" y="851.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="384.5" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="381.5" y="835.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="384.5" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="381.5" y="819.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="384.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="381.5" y="803.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="384.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="381.5" y="787.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="384.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="381.5" y="771.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="384.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="381.5" y="755.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="384.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="381.5" y="739.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="384.5" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="381.5" y="723.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="384.5" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="381.5" y="707.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="384.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="381.5" y="691.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="384.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="381.5" y="675.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="384.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="381.5" y="659.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="384.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="381.5" y="643.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="384.5" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="381.5" y="627.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="384.5" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="381.5" y="611.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="384.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="381.5" y="595.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="384.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="381.5" y="579.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="384.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="381.5" y="563.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="384.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="381.5" y="547.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="384.5" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="381.5" y="531.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="384.5" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="381.5" y="515.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="384.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="381.5" y="499.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="384.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="381.5" y="483.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="384.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="381.5" y="467.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="384.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.37%)</title><rect x="381.5" y="451.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="384.5" y="462.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.37%)</title><rect x="381.5" y="435.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="384.5" y="446.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicates(int) (1 samples, 0.37%)</title><rect x="381.5" y="419.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="384.5" y="430.0"></text>
</g>
<g>
<title>GraphKit::add_empty_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.189] (1 samples, 0.37%)</title><rect x="381.5" y="403.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="384.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.37%)</title><rect x="385.9" y="947.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="388.9" y="958.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.37%)</title><rect x="385.9" y="931.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="388.9" y="942.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.37%)</title><rect x="385.9" y="915.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="388.9" y="926.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.74%)</title><rect x="390.2" y="1027.0" width="8.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="393.2" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="390.2" y="1011.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="393.2" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="390.2" y="995.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="393.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="390.2" y="979.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="393.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="390.2" y="963.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="393.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="390.2" y="947.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="393.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="390.2" y="931.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="393.2" y="942.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.37%)</title><rect x="390.2" y="915.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="393.2" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="390.2" y="899.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="393.2" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="390.2" y="883.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="393.2" y="894.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.37%)</title><rect x="390.2" y="867.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="393.2" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.37%)</title><rect x="390.2" y="851.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="393.2" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="390.2" y="835.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="393.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.37%)</title><rect x="390.2" y="819.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="393.2" y="830.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="394.6" y="1011.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="397.6" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="394.6" y="995.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="397.6" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="394.6" y="979.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="397.6" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="394.6" y="963.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="397.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="394.6" y="947.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="397.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="394.6" y="931.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="397.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="394.6" y="915.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="397.6" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="394.6" y="899.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="397.6" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="394.6" y="883.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="397.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="394.6" y="867.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="397.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="394.6" y="851.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="397.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="394.6" y="835.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="397.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="394.6" y="819.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="397.6" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="394.6" y="803.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="397.6" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="394.6" y="787.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="397.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="394.6" y="771.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="397.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="394.6" y="755.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="397.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="394.6" y="739.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="397.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="394.6" y="723.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="397.6" y="734.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.37%)</title><rect x="394.6" y="707.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="397.6" y="718.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="394.6" y="691.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="397.6" y="702.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="394.6" y="675.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="397.6" y="686.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="394.6" y="659.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="397.6" y="670.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="394.6" y="643.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="397.6" y="654.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.37%)</title><rect x="399.0" y="1027.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="402.0" y="1038.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.37%)</title><rect x="399.0" y="1011.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="402.0" y="1022.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="399.0" y="995.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="402.0" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="399.0" y="979.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="402.0" y="990.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="399.0" y="963.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="402.0" y="974.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.37%)</title><rect x="399.0" y="947.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="402.0" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.37%)</title><rect x="399.0" y="931.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="402.0" y="942.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.37%)</title><rect x="399.0" y="915.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="402.0" y="926.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.37%)</title><rect x="399.0" y="899.0" width="4.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="402.0" y="910.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.37%)</title><rect x="403.3" y="1043.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="406.3" y="1054.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.37%)</title><rect x="407.7" y="1123.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="410.7" y="1134.0"></text>
</g>
<g>
<title>Unique_Node_List::remove_useless_nodes(VectorSet&amp;) (1 samples, 0.37%)</title><rect x="407.7" y="1107.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="410.7" y="1118.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.37%)</title><rect x="407.7" y="1091.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="410.7" y="1102.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (58 samples, 21.48%)</title><rect x="412.1" y="1155.0" width="253.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="415.1" y="1166.0">Compiler::compile_method(ciEnv*, c..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (58 samples, 21.48%)</title><rect x="412.1" y="1139.0" width="253.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="415.1" y="1150.0">Compilation::Compilation(AbstractC..</text>
</g>
<g>
<title>Compilation::compile_method() (58 samples, 21.48%)</title><rect x="412.1" y="1123.0" width="253.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="415.1" y="1134.0">Compilation::compile_method()</text>
</g>
<g>
<title>Compilation::compile_java_method() (57 samples, 21.11%)</title><rect x="412.1" y="1107.0" width="249.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="415.1" y="1118.0">Compilation::compile_java_method()</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (16 samples, 5.93%)</title><rect x="412.1" y="1091.0" width="69.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="415.1" y="1102.0">Compila..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.37%)</title><rect x="412.1" y="1075.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="415.1" y="1086.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.37%)</title><rect x="412.1" y="1059.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="415.1" y="1070.0"></text>
</g>
<g>
<title>LoadField::hash() const (1 samples, 0.37%)</title><rect x="412.1" y="1043.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="415.1" y="1054.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (9 samples, 3.33%)</title><rect x="416.4" y="1075.0" width="39.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="419.4" y="1086.0">IR:..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (9 samples, 3.33%)</title><rect x="416.4" y="1059.0" width="39.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="419.4" y="1070.0">IRS..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (9 samples, 3.33%)</title><rect x="416.4" y="1043.0" width="39.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="419.4" y="1054.0">Gra..</text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.37%)</title><rect x="416.4" y="1027.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="419.4" y="1038.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.37%)</title><rect x="416.4" y="1011.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="419.4" y="1022.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.37%)</title><rect x="416.4" y="995.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="419.4" y="1006.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.37%)</title><rect x="416.4" y="979.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="419.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 2.96%)</title><rect x="420.8" y="1027.0" width="35.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="423.8" y="1038.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 2.96%)</title><rect x="420.8" y="1011.0" width="35.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="423.8" y="1022.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 2.22%)</title><rect x="429.6" y="995.0" width="26.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="432.6" y="1006.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 1.85%)</title><rect x="429.6" y="979.0" width="21.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="432.6" y="990.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 1.85%)</title><rect x="429.6" y="963.0" width="21.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="432.6" y="974.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 1.85%)</title><rect x="429.6" y="947.0" width="21.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="432.6" y="958.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 1.85%)</title><rect x="429.6" y="931.0" width="21.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="432.6" y="942.0">G..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 1.85%)</title><rect x="429.6" y="915.0" width="21.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="432.6" y="926.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 1.48%)</title><rect x="429.6" y="899.0" width="17.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="432.6" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 1.48%)</title><rect x="429.6" y="883.0" width="17.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="432.6" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 1.48%)</title><rect x="429.6" y="867.0" width="17.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="432.6" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 1.48%)</title><rect x="429.6" y="851.0" width="17.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="432.6" y="862.0"></text>
</g>
<g>
<title>BlockBegin::set_end(BlockEnd*) [clone .part.101] (1 samples, 0.37%)</title><rect x="429.6" y="835.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="432.6" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 1.11%)</title><rect x="433.9" y="835.0" width="13.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="436.9" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.74%)</title><rect x="433.9" y="819.0" width="8.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="436.9" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.74%)</title><rect x="433.9" y="803.0" width="8.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="436.9" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.74%)</title><rect x="433.9" y="787.0" width="8.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="436.9" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.74%)</title><rect x="433.9" y="771.0" width="8.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="436.9" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.74%)</title><rect x="433.9" y="755.0" width="8.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="436.9" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.37%)</title><rect x="433.9" y="739.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="436.9" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.37%)</title><rect x="433.9" y="723.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="436.9" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.37%)</title><rect x="433.9" y="707.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="436.9" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.37%)</title><rect x="433.9" y="691.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="436.9" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.37%)</title><rect x="433.9" y="675.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="436.9" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.37%)</title><rect x="433.9" y="659.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="436.9" y="670.0"></text>
</g>
<g>
<title>Compiler::is_intrinsic_supported(methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="433.9" y="643.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="436.9" y="654.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.37%)</title><rect x="438.3" y="739.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="441.3" y="750.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.37%)</title><rect x="438.3" y="723.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="441.3" y="734.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.37%)</title><rect x="438.3" y="707.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="441.3" y="718.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.37%)</title><rect x="438.3" y="691.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="441.3" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (1 samples, 0.37%)</title><rect x="438.3" y="675.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="441.3" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.37%)</title><rect x="438.3" y="659.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="441.3" y="670.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.37%)</title><rect x="442.7" y="819.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="445.7" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="442.7" y="803.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="445.7" y="814.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.37%)</title><rect x="442.7" y="787.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="445.7" y="798.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.37%)</title><rect x="442.7" y="771.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="445.7" y="782.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.37%)</title><rect x="447.0" y="899.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="450.0" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.37%)</title><rect x="451.4" y="979.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="454.4" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="451.4" y="963.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="454.4" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="451.4" y="947.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="454.4" y="958.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="451.4" y="931.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="454.4" y="942.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="451.4" y="915.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="454.4" y="926.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="451.4" y="899.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="454.4" y="910.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.37%)</title><rect x="451.4" y="883.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="454.4" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.37%)</title><rect x="451.4" y="867.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="454.4" y="878.0"></text>
</g>
<g>
<title>IR::compute_code() (1 samples, 0.37%)</title><rect x="455.8" y="1075.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="458.8" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.37%)</title><rect x="455.8" y="1059.0" width="4.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="458.8" y="1070.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (4 samples, 1.48%)</title><rect x="460.1" y="1075.0" width="17.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="463.1" y="1086.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (4 samples, 1.48%)</title><rect x="460.1" y="1059.0" width="17.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="463.1" y="1070.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (3 samples, 1.11%)</title><rect x="464.5" y="1043.0" width="13.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="467.5" y="1054.0"></text>
</g>
<g>
<title>AccessIndexed::input_values_do(ValueVisitor*) (1 samples, 0.37%)</title><rect x="468.9" y="1027.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="471.9" y="1038.0"></text>
</g>
<g>
<title>NullCheckVisitor::do_ArithmeticOp(ArithmeticOp*) (1 samples, 0.37%)</title><rect x="468.9" y="1011.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="471.9" y="1022.0"></text>
</g>
<g>
<title>BitMap::set_intersection_with_result(BitMap const&amp;) (1 samples, 0.37%)</title><rect x="473.3" y="1027.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="476.3" y="1038.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.37%)</title><rect x="477.6" y="1075.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="480.6" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::insert_block_between(BlockBegin*) (1 samples, 0.37%)</title><rect x="477.6" y="1059.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="480.6" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::set_end(BlockEnd*) [clone .part.101] (1 samples, 0.37%)</title><rect x="477.6" y="1043.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="480.6" y="1054.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (10 samples, 3.70%)</title><rect x="482.0" y="1091.0" width="43.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="485.0" y="1102.0">Comp..</text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (7 samples, 2.59%)</title><rect x="482.0" y="1075.0" width="30.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="485.0" y="1086.0">LI..</text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (2 samples, 0.74%)</title><rect x="486.4" y="1059.0" width="8.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="489.4" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.37%)</title><rect x="486.4" y="1043.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="489.4" y="1054.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.37%)</title><rect x="486.4" y="1027.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="489.4" y="1038.0"></text>
</g>
<g>
<title>OopMap::deep_copy() (1 samples, 0.37%)</title><rect x="486.4" y="1011.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="489.4" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.37%)</title><rect x="486.4" y="995.0" width="4.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="489.4" y="1006.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (1 samples, 0.37%)</title><rect x="490.7" y="1043.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="493.7" y="1054.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.37%)</title><rect x="490.7" y="1027.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="493.7" y="1038.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.37%)</title><rect x="490.7" y="1011.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="493.7" y="1022.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.37%)</title><rect x="490.7" y="995.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="493.7" y="1006.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.37%)</title><rect x="490.7" y="979.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="493.7" y="990.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (2 samples, 0.74%)</title><rect x="495.1" y="1059.0" width="8.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="498.1" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::move_op(LIR_OprDesc*, LIR_OprDesc*, BasicType, LIR_PatchCode, CodeEmitInfo*, bool, bool, bool) (2 samples, 0.74%)</title><rect x="495.1" y="1043.0" width="8.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="498.1" y="1054.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (1 samples, 0.37%)</title><rect x="503.9" y="1059.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="506.9" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*) (1 samples, 0.37%)</title><rect x="503.9" y="1043.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="506.9" y="1054.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.37%)</title><rect x="503.9" y="1027.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="506.9" y="1038.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.37%)</title><rect x="503.9" y="1011.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="506.9" y="1022.0"></text>
</g>
<g>
<title>Relocation::type() (1 samples, 0.37%)</title><rect x="503.9" y="995.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="506.9" y="1006.0"></text>
</g>
<g>
<title>LIR_Assembler::return_op(LIR_OprDesc*) (1 samples, 0.37%)</title><rect x="508.2" y="1059.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="511.2" y="1070.0"></text>
</g>
<g>
<title>poll_return_Relocation::type() (1 samples, 0.37%)</title><rect x="508.2" y="1043.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="511.2" y="1054.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_deopt_handler() (1 samples, 0.37%)</title><rect x="512.6" y="1075.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="515.6" y="1086.0"></text>
</g>
<g>
<title>MacroAssembler::pushptr(AddressLiteral) (1 samples, 0.37%)</title><rect x="512.6" y="1059.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="515.6" y="1070.0"></text>
</g>
<g>
<title>Assembler::mov_literal64(RegisterImpl*, long, RelocationHolder const&amp;) (1 samples, 0.37%)</title><rect x="512.6" y="1043.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="515.6" y="1054.0"></text>
</g>
<g>
<title>relocInfo::initialize(CodeSection*, Relocation*) (1 samples, 0.37%)</title><rect x="512.6" y="1027.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="515.6" y="1038.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (2 samples, 0.74%)</title><rect x="517.0" y="1075.0" width="8.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="520.0" y="1086.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.37%)</title><rect x="517.0" y="1059.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="520.0" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::store_parameter(Metadata*, int) (1 samples, 0.37%)</title><rect x="517.0" y="1043.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="520.0" y="1054.0"></text>
</g>
<g>
<title>MacroAssembler::mov_metadata(Address, Metadata*) (1 samples, 0.37%)</title><rect x="517.0" y="1027.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="520.0" y="1038.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.37%)</title><rect x="517.0" y="1011.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="520.0" y="1022.0"></text>
</g>
<g>
<title>PatchingStub::emit_code(LIR_Assembler*) (1 samples, 0.37%)</title><rect x="521.3" y="1059.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="524.3" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.37%)</title><rect x="521.3" y="1043.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="524.3" y="1054.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.37%)</title><rect x="521.3" y="1027.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="524.3" y="1038.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.37%)</title><rect x="521.3" y="1011.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="524.3" y="1022.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.37%)</title><rect x="521.3" y="995.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="524.3" y="1006.0"></text>
</g>
<g>
<title>Location::write_on(DebugInfoWriteStream*) (1 samples, 0.37%)</title><rect x="521.3" y="979.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="524.3" y="990.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (31 samples, 11.48%)</title><rect x="525.7" y="1091.0" width="135.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="528.7" y="1102.0">Compilation::emit..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (8 samples, 2.96%)</title><rect x="525.7" y="1075.0" width="35.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="528.7" y="1086.0">Bl..</text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (8 samples, 2.96%)</title><rect x="525.7" y="1059.0" width="35.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="528.7" y="1070.0">no..</text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (5 samples, 1.85%)</title><rect x="525.7" y="1043.0" width="21.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="528.7" y="1054.0">L..</text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (5 samples, 1.85%)</title><rect x="525.7" y="1027.0" width="21.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="528.7" y="1038.0">L..</text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (2 samples, 0.74%)</title><rect x="530.1" y="1011.0" width="8.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="533.1" y="1022.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (1 samples, 0.37%)</title><rect x="534.4" y="995.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="537.4" y="1006.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (2 samples, 0.74%)</title><rect x="538.8" y="1011.0" width="8.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="541.8" y="1022.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (3 samples, 1.11%)</title><rect x="547.6" y="1043.0" width="13.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="550.6" y="1054.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_load_arguments(Invoke*, GrowableArray&lt;LIRItem*&gt;*, GrowableArray&lt;LIR_OprDesc*&gt; const*) (2 samples, 0.74%)</title><rect x="547.6" y="1027.0" width="8.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="550.6" y="1038.0"></text>
</g>
<g>
<title>LIRItem::load_for_store(BasicType) (1 samples, 0.37%)</title><rect x="547.6" y="1011.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="550.6" y="1022.0"></text>
</g>
<g>
<title>Instruction::as_Constant() (1 samples, 0.37%)</title><rect x="547.6" y="995.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="550.6" y="1006.0"></text>
</g>
<g>
<title>LIRItem::load_item_force(LIR_OprDesc*) (1 samples, 0.37%)</title><rect x="551.9" y="1011.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="554.9" y="1022.0"></text>
</g>
<g>
<title>LIR_List::move(LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.263] (1 samples, 0.37%)</title><rect x="551.9" y="995.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="554.9" y="1006.0"></text>
</g>
<g>
<title>GrowableArray&lt;LIR_Op*&gt;::append(LIR_Op* const&amp;) (1 samples, 0.37%)</title><rect x="551.9" y="979.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="554.9" y="990.0"></text>
</g>
<g>
<title>GrowableArray&lt;LIR_Op*&gt;::grow(int) (1 samples, 0.37%)</title><rect x="551.9" y="963.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="554.9" y="974.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.37%)</title><rect x="556.3" y="1027.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="559.3" y="1038.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.37%)</title><rect x="556.3" y="1011.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="559.3" y="1022.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.37%)</title><rect x="556.3" y="995.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="559.3" y="1006.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.37%)</title><rect x="556.3" y="979.0" width="4.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="559.3" y="990.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (23 samples, 8.52%)</title><rect x="560.7" y="1075.0" width="100.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="563.7" y="1086.0">LinearScan::..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (8 samples, 2.96%)</title><rect x="560.7" y="1059.0" width="34.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="563.7" y="1070.0">Li..</text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (6 samples, 2.22%)</title><rect x="565.0" y="1043.0" width="26.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="568.0" y="1054.0">I..</text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) [clone .constprop.233] (1 samples, 0.37%)</title><rect x="569.4" y="1027.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="572.4" y="1038.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (4 samples, 1.48%)</title><rect x="573.8" y="1027.0" width="17.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="576.8" y="1038.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (3 samples, 1.11%)</title><rect x="573.8" y="1011.0" width="13.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="576.8" y="1022.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (1 samples, 0.37%)</title><rect x="573.8" y="995.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="576.8" y="1006.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_any(Interval*) (1 samples, 0.37%)</title><rect x="578.1" y="995.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="581.1" y="1006.0"></text>
</g>
<g>
<title>Range::intersects_at(Range*) const (1 samples, 0.37%)</title><rect x="578.1" y="979.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="581.1" y="990.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.37%)</title><rect x="582.5" y="995.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="585.5" y="1006.0"></text>
</g>
<g>
<title>LinearScanWalker::insert_move(int, Interval*, Interval*) (1 samples, 0.37%)</title><rect x="586.9" y="1011.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="589.9" y="1022.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.37%)</title><rect x="586.9" y="995.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="589.9" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.37%)</title><rect x="591.3" y="1043.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="594.3" y="1054.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (3 samples, 1.11%)</title><rect x="595.6" y="1059.0" width="13.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="598.6" y="1070.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (3 samples, 1.11%)</title><rect x="595.6" y="1043.0" width="13.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="598.6" y="1054.0"></text>
</g>
<g>
<title>LinearScan::calc_operand_for_interval(Interval const*) (1 samples, 0.37%)</title><rect x="595.6" y="1027.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="598.6" y="1038.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.37%)</title><rect x="600.0" y="1027.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="603.0" y="1038.0"></text>
</g>
<g>
<title>MonitorValue::MonitorValue(ScopeValue*, Location, bool) (1 samples, 0.37%)</title><rect x="600.0" y="1011.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="603.0" y="1022.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 0.37%)</title><rect x="604.4" y="1027.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="607.4" y="1038.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.37%)</title><rect x="604.4" y="1011.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="607.4" y="1022.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.37%)</title><rect x="604.4" y="995.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="607.4" y="1006.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (7 samples, 2.59%)</title><rect x="608.7" y="1059.0" width="30.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="611.7" y="1070.0">Li..</text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (2 samples, 0.74%)</title><rect x="621.9" y="1043.0" width="8.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="624.9" y="1054.0"></text>
</g>
<g>
<title>LinearScan::add_def(LIR_OprDesc*, int, IntervalUseKind) (1 samples, 0.37%)</title><rect x="630.6" y="1043.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="633.6" y="1054.0"></text>
</g>
<g>
<title>LinearScan::add_def(int, int, IntervalUseKind, BasicType) (1 samples, 0.37%)</title><rect x="630.6" y="1027.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="633.6" y="1038.0"></text>
</g>
<g>
<title>LinearScan::add_register_hints(LIR_Op*) (1 samples, 0.37%)</title><rect x="635.0" y="1043.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="638.0" y="1054.0"></text>
</g>
<g>
<title>LinearScan::compute_global_live_sets() (1 samples, 0.37%)</title><rect x="639.3" y="1059.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="642.3" y="1070.0"></text>
</g>
<g>
<title>BitMap::set_difference(BitMap const&amp;) (1 samples, 0.37%)</title><rect x="639.3" y="1043.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="642.3" y="1054.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 0.37%)</title><rect x="643.7" y="1059.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="646.7" y="1070.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (3 samples, 1.11%)</title><rect x="648.1" y="1059.0" width="13.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="651.1" y="1070.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (3 samples, 1.11%)</title><rect x="648.1" y="1043.0" width="13.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="651.1" y="1054.0"></text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.194] (1 samples, 0.37%)</title><rect x="648.1" y="1027.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="651.1" y="1038.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (2 samples, 0.74%)</title><rect x="652.4" y="1027.0" width="8.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="655.4" y="1038.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.37%)</title><rect x="661.2" y="1107.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="664.2" y="1118.0"></text>
</g>
<g>
<title>Dependencies::encode_content_bytes() (1 samples, 0.37%)</title><rect x="661.2" y="1091.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="664.2" y="1102.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.37%)</title><rect x="661.2" y="1075.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="664.2" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::post_compile(CompilerThread*, CompileTask*, bool, ciEnv*, int, char const*) (1 samples, 0.37%)</title><rect x="665.6" y="1171.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="668.6" y="1182.0"></text>
</g>
<g>
<title>LowMemoryDetector::has_pending_requests() (1 samples, 0.37%)</title><rect x="669.9" y="1187.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="672.9" y="1198.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.74%)</title><rect x="674.3" y="1187.0" width="8.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="677.3" y="1198.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.74%)</title><rect x="674.3" y="1171.0" width="8.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="677.3" y="1182.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (2 samples, 0.74%)</title><rect x="674.3" y="1155.0" width="8.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="677.3" y="1166.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.74%)</title><rect x="674.3" y="1139.0" width="8.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="677.3" y="1150.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.74%)</title><rect x="674.3" y="1123.0" width="8.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="677.3" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (116 samples, 42.96%)</title><rect x="683.0" y="1251.0" width="507.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.0" y="1262.0">sun/instrument/InstrumentationImpl.loadClassAndCallPremain</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (116 samples, 42.96%)</title><rect x="683.0" y="1235.0" width="507.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.0" y="1246.0">sun/instrument/InstrumentationImpl.loadClassAndStartAgent</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.74%)</title><rect x="683.0" y="1219.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.74%)</title><rect x="683.0" y="1203.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.74%)</title><rect x="683.0" y="1187.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.74%)</title><rect x="683.0" y="1171.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.74%)</title><rect x="683.0" y="1155.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.74%)</title><rect x="683.0" y="1139.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.74%)</title><rect x="683.0" y="1123.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.74%)</title><rect x="683.0" y="1107.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.0" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.74%)</title><rect x="683.0" y="1091.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.74%)</title><rect x="683.0" y="1075.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.74%)</title><rect x="683.0" y="1059.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (2 samples, 0.74%)</title><rect x="683.0" y="1043.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (2 samples, 0.74%)</title><rect x="683.0" y="1027.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.0" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.74%)</title><rect x="683.0" y="1011.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.74%)</title><rect x="683.0" y="995.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.74%)</title><rect x="683.0" y="979.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (1 samples, 0.37%)</title><rect x="683.0" y="963.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.0" y="974.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.37%)</title><rect x="683.0" y="947.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.0" y="958.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.37%)</title><rect x="683.0" y="931.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.0" y="942.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.37%)</title><rect x="683.0" y="915.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.0" y="926.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (1 samples, 0.37%)</title><rect x="683.0" y="899.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.0" y="910.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 0.37%)</title><rect x="683.0" y="883.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.0" y="894.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 0.37%)</title><rect x="683.0" y="867.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.0" y="878.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (1 samples, 0.37%)</title><rect x="683.0" y="851.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.0" y="862.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (1 samples, 0.37%)</title><rect x="683.0" y="835.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.0" y="846.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.hashN (1 samples, 0.37%)</title><rect x="683.0" y="819.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/util/jar/JarIndex.getJarIndex (1 samples, 0.37%)</title><rect x="687.4" y="963.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.4" y="974.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.37%)</title><rect x="687.4" y="947.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.4" y="958.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.37%)</title><rect x="687.4" y="931.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.4" y="942.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.isMultiRelease (1 samples, 0.37%)</title><rect x="687.4" y="915.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.4" y="926.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.checkForSpecialAttributes (1 samples, 0.37%)</title><rect x="687.4" y="899.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.4" y="910.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getBytes (1 samples, 0.37%)</title><rect x="687.4" y="883.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.4" y="894.0"></text>
</g>
<g>
<title>java/io/InputStream.readNBytes (1 samples, 0.37%)</title><rect x="687.4" y="867.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.4" y="878.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.37%)</title><rect x="687.4" y="851.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.4" y="862.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (1 samples, 0.37%)</title><rect x="687.4" y="835.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.4" y="846.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (1 samples, 0.37%)</title><rect x="687.4" y="819.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.4" y="830.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.initDataOffset (1 samples, 0.37%)</title><rect x="687.4" y="803.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.4" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="687.4" y="787.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="690.4" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="687.4" y="771.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="690.4" y="782.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="687.4" y="755.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="690.4" y="766.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="687.4" y="739.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="690.4" y="750.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.37%)</title><rect x="687.4" y="723.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="690.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.37%)</title><rect x="687.4" y="707.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="690.4" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.37%)</title><rect x="687.4" y="691.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="690.4" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (114 samples, 42.22%)</title><rect x="691.8" y="1219.0" width="498.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.8" y="1230.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (114 samples, 42.22%)</title><rect x="691.8" y="1203.0" width="498.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.8" y="1214.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (114 samples, 42.22%)</title><rect x="691.8" y="1187.0" width="498.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.8" y="1198.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (114 samples, 42.22%)</title><rect x="691.8" y="1171.0" width="498.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.8" y="1182.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.premain (114 samples, 42.22%)</title><rect x="691.8" y="1155.0" width="498.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.8" y="1166.0">datadog/trace/bootstrap/AgentBootstrap.premain</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.agentmain (114 samples, 42.22%)</title><rect x="691.8" y="1139.0" width="498.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.8" y="1150.0">datadog/trace/bootstrap/AgentBootstrap.agentmain</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.installBootstrapJar (1 samples, 0.37%)</title><rect x="691.8" y="1123.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.8" y="1134.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.appendToBootstrapClassLoaderSearch (1 samples, 0.37%)</title><rect x="691.8" y="1107.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.8" y="1118.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.appendToClassLoaderSearch0 (1 samples, 0.37%)</title><rect x="691.8" y="1091.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.8" y="1102.0"></text>
</g>
<g>
<title>appendToClassLoaderSearch (1 samples, 0.37%)</title><rect x="691.8" y="1075.0" width="4.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="694.8" y="1086.0"></text>
</g>
<g>
<title>jvmti_AddToBootstrapClassLoaderSearch (1 samples, 0.37%)</title><rect x="691.8" y="1059.0" width="4.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="694.8" y="1070.0"></text>
</g>
<g>
<title>JvmtiEnv::AddToBootstrapClassLoaderSearch(char const*) (1 samples, 0.37%)</title><rect x="691.8" y="1043.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="694.8" y="1054.0"></text>
</g>
<g>
<title>ClassLoader::create_class_path_zip_entry(char const*, bool) (1 samples, 0.37%)</title><rect x="691.8" y="1027.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="694.8" y="1038.0"></text>
</g>
<g>
<title>ZIP_Open (1 samples, 0.37%)</title><rect x="691.8" y="1011.0" width="4.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="694.8" y="1022.0"></text>
</g>
<g>
<title>ZIP_Put_In_Cache0 (1 samples, 0.37%)</title><rect x="691.8" y="995.0" width="4.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="694.8" y="1006.0"></text>
</g>
<g>
<title>readCEN (1 samples, 0.37%)</title><rect x="691.8" y="979.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="694.8" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (113 samples, 41.85%)</title><rect x="696.1" y="1123.0" width="493.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.1" y="1134.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (113 samples, 41.85%)</title><rect x="696.1" y="1107.0" width="493.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.1" y="1118.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (113 samples, 41.85%)</title><rect x="696.1" y="1091.0" width="493.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.1" y="1102.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (113 samples, 41.85%)</title><rect x="696.1" y="1075.0" width="493.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.1" y="1086.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="696.1" y="1059.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.1" y="1070.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.37%)</title><rect x="696.1" y="1043.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.1" y="1054.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.37%)</title><rect x="696.1" y="1027.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.1" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getLogger (1 samples, 0.37%)</title><rect x="696.1" y="1011.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.1" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getHelperFactory (1 samples, 0.37%)</title><rect x="696.1" y="995.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.1" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.getSettingsDescription (1 samples, 0.37%)</title><rect x="696.1" y="979.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.1" y="990.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettingsDescription (1 samples, 0.37%)</title><rect x="696.1" y="963.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.1" y="974.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettings (1 samples, 0.37%)</title><rect x="696.1" y="947.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.37%)</title><rect x="696.1" y="931.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.loadProperties (1 samples, 0.37%)</title><rect x="696.1" y="915.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.1" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="696.1" y="899.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.1" y="910.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$ResourceStreamPrivilegedAction.run (1 samples, 0.37%)</title><rect x="696.1" y="883.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.1" y="894.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$ResourceStreamPrivilegedAction.run (1 samples, 0.37%)</title><rect x="696.1" y="867.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.37%)</title><rect x="696.1" y="851.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.37%)</title><rect x="696.1" y="835.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.1" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.37%)</title><rect x="696.1" y="819.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.37%)</title><rect x="696.1" y="803.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.37%)</title><rect x="696.1" y="787.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.1" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="696.1" y="771.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.37%)</title><rect x="696.1" y="755.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.37%)</title><rect x="696.1" y="739.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.37%)</title><rect x="696.1" y="723.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.37%)</title><rect x="696.1" y="707.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.37%)</title><rect x="696.1" y="691.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.37%)</title><rect x="696.1" y="675.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getAttributes (1 samples, 0.37%)</title><rect x="696.1" y="659.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.decompress (1 samples, 0.37%)</title><rect x="696.1" y="643.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.1" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.37%)</title><rect x="696.1" y="627.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="699.1" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.37%)</title><rect x="696.1" y="611.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="699.1" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="696.1" y="595.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="699.1" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.37%)</title><rect x="696.1" y="579.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="699.1" y="590.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.37%)</title><rect x="696.1" y="563.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="699.1" y="574.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.start (112 samples, 41.48%)</title><rect x="700.5" y="1059.0" width="489.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.5" y="1070.0">datadog/trace/bootstrap/Agent.start</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createParentClassloader (2 samples, 0.74%)</title><rect x="700.5" y="1043.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.5" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDatadogClassLoader (1 samples, 0.37%)</title><rect x="700.5" y="1027.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.37%)</title><rect x="700.5" y="1011.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.37%)</title><rect x="700.5" y="995.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.37%)</title><rect x="700.5" y="979.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.37%)</title><rect x="700.5" y="963.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.5" y="974.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (1 samples, 0.37%)</title><rect x="700.5" y="947.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.5" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (1 samples, 0.37%)</title><rect x="700.5" y="931.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.5" y="942.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.37%)</title><rect x="700.5" y="915.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.5" y="926.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (1 samples, 0.37%)</title><rect x="700.5" y="899.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.5" y="910.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (1 samples, 0.37%)</title><rect x="700.5" y="883.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.5" y="894.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (1 samples, 0.37%)</title><rect x="700.5" y="867.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.5" y="878.0"></text>
</g>
<g>
<title>java/util/zip/ZipCoder$UTF8.toString (1 samples, 0.37%)</title><rect x="700.5" y="851.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.5" y="862.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getPlatformClassLoader (1 samples, 0.37%)</title><rect x="704.9" y="1027.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.37%)</title><rect x="704.9" y="1011.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.37%)</title><rect x="704.9" y="995.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.37%)</title><rect x="704.9" y="979.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.37%)</title><rect x="704.9" y="963.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.9" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.37%)</title><rect x="704.9" y="947.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.9" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.37%)</title><rect x="704.9" y="931.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.9" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.37%)</title><rect x="704.9" y="915.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.9" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.37%)</title><rect x="704.9" y="899.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.9" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.37%)</title><rect x="704.9" y="883.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.9" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.37%)</title><rect x="704.9" y="867.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.9" y="878.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.37%)</title><rect x="704.9" y="851.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.9" y="862.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.37%)</title><rect x="704.9" y="835.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.9" y="846.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.37%)</title><rect x="704.9" y="819.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.9" y="830.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.getInstance (1 samples, 0.37%)</title><rect x="704.9" y="803.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.9" y="814.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.&lt;init&gt; (1 samples, 0.37%)</title><rect x="704.9" y="787.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.9" y="798.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSelectAnnotations (1 samples, 0.37%)</title><rect x="704.9" y="771.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.9" y="782.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.37%)</title><rect x="704.9" y="755.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.9" y="766.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.37%)</title><rect x="704.9" y="739.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.9" y="750.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.37%)</title><rect x="704.9" y="723.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.9" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="704.9" y="707.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.9" y="718.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.37%)</title><rect x="704.9" y="691.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.9" y="702.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.37%)</title><rect x="704.9" y="675.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="707.9" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.37%)</title><rect x="704.9" y="659.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.9" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.37%)</title><rect x="704.9" y="643.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.37%)</title><rect x="704.9" y="627.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.37%)</title><rect x="704.9" y="611.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.9" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/806353501.apply (1 samples, 0.37%)</title><rect x="704.9" y="595.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.9" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.37%)</title><rect x="704.9" y="579.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.9" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.37%)</title><rect x="704.9" y="563.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.9" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.defineProxyClass (1 samples, 0.37%)</title><rect x="704.9" y="547.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.9" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateProxyClass (1 samples, 0.37%)</title><rect x="704.9" y="531.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.9" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateClassFile (1 samples, 0.37%)</title><rect x="704.9" y="515.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.9" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ProxyMethod.generateMethod (1 samples, 0.37%)</title><rect x="704.9" y="499.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getFieldRef (1 samples, 0.37%)</title><rect x="704.9" y="483.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.9" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool.getClass (1 samples, 0.37%)</title><rect x="704.9" y="467.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.9" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ConstantPool$IndirectEntry.&lt;init&gt; (1 samples, 0.37%)</title><rect x="704.9" y="451.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.9" y="462.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.installDatadogTracer (28 samples, 10.37%)</title><rect x="709.3" y="1043.0" width="122.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.3" y="1054.0">datadog/trace/b..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (28 samples, 10.37%)</title><rect x="709.3" y="1027.0" width="122.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.3" y="1038.0">java/lang/refle..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (28 samples, 10.37%)</title><rect x="709.3" y="1011.0" width="122.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.3" y="1022.0">jdk/internal/re..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (28 samples, 10.37%)</title><rect x="709.3" y="995.0" width="122.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.3" y="1006.0">jdk/internal/re..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (28 samples, 10.37%)</title><rect x="709.3" y="979.0" width="122.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.3" y="990.0">jdk/internal/re..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/TracerInstaller.installGlobalTracer (28 samples, 10.37%)</title><rect x="709.3" y="963.0" width="122.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.3" y="974.0">datadog/trace/a..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.build (28 samples, 10.37%)</title><rect x="709.3" y="947.0" width="122.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.3" y="958.0">datadog/trace/a..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (28 samples, 10.37%)</title><rect x="709.3" y="931.0" width="122.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.3" y="942.0">datadog/trace/a..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (28 samples, 10.37%)</title><rect x="709.3" y="915.0" width="122.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.3" y="926.0">datadog/trace/a..</text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/MetricsAggregatorFactory.createMetricsAggregator (11 samples, 4.07%)</title><rect x="709.3" y="899.0" width="48.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.3" y="910.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="709.3" y="883.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/Batch.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="709.3" y="867.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater (1 samples, 0.37%)</title><rect x="709.3" y="851.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.3" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="709.3" y="835.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="712.3" y="846.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="709.3" y="819.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="712.3" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="709.3" y="803.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="712.3" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="709.3" y="787.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="712.3" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="709.3" y="771.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="712.3" y="782.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.37%)</title><rect x="709.3" y="755.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="712.3" y="766.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="709.3" y="739.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="712.3" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="709.3" y="723.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="712.3" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="709.3" y="707.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="712.3" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.37%)</title><rect x="709.3" y="691.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="712.3" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (10 samples, 3.70%)</title><rect x="713.6" y="883.0" width="43.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.6" y="894.0">data..</text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="713.6" y="867.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.6" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="713.6" y="851.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/ConflatingMetricsAggregator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="713.6" y="835.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/metrics/Aggregator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="713.6" y="819.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.6" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="713.6" y="803.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="716.6" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="713.6" y="787.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="716.6" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="713.6" y="771.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="716.6" y="782.0"></text>
</g>
<g>
<title>klassVtable::initialize_vtable(bool, Thread*) (1 samples, 0.37%)</title><rect x="713.6" y="755.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="716.6" y="766.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.37%)</title><rect x="713.6" y="739.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="716.6" y="750.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.getWellKnownTags (9 samples, 3.33%)</title><rect x="718.0" y="867.0" width="39.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.0" y="878.0">dat..</text>
</g>
<g>
<title>datadog/trace/api/Config.getHostName (9 samples, 3.33%)</title><rect x="718.0" y="851.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.0" y="862.0">dat..</text>
</g>
<g>
<title>java/lang/Runtime.exec (9 samples, 3.33%)</title><rect x="718.0" y="835.0" width="39.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.0" y="846.0">jav..</text>
</g>
<g>
<title>java/lang/Runtime.exec (9 samples, 3.33%)</title><rect x="718.0" y="819.0" width="39.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.0" y="830.0">jav..</text>
</g>
<g>
<title>java/lang/Runtime.exec (9 samples, 3.33%)</title><rect x="718.0" y="803.0" width="39.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.0" y="814.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessBuilder.start (9 samples, 3.33%)</title><rect x="718.0" y="787.0" width="39.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.0" y="798.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessBuilder.start (9 samples, 3.33%)</title><rect x="718.0" y="771.0" width="39.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.0" y="782.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessImpl.start (9 samples, 3.33%)</title><rect x="718.0" y="755.0" width="39.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.0" y="766.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessImpl.&lt;init&gt; (9 samples, 3.33%)</title><rect x="718.0" y="739.0" width="39.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.0" y="750.0">jav..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 3.33%)</title><rect x="718.0" y="723.0" width="39.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.0" y="734.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessImpl$$Lambda$50/1907467420.run (9 samples, 3.33%)</title><rect x="718.0" y="707.0" width="39.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.0" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessImpl.lambda$new$0 (9 samples, 3.33%)</title><rect x="718.0" y="691.0" width="39.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.0" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessImpl.initStreams (9 samples, 3.33%)</title><rect x="718.0" y="675.0" width="39.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.0" y="686.0">jav..</text>
</g>
<g>
<title>java/lang/ProcessHandleImpl.completion (6 samples, 2.22%)</title><rect x="718.0" y="659.0" width="26.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.0" y="670.0">j..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="718.0" y="643.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="721.0" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="718.0" y="627.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.0" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="718.0" y="611.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="721.0" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="718.0" y="595.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.0" y="606.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.37%)</title><rect x="718.0" y="579.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="721.0" y="590.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="718.0" y="563.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="721.0" y="574.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.37%)</title><rect x="718.0" y="547.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="721.0" y="558.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.37%)</title><rect x="718.0" y="531.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="721.0" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.37%)</title><rect x="718.0" y="515.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="721.0" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.37%)</title><rect x="718.0" y="499.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="721.0" y="510.0"></text>
</g>
<g>
<title>JavaFieldStream::JavaFieldStream(InstanceKlass const*) (1 samples, 0.37%)</title><rect x="718.0" y="483.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="721.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;clinit&gt; (5 samples, 1.85%)</title><rect x="722.4" y="643.0" width="21.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.4" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.&lt;clinit&gt; (2 samples, 0.74%)</title><rect x="722.4" y="627.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.4" y="638.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.74%)</title><rect x="722.4" y="611.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.4" y="622.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.74%)</title><rect x="722.4" y="595.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.74%)</title><rect x="722.4" y="579.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.74%)</title><rect x="722.4" y="563.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.4" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.74%)</title><rect x="722.4" y="547.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.4" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.74%)</title><rect x="722.4" y="531.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.4" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.74%)</title><rect x="722.4" y="515.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.4" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.74%)</title><rect x="722.4" y="499.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.74%)</title><rect x="722.4" y="483.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.4" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.74%)</title><rect x="722.4" y="467.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.4" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (2 samples, 0.74%)</title><rect x="722.4" y="451.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.4" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.37%)</title><rect x="722.4" y="435.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.4" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.37%)</title><rect x="722.4" y="419.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.4" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.37%)</title><rect x="722.4" y="403.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.4" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="722.4" y="387.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="725.4" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="722.4" y="371.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.4" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="722.4" y="355.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.4" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.37%)</title><rect x="722.4" y="339.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.4" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.37%)</title><rect x="722.4" y="323.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.4" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.37%)</title><rect x="722.4" y="307.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.4" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.37%)</title><rect x="722.4" y="291.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.4" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.putMapEntries (1 samples, 0.37%)</title><rect x="722.4" y="275.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.4" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.37%)</title><rect x="726.7" y="435.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.7" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.37%)</title><rect x="726.7" y="419.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.7" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.toByteArray (1 samples, 0.37%)</title><rect x="726.7" y="403.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.7" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.putMethodInfo (1 samples, 0.37%)</title><rect x="726.7" y="387.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.7" y="398.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (3 samples, 1.11%)</title><rect x="731.1" y="627.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.1" y="638.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (3 samples, 1.11%)</title><rect x="731.1" y="611.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (3 samples, 1.11%)</title><rect x="731.1" y="595.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 1.11%)</title><rect x="731.1" y="579.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.1" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 1.11%)</title><rect x="731.1" y="563.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 1.11%)</title><rect x="731.1" y="547.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.1" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (3 samples, 1.11%)</title><rect x="731.1" y="531.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (3 samples, 1.11%)</title><rect x="731.1" y="515.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.1" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (3 samples, 1.11%)</title><rect x="731.1" y="499.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.1" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (3 samples, 1.11%)</title><rect x="731.1" y="483.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.1" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (3 samples, 1.11%)</title><rect x="731.1" y="467.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.1" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (2 samples, 0.74%)</title><rect x="731.1" y="451.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.1" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.37%)</title><rect x="731.1" y="435.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.1" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.37%)</title><rect x="731.1" y="419.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="734.1" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.37%)</title><rect x="731.1" y="403.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.1" y="414.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f8feedd5080 (1 samples, 0.37%)</title><rect x="731.1" y="387.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.1" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="435.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.5" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="419.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="738.5" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="403.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.5" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.37%)</title><rect x="735.5" y="387.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.5" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="371.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.5" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="355.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.5" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="339.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.5" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="323.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.5" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="307.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.5" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="735.5" y="291.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.5" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.37%)</title><rect x="735.5" y="275.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.5" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NameMatcher.matches (1 samples, 0.37%)</title><rect x="735.5" y="259.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.5" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getActualName (1 samples, 0.37%)</title><rect x="735.5" y="243.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.5" y="254.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.37%)</title><rect x="739.9" y="451.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.9" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.37%)</title><rect x="739.9" y="435.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.9" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="739.9" y="419.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.9" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="739.9" y="403.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.9" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.37%)</title><rect x="739.9" y="387.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="742.9" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.37%)</title><rect x="739.9" y="371.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 1.11%)</title><rect x="744.2" y="659.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 1.11%)</title><rect x="744.2" y="643.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.37%)</title><rect x="744.2" y="627.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.37%)</title><rect x="744.2" y="611.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.37%)</title><rect x="744.2" y="595.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl$$Lambda$51/215478702.apply (1 samples, 0.37%)</title><rect x="744.2" y="579.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl.lambda$initStreams$1 (1 samples, 0.37%)</title><rect x="744.2" y="563.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ProcessImpl$ProcessPipeOutputStream.processExited (1 samples, 0.37%)</title><rect x="744.2" y="547.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.2" y="558.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.close (1 samples, 0.37%)</title><rect x="744.2" y="531.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.2" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="744.2" y="515.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="747.2" y="526.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="499.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="747.2" y="510.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="483.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="747.2" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="467.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="747.2" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="451.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="747.2" y="462.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="435.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="747.2" y="446.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="419.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="747.2" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="403.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="747.2" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="744.2" y="387.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="747.2" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.37%)</title><rect x="744.2" y="371.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="747.2" y="382.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.37%)</title><rect x="744.2" y="355.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="747.2" y="366.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.74%)</title><rect x="748.6" y="627.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.6" y="638.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.74%)</title><rect x="748.6" y="611.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.74%)</title><rect x="748.6" y="595.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.74%)</title><rect x="748.6" y="579.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.6" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.74%)</title><rect x="748.6" y="563.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.74%)</title><rect x="748.6" y="547.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.6" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.74%)</title><rect x="748.6" y="531.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.74%)</title><rect x="748.6" y="515.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.74%)</title><rect x="748.6" y="499.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.74%)</title><rect x="748.6" y="483.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (2 samples, 0.74%)</title><rect x="748.6" y="467.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (2 samples, 0.74%)</title><rect x="748.6" y="451.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (2 samples, 0.74%)</title><rect x="748.6" y="435.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (2 samples, 0.74%)</title><rect x="748.6" y="419.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.6" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodExit (2 samples, 0.74%)</title><rect x="748.6" y="403.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.6" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.of (2 samples, 0.74%)</title><rect x="748.6" y="387.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.6" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithExceptionHandler.&lt;init&gt; (1 samples, 0.37%)</title><rect x="748.6" y="371.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.6" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.&lt;init&gt; (1 samples, 0.37%)</title><rect x="748.6" y="355.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.6" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.37%)</title><rect x="748.6" y="339.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.6" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.37%)</title><rect x="748.6" y="323.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.6" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference$Factory.make (1 samples, 0.37%)</title><rect x="748.6" y="307.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.6" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription$Loadable.load (1 samples, 0.37%)</title><rect x="748.6" y="291.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.6" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationDescription$AnnotationInvocationHandler.of (1 samples, 0.37%)</title><rect x="748.6" y="275.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.6" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.37%)</title><rect x="748.6" y="259.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.6" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.37%)</title><rect x="748.6" y="243.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.6" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.37%)</title><rect x="748.6" y="227.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.37%)</title><rect x="748.6" y="211.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.37%)</title><rect x="748.6" y="195.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.6" y="206.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="748.6" y="179.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="751.6" y="190.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="748.6" y="163.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="751.6" y="174.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="748.6" y="147.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="751.6" y="158.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="748.6" y="131.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="751.6" y="142.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.37%)</title><rect x="748.6" y="115.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="751.6" y="126.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit$WithoutExceptionHandler.&lt;init&gt; (1 samples, 0.37%)</title><rect x="753.0" y="371.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.0" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.&lt;init&gt; (1 samples, 0.37%)</title><rect x="753.0" y="355.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.0" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.37%)</title><rect x="753.0" y="339.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.0" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$AbstractBase.filter (1 samples, 0.37%)</title><rect x="753.0" y="323.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.0" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue.filter (1 samples, 0.37%)</title><rect x="753.0" y="307.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.0" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationValue$ForTypeValue.doResolve (1 samples, 0.37%)</title><rect x="753.0" y="291.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.0" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.37%)</title><rect x="753.0" y="275.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="756.0" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.37%)</title><rect x="753.0" y="259.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.0" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.37%)</title><rect x="753.0" y="243.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.0" y="254.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.37%)</title><rect x="753.0" y="227.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.0" y="238.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.37%)</title><rect x="753.0" y="211.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.0" y="222.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="753.0" y="195.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.0" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="753.0" y="179.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.0" y="190.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.37%)</title><rect x="753.0" y="163.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.0" y="174.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readClass (1 samples, 0.37%)</title><rect x="753.0" y="147.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.0" y="158.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readStringish (1 samples, 0.37%)</title><rect x="753.0" y="131.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.0" y="142.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.37%)</title><rect x="753.0" y="115.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.0" y="126.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (5 samples, 1.85%)</title><rect x="757.3" y="899.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.3" y="910.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (5 samples, 1.85%)</title><rect x="757.3" y="883.0" width="21.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.3" y="894.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;init&gt; (1 samples, 0.37%)</title><rect x="757.3" y="867.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.3" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Monitoring.newTimer (1 samples, 0.37%)</title><rect x="757.3" y="851.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.37%)</title><rect x="757.3" y="835.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.3" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.37%)</title><rect x="757.3" y="819.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.3" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogramFactory.newHistogram (1 samples, 0.37%)</title><rect x="757.3" y="803.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/histogram/DDSketchHistogram.&lt;init&gt; (1 samples, 0.37%)</title><rect x="757.3" y="787.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.3" y="798.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="757.3" y="771.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="760.3" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="757.3" y="755.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="760.3" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="757.3" y="739.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="760.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.37%)</title><rect x="757.3" y="723.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="760.3" y="734.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="757.3" y="707.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="760.3" y="718.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="757.3" y="691.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="760.3" y="702.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="757.3" y="675.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="760.3" y="686.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.37%)</title><rect x="757.3" y="659.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="760.3" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.74%)</title><rect x="761.7" y="867.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.7" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.74%)</title><rect x="761.7" y="851.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.7" y="862.0"></text>
</g>
<g>
<title>okhttp3/OkHttpClient$Builder.&lt;init&gt; (2 samples, 0.74%)</title><rect x="761.7" y="835.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.7" y="846.0"></text>
</g>
<g>
<title>okhttp3/ConnectionPool.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="761.7" y="819.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.7" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="761.7" y="803.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="761.7" y="787.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.37%)</title><rect x="761.7" y="771.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.37%)</title><rect x="761.7" y="755.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.37%)</title><rect x="761.7" y="739.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.7" y="750.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.37%)</title><rect x="761.7" y="723.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.37%)</title><rect x="761.7" y="707.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.37%)</title><rect x="761.7" y="691.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.7" y="702.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.37%)</title><rect x="761.7" y="675.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.7" y="686.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.37%)</title><rect x="761.7" y="659.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.37%)</title><rect x="761.7" y="643.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="761.7" y="627.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="764.7" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="761.7" y="611.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="761.7" y="595.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="761.7" y="579.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.7" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.37%)</title><rect x="761.7" y="563.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.7" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="761.7" y="547.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.7" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.37%)</title><rect x="761.7" y="531.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="761.7" y="515.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="761.7" y="499.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.7" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.37%)</title><rect x="761.7" y="483.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.7" y="494.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.37%)</title><rect x="761.7" y="467.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.7" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="761.7" y="451.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.7" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="761.7" y="435.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.7" y="446.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.37%)</title><rect x="761.7" y="419.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.7" y="430.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.37%)</title><rect x="761.7" y="403.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.7" y="414.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.37%)</title><rect x="761.7" y="387.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.7" y="398.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.37%)</title><rect x="761.7" y="371.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.7" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.37%)</title><rect x="761.7" y="355.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.7" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.37%)</title><rect x="761.7" y="339.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.7" y="350.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.37%)</title><rect x="761.7" y="323.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.7" y="334.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$NameMatcher.matches (1 samples, 0.37%)</title><rect x="761.7" y="307.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.7" y="318.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.37%)</title><rect x="761.7" y="291.0" width="4.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="764.7" y="302.0"></text>
</g>
<g>
<title>okhttp3/OkHttpClient.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="766.1" y="819.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.1" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="766.1" y="803.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="769.1" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="766.1" y="787.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="769.1" y="798.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="766.1" y="771.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="769.1" y="782.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.37%)</title><rect x="766.1" y="755.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="769.1" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="766.1" y="739.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="769.1" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="766.1" y="723.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="769.1" y="734.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="766.1" y="707.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="769.1" y="718.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.37%)</title><rect x="766.1" y="691.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="769.1" y="702.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="766.1" y="675.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="769.1" y="686.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl.get (2 samples, 0.74%)</title><rect x="770.4" y="867.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.4" y="878.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.parse (2 samples, 0.74%)</title><rect x="770.4" y="851.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.4" y="862.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.canonicalizeHost (1 samples, 0.37%)</title><rect x="770.4" y="835.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.4" y="846.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.canonicalizeHost (1 samples, 0.37%)</title><rect x="770.4" y="819.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.4" y="830.0"></text>
</g>
<g>
<title>java/net/IDN.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="770.4" y="803.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.4" y="814.0"></text>
</g>
<g>
<title>sun/net/idn/StringPrep.&lt;init&gt; (1 samples, 0.37%)</title><rect x="770.4" y="787.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.4" y="798.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacter.getUnicodeVersion (1 samples, 0.37%)</title><rect x="770.4" y="771.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.4" y="782.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="770.4" y="755.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.4" y="766.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;init&gt; (1 samples, 0.37%)</title><rect x="770.4" y="739.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.4" y="750.0"></text>
</g>
<g>
<title>sun/text/normalizer/Trie2_16.createFromSerialized (1 samples, 0.37%)</title><rect x="770.4" y="723.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.4" y="734.0"></text>
</g>
<g>
<title>sun/text/normalizer/Trie2.createFromSerialized (1 samples, 0.37%)</title><rect x="770.4" y="707.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getChar (1 samples, 0.37%)</title><rect x="770.4" y="691.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.4" y="702.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="774.8" y="835.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.8" y="846.0"></text>
</g>
<g>
<title>okhttp3/ResponseBody.create (1 samples, 0.37%)</title><rect x="774.8" y="819.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.8" y="830.0"></text>
</g>
<g>
<title>okio/Buffer.write (1 samples, 0.37%)</title><rect x="774.8" y="803.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.8" y="814.0"></text>
</g>
<g>
<title>okio/Buffer.write (1 samples, 0.37%)</title><rect x="774.8" y="787.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.8" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="774.8" y="771.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.8" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="774.8" y="755.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.8" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="774.8" y="739.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.8" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="774.8" y="723.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.8" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="774.8" y="707.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.8" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="774.8" y="691.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.8" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="774.8" y="675.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="777.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="774.8" y="659.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.8" y="670.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.37%)</title><rect x="774.8" y="643.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.8" y="654.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.37%)</title><rect x="774.8" y="627.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.8" y="638.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.37%)</title><rect x="774.8" y="611.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="774.8" y="595.0" width="4.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="777.8" y="606.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.37%)</title><rect x="774.8" y="579.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="777.8" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.createScopeEventFactory (1 samples, 0.37%)</title><rect x="779.2" y="899.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.2" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="779.2" y="883.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.2" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="779.2" y="867.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.2" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="779.2" y="851.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.2" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="779.2" y="835.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.2" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="779.2" y="819.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.2" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="779.2" y="803.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.2" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="779.2" y="787.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.2" y="798.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="779.2" y="771.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.2" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="779.2" y="755.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="779.2" y="739.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.2" y="750.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.37%)</title><rect x="779.2" y="723.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.2" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.createStatsDClient (9 samples, 3.33%)</title><rect x="783.6" y="899.0" width="39.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.6" y="910.0">dat..</text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (8 samples, 2.96%)</title><rect x="783.6" y="883.0" width="34.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.6" y="894.0">co..</text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (8 samples, 2.96%)</title><rect x="783.6" y="867.0" width="34.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.6" y="878.0">co..</text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (7 samples, 2.59%)</title><rect x="783.6" y="851.0" width="30.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.6" y="862.0">co..</text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.submit (1 samples, 0.37%)</title><rect x="783.6" y="835.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (1 samples, 0.37%)</title><rect x="783.6" y="819.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.37%)</title><rect x="783.6" y="803.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.6" y="814.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.37%)</title><rect x="783.6" y="787.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.6" y="798.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.37%)</title><rect x="783.6" y="771.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.37%)</title><rect x="783.6" y="755.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="783.6" y="739.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.6" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="783.6" y="723.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="783.6" y="707.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="783.6" y="691.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.37%)</title><rect x="783.6" y="675.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="783.6" y="659.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.37%)</title><rect x="783.6" y="643.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="783.6" y="627.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.6" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.37%)</title><rect x="783.6" y="611.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.6" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.37%)</title><rect x="783.6" y="595.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.6" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.37%)</title><rect x="783.6" y="579.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.6" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.37%)</title><rect x="783.6" y="563.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.6" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.37%)</title><rect x="783.6" y="547.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.6" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.37%)</title><rect x="783.6" y="531.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.6" y="542.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.37%)</title><rect x="783.6" y="515.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.6" y="526.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.37%)</title><rect x="783.6" y="499.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.37%)</title><rect x="783.6" y="483.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.37%)</title><rect x="783.6" y="467.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.37%)</title><rect x="783.6" y="451.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.37%)</title><rect x="783.6" y="435.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="786.6" y="446.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.37%)</title><rect x="783.6" y="419.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.6" y="430.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.37%)</title><rect x="783.6" y="403.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.6" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.37%)</title><rect x="783.6" y="387.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="786.6" y="398.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.37%)</title><rect x="783.6" y="371.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.6" y="382.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.37%)</title><rect x="783.6" y="355.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.6" y="366.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.37%)</title><rect x="783.6" y="339.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.6" y="350.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.37%)</title><rect x="783.6" y="323.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.6" y="334.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.37%)</title><rect x="783.6" y="307.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.6" y="318.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.37%)</title><rect x="783.6" y="291.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.6" y="302.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.37%)</title><rect x="783.6" y="275.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.6" y="286.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.37%)</title><rect x="783.6" y="259.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.37%)</title><rect x="783.6" y="243.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (1 samples, 0.37%)</title><rect x="783.6" y="227.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.normalizeAndCheck (1 samples, 0.37%)</title><rect x="783.6" y="211.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.newSingleThreadExecutor (6 samples, 2.22%)</title><rect x="787.9" y="835.0" width="26.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.9" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="787.9" y="819.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.9" y="830.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.37%)</title><rect x="787.9" y="803.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.9" y="814.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.37%)</title><rect x="787.9" y="787.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.37%)</title><rect x="787.9" y="771.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="787.9" y="755.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.9" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="787.9" y="739.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.9" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="787.9" y="723.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.9" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="787.9" y="707.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.9" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.37%)</title><rect x="787.9" y="691.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.9" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="787.9" y="675.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.9" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.37%)</title><rect x="787.9" y="659.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="787.9" y="643.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="787.9" y="627.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.9" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.37%)</title><rect x="787.9" y="611.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.9" y="622.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.37%)</title><rect x="787.9" y="595.0" width="4.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="790.9" y="606.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (5 samples, 1.85%)</title><rect x="792.3" y="819.0" width="21.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.3" y="830.0">s..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (5 samples, 1.85%)</title><rect x="792.3" y="803.0" width="21.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.3" y="814.0">s..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (5 samples, 1.85%)</title><rect x="792.3" y="787.0" width="21.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.3" y="798.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (5 samples, 1.85%)</title><rect x="792.3" y="771.0" width="21.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.3" y="782.0">n..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 1.85%)</title><rect x="792.3" y="755.0" width="21.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.3" y="766.0">j..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (5 samples, 1.85%)</title><rect x="792.3" y="739.0" width="21.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.3" y="750.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (5 samples, 1.85%)</title><rect x="792.3" y="723.0" width="21.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.3" y="734.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (5 samples, 1.85%)</title><rect x="792.3" y="707.0" width="21.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.3" y="718.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (5 samples, 1.85%)</title><rect x="792.3" y="691.0" width="21.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.3" y="702.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (5 samples, 1.85%)</title><rect x="792.3" y="675.0" width="21.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.3" y="686.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="792.3" y="659.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.3" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.37%)</title><rect x="792.3" y="643.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.3" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.37%)</title><rect x="792.3" y="627.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.3" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.37%)</title><rect x="792.3" y="611.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.3" y="622.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.put (1 samples, 0.37%)</title><rect x="792.3" y="595.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.3" y="606.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.37%)</title><rect x="792.3" y="579.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.3" y="590.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.37%)</title><rect x="792.3" y="563.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.3" y="574.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterWrite (1 samples, 0.37%)</title><rect x="792.3" y="547.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.3" y="558.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleAfterWrite (1 samples, 0.37%)</title><rect x="792.3" y="531.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.3" y="542.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (1 samples, 0.37%)</title><rect x="792.3" y="515.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.3" y="526.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (1 samples, 0.37%)</title><rect x="792.3" y="499.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.3" y="510.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.37%)</title><rect x="792.3" y="483.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.3" y="494.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.37%)</title><rect x="792.3" y="467.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.offer (1 samples, 0.37%)</title><rect x="792.3" y="451.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.37%)</title><rect x="792.3" y="435.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.37%)</title><rect x="792.3" y="419.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.37%)</title><rect x="792.3" y="403.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.37%)</title><rect x="792.3" y="387.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.3" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (4 samples, 1.48%)</title><rect x="796.7" y="659.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.37%)</title><rect x="796.7" y="643.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.37%)</title><rect x="796.7" y="627.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.37%)</title><rect x="796.7" y="611.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.37%)</title><rect x="796.7" y="595.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.37%)</title><rect x="796.7" y="579.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.7" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.asErasure (1 samples, 0.37%)</title><rect x="796.7" y="563.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable.getUpperBounds (1 samples, 0.37%)</title><rect x="796.7" y="547.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.74%)</title><rect x="801.0" y="643.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (2 samples, 0.74%)</title><rect x="801.0" y="627.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default$1.resolve (1 samples, 0.37%)</title><rect x="801.0" y="611.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter.&lt;init&gt; (1 samples, 0.37%)</title><rect x="801.0" y="595.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.0" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (1 samples, 0.37%)</title><rect x="801.0" y="579.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.0" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.&lt;init&gt; (1 samples, 0.37%)</title><rect x="801.0" y="563.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantUtf8 (1 samples, 0.37%)</title><rect x="801.0" y="547.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.0" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable$Entry.&lt;init&gt; (1 samples, 0.37%)</title><rect x="801.0" y="531.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.0" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Symbol.&lt;init&gt; (1 samples, 0.37%)</title><rect x="801.0" y="515.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.0" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="805.4" y="611.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="805.4" y="595.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.37%)</title><rect x="805.4" y="579.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.37%)</title><rect x="805.4" y="563.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (1 samples, 0.37%)</title><rect x="805.4" y="547.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.4" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.37%)</title><rect x="805.4" y="531.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.4" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.37%)</title><rect x="805.4" y="515.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.4" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.37%)</title><rect x="805.4" y="499.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.37%)</title><rect x="805.4" y="483.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.4" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="805.4" y="467.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.4" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="805.4" y="451.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.4" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.37%)</title><rect x="805.4" y="435.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.4" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.37%)</title><rect x="805.4" y="419.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.4" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.apply (1 samples, 0.37%)</title><rect x="805.4" y="403.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.4" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithDiscardedEnterType.doApply (1 samples, 0.37%)</title><rect x="805.4" y="387.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.4" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getStackSize (1 samples, 0.37%)</title><rect x="805.4" y="371.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.4" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (1 samples, 0.37%)</title><rect x="809.8" y="643.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.returns (1 samples, 0.37%)</title><rect x="809.8" y="627.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.returns (1 samples, 0.37%)</title><rect x="809.8" y="611.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.erasure (1 samples, 0.37%)</title><rect x="809.8" y="595.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.8" y="606.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticStatsDAddressResolution (1 samples, 0.37%)</title><rect x="814.1" y="851.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.1" y="862.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticAddressResolution (1 samples, 0.37%)</title><rect x="814.1" y="835.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.1" y="846.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.37%)</title><rect x="814.1" y="819.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.1" y="830.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.37%)</title><rect x="814.1" y="803.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.1" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.37%)</title><rect x="814.1" y="787.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.1" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.37%)</title><rect x="814.1" y="771.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.1" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.37%)</title><rect x="814.1" y="755.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.1" y="766.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.37%)</title><rect x="814.1" y="739.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.1" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (1 samples, 0.37%)</title><rect x="814.1" y="723.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.1" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAddressesFromNameService (1 samples, 0.37%)</title><rect x="814.1" y="707.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.1" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress$PlatformNameService.lookupAllHostAddr (1 samples, 0.37%)</title><rect x="814.1" y="691.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="817.1" y="702.0"></text>
</g>
<g>
<title>java/net/Inet6AddressImpl.lookupAllHostAddr (1 samples, 0.37%)</title><rect x="814.1" y="675.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.1" y="686.0"></text>
</g>
<g>
<title>Java_java_net_Inet6AddressImpl_lookupAllHostAddr (1 samples, 0.37%)</title><rect x="814.1" y="659.0" width="4.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="817.1" y="670.0"></text>
</g>
<g>
<title>initInetAddressIDs (1 samples, 0.37%)</title><rect x="814.1" y="643.0" width="4.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="817.1" y="654.0"></text>
</g>
<g>
<title>Java_java_net_Inet4Address_init (1 samples, 0.37%)</title><rect x="814.1" y="627.0" width="4.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="817.1" y="638.0"></text>
</g>
<g>
<title>jni_FindClass (1 samples, 0.37%)</title><rect x="814.1" y="611.0" width="4.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="817.1" y="622.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.37%)</title><rect x="814.1" y="595.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="817.1" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="814.1" y="579.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="817.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="814.1" y="563.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="817.1" y="574.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.37%)</title><rect x="814.1" y="547.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="817.1" y="558.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 0.37%)</title><rect x="814.1" y="531.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="817.1" y="542.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.37%)</title><rect x="814.1" y="515.0" width="4.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="817.1" y="526.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.37%)</title><rect x="814.1" y="499.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="817.1" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="814.1" y="483.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="817.1" y="494.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.37%)</title><rect x="814.1" y="467.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="817.1" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="818.5" y="883.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="818.5" y="867.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.37%)</title><rect x="818.5" y="851.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.37%)</title><rect x="818.5" y="835.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.5" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.logStatus (1 samples, 0.37%)</title><rect x="822.9" y="899.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.info (1 samples, 0.37%)</title><rect x="822.9" y="883.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLogger.formatLog (1 samples, 0.37%)</title><rect x="822.9" y="867.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.9" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="822.9" y="851.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="825.9" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="822.9" y="835.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="825.9" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="819.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.9" y="830.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="803.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="825.9" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="787.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.9" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="771.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="825.9" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="755.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="825.9" y="766.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="739.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.9" y="750.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="723.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="825.9" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="707.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="825.9" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="822.9" y="691.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.9" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="675.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="825.9" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="659.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="825.9" y="670.0"></text>
</g>
<g>
<title>ClassFileParser::copy_localvariable_table(ConstMethod const*, int, unsigned short*, void const**, int, unsigned short*, void const**, Thread*) (1 samples, 0.37%)</title><rect x="822.9" y="643.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.9" y="654.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.37%)</title><rect x="822.9" y="627.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="825.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="827.3" y="899.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="827.3" y="883.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.37%)</title><rect x="827.3" y="867.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="827.3" y="851.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.3" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="827.3" y="835.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.37%)</title><rect x="827.3" y="819.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.37%)</title><rect x="827.3" y="803.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.37%)</title><rect x="827.3" y="787.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.3" y="798.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.37%)</title><rect x="827.3" y="771.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.3" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.37%)</title><rect x="827.3" y="755.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.3" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.37%)</title><rect x="827.3" y="739.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.3" y="750.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.37%)</title><rect x="827.3" y="723.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.3" y="734.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.37%)</title><rect x="827.3" y="707.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.37%)</title><rect x="827.3" y="691.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="827.3" y="675.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.3" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="827.3" y="659.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="827.3" y="643.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.37%)</title><rect x="827.3" y="627.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.37%)</title><rect x="827.3" y="611.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.37%)</title><rect x="827.3" y="595.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.37%)</title><rect x="827.3" y="579.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="827.3" y="563.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="827.3" y="547.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.3" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.37%)</title><rect x="827.3" y="531.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.3" y="542.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.37%)</title><rect x="827.3" y="515.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Disjunction.matches (1 samples, 0.37%)</title><rect x="827.3" y="499.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.3" y="510.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.37%)</title><rect x="827.3" y="483.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.3" y="494.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.37%)</title><rect x="827.3" y="467.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.3" y="478.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.37%)</title><rect x="827.3" y="451.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.3" y="462.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.37%)</title><rect x="827.3" y="435.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.3" y="446.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.37%)</title><rect x="827.3" y="419.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.3" y="430.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.37%)</title><rect x="827.3" y="403.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.3" y="414.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.37%)</title><rect x="827.3" y="387.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.3" y="398.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="827.3" y="371.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.3" y="382.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="827.3" y="355.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.3" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.37%)</title><rect x="827.3" y="339.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.3" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.37%)</title><rect x="827.3" y="323.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.3" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.37%)</title><rect x="827.3" y="307.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.3" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.37%)</title><rect x="827.3" y="291.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.3" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.37%)</title><rect x="827.3" y="275.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.3" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.37%)</title><rect x="827.3" y="259.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.3" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.37%)</title><rect x="827.3" y="243.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.3" y="254.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.37%)</title><rect x="827.3" y="227.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.3" y="238.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$LazyTokenList.get (1 samples, 0.37%)</title><rect x="827.3" y="211.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.3" y="222.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable.toGenericType (1 samples, 0.37%)</title><rect x="827.3" y="195.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.3" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/description/TypeVariableSource$AbstractBase.findVariable (1 samples, 0.37%)</title><rect x="827.3" y="179.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.3" y="190.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (1 samples, 0.37%)</title><rect x="827.3" y="163.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.3" y="174.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startDatadogAgent (79 samples, 29.26%)</title><rect x="831.6" y="1043.0" width="345.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.6" y="1054.0">datadog/trace/bootstrap/Agent.startDatadogAgent</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (79 samples, 29.26%)</title><rect x="831.6" y="1027.0" width="345.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.6" y="1038.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (79 samples, 29.26%)</title><rect x="831.6" y="1011.0" width="345.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.6" y="1022.0">jdk/internal/reflect/DelegatingMethodAccessorIm..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (79 samples, 29.26%)</title><rect x="831.6" y="995.0" width="345.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.6" y="1006.0">jdk/internal/reflect/NativeMethodAccessorImpl.i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (79 samples, 29.26%)</title><rect x="831.6" y="979.0" width="345.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.6" y="990.0">jdk/internal/reflect/NativeMethodAccessorImpl.i..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.&lt;clinit&gt; (5 samples, 1.85%)</title><rect x="831.6" y="963.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.6" y="974.0">d..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.&lt;clinit&gt; (4 samples, 1.48%)</title><rect x="831.6" y="947.0" width="17.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.&lt;init&gt; (4 samples, 1.48%)</title><rect x="831.6" y="931.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.6" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build (1 samples, 0.37%)</title><rect x="831.6" y="915.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.6" y="926.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.37%)</title><rect x="831.6" y="899.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.6" y="910.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.37%)</title><rect x="831.6" y="883.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.6" y="894.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentHashMapV8.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="831.6" y="867.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredField (1 samples, 0.37%)</title><rect x="831.6" y="851.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredFields (1 samples, 0.37%)</title><rect x="831.6" y="835.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields0 (1 samples, 0.37%)</title><rect x="831.6" y="819.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.6" y="830.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredFields (1 samples, 0.37%)</title><rect x="831.6" y="803.0" width="4.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="834.6" y="814.0"></text>
</g>
<g>
<title>Reflection::new_field(fieldDescriptor*, Thread*) (1 samples, 0.37%)</title><rect x="831.6" y="787.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="834.6" y="798.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="831.6" y="771.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="834.6" y="782.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.37%)</title><rect x="831.6" y="755.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="834.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (2 samples, 0.74%)</title><rect x="836.0" y="915.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.0" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache$Provider.newWeakCache (2 samples, 0.74%)</title><rect x="836.0" y="899.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.0" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.&lt;init&gt; (2 samples, 0.74%)</title><rect x="836.0" y="883.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.0" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.build (2 samples, 0.74%)</title><rect x="836.0" y="867.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.0" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (2 samples, 0.74%)</title><rect x="836.0" y="851.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.0" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (2 samples, 0.74%)</title><rect x="836.0" y="835.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.0" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache (2 samples, 0.74%)</title><rect x="836.0" y="819.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.0" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.74%)</title><rect x="836.0" y="803.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.74%)</title><rect x="836.0" y="787.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.74%)</title><rect x="836.0" y="771.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (2 samples, 0.74%)</title><rect x="836.0" y="755.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.0" y="766.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="836.0" y="739.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Runtime.availableProcessors (1 samples, 0.37%)</title><rect x="836.0" y="723.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="836.0" y="707.0" width="4.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="839.0" y="718.0"></text>
</g>
<g>
<title>__GI__IO_file_doallocate (1 samples, 0.37%)</title><rect x="836.0" y="691.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="839.0" y="702.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.&lt;init&gt; (1 samples, 0.37%)</title><rect x="840.4" y="739.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.4" y="750.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.getTicker (1 samples, 0.37%)</title><rect x="840.4" y="723.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="840.4" y="707.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.4" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="840.4" y="691.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.4" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="840.4" y="675.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.4" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="840.4" y="659.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.4" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="840.4" y="643.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.4" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="840.4" y="627.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.4" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="840.4" y="611.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.4" y="622.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="840.4" y="595.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="840.4" y="579.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.4" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="840.4" y="563.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.4" y="574.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.37%)</title><rect x="840.4" y="547.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="843.4" y="558.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.37%)</title><rect x="840.4" y="531.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="843.4" y="542.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.37%)</title><rect x="840.4" y="515.0" width="4.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="843.4" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.37%)</title><rect x="840.4" y="499.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="843.4" y="510.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="840.4" y="483.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="843.4" y="494.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="840.4" y="467.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="843.4" y="478.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="840.4" y="451.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="843.4" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.37%)</title><rect x="840.4" y="435.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="843.4" y="446.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="844.7" y="915.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="847.7" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="844.7" y="899.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.7" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="844.7" y="883.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.7" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="844.7" y="867.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.7" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="844.7" y="851.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.7" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="844.7" y="835.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.7" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="844.7" y="819.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.7" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="844.7" y="803.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.7" y="814.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="844.7" y="787.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="844.7" y="771.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="844.7" y="755.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="844.7" y="739.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="847.7" y="750.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.37%)</title><rect x="844.7" y="723.0" width="4.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="847.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="849.1" y="947.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.1" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="849.1" y="931.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.1" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.37%)</title><rect x="849.1" y="915.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.1" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="849.1" y="899.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.1" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="849.1" y="883.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.37%)</title><rect x="849.1" y="867.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.37%)</title><rect x="849.1" y="851.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.1" y="862.0"></text>
</g>
<g>
<title>JVM_FindLoadedClass (1 samples, 0.37%)</title><rect x="849.1" y="835.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="852.1" y="846.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.37%)</title><rect x="849.1" y="819.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="852.1" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (74 samples, 27.41%)</title><rect x="853.5" y="963.0" width="323.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="974.0">datadog/trace/agent/tooling/AgentInstaller.i..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (74 samples, 27.41%)</title><rect x="853.5" y="947.0" width="323.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.5" y="958.0">datadog/trace/agent/tooling/AgentInstaller.i..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.instrument (4 samples, 1.48%)</title><rect x="853.5" y="931.0" width="17.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.5" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.applyInstrumentationTransformers (1 samples, 0.37%)</title><rect x="853.5" y="915.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.&lt;init&gt; (1 samples, 0.37%)</title><rect x="853.5" y="899.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.5" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="853.5" y="883.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.getOnly (1 samples, 0.37%)</title><rect x="853.5" y="867.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$Explicit.get (1 samples, 0.37%)</title><rect x="853.5" y="851.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodList$Explicit.get (1 samples, 0.37%)</title><rect x="853.5" y="835.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.5" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.37%)</title><rect x="853.5" y="819.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/RunnableFutureInstrumentation.typeMatcher (1 samples, 0.37%)</title><rect x="857.9" y="915.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/java/concurrent/RunnableFutureInstrumentation$1.&lt;init&gt; (1 samples, 0.37%)</title><rect x="857.9" y="899.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.9" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.37%)</title><rect x="857.9" y="883.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="860.9" y="894.0"></text>
</g>
<g>
<title>Method::build_method_counters(Method*, Thread*) (1 samples, 0.37%)</title><rect x="857.9" y="867.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="860.9" y="878.0"></text>
</g>
<g>
<title>MethodCounters::allocate(methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="857.9" y="851.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="860.9" y="862.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/reactor/core/TaskClassInitDisableInstrumentation.typeMatcher (1 samples, 0.37%)</title><rect x="862.2" y="915.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.namedOneOf (1 samples, 0.37%)</title><rect x="862.2" y="899.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.2" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="862.2" y="883.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.2" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="862.2" y="867.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.2" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="862.2" y="851.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.2" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="862.2" y="835.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.2" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="862.2" y="819.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.2" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="862.2" y="803.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.2" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="862.2" y="787.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="862.2" y="771.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.2" y="782.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.37%)</title><rect x="862.2" y="755.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.2" y="766.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.37%)</title><rect x="862.2" y="739.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.2" y="750.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.37%)</title><rect x="862.2" y="723.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="862.2" y="707.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="865.2" y="718.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.37%)</title><rect x="862.2" y="691.0" width="4.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="865.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Matchable$AbstractBase.and (1 samples, 0.37%)</title><rect x="866.6" y="915.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="869.6" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Matchable$AbstractBase.and (1 samples, 0.37%)</title><rect x="866.6" y="899.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.6" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Matchable$AbstractBase.and (1 samples, 0.37%)</title><rect x="866.6" y="883.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transforming.and (1 samples, 0.37%)</title><rect x="866.6" y="867.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transforming.and (1 samples, 0.37%)</title><rect x="866.6" y="851.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transforming.&lt;init&gt; (1 samples, 0.37%)</title><rect x="866.6" y="835.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.6" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="871.0" y="931.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.0" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="871.0" y="915.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.0" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="871.0" y="899.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="874.0" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="871.0" y="883.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.0" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="871.0" y="867.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.0" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="871.0" y="851.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.0" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="871.0" y="835.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.0" y="846.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="871.0" y="819.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="871.0" y="803.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="871.0" y="787.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="874.0" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.37%)</title><rect x="871.0" y="771.0" width="4.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="874.0" y="782.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.37%)</title><rect x="871.0" y="755.0" width="4.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="874.0" y="766.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.37%)</title><rect x="871.0" y="739.0" width="4.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="874.0" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.37%)</title><rect x="871.0" y="723.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="874.0" y="734.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="871.0" y="707.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="874.0" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="871.0" y="691.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="874.0" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="871.0" y="675.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="874.0" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.37%)</title><rect x="871.0" y="659.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="874.0" y="670.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.37%)</title><rect x="871.0" y="643.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="874.0" y="654.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (17 samples, 6.30%)</title><rect x="875.3" y="931.0" width="74.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.3" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (17 samples, 6.30%)</title><rect x="875.3" y="915.0" width="74.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.3" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (17 samples, 6.30%)</title><rect x="875.3" y="899.0" width="74.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.3" y="910.0">java/uti..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (17 samples, 6.30%)</title><rect x="875.3" y="883.0" width="74.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.3" y="894.0">java/uti..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (7 samples, 2.59%)</title><rect x="875.3" y="867.0" width="30.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.3" y="878.0">ja..</text>
</g>
<g>
<title>java/lang/Class.forName (7 samples, 2.59%)</title><rect x="875.3" y="851.0" width="30.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.3" y="862.0">ja..</text>
</g>
<g>
<title>java/lang/Class.forName0 (7 samples, 2.59%)</title><rect x="875.3" y="835.0" width="30.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.3" y="846.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (7 samples, 2.59%)</title><rect x="875.3" y="819.0" width="30.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.3" y="830.0">ja..</text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (7 samples, 2.59%)</title><rect x="875.3" y="803.0" width="30.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.3" y="814.0">da..</text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (7 samples, 2.59%)</title><rect x="875.3" y="787.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.3" y="798.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 2.59%)</title><rect x="875.3" y="771.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.3" y="782.0">ja..</text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.37%)</title><rect x="875.3" y="755.0" width="4.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="878.3" y="766.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.37%)</title><rect x="875.3" y="739.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="878.3" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.37%)</title><rect x="875.3" y="723.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="878.3" y="734.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.37%)</title><rect x="875.3" y="707.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="878.3" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.37%)</title><rect x="875.3" y="691.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="878.3" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.37%)</title><rect x="875.3" y="675.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="878.3" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (6 samples, 2.22%)</title><rect x="879.7" y="755.0" width="26.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.7" y="766.0">j..</text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (6 samples, 2.22%)</title><rect x="879.7" y="739.0" width="26.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="882.7" y="750.0">j..</text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (6 samples, 2.22%)</title><rect x="879.7" y="723.0" width="26.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.7" y="734.0">j..</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (4 samples, 1.48%)</title><rect x="879.7" y="707.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (4 samples, 1.48%)</title><rect x="879.7" y="691.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (4 samples, 1.48%)</title><rect x="879.7" y="675.0" width="17.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.7" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (4 samples, 1.48%)</title><rect x="879.7" y="659.0" width="17.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="882.7" y="670.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (4 samples, 1.48%)</title><rect x="879.7" y="643.0" width="17.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="882.7" y="654.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (4 samples, 1.48%)</title><rect x="879.7" y="627.0" width="17.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="882.7" y="638.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (4 samples, 1.48%)</title><rect x="879.7" y="611.0" width="17.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="882.7" y="622.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (4 samples, 1.48%)</title><rect x="879.7" y="595.0" width="17.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="882.7" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (3 samples, 1.11%)</title><rect x="879.7" y="579.0" width="13.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="882.7" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (3 samples, 1.11%)</title><rect x="879.7" y="563.0" width="13.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="882.7" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.74%)</title><rect x="879.7" y="547.0" width="8.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="882.7" y="558.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.37%)</title><rect x="884.1" y="531.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="887.1" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.37%)</title><rect x="888.4" y="547.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="891.4" y="558.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.37%)</title><rect x="888.4" y="531.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="891.4" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.37%)</title><rect x="888.4" y="515.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="891.4" y="526.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.37%)</title><rect x="888.4" y="499.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="891.4" y="510.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, bool) (1 samples, 0.37%)</title><rect x="892.8" y="579.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="895.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (2 samples, 0.74%)</title><rect x="897.2" y="707.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.2" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.37%)</title><rect x="897.2" y="691.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.2" y="702.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.37%)</title><rect x="901.6" y="691.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.6" y="702.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.37%)</title><rect x="901.6" y="675.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.6" y="686.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.37%)</title><rect x="901.6" y="659.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="901.6" y="643.0" width="4.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="904.6" y="654.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.37%)</title><rect x="901.6" y="627.0" width="4.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="904.6" y="638.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (10 samples, 3.70%)</title><rect x="905.9" y="867.0" width="43.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.9" y="878.0">java..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 3.70%)</title><rect x="905.9" y="851.0" width="43.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.9" y="862.0">java..</text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (10 samples, 3.70%)</title><rect x="905.9" y="835.0" width="43.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.9" y="846.0">java..</text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (10 samples, 3.70%)</title><rect x="905.9" y="819.0" width="43.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.9" y="830.0">java..</text>
</g>
<g>
<title>java/lang/Class.getConstructor (10 samples, 3.70%)</title><rect x="905.9" y="803.0" width="43.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.9" y="814.0">java..</text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (10 samples, 3.70%)</title><rect x="905.9" y="787.0" width="43.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.9" y="798.0">java..</text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (10 samples, 3.70%)</title><rect x="905.9" y="771.0" width="43.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.9" y="782.0">java..</text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (10 samples, 3.70%)</title><rect x="905.9" y="755.0" width="43.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.9" y="766.0">java..</text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (10 samples, 3.70%)</title><rect x="905.9" y="739.0" width="43.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="908.9" y="750.0">JVM_..</text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (10 samples, 3.70%)</title><rect x="905.9" y="723.0" width="43.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="908.9" y="734.0">get_..</text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (10 samples, 3.70%)</title><rect x="905.9" y="707.0" width="43.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="908.9" y="718.0">Inst..</text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (2 samples, 0.74%)</title><rect x="905.9" y="691.0" width="8.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="908.9" y="702.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (2 samples, 0.74%)</title><rect x="905.9" y="675.0" width="8.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="908.9" y="686.0"></text>
</g>
<g>
<title>ConstantPool::initialize_resolved_references(ClassLoaderData*, GrowableArray&lt;int&gt; const&amp;, int, Thread*) (1 samples, 0.37%)</title><rect x="905.9" y="659.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="908.9" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.37%)</title><rect x="905.9" y="643.0" width="4.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="908.9" y="654.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.37%)</title><rect x="910.3" y="659.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="913.3" y="670.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.37%)</title><rect x="910.3" y="643.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="913.3" y="654.0"></text>
</g>
<g>
<title>Rewriter::maybe_rewrite_ldc(unsigned char*, int, bool, bool) (1 samples, 0.37%)</title><rect x="910.3" y="627.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="913.3" y="638.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (8 samples, 2.96%)</title><rect x="914.7" y="691.0" width="34.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="917.7" y="702.0">Ve..</text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (8 samples, 2.96%)</title><rect x="914.7" y="675.0" width="34.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="917.7" y="686.0">Cl..</text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (8 samples, 2.96%)</title><rect x="914.7" y="659.0" width="34.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="917.7" y="670.0">Cl..</text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (2 samples, 0.74%)</title><rect x="923.4" y="643.0" width="8.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="926.4" y="654.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (2 samples, 0.74%)</title><rect x="923.4" y="627.0" width="8.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="926.4" y="638.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.37%)</title><rect x="927.8" y="611.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="930.8" y="622.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.37%)</title><rect x="927.8" y="595.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="930.8" y="606.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.37%)</title><rect x="927.8" y="579.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="930.8" y="590.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (3 samples, 1.11%)</title><rect x="932.1" y="643.0" width="13.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="935.1" y="654.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.37%)</title><rect x="936.5" y="627.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="939.5" y="638.0"></text>
</g>
<g>
<title>SignatureStream::~SignatureStream() (1 samples, 0.37%)</title><rect x="940.9" y="627.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="943.9" y="638.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.37%)</title><rect x="940.9" y="611.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="943.9" y="622.0"></text>
</g>
<g>
<title>SignatureStream::~SignatureStream() (1 samples, 0.37%)</title><rect x="945.3" y="643.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="948.3" y="654.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (2 samples, 0.74%)</title><rect x="949.6" y="931.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.6" y="942.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (2 samples, 0.74%)</title><rect x="949.6" y="915.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.6" y="926.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (2 samples, 0.74%)</title><rect x="949.6" y="899.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.6" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.74%)</title><rect x="949.6" y="883.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.74%)</title><rect x="949.6" y="867.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="952.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.74%)</title><rect x="949.6" y="851.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (2 samples, 0.74%)</title><rect x="949.6" y="835.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/aerospike4/AerospikeClientInstrumentation.&lt;init&gt; (1 samples, 0.37%)</title><rect x="949.6" y="819.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.6" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.37%)</title><rect x="949.6" y="803.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.6" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.37%)</title><rect x="949.6" y="787.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.6" y="798.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.37%)</title><rect x="949.6" y="771.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.37%)</title><rect x="949.6" y="755.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.37%)</title><rect x="949.6" y="739.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.6" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.37%)</title><rect x="949.6" y="723.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.6" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.37%)</title><rect x="949.6" y="707.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.6" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.37%)</title><rect x="949.6" y="691.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.6" y="702.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.propertyNameToEnvironmentVariableName (1 samples, 0.37%)</title><rect x="949.6" y="675.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.6" y="686.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.37%)</title><rect x="949.6" y="659.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.6" y="670.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (1 samples, 0.37%)</title><rect x="949.6" y="643.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.6" y="654.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/opentelemetry/OpenTelemetryInstrumentation.&lt;init&gt; (1 samples, 0.37%)</title><rect x="954.0" y="819.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.0" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.37%)</title><rect x="954.0" y="803.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.0" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.37%)</title><rect x="954.0" y="787.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.0" y="798.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.37%)</title><rect x="954.0" y="771.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.0" y="782.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.37%)</title><rect x="954.0" y="755.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.0" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.37%)</title><rect x="954.0" y="739.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.0" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.37%)</title><rect x="954.0" y="723.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.0" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.37%)</title><rect x="954.0" y="707.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.0" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.37%)</title><rect x="954.0" y="691.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.0" y="702.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.propertyNameToEnvironmentVariableName (1 samples, 0.37%)</title><rect x="954.0" y="675.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.toUpperCase (1 samples, 0.37%)</title><rect x="954.0" y="659.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.toUpperCase (1 samples, 0.37%)</title><rect x="954.0" y="643.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toUpperCase (1 samples, 0.37%)</title><rect x="954.0" y="627.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.37%)</title><rect x="954.0" y="611.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.installOn (31 samples, 11.48%)</title><rect x="958.4" y="931.0" width="135.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.4" y="942.0">net/bytebuddy/age..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.installOn (31 samples, 11.48%)</title><rect x="958.4" y="915.0" width="135.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.4" y="926.0">net/bytebuddy/age..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.doInstall (31 samples, 11.48%)</title><rect x="958.4" y="899.0" width="135.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.4" y="910.0">net/bytebuddy/age..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.makeRaw (4 samples, 1.48%)</title><rect x="958.4" y="883.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.&lt;clinit&gt; (4 samples, 1.48%)</title><rect x="958.4" y="867.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="961.4" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 1.48%)</title><rect x="958.4" y="851.0" width="17.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (4 samples, 1.48%)</title><rect x="958.4" y="835.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (4 samples, 1.48%)</title><rect x="958.4" y="819.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (2 samples, 0.74%)</title><rect x="958.4" y="803.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (2 samples, 0.74%)</title><rect x="958.4" y="787.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.74%)</title><rect x="958.4" y="771.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.74%)</title><rect x="958.4" y="755.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="961.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.37%)</title><rect x="958.4" y="739.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.37%)</title><rect x="958.4" y="723.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.37%)</title><rect x="958.4" y="707.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="958.4" y="691.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="961.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.37%)</title><rect x="958.4" y="675.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="958.4" y="659.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="958.4" y="643.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.37%)</title><rect x="958.4" y="627.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="958.4" y="611.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="958.4" y="595.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="958.4" y="579.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="958.4" y="563.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.4" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="958.4" y="547.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.4" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="958.4" y="531.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.4" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.37%)</title><rect x="958.4" y="515.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.4" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.37%)</title><rect x="958.4" y="499.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.37%)</title><rect x="958.4" y="483.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.4" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.37%)</title><rect x="958.4" y="467.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.4" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.37%)</title><rect x="958.4" y="451.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.4" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.37%)</title><rect x="962.7" y="739.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (1 samples, 0.37%)</title><rect x="962.7" y="723.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.37%)</title><rect x="962.7" y="707.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getGenericSignature (1 samples, 0.37%)</title><rect x="962.7" y="691.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.37%)</title><rect x="962.7" y="675.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor.onParameterizedType (1 samples, 0.37%)</title><rect x="962.7" y="659.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor.onParameterizedType (1 samples, 0.37%)</title><rect x="962.7" y="643.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor.onOwnableType (1 samples, 0.37%)</title><rect x="962.7" y="627.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfWildcardType.accept (1 samples, 0.37%)</title><rect x="962.7" y="611.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor$OfTypeArgument.onWildcard (1 samples, 0.37%)</title><rect x="962.7" y="595.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor$OfTypeArgument.onWildcard (1 samples, 0.37%)</title><rect x="962.7" y="579.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.7" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfWildcardType$ForLoadedType.getUpperBounds (1 samples, 0.37%)</title><rect x="962.7" y="563.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.7" y="574.0"></text>
</g>
<g>
<title>sun/reflect/generics/reflectiveObjects/WildcardTypeImpl.getUpperBounds (1 samples, 0.37%)</title><rect x="962.7" y="547.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.7" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.37%)</title><rect x="962.7" y="531.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Default$Unloaded.load (1 samples, 0.37%)</title><rect x="967.1" y="803.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/TypeResolutionStrategy$Passive.initialize (1 samples, 0.37%)</title><rect x="967.1" y="787.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.1" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$WrappingDispatcher.load (1 samples, 0.37%)</title><rect x="967.1" y="771.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.1" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="967.1" y="755.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.1" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="967.1" y="739.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.1" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="967.1" y="723.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.1" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="967.1" y="707.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.1" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="967.1" y="691.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.1" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="967.1" y="675.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.1" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="967.1" y="659.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.1" y="670.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="967.1" y="643.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="967.1" y="627.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.1" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.37%)</title><rect x="967.1" y="611.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.1" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.37%)</title><rect x="967.1" y="595.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.37%)</title><rect x="967.1" y="579.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.37%)</title><rect x="967.1" y="563.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.1" y="574.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.37%)</title><rect x="967.1" y="547.0" width="4.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="970.1" y="558.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.37%)</title><rect x="967.1" y="531.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="970.1" y="542.0"></text>
</g>
<g>
<title>Klass::external_name() const (1 samples, 0.37%)</title><rect x="967.1" y="515.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="970.1" y="526.0"></text>
</g>
<g>
<title>Symbol::as_klass_external_name() const (1 samples, 0.37%)</title><rect x="967.1" y="499.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="970.1" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaType.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="971.5" y="803.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.5" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.37%)</title><rect x="971.5" y="787.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="974.5" y="798.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="971.5" y="771.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="974.5" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="971.5" y="755.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="974.5" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="971.5" y="739.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="974.5" y="750.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="971.5" y="723.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="974.5" y="734.0"></text>
</g>
<g>
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="971.5" y="707.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="974.5" y="718.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.37%)</title><rect x="971.5" y="691.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="974.5" y="702.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="971.5" y="675.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="974.5" y="686.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.37%)</title><rect x="971.5" y="659.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="974.5" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.37%)</title><rect x="971.5" y="643.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="974.5" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.294] (1 samples, 0.37%)</title><rect x="971.5" y="627.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="974.5" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy.apply (27 samples, 10.00%)</title><rect x="975.9" y="883.0" width="118.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.9" y="894.0">net/bytebuddy/..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.37%)</title><rect x="975.9" y="867.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.37%)</title><rect x="975.9" y="851.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.9" y="862.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalManualCache.put (1 samples, 0.37%)</title><rect x="975.9" y="835.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.9" y="846.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.37%)</title><rect x="975.9" y="819.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="978.9" y="830.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.put (1 samples, 0.37%)</title><rect x="975.9" y="803.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.9" y="814.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.afterWrite (1 samples, 0.37%)</title><rect x="975.9" y="787.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.9" y="798.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleAfterWrite (1 samples, 0.37%)</title><rect x="975.9" y="771.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.9" y="782.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.scheduleDrainBuffers (1 samples, 0.37%)</title><rect x="975.9" y="755.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.9" y="766.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.execute (1 samples, 0.37%)</title><rect x="975.9" y="739.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.9" y="750.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.schedule (1 samples, 0.37%)</title><rect x="975.9" y="723.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="978.9" y="734.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler.scheduleTarget (1 samples, 0.37%)</title><rect x="975.9" y="707.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.9" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="975.9" y="691.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="978.9" y="702.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="975.9" y="675.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="978.9" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="975.9" y="659.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="978.9" y="670.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="975.9" y="643.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="978.9" y="654.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="975.9" y="627.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="978.9" y="638.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.37%)</title><rect x="975.9" y="611.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="978.9" y="622.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="975.9" y="595.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="978.9" y="606.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="975.9" y="579.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="978.9" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="975.9" y="563.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="978.9" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.37%)</title><rect x="975.9" y="547.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="978.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (2 samples, 0.74%)</title><rect x="980.2" y="867.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.37%)</title><rect x="984.6" y="851.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="987.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.37%)</title><rect x="984.6" y="835.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.6" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.37%)</title><rect x="984.6" y="819.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.6" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.37%)</title><rect x="984.6" y="803.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="987.6" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.37%)</title><rect x="984.6" y="787.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="987.6" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.37%)</title><rect x="984.6" y="771.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="987.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$LambdaInstrumentationStrategy$2.isInstrumented (1 samples, 0.37%)</title><rect x="989.0" y="867.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.37%)</title><rect x="989.0" y="851.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.37%)</title><rect x="989.0" y="835.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="992.0" y="846.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.37%)</title><rect x="989.0" y="819.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="992.0" y="830.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.37%)</title><rect x="989.0" y="803.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="992.0" y="814.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.37%)</title><rect x="989.0" y="787.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="992.0" y="798.0"></text>
</g>
<g>
<title>UTF8::unicode_length(char const*, bool&amp;, bool&amp;) (1 samples, 0.37%)</title><rect x="989.0" y="771.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="992.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.apply (11 samples, 4.07%)</title><rect x="993.3" y="867.0" width="48.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.3" y="878.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation.doApply (11 samples, 4.07%)</title><rect x="993.3" y="851.0" width="48.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.3" y="862.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.retransformClasses (11 samples, 4.07%)</title><rect x="993.3" y="835.0" width="48.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.3" y="846.0">net/..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 4.07%)</title><rect x="993.3" y="819.0" width="48.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.3" y="830.0">java..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 4.07%)</title><rect x="993.3" y="803.0" width="48.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.3" y="814.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (11 samples, 4.07%)</title><rect x="993.3" y="787.0" width="48.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.3" y="798.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (11 samples, 4.07%)</title><rect x="993.3" y="771.0" width="48.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.3" y="782.0">jdk/..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses (11 samples, 4.07%)</title><rect x="993.3" y="755.0" width="48.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.3" y="766.0">sun/..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses0 (11 samples, 4.07%)</title><rect x="993.3" y="739.0" width="48.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.3" y="750.0">sun/..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (11 samples, 4.07%)</title><rect x="993.3" y="723.0" width="48.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.3" y="734.0">sun/..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (11 samples, 4.07%)</title><rect x="993.3" y="707.0" width="48.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="996.3" y="718.0">sun/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (11 samples, 4.07%)</title><rect x="993.3" y="691.0" width="48.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="996.3" y="702.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (11 samples, 4.07%)</title><rect x="993.3" y="675.0" width="48.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.3" y="686.0">net/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 4.07%)</title><rect x="993.3" y="659.0" width="48.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.3" y="670.0">java..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (11 samples, 4.07%)</title><rect x="993.3" y="643.0" width="48.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.3" y="654.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (11 samples, 4.07%)</title><rect x="993.3" y="627.0" width="48.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.3" y="638.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (11 samples, 4.07%)</title><rect x="993.3" y="611.0" width="48.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.3" y="622.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (11 samples, 4.07%)</title><rect x="993.3" y="595.0" width="48.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="996.3" y="606.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (11 samples, 4.07%)</title><rect x="993.3" y="579.0" width="48.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.3" y="590.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="993.3" y="563.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.37%)</title><rect x="993.3" y="547.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.3" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.37%)</title><rect x="993.3" y="531.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.3" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.37%)</title><rect x="993.3" y="515.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.3" y="526.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.37%)</title><rect x="993.3" y="499.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.3" y="510.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (1 samples, 0.37%)</title><rect x="993.3" y="483.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.3" y="494.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.37%)</title><rect x="993.3" y="467.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.3" y="478.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.37%)</title><rect x="993.3" y="451.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.3" y="462.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="993.3" y="435.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.3" y="446.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="993.3" y="419.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="996.3" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.37%)</title><rect x="993.3" y="403.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="996.3" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.37%)</title><rect x="993.3" y="387.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.3" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.37%)</title><rect x="993.3" y="371.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="996.3" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.37%)</title><rect x="993.3" y="355.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.3" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.37%)</title><rect x="993.3" y="339.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.3" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.37%)</title><rect x="993.3" y="323.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.3" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.37%)</title><rect x="993.3" y="307.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="996.3" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Simple.locate (1 samples, 0.37%)</title><rect x="993.3" y="291.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="996.3" y="302.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="993.3" y="275.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="996.3" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="993.3" y="259.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="996.3" y="270.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="993.3" y="243.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="996.3" y="254.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="993.3" y="227.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="996.3" y="238.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="993.3" y="211.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="996.3" y="222.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="993.3" y="195.0" width="4.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="996.3" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (3 samples, 1.11%)</title><rect x="997.7" y="563.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.7" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (3 samples, 1.11%)</title><rect x="997.7" y="547.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.7" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (3 samples, 1.11%)</title><rect x="997.7" y="531.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (3 samples, 1.11%)</title><rect x="997.7" y="515.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (2 samples, 0.74%)</title><rect x="997.7" y="499.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.7" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (2 samples, 0.74%)</title><rect x="997.7" y="483.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.7" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (2 samples, 0.74%)</title><rect x="997.7" y="467.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.7" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (2 samples, 0.74%)</title><rect x="997.7" y="451.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.7" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="997.7" y="435.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.7" y="446.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="997.7" y="419.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.7" y="430.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="997.7" y="403.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1000.7" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="997.7" y="387.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.7" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="997.7" y="371.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1000.7" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="997.7" y="355.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.7" y="366.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="997.7" y="339.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="997.7" y="323.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.37%)</title><rect x="997.7" y="307.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.7" y="318.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.37%)</title><rect x="997.7" y="291.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.7" y="302.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.37%)</title><rect x="997.7" y="275.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.7" y="286.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.37%)</title><rect x="997.7" y="259.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.37%)</title><rect x="997.7" y="243.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.7" y="254.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.37%)</title><rect x="997.7" y="227.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.7" y="238.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="997.7" y="211.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.7" y="222.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="997.7" y="195.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.7" y="206.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="997.7" y="179.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.7" y="190.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.37%)</title><rect x="997.7" y="163.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.7" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.37%)</title><rect x="997.7" y="147.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.7" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="997.7" y="131.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.7" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="997.7" y="115.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.7" y="126.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.37%)</title><rect x="997.7" y="99.0" width="4.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1000.7" y="110.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.37%)</title><rect x="997.7" y="83.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1000.7" y="94.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="997.7" y="67.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1000.7" y="78.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="997.7" y="51.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1000.7" y="62.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.37%)</title><rect x="997.7" y="35.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1000.7" y="46.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1002.1" y="435.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.1" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1002.1" y="419.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.1" y="430.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1002.1" y="403.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1005.1" y="414.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1002.1" y="387.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1005.1" y="398.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="1002.1" y="371.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1005.1" y="382.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.37%)</title><rect x="1002.1" y="355.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1005.1" y="366.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1002.1" y="339.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1005.1" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::set_initialization_state_and_notify(InstanceKlass::ClassState, Thread*) (1 samples, 0.37%)</title><rect x="1002.1" y="323.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1005.1" y="334.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="1002.1" y="307.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1005.1" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.37%)</title><rect x="1006.4" y="499.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.37%)</title><rect x="1006.4" y="483.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1009.4" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$ForLoadedMethod.getDefaultValue (1 samples, 0.37%)</title><rect x="1006.4" y="467.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.4" y="478.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1006.4" y="451.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.4" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1006.4" y="435.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.4" y="446.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="419.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1009.4" y="430.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="403.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1009.4" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="387.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.4" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="371.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1009.4" y="382.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="355.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1009.4" y="366.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="339.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.4" y="350.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1006.4" y="323.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1009.4" y="334.0"></text>
</g>
<g>
<title>class_to_ID (1 samples, 0.37%)</title><rect x="1006.4" y="307.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1009.4" y="318.0"></text>
</g>
<g>
<title>load_class_global (1 samples, 0.37%)</title><rect x="1006.4" y="291.0" width="4.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1009.4" y="302.0"></text>
</g>
<g>
<title>load_class_local (1 samples, 0.37%)</title><rect x="1006.4" y="275.0" width="4.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1009.4" y="286.0"></text>
</g>
<g>
<title>JVM_FindClassFromClass (1 samples, 0.37%)</title><rect x="1006.4" y="259.0" width="4.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1009.4" y="270.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="243.0" width="4.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1009.4" y="254.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="227.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1009.4" y="238.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="1006.4" y="211.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1009.4" y="222.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.37%)</title><rect x="1006.4" y="195.0" width="4.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.4" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (7 samples, 2.59%)</title><rect x="1010.8" y="563.0" width="30.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1013.8" y="574.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (2 samples, 0.74%)</title><rect x="1010.8" y="547.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.8" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (2 samples, 0.74%)</title><rect x="1010.8" y="531.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.8" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (2 samples, 0.74%)</title><rect x="1010.8" y="515.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.8" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (2 samples, 0.74%)</title><rect x="1010.8" y="499.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.8" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.37%)</title><rect x="1010.8" y="483.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.8" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.37%)</title><rect x="1010.8" y="467.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.8" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.37%)</title><rect x="1015.2" y="483.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.2" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="1015.2" y="467.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.2" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="1015.2" y="451.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.2" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.37%)</title><rect x="1015.2" y="435.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.2" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="1015.2" y="419.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1018.2" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="1015.2" y="403.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1018.2" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.37%)</title><rect x="1015.2" y="387.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.2" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.37%)</title><rect x="1015.2" y="371.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.2" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.extend (1 samples, 0.37%)</title><rect x="1015.2" y="355.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1015.2" y="339.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.37%)</title><rect x="1015.2" y="323.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1018.2" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$EmptyIterator.hasNext (1 samples, 0.37%)</title><rect x="1015.2" y="307.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.2" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.forRedefinition (1 samples, 0.37%)</title><rect x="1019.6" y="547.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.6" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1019.6" y="531.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.6" y="542.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1019.6" y="515.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1022.6" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1019.6" y="499.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.6" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1019.6" y="483.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.6" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1019.6" y="467.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.6" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1019.6" y="451.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.6" y="462.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1019.6" y="435.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="1019.6" y="419.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.6" y="430.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.37%)</title><rect x="1019.6" y="403.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.6" y="414.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.37%)</title><rect x="1019.6" y="387.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.6" y="398.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.37%)</title><rect x="1019.6" y="371.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1022.6" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="1019.6" y="355.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1022.6" y="366.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.37%)</title><rect x="1019.6" y="339.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1022.6" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (4 samples, 1.48%)</title><rect x="1023.9" y="547.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.9" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (4 samples, 1.48%)</title><rect x="1023.9" y="531.0" width="17.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.9" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 1.48%)</title><rect x="1023.9" y="515.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1026.9" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (4 samples, 1.48%)</title><rect x="1023.9" y="499.0" width="17.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.9" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.37%)</title><rect x="1023.9" y="483.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.9" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitField (1 samples, 0.37%)</title><rect x="1023.9" y="467.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.9" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitField (1 samples, 0.37%)</title><rect x="1023.9" y="451.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.9" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.37%)</title><rect x="1023.9" y="435.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.9" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.37%)</title><rect x="1023.9" y="419.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1026.9" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.37%)</title><rect x="1023.9" y="403.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.9" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor.visitField (1 samples, 0.37%)</title><rect x="1023.9" y="387.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.9" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitField (1 samples, 0.37%)</title><rect x="1023.9" y="371.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.9" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.visitField (1 samples, 0.37%)</title><rect x="1023.9" y="355.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.9" y="366.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1023.9" y="339.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1026.9" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1023.9" y="323.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1026.9" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1023.9" y="307.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1026.9" y="318.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.37%)</title><rect x="1023.9" y="291.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1026.9" y="302.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 0.37%)</title><rect x="1023.9" y="275.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1026.9" y="286.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods (1 samples, 0.37%)</title><rect x="1023.9" y="259.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1026.9" y="270.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.37%)</title><rect x="1023.9" y="243.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1026.9" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="1023.9" y="227.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1026.9" y="238.0"></text>
</g>
<g>
<title>Method::make_jmethod_id(ClassLoaderData*, Method*) (1 samples, 0.37%)</title><rect x="1023.9" y="211.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1026.9" y="222.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.37%)</title><rect x="1023.9" y="195.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1026.9" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (3 samples, 1.11%)</title><rect x="1028.3" y="483.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.3" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (2 samples, 0.74%)</title><rect x="1028.3" y="467.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.3" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (1 samples, 0.37%)</title><rect x="1028.3" y="451.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.3" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (1 samples, 0.37%)</title><rect x="1028.3" y="435.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.3" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.37%)</title><rect x="1028.3" y="419.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.3" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="1028.3" y="403.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1031.3" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.37%)</title><rect x="1028.3" y="387.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.3" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.37%)</title><rect x="1028.3" y="371.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.3" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.37%)</title><rect x="1028.3" y="355.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.3" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.apply (1 samples, 0.37%)</title><rect x="1028.3" y="339.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.3" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$StackMapFrameHandler$Default$WithPreservedArguments.bindExit (1 samples, 0.37%)</title><rect x="1028.3" y="323.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.3" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1028.3" y="307.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.3" y="318.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1028.3" y="291.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.3" y="302.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1028.3" y="275.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.3" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1028.3" y="259.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.3" y="270.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1028.3" y="243.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.3" y="254.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1028.3" y="227.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.3" y="238.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1028.3" y="211.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="1028.3" y="195.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.3" y="206.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.37%)</title><rect x="1028.3" y="179.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.3" y="190.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.37%)</title><rect x="1028.3" y="163.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.3" y="174.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.37%)</title><rect x="1028.3" y="147.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.3" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.37%)</title><rect x="1028.3" y="131.0" width="4.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1031.3" y="142.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.37%)</title><rect x="1028.3" y="115.0" width="4.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1031.3" y="126.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor$ValidatingMethodVisitor.visitMethodInsn (1 samples, 0.37%)</title><rect x="1032.7" y="451.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1035.7" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodVisitor.visitMethodInsn (1 samples, 0.37%)</title><rect x="1032.7" y="435.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.7" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.visitMethodInsn (1 samples, 0.37%)</title><rect x="1032.7" y="419.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.7" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantMethodref (1 samples, 0.37%)</title><rect x="1032.7" y="403.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.7" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/SymbolTable.addConstantMemberReference (1 samples, 0.37%)</title><rect x="1032.7" y="387.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.7" y="398.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.37%)</title><rect x="1032.7" y="371.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1035.7" y="382.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.37%)</title><rect x="1032.7" y="355.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1035.7" y="366.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.37%)</title><rect x="1032.7" y="339.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1035.7" y="350.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.37%)</title><rect x="1032.7" y="323.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1035.7" y="334.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="1032.7" y="307.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1035.7" y="318.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="1032.7" y="291.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1035.7" y="302.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 0.37%)</title><rect x="1032.7" y="275.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1035.7" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.37%)</title><rect x="1037.0" y="467.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.0" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.37%)</title><rect x="1037.0" y="451.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.0" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.37%)</title><rect x="1037.0" y="435.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.0" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.37%)</title><rect x="1037.0" y="419.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.0" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.37%)</title><rect x="1037.0" y="403.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.0" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.37%)</title><rect x="1037.0" y="387.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.0" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1037.0" y="371.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.0" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1037.0" y="355.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.0" y="366.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1037.0" y="339.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1040.0" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1037.0" y="323.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1040.0" y="334.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1037.0" y="307.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1040.0" y="318.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1037.0" y="291.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1040.0" y="302.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1037.0" y="275.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1040.0" y="286.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1037.0" y="259.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1040.0" y="270.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.37%)</title><rect x="1037.0" y="243.0" width="4.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1040.0" y="254.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.consider (11 samples, 4.07%)</title><rect x="1041.4" y="867.0" width="48.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.4" y="878.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher.matches (10 samples, 3.70%)</title><rect x="1041.4" y="851.0" width="43.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.4" y="862.0">net/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (9 samples, 3.33%)</title><rect x="1045.8" y="835.0" width="39.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="846.0">net..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (3 samples, 1.11%)</title><rect x="1045.8" y="819.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (2 samples, 0.74%)</title><rect x="1045.8" y="803.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.8" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (2 samples, 0.74%)</title><rect x="1045.8" y="787.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.8" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.74%)</title><rect x="1045.8" y="771.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.8" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (2 samples, 0.74%)</title><rect x="1045.8" y="755.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (2 samples, 0.74%)</title><rect x="1045.8" y="739.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.8" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (2 samples, 0.74%)</title><rect x="1045.8" y="723.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.8" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (2 samples, 0.74%)</title><rect x="1045.8" y="707.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.8" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.37%)</title><rect x="1045.8" y="691.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1048.8" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findInterfaceMethods (1 samples, 0.37%)</title><rect x="1045.8" y="675.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.8" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findMethodsForType (1 samples, 0.37%)</title><rect x="1045.8" y="659.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.8" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getDeclaredMethods (1 samples, 0.37%)</title><rect x="1045.8" y="643.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.37%)</title><rect x="1045.8" y="627.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.8" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.37%)</title><rect x="1045.8" y="611.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.8" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.37%)</title><rect x="1045.8" y="595.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.8" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.37%)</title><rect x="1045.8" y="579.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.8" y="590.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.37%)</title><rect x="1045.8" y="563.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.37%)</title><rect x="1045.8" y="547.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.37%)</title><rect x="1045.8" y="531.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.8" y="542.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (1 samples, 0.37%)</title><rect x="1045.8" y="515.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.8" y="526.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarURLConnection.connect (1 samples, 0.37%)</title><rect x="1045.8" y="499.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.8" y="510.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.get (1 samples, 0.37%)</title><rect x="1045.8" y="483.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.8" y="494.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getCachedJarFile (1 samples, 0.37%)</title><rect x="1045.8" y="467.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="478.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/JarFileFactory.getPermission (1 samples, 0.37%)</title><rect x="1045.8" y="451.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.8" y="462.0"></text>
</g>
<g>
<title>sun/net/www/protocol/file/FileURLConnection.getPermission (1 samples, 0.37%)</title><rect x="1045.8" y="435.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.8" y="446.0"></text>
</g>
<g>
<title>java/io/FilePermission.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1045.8" y="419.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.8" y="430.0"></text>
</g>
<g>
<title>java/io/FilePermission.init (1 samples, 0.37%)</title><rect x="1045.8" y="403.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.8" y="414.0"></text>
</g>
<g>
<title>java/security/Permission.getName (1 samples, 0.37%)</title><rect x="1045.8" y="387.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.8" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.37%)</title><rect x="1050.1" y="691.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.37%)</title><rect x="1050.1" y="675.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.37%)</title><rect x="1050.1" y="659.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.37%)</title><rect x="1050.1" y="643.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.1" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.37%)</title><rect x="1050.1" y="627.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1053.1" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.37%)</title><rect x="1050.1" y="611.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.37%)</title><rect x="1050.1" y="595.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.1" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.37%)</title><rect x="1050.1" y="579.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1053.1" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.37%)</title><rect x="1050.1" y="563.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1053.1" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="1050.1" y="547.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1053.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.37%)</title><rect x="1050.1" y="531.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1053.1" y="542.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/http_url_connection/HttpUrlConnectionInstrumentation.getInstrumentationMuzzle (1 samples, 0.37%)</title><rect x="1054.5" y="803.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.5" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/Reference$Builder.withMethod (1 samples, 0.37%)</title><rect x="1054.5" y="787.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1057.5" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1054.5" y="771.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.5" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1054.5" y="755.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.5" y="766.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1054.5" y="739.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.5" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1054.5" y="723.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.5" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1054.5" y="707.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.5" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1054.5" y="691.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.5" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (6 samples, 2.22%)</title><rect x="1058.9" y="819.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1061.9" y="830.0">n..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (6 samples, 2.22%)</title><rect x="1058.9" y="803.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.9" y="814.0">n..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.37%)</title><rect x="1058.9" y="787.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1061.9" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.37%)</title><rect x="1058.9" y="771.0" width="4.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1061.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (5 samples, 1.85%)</title><rect x="1063.3" y="787.0" width="21.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.3" y="798.0">n..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (3 samples, 1.11%)</title><rect x="1063.3" y="771.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.3" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (3 samples, 1.11%)</title><rect x="1063.3" y="755.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.3" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.74%)</title><rect x="1063.3" y="739.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.3" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (2 samples, 0.74%)</title><rect x="1063.3" y="723.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.3" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.37%)</title><rect x="1063.3" y="707.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.3" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.37%)</title><rect x="1063.3" y="691.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.3" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.37%)</title><rect x="1063.3" y="675.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.3" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.37%)</title><rect x="1063.3" y="659.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.3" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.37%)</title><rect x="1067.6" y="707.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.6" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1067.6" y="691.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.6" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1067.6" y="675.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.37%)</title><rect x="1067.6" y="659.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getInterfaces (1 samples, 0.37%)</title><rect x="1067.6" y="643.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1070.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.37%)</title><rect x="1067.6" y="627.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.37%)</title><rect x="1067.6" y="611.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.37%)</title><rect x="1067.6" y="595.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.37%)</title><rect x="1067.6" y="579.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.37%)</title><rect x="1067.6" y="563.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.6" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.37%)</title><rect x="1067.6" y="547.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.6" y="558.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.37%)</title><rect x="1067.6" y="531.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1070.6" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.37%)</title><rect x="1067.6" y="515.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.6" y="526.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.37%)</title><rect x="1067.6" y="499.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.6" y="510.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection$1.getInputStream (1 samples, 0.37%)</title><rect x="1067.6" y="483.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.6" y="494.0"></text>
</g>
<g>
<title>java/io/ByteArrayInputStream.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1067.6" y="467.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.6" y="478.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (1 samples, 0.37%)</title><rect x="1072.0" y="739.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (1 samples, 0.37%)</title><rect x="1072.0" y="723.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.getSuperClass (1 samples, 0.37%)</title><rect x="1072.0" y="707.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForParameterizedType$LazyParameterizedType.asErasure (1 samples, 0.37%)</title><rect x="1072.0" y="691.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.37%)</title><rect x="1072.0" y="675.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.37%)</title><rect x="1072.0" y="659.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.0" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy$SharedResolutionCacheAdapter.find (1 samples, 0.37%)</title><rect x="1072.0" y="643.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.0" y="654.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.get (1 samples, 0.37%)</title><rect x="1072.0" y="627.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.0" y="638.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.afterRead (1 samples, 0.37%)</title><rect x="1072.0" y="611.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.0" y="622.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.recordRead (1 samples, 0.37%)</title><rect x="1072.0" y="595.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.lazySet (1 samples, 0.37%)</title><rect x="1072.0" y="579.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.37%)</title><rect x="1072.0" y="563.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.0" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (2 samples, 0.74%)</title><rect x="1076.4" y="771.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (2 samples, 0.74%)</title><rect x="1076.4" y="755.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (2 samples, 0.74%)</title><rect x="1076.4" y="739.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (2 samples, 0.74%)</title><rect x="1076.4" y="723.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (2 samples, 0.74%)</title><rect x="1076.4" y="707.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (2 samples, 0.74%)</title><rect x="1076.4" y="691.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (2 samples, 0.74%)</title><rect x="1076.4" y="675.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (2 samples, 0.74%)</title><rect x="1076.4" y="659.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.4" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (2 samples, 0.74%)</title><rect x="1076.4" y="643.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.4" y="654.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (2 samples, 0.74%)</title><rect x="1076.4" y="627.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.4" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.37%)</title><rect x="1076.4" y="611.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.4" y="622.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.37%)</title><rect x="1076.4" y="595.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.4" y="606.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/Handler.openConnection (1 samples, 0.37%)</title><rect x="1076.4" y="579.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.4" y="590.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1076.4" y="563.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.4" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1076.4" y="547.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.4" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.37%)</title><rect x="1076.4" y="531.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1079.4" y="542.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="1076.4" y="515.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.4" y="526.0"></text>
</g>
<g>
<title>ConstantPool::resolve_bootstrap_specifier_at_impl(constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.37%)</title><rect x="1076.4" y="499.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.4" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/StreamDrainer.drain (1 samples, 0.37%)</title><rect x="1080.7" y="611.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1083.7" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.37%)</title><rect x="1080.7" y="595.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1083.7" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.37%)</title><rect x="1080.7" y="579.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.7" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="1080.7" y="563.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1083.7" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.37%)</title><rect x="1080.7" y="547.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1083.7" y="558.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.37%)</title><rect x="1080.7" y="531.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1083.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onDiscovery (1 samples, 0.37%)</title><rect x="1085.1" y="851.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.1" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller$ClassLoadListener.onDiscovery (1 samples, 0.37%)</title><rect x="1085.1" y="835.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.1" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.isModifiableClass (1 samples, 0.37%)</title><rect x="1089.5" y="867.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.5" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.37%)</title><rect x="1089.5" y="851.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.37%)</title><rect x="1089.5" y="835.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor6.invoke (1 samples, 0.37%)</title><rect x="1089.5" y="819.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.5" y="830.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.isModifiableClass (1 samples, 0.37%)</title><rect x="1089.5" y="803.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1092.5" y="814.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.isModifiableClass0 (1 samples, 0.37%)</title><rect x="1089.5" y="787.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.5" y="798.0"></text>
</g>
<g>
<title>isModifiableClass (1 samples, 0.37%)</title><rect x="1089.5" y="771.0" width="4.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1092.5" y="782.0"></text>
</g>
<g>
<title>jvmti_IsModifiableClass (1 samples, 0.37%)</title><rect x="1089.5" y="755.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1092.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (18 samples, 6.67%)</title><rect x="1093.9" y="931.0" width="78.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.9" y="942.0">net/byteb..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1093.9" y="915.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1096.9" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1093.9" y="899.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1096.9" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1093.9" y="883.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.9" y="894.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1093.9" y="867.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.9" y="878.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1093.9" y="851.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1096.9" y="862.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1093.9" y="835.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1096.9" y="846.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.37%)</title><rect x="1093.9" y="819.0" width="4.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1096.9" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.74%)</title><rect x="1098.2" y="915.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.74%)</title><rect x="1098.2" y="899.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.2" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1098.2" y="883.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1101.2" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1098.2" y="867.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.2" y="878.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="1098.2" y="851.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.2" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.37%)</title><rect x="1098.2" y="835.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.2" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1098.2" y="819.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1101.2" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1098.2" y="803.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.2" y="814.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1098.2" y="787.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1101.2" y="798.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1098.2" y="771.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1101.2" y="782.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1098.2" y="755.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1101.2" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.37%)</title><rect x="1098.2" y="739.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1102.6" y="883.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.6" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1102.6" y="867.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.6" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1102.6" y="851.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.6" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="1102.6" y="835.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.6" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.37%)</title><rect x="1102.6" y="819.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1105.6" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1102.6" y="803.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.6" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1102.6" y="787.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1105.6" y="798.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1102.6" y="771.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1105.6" y="782.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1102.6" y="755.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.6" y="766.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1102.6" y="739.0" width="4.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1105.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (15 samples, 5.56%)</title><rect x="1107.0" y="915.0" width="65.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1110.0" y="926.0">net/byt..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1107.0" y="899.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1110.0" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1107.0" y="883.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1110.0" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1107.0" y="867.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1110.0" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1107.0" y="851.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.0" y="862.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1107.0" y="835.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1110.0" y="846.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1107.0" y="819.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1110.0" y="830.0"></text>
</g>
<g>
<title>free (1 samples, 0.37%)</title><rect x="1107.0" y="803.0" width="4.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1110.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1111.3" y="899.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1111.3" y="883.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.3" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1111.3" y="867.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.3" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1111.3" y="851.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.3" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1111.3" y="835.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.3" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1111.3" y="819.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.3" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1111.3" y="803.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.3" y="814.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1111.3" y="787.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.3" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1111.3" y="771.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.3" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.37%)</title><rect x="1111.3" y="755.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.37%)</title><rect x="1111.3" y="739.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.37%)</title><rect x="1111.3" y="723.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.37%)</title><rect x="1111.3" y="707.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.3" y="718.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.37%)</title><rect x="1111.3" y="691.0" width="4.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1114.3" y="702.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.37%)</title><rect x="1111.3" y="675.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.3" y="686.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.37%)</title><rect x="1111.3" y="659.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1114.3" y="670.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1111.3" y="643.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.3" y="654.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.37%)</title><rect x="1111.3" y="627.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.3" y="638.0"></text>
</g>
<g>
<title>UNICODE::is_latin1(unsigned short*, int) (1 samples, 0.37%)</title><rect x="1111.3" y="611.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1114.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split.&lt;init&gt; (13 samples, 4.81%)</title><rect x="1115.7" y="899.0" width="56.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.7" y="910.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor.&lt;clinit&gt; (13 samples, 4.81%)</title><rect x="1115.7" y="883.0" width="56.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1118.7" y="894.0">net/by..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 4.81%)</title><rect x="1115.7" y="867.0" width="56.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.7" y="878.0">java/s..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 4.81%)</title><rect x="1115.7" y="851.0" width="56.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.7" y="862.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 4.81%)</title><rect x="1115.7" y="835.0" width="56.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.7" y="846.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.&lt;clinit&gt; (13 samples, 4.81%)</title><rect x="1115.7" y="819.0" width="56.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.7" y="830.0">net/by..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 4.81%)</title><rect x="1115.7" y="803.0" width="56.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.7" y="814.0">java/s..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 4.81%)</title><rect x="1115.7" y="787.0" width="56.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.7" y="798.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 4.81%)</title><rect x="1115.7" y="771.0" width="56.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.7" y="782.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection.make (13 samples, 4.81%)</title><rect x="1115.7" y="755.0" width="56.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.7" y="766.0">net/by..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1115.7" y="739.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.7" y="750.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1115.7" y="723.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.7" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1115.7" y="707.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1118.7" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1115.7" y="691.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1118.7" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1115.7" y="675.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.7" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1115.7" y="659.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.74%)</title><rect x="1120.1" y="739.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.74%)</title><rect x="1120.1" y="723.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.1" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1120.1" y="707.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.1" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1120.1" y="691.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.1" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1120.1" y="675.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.1" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1120.1" y="659.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.1" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1120.1" y="643.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1123.1" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1120.1" y="627.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.1" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1120.1" y="611.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="1120.1" y="595.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.37%)</title><rect x="1120.1" y="579.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Default.withInterfaces (1 samples, 0.37%)</title><rect x="1124.4" y="707.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.4" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1124.4" y="691.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.4" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1124.4" y="675.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1127.4" y="686.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="1124.4" y="659.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.4" y="670.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.37%)</title><rect x="1124.4" y="643.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1127.4" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1124.4" y="627.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.4" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1124.4" y="611.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1127.4" y="622.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.37%)</title><rect x="1124.4" y="595.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1127.4" y="606.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="1124.4" y="579.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1127.4" y="590.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.37%)</title><rect x="1124.4" y="563.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.4" y="574.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 0.37%)</title><rect x="1124.4" y="547.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1127.4" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (9 samples, 3.33%)</title><rect x="1128.8" y="739.0" width="39.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.8" y="750.0">net..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (9 samples, 3.33%)</title><rect x="1128.8" y="723.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.8" y="734.0">net..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (9 samples, 3.33%)</title><rect x="1128.8" y="707.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.8" y="718.0">net..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (9 samples, 3.33%)</title><rect x="1128.8" y="691.0" width="39.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.8" y="702.0">net..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Prepared.compile (1 samples, 0.37%)</title><rect x="1128.8" y="675.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.8" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassImplementationTarget$Factory.make (1 samples, 0.37%)</title><rect x="1128.8" y="659.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.8" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1128.8" y="643.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.8" y="654.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1128.8" y="627.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.8" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1128.8" y="611.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1131.8" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1128.8" y="595.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.8" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1128.8" y="579.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.8" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1128.8" y="563.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.8" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1128.8" y="547.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.8" y="558.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1128.8" y="531.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.8" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1128.8" y="515.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="1128.8" y="499.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.8" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1128.8" y="483.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.8" y="494.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1128.8" y="467.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.8" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1128.8" y="451.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.8" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1128.8" y="435.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1131.8" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1128.8" y="419.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.8" y="430.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1128.8" y="403.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.8" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1128.8" y="387.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.8" y="398.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1128.8" y="371.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1128.8" y="355.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.8" y="366.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.37%)</title><rect x="1128.8" y="339.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.37%)</title><rect x="1128.8" y="323.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.37%)</title><rect x="1128.8" y="307.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.8" y="318.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.37%)</title><rect x="1128.8" y="291.0" width="4.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1131.8" y="302.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.37%)</title><rect x="1128.8" y="275.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.8" y="286.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.37%)</title><rect x="1128.8" y="259.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.8" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (4 samples, 1.48%)</title><rect x="1133.2" y="675.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.37%)</title><rect x="1133.2" y="659.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.37%)</title><rect x="1133.2" y="643.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.37%)</title><rect x="1133.2" y="627.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation.hashCode (1 samples, 0.37%)</title><rect x="1133.2" y="611.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.hashCode (1 samples, 0.37%)</title><rect x="1133.2" y="595.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$MethodLocator$ForExplicitMethod.hashCode (1 samples, 0.37%)</title><rect x="1133.2" y="579.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.37%)</title><rect x="1133.2" y="563.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.37%)</title><rect x="1133.2" y="547.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.2" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.37%)</title><rect x="1133.2" y="531.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfMethod.get (1 samples, 0.37%)</title><rect x="1133.2" y="515.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.2" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$OfMethod.get (1 samples, 0.37%)</title><rect x="1133.2" y="499.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.2" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1133.2" y="483.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.2" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1133.2" y="467.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.2" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$Dispatcher$CreationAction.run (1 samples, 0.37%)</title><rect x="1133.2" y="451.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.2" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterDescription$ForLoadedParameter$Dispatcher$CreationAction.run (1 samples, 0.37%)</title><rect x="1133.2" y="435.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.2" y="446.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1133.2" y="419.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.2" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1133.2" y="403.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.2" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1133.2" y="387.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.2" y="398.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1133.2" y="371.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.2" y="382.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1133.2" y="355.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.2" y="366.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1133.2" y="339.0" width="4.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1136.2" y="350.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.37%)</title><rect x="1133.2" y="323.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1136.2" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/InstrumentedType$Default.getDeclaredMethods (1 samples, 0.37%)</title><rect x="1137.6" y="659.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.6" y="670.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1137.6" y="643.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.6" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1137.6" y="627.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.6" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1137.6" y="611.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.6" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1137.6" y="595.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.6" y="606.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.37%)</title><rect x="1137.6" y="579.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1140.6" y="590.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="1137.6" y="563.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.6" y="574.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.37%)</title><rect x="1137.6" y="547.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1140.6" y="558.0"></text>
</g>
<g>
<title>Rewriter::compute_index_maps() (1 samples, 0.37%)</title><rect x="1137.6" y="531.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1140.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (2 samples, 0.74%)</title><rect x="1141.9" y="659.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1144.9" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (2 samples, 0.74%)</title><rect x="1141.9" y="643.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.9" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.asGraph (1 samples, 0.37%)</title><rect x="1141.9" y="627.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.9" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1141.9" y="611.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.9" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1141.9" y="595.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.9" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1141.9" y="579.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.9" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1141.9" y="563.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.9" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1141.9" y="547.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.9" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1141.9" y="531.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.9" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1141.9" y="515.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.9" y="526.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1141.9" y="499.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.9" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1141.9" y="483.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.9" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="1141.9" y="467.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.9" y="478.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.37%)</title><rect x="1141.9" y="451.0" width="4.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1144.9" y="462.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.37%)</title><rect x="1141.9" y="435.0" width="4.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1144.9" y="446.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.37%)</title><rect x="1141.9" y="419.0" width="4.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1144.9" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.37%)</title><rect x="1141.9" y="403.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.9" y="414.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="1141.9" y="387.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.9" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="1141.9" y="371.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.9" y="382.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="1141.9" y="355.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.9" y="366.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.37%)</title><rect x="1141.9" y="339.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.9" y="350.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.37%)</title><rect x="1141.9" y="323.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.9" y="334.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 0.37%)</title><rect x="1141.9" y="307.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.9" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="1146.3" y="627.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.37%)</title><rect x="1146.3" y="611.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.37%)</title><rect x="1146.3" y="595.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.37%)</title><rect x="1146.3" y="579.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.37%)</title><rect x="1146.3" y="563.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.37%)</title><rect x="1146.3" y="547.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.3" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.37%)</title><rect x="1146.3" y="531.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.3" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1146.3" y="515.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.3" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1146.3" y="499.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.3" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1146.3" y="483.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.3" y="494.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1146.3" y="467.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.3" y="478.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1146.3" y="451.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.3" y="462.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1146.3" y="435.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1149.3" y="446.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.37%)</title><rect x="1146.3" y="419.0" width="4.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1149.3" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (4 samples, 1.48%)</title><rect x="1150.7" y="675.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (4 samples, 1.48%)</title><rect x="1150.7" y="659.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.getGenericSignature (1 samples, 0.37%)</title><rect x="1150.7" y="643.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1150.7" y="627.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1153.7" y="638.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1150.7" y="611.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.7" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1150.7" y="595.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.7" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1150.7" y="579.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.7" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1150.7" y="563.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.7" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1150.7" y="547.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.7" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1150.7" y="531.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.7" y="542.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1150.7" y="515.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1153.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1150.7" y="499.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.7" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="1150.7" y="483.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.7" y="494.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.37%)</title><rect x="1150.7" y="467.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1153.7" y="478.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.37%)</title><rect x="1150.7" y="451.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1153.7" y="462.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.37%)</title><rect x="1150.7" y="435.0" width="4.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1153.7" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.37%)</title><rect x="1150.7" y="419.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.7" y="430.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="1150.7" y="403.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.7" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.37%)</title><rect x="1150.7" y="387.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.7" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.37%)</title><rect x="1150.7" y="371.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.7" y="382.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.37%)</title><rect x="1150.7" y="355.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.7" y="366.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.37%)</title><rect x="1150.7" y="339.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.7" y="350.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.37%)</title><rect x="1150.7" y="323.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.7" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default.resolve (1 samples, 0.37%)</title><rect x="1155.0" y="643.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.0" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1155.0" y="627.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.0" y="638.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1155.0" y="611.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.0" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1155.0" y="595.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.0" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1155.0" y="579.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1158.0" y="590.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1155.0" y="563.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.0" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1155.0" y="547.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.0" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1155.0" y="531.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.0" y="542.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1155.0" y="515.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1155.0" y="499.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.0" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.37%)</title><rect x="1155.0" y="483.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.0" y="494.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.37%)</title><rect x="1155.0" y="467.0" width="4.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1158.0" y="478.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.37%)</title><rect x="1155.0" y="451.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1158.0" y="462.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.37%)</title><rect x="1155.0" y="435.0" width="4.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1158.0" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.37%)</title><rect x="1155.0" y="419.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.0" y="430.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.37%)</title><rect x="1155.0" y="403.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.0" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.37%)</title><rect x="1155.0" y="387.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.0" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::layout_fields(ConstantPool*, ClassFileParser::FieldAllocationCount const*, ClassFileParser::ClassAnnotationCollector const*, ClassFileParser::FieldLayoutInfo*, Thread*) (1 samples, 0.37%)</title><rect x="1155.0" y="371.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.0" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.37%)</title><rect x="1159.4" y="643.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyBody (1 samples, 0.37%)</title><rect x="1159.4" y="627.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod$WithBody.applyCode (1 samples, 0.37%)</title><rect x="1159.4" y="611.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1162.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$Appender.apply (1 samples, 0.37%)</title><rect x="1159.4" y="595.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$Appender.toStackManipulation (1 samples, 0.37%)</title><rect x="1159.4" y="579.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$ArgumentLoader$ForMethodParameter$Factory.resolve (1 samples, 0.37%)</title><rect x="1159.4" y="563.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1159.4" y="547.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.4" y="558.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.37%)</title><rect x="1159.4" y="531.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.4" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.37%)</title><rect x="1159.4" y="515.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.4" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.37%)</title><rect x="1159.4" y="499.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1162.4" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1159.4" y="483.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.4" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.37%)</title><rect x="1159.4" y="467.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.4" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.37%)</title><rect x="1159.4" y="451.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.37%)</title><rect x="1159.4" y="435.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.37%)</title><rect x="1159.4" y="419.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.4" y="430.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.37%)</title><rect x="1159.4" y="403.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.4" y="414.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.37%)</title><rect x="1159.4" y="387.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.4" y="398.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.37%)</title><rect x="1159.4" y="371.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1162.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.37%)</title><rect x="1159.4" y="355.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.37%)</title><rect x="1159.4" y="339.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1162.4" y="350.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1159.4" y="323.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1162.4" y="334.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1159.4" y="307.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.4" y="318.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1159.4" y="291.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.4" y="302.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1159.4" y="275.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1162.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1159.4" y="259.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="1159.4" y="243.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.4" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.37%)</title><rect x="1159.4" y="227.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.4" y="238.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.37%)</title><rect x="1159.4" y="211.0" width="4.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1162.4" y="222.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.37%)</title><rect x="1159.4" y="195.0" width="4.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1162.4" y="206.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.37%)</title><rect x="1159.4" y="179.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.4" y="190.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.37%)</title><rect x="1159.4" y="163.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.4" y="174.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.37%)</title><rect x="1159.4" y="147.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.4" y="158.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.37%)</title><rect x="1159.4" y="131.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.4" y="142.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.37%)</title><rect x="1159.4" y="115.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1162.4" y="126.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.37%)</title><rect x="1159.4" y="99.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.4" y="110.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.toByteArray (1 samples, 0.37%)</title><rect x="1163.8" y="643.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.8" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/MethodWriter.computeMethodInfoSize (1 samples, 0.37%)</title><rect x="1163.8" y="627.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1163.8" y="611.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.8" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1163.8" y="595.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.8" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.37%)</title><rect x="1163.8" y="579.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.8" y="590.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.37%)</title><rect x="1163.8" y="563.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.8" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$WithoutSpecifiedTarget.onArgument (1 samples, 0.37%)</title><rect x="1168.1" y="739.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.1" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1168.1" y="723.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="707.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.1" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="691.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.1" y="702.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="675.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.1" y="686.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="659.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.1" y="670.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1168.1" y="643.0" width="4.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1171.1" y="654.0"></text>
</g>
<g>
<title>JVM_GetMethodIxModifiers (1 samples, 0.37%)</title><rect x="1168.1" y="627.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1171.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.ignore (1 samples, 0.37%)</title><rect x="1172.5" y="931.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1175.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.ignore (1 samples, 0.37%)</title><rect x="1172.5" y="915.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1175.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.ignore (1 samples, 0.37%)</title><rect x="1172.5" y="899.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.5" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1172.5" y="883.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.5" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.37%)</title><rect x="1172.5" y="867.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.5" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1172.5" y="851.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.5" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.37%)</title><rect x="1172.5" y="835.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.5" y="846.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.37%)</title><rect x="1172.5" y="819.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.5" y="830.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="1172.5" y="803.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.5" y="814.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.37%)</title><rect x="1172.5" y="787.0" width="4.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1175.5" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.37%)</title><rect x="1172.5" y="771.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.5" y="782.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startProfilingAgent (3 samples, 1.11%)</title><rect x="1176.9" y="1043.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 1.11%)</title><rect x="1176.9" y="1027.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 1.11%)</title><rect x="1176.9" y="1011.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 1.11%)</title><rect x="1176.9" y="995.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 1.11%)</title><rect x="1176.9" y="979.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.9" y="990.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1176.9" y="963.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.9" y="974.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.37%)</title><rect x="1176.9" y="947.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.9" y="958.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1176.9" y="931.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.9" y="942.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.37%)</title><rect x="1176.9" y="915.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.9" y="926.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.expr (1 samples, 0.37%)</title><rect x="1176.9" y="899.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.9" y="910.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.sequence (1 samples, 0.37%)</title><rect x="1176.9" y="883.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.9" y="894.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.clazz (1 samples, 0.37%)</title><rect x="1176.9" y="867.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.9" y="878.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BitClass.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1176.9" y="851.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.9" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BitClass.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1176.9" y="835.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.37%)</title><rect x="1176.9" y="819.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.37%)</title><rect x="1176.9" y="803.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.37%)</title><rect x="1176.9" y="787.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.37%)</title><rect x="1176.9" y="771.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.37%)</title><rect x="1176.9" y="755.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.37%)</title><rect x="1176.9" y="739.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.37%)</title><rect x="1176.9" y="723.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.37%)</title><rect x="1176.9" y="707.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.37%)</title><rect x="1176.9" y="691.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visit (1 samples, 0.37%)</title><rect x="1176.9" y="675.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newClass (1 samples, 0.37%)</title><rect x="1176.9" y="659.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newStringishItem (1 samples, 0.37%)</title><rect x="1176.9" y="643.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newUTF8 (1 samples, 0.37%)</title><rect x="1176.9" y="627.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ByteVector.putUTF8 (1 samples, 0.37%)</title><rect x="1176.9" y="611.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.37%)</title><rect x="1176.9" y="595.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.37%)</title><rect x="1176.9" y="579.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.9" y="590.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.run (2 samples, 0.74%)</title><rect x="1181.3" y="963.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.3" y="974.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;clinit&gt; (2 samples, 0.74%)</title><rect x="1181.3" y="947.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (2 samples, 0.74%)</title><rect x="1181.3" y="931.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.3" y="942.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1181.3" y="915.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.37%)</title><rect x="1181.3" y="899.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.3" y="910.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1181.3" y="883.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.3" y="894.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.37%)</title><rect x="1181.3" y="867.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.3" y="878.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1181.3" y="851.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.3" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.37%)</title><rect x="1181.3" y="835.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.3" y="846.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.expr (1 samples, 0.37%)</title><rect x="1181.3" y="819.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.3" y="830.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.sequence (1 samples, 0.37%)</title><rect x="1181.3" y="803.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.3" y="814.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.group0 (1 samples, 0.37%)</title><rect x="1181.3" y="787.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1184.3" y="798.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.expr (1 samples, 0.37%)</title><rect x="1181.3" y="771.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.3" y="782.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.sequence (1 samples, 0.37%)</title><rect x="1181.3" y="755.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.3" y="766.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.atom (1 samples, 0.37%)</title><rect x="1181.3" y="739.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.3" y="750.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.escape (1 samples, 0.37%)</title><rect x="1181.3" y="723.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.3" y="734.0"></text>
</g>
<g>
<title>java/util/regex/CharPredicates.ASCII_DIGIT (1 samples, 0.37%)</title><rect x="1181.3" y="707.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.37%)</title><rect x="1181.3" y="691.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.37%)</title><rect x="1181.3" y="675.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.37%)</title><rect x="1181.3" y="659.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.37%)</title><rect x="1181.3" y="643.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.37%)</title><rect x="1181.3" y="627.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.37%)</title><rect x="1181.3" y="611.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.37%)</title><rect x="1181.3" y="595.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1184.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.37%)</title><rect x="1181.3" y="579.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.3" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.37%)</title><rect x="1181.3" y="563.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.3" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.acquireConstructorAccessor (1 samples, 0.37%)</title><rect x="1181.3" y="547.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newConstructorAccessor (1 samples, 0.37%)</title><rect x="1181.3" y="531.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSubclassOf (1 samples, 0.37%)</title><rect x="1181.3" y="515.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.3" y="526.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (1 samples, 0.37%)</title><rect x="1185.6" y="915.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.6" y="926.0"></text>
</g>
<g>
<title>java/util/UUID$Holder.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1185.6" y="899.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.6" y="910.0"></text>
</g>
<g>
<title>java/security/SecureRandom.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1185.6" y="883.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.6" y="894.0"></text>
</g>
<g>
<title>java/security/SecureRandom.getDefaultPRNG (1 samples, 0.37%)</title><rect x="1185.6" y="867.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.37%)</title><rect x="1185.6" y="851.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.6" y="862.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.37%)</title><rect x="1185.6" y="835.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.6" y="846.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.37%)</title><rect x="1185.6" y="819.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.6" y="830.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getProvider (1 samples, 0.37%)</title><rect x="1185.6" y="803.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.6" y="814.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderConfig.getProvider (1 samples, 0.37%)</title><rect x="1185.6" y="787.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.6" y="798.0"></text>
</g>
<g>
<title>sun/security/provider/Sun.&lt;init&gt; (1 samples, 0.37%)</title><rect x="1185.6" y="771.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.6" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/SunEntries.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1185.6" y="755.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.6" y="766.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG.&lt;clinit&gt; (1 samples, 0.37%)</title><rect x="1185.6" y="739.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/NativePRNG.initIO (1 samples, 0.37%)</title><rect x="1185.6" y="723.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.6" y="734.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.37%)</title><rect x="1185.6" y="707.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.6" y="718.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.37%)</title><rect x="1185.6" y="691.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.6" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="1185.6" y="675.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="1185.6" y="659.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.6" y="670.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.37%)</title><rect x="1185.6" y="643.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.6" y="654.0"></text>
</g>
</g>
</svg>
