<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1494" onload="init(evt)" viewBox="0 0 1200 1494" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1477"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1477"> </text>
<g id="frames">
<g>
<title>all (240 samples, 100.00%)</title><rect x="10.0" y="1443.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1454.0">all</text>
</g>
<g>
<title>LinearScan::interval_cmp(Interval**, Interval**) (1 samples, 0.42%)</title><rect x="10.0" y="1427.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1438.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.42%)</title><rect x="14.9" y="1427.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.9" y="1438.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.42%)</title><rect x="14.9" y="1411.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.9" y="1422.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.42%)</title><rect x="14.9" y="1395.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.9" y="1406.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.42%)</title><rect x="14.9" y="1379.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.9" y="1390.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.83%)</title><rect x="19.8" y="1427.0" width="9.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="22.8" y="1438.0"></text>
</g>
<g>
<title>Interpreter (2 samples, 0.83%)</title><rect x="19.8" y="1411.0" width="9.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="22.8" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/benchmark/LoadClasses.main (2 samples, 0.83%)</title><rect x="29.7" y="1427.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.forName (2 samples, 0.83%)</title><rect x="29.7" y="1411.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (2 samples, 0.83%)</title><rect x="29.7" y="1395.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.83%)</title><rect x="29.7" y="1379.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.83%)</title><rect x="29.7" y="1363.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.83%)</title><rect x="29.7" y="1347.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.83%)</title><rect x="29.7" y="1331.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.83%)</title><rect x="29.7" y="1315.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.83%)</title><rect x="29.7" y="1299.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.7" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="29.7" y="1283.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="29.7" y="1267.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="29.7" y="1251.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.7" y="1262.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="29.7" y="1235.0" width="4.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.7" y="1246.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="29.7" y="1219.0" width="4.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="32.7" y="1230.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="29.7" y="1203.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="32.7" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="29.7" y="1187.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.7" y="1198.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="29.7" y="1171.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.7" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="29.7" y="1155.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.7" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="29.7" y="1139.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.7" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.42%)</title><rect x="29.7" y="1123.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="32.7" y="1134.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.42%)</title><rect x="29.7" y="1107.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.7" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.42%)</title><rect x="29.7" y="1091.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="32.7" y="1102.0"></text>
</g>
<g>
<title>Symbol::as_C_string_flexible_buffer(Thread*, char*, int) const (1 samples, 0.42%)</title><rect x="29.7" y="1075.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="34.6" y="1283.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.6" y="1294.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="34.6" y="1267.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.6" y="1278.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="34.6" y="1251.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.6" y="1262.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.42%)</title><rect x="34.6" y="1235.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="34.6" y="1219.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="37.6" y="1230.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.42%)</title><rect x="34.6" y="1203.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="37.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 1.25%)</title><rect x="39.5" y="1427.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.5" y="1438.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.run (1 samples, 0.42%)</title><rect x="39.5" y="1411.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.5" y="1422.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/TraceProcessingWorker$TraceSerializingHandler.runDutyCycle (1 samples, 0.42%)</title><rect x="39.5" y="1395.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.5" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/CPUTimer.reset (1 samples, 0.42%)</title><rect x="39.5" y="1379.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.5" y="1390.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.reset (1 samples, 0.42%)</title><rect x="39.5" y="1363.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.5" y="1374.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.record (1 samples, 0.42%)</title><rect x="39.5" y="1347.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.5" y="1358.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/CPUTimer.flush (1 samples, 0.42%)</title><rect x="39.5" y="1331.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.5" y="1342.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.flush (1 samples, 0.42%)</title><rect x="39.5" y="1315.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.5" y="1326.0"></text>
</g>
<g>
<title>org/HdrHistogram/AbstractHistogram.getValueAtPercentile (1 samples, 0.42%)</title><rect x="39.5" y="1299.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.5" y="1310.0"></text>
</g>
<g>
<title>org/HdrHistogram/PackedHistogram.getCountAtIndex (1 samples, 0.42%)</title><rect x="39.5" y="1283.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.5" y="1294.0"></text>
</g>
<g>
<title>org/HdrHistogram/PackedHistogram.getCountAtNormalizedIndex (1 samples, 0.42%)</title><rect x="39.5" y="1267.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.5" y="1278.0"></text>
</g>
<g>
<title>org/HdrHistogram/packedarray/PackedLongArray.get (1 samples, 0.42%)</title><rect x="39.5" y="1251.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.5" y="1262.0"></text>
</g>
<g>
<title>org/HdrHistogram/packedarray/AbstractPackedLongArray.get (1 samples, 0.42%)</title><rect x="39.5" y="1235.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.5" y="1246.0"></text>
</g>
<g>
<title>org/HdrHistogram/packedarray/AbstractPackedArrayContext.getPackedIndex (1 samples, 0.42%)</title><rect x="39.5" y="1219.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.5" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$Worker.run (2 samples, 0.83%)</title><rect x="44.4" y="1411.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/DelayQueue.take (2 samples, 0.83%)</title><rect x="44.4" y="1395.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.4" y="1406.0"></text>
</g>
<g>
<title>datadog/trace/util/AgentTaskScheduler$PeriodicTask.getDelay (1 samples, 0.42%)</title><rect x="44.4" y="1379.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.convert (1 samples, 0.42%)</title><rect x="44.4" y="1363.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.4" y="1374.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.42%)</title><rect x="44.4" y="1347.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.4" y="1358.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.42%)</title><rect x="44.4" y="1331.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.4" y="1342.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.42%)</title><rect x="44.4" y="1315.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.4" y="1326.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="44.4" y="1299.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="1310.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="44.4" y="1283.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.4" y="1294.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="44.4" y="1267.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.4" y="1278.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="44.4" y="1251.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.4" y="1262.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.42%)</title><rect x="44.4" y="1235.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="1246.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="44.4" y="1219.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="1230.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.42%)</title><rect x="44.4" y="1203.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.4" y="1214.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.42%)</title><rect x="44.4" y="1187.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.4" y="1198.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.42%)</title><rect x="44.4" y="1171.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.4" y="1182.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.42%)</title><rect x="44.4" y="1155.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.4" y="1166.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.42%)</title><rect x="44.4" y="1139.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.4" y="1150.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.42%)</title><rect x="44.4" y="1123.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="1134.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.42%)</title><rect x="44.4" y="1107.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.4" y="1118.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (1 samples, 0.42%)</title><rect x="44.4" y="1091.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.4" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.42%)</title><rect x="44.4" y="1075.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.42%)</title><rect x="44.4" y="1059.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.42%)</title><rect x="44.4" y="1043.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.42%)</title><rect x="44.4" y="1027.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.4" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.42%)</title><rect x="44.4" y="1011.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.4" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.42%)</title><rect x="44.4" y="995.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.4" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="44.4" y="979.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.4" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="44.4" y="963.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.42%)</title><rect x="44.4" y="947.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.visitEnd (1 samples, 0.42%)</title><rect x="44.4" y="931.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.4" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="44.4" y="915.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="44.4" y="899.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.4" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="44.4" y="883.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="44.4" y="867.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.4" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="44.4" y="851.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="44.4" y="835.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="44.4" y="819.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.4" y="830.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="44.4" y="803.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="44.4" y="787.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="44.4" y="771.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="44.4" y="755.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.4" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="44.4" y="739.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="44.4" y="723.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="44.4" y="707.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="44.4" y="691.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.4" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="44.4" y="675.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.4" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="44.4" y="659.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="44.4" y="643.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.42%)</title><rect x="44.4" y="627.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.4" y="638.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.42%)</title><rect x="44.4" y="611.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.4" y="622.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.42%)</title><rect x="44.4" y="595.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.4" y="606.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.42%)</title><rect x="44.4" y="579.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.42%)</title><rect x="44.4" y="563.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.42%)</title><rect x="44.4" y="547.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.4" y="558.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="44.4" y="531.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.4" y="542.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="44.4" y="515.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.4" y="526.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="44.4" y="499.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.42%)</title><rect x="44.4" y="483.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.4" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.42%)</title><rect x="44.4" y="467.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.42%)</title><rect x="44.4" y="451.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.42%)</title><rect x="44.4" y="435.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="446.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.42%)</title><rect x="44.4" y="419.0" width="4.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="47.4" y="430.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.42%)</title><rect x="44.4" y="403.0" width="4.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="47.4" y="414.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="44.4" y="387.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="47.4" y="398.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="44.4" y="371.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="47.4" y="382.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.42%)</title><rect x="44.4" y="355.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="47.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.42%)</title><rect x="49.3" y="1379.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.42%)</title><rect x="49.3" y="1363.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.42%)</title><rect x="49.3" y="1347.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.42%)</title><rect x="49.3" y="1331.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStaticInit (2 samples, 0.83%)</title><rect x="54.3" y="1427.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.3" y="1438.0"></text>
</g>
<g>
<title>java/time/ZoneId.systemDefault (2 samples, 0.83%)</title><rect x="54.3" y="1411.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.3" y="1422.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefault (1 samples, 0.42%)</title><rect x="54.3" y="1395.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.3" y="1406.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefaultRef (1 samples, 0.42%)</title><rect x="54.3" y="1379.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.3" y="1390.0"></text>
</g>
<g>
<title>java/util/TimeZone.setDefaultZone (1 samples, 0.42%)</title><rect x="54.3" y="1363.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.3" y="1374.0"></text>
</g>
<g>
<title>java/util/TimeZone.getTimeZone (1 samples, 0.42%)</title><rect x="54.3" y="1347.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.3" y="1358.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTimeZone (1 samples, 0.42%)</title><rect x="54.3" y="1331.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.3" y="1342.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="54.3" y="1315.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.3" y="1326.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="54.3" y="1299.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.3" y="1310.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 0.42%)</title><rect x="54.3" y="1283.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.3" y="1294.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 0.42%)</title><rect x="54.3" y="1267.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.3" y="1278.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.load (1 samples, 0.42%)</title><rect x="54.3" y="1251.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.3" y="1262.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readUTF (1 samples, 0.42%)</title><rect x="54.3" y="1235.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.3" y="1246.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readUTF (1 samples, 0.42%)</title><rect x="54.3" y="1219.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.3" y="1230.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readUnsignedShort (1 samples, 0.42%)</title><rect x="54.3" y="1203.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.3" y="1214.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.42%)</title><rect x="59.2" y="1395.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.2" y="1406.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.42%)</title><rect x="59.2" y="1379.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.2" y="1390.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId (1 samples, 0.42%)</title><rect x="59.2" y="1363.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.2" y="1374.0"></text>
</g>
<g>
<title>java/util/TimeZone.toZoneId0 (1 samples, 0.42%)</title><rect x="59.2" y="1347.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.2" y="1358.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.42%)</title><rect x="59.2" y="1331.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.2" y="1342.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.42%)</title><rect x="59.2" y="1315.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.2" y="1326.0"></text>
</g>
<g>
<title>java/time/ZoneId.of (1 samples, 0.42%)</title><rect x="59.2" y="1299.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.2" y="1310.0"></text>
</g>
<g>
<title>java/time/ZoneRegion.ofId (1 samples, 0.42%)</title><rect x="59.2" y="1283.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.2" y="1294.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRulesProvider.getRules (1 samples, 0.42%)</title><rect x="59.2" y="1267.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.2" y="1278.0"></text>
</g>
<g>
<title>java/time/zone/TzdbZoneRulesProvider.provideRules (1 samples, 0.42%)</title><rect x="59.2" y="1251.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.2" y="1262.0"></text>
</g>
<g>
<title>java/time/zone/Ser.read (1 samples, 0.42%)</title><rect x="59.2" y="1235.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="1246.0"></text>
</g>
<g>
<title>java/time/zone/Ser.readInternal (1 samples, 0.42%)</title><rect x="59.2" y="1219.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.2" y="1230.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRules.readExternal (1 samples, 0.42%)</title><rect x="59.2" y="1203.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.2" y="1214.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRules.&lt;init&gt; (1 samples, 0.42%)</title><rect x="59.2" y="1187.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.2" y="1198.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.42%)</title><rect x="59.2" y="1171.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.2" y="1182.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1155.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="62.2" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1139.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="62.2" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1123.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="62.2" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1107.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="62.2" y="1118.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1091.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="62.2" y="1102.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1075.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="62.2" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1059.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.2" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="59.2" y="1043.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="62.2" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1027.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="62.2" y="1038.0"></text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="1011.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.2" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.42%)</title><rect x="59.2" y="995.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="62.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1534030866.invokeStaticInit (1 samples, 0.42%)</title><rect x="64.1" y="1427.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.1" y="1438.0"></text>
</g>
<g>
<title>java/time/ZonedDateTime.ofInstant (1 samples, 0.42%)</title><rect x="64.1" y="1411.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.1" y="1422.0"></text>
</g>
<g>
<title>java/time/ZonedDateTime.create (1 samples, 0.42%)</title><rect x="64.1" y="1395.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.1" y="1406.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRules.getOffset (1 samples, 0.42%)</title><rect x="64.1" y="1379.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.1" y="1390.0"></text>
</g>
<g>
<title>java/time/zone/ZoneRules.findTransitionArray (1 samples, 0.42%)</title><rect x="64.1" y="1363.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.1" y="1374.0"></text>
</g>
<g>
<title>java/time/zone/ZoneOffsetTransitionRule.createTransition (1 samples, 0.42%)</title><rect x="64.1" y="1347.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.1" y="1358.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="64.1" y="1331.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="67.1" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="64.1" y="1315.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="67.1" y="1326.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1299.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="67.1" y="1310.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1283.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="67.1" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1267.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="67.1" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1251.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="67.1" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1235.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="67.1" y="1246.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1219.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="67.1" y="1230.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1203.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="67.1" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1187.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="67.1" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="64.1" y="1171.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="67.1" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1155.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="67.1" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1139.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="67.1" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::copy_localvariable_table(ConstMethod const*, int, unsigned short*, void const**, int, unsigned short*, void const**, Thread*) (1 samples, 0.42%)</title><rect x="64.1" y="1123.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="67.1" y="1134.0"></text>
</g>
<g>
<title>start_thread (121 samples, 50.42%)</title><rect x="69.0" y="1427.0" width="594.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="72.0" y="1438.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (121 samples, 50.42%)</title><rect x="69.0" y="1411.0" width="594.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="72.0" y="1422.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (121 samples, 50.42%)</title><rect x="69.0" y="1395.0" width="594.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="72.0" y="1406.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (120 samples, 50.00%)</title><rect x="69.0" y="1379.0" width="590.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="72.0" y="1390.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (117 samples, 48.75%)</title><rect x="69.0" y="1363.0" width="575.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="72.0" y="1374.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::collect_statistics(CompilerThread*, elapsedTimer, CompileTask*) (1 samples, 0.42%)</title><rect x="69.0" y="1347.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="72.0" y="1358.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (115 samples, 47.92%)</title><rect x="73.9" y="1347.0" width="565.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="76.9" y="1358.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (58 samples, 24.17%)</title><rect x="73.9" y="1331.0" width="285.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="76.9" y="1342.0">C2Compiler::compile_method(ciEnv*, ciM..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (58 samples, 24.17%)</title><rect x="73.9" y="1315.0" width="285.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="76.9" y="1326.0">Compile::Compile(ciEnv*, C2Compiler*, ..</text>
</g>
<g>
<title>Compile::Code_Gen() (38 samples, 15.83%)</title><rect x="73.9" y="1299.0" width="186.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="76.9" y="1310.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (3 samples, 1.25%)</title><rect x="73.9" y="1283.0" width="14.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="76.9" y="1294.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.42%)</title><rect x="73.9" y="1267.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="76.9" y="1278.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.42%)</title><rect x="73.9" y="1251.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="76.9" y="1262.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.42%)</title><rect x="78.8" y="1267.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="81.8" y="1278.0"></text>
</g>
<g>
<title>Compile::init_scratch_buffer_blob(int) (1 samples, 0.42%)</title><rect x="78.8" y="1251.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="81.8" y="1262.0"></text>
</g>
<g>
<title>BufferBlob::create(char const*, int) (1 samples, 0.42%)</title><rect x="78.8" y="1235.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="81.8" y="1246.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (1 samples, 0.42%)</title><rect x="78.8" y="1219.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="81.8" y="1230.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long) (1 samples, 0.42%)</title><rect x="78.8" y="1203.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="81.8" y="1214.0"></text>
</g>
<g>
<title>MachHaltNode::jvms() const (1 samples, 0.42%)</title><rect x="83.8" y="1267.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="86.8" y="1278.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.42%)</title><rect x="88.7" y="1283.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="91.7" y="1294.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.42%)</title><rect x="88.7" y="1267.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.7" y="1278.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.42%)</title><rect x="88.7" y="1251.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="91.7" y="1262.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.42%)</title><rect x="88.7" y="1235.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="91.7" y="1246.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.42%)</title><rect x="88.7" y="1219.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="91.7" y="1230.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.42%)</title><rect x="88.7" y="1203.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="91.7" y="1214.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.42%)</title><rect x="93.6" y="1283.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="96.6" y="1294.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (1 samples, 0.42%)</title><rect x="93.6" y="1267.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="96.6" y="1278.0"></text>
</g>
<g>
<title>Block::succ_prob(unsigned int) (1 samples, 0.42%)</title><rect x="93.6" y="1251.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="96.6" y="1262.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (7 samples, 2.92%)</title><rect x="98.5" y="1283.0" width="34.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="101.5" y="1294.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (7 samples, 2.92%)</title><rect x="98.5" y="1267.0" width="34.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="101.5" y="1278.0">Ph..</text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.83%)</title><rect x="98.5" y="1251.0" width="9.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="101.5" y="1262.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.42%)</title><rect x="103.4" y="1235.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="106.4" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.42%)</title><rect x="108.3" y="1251.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="111.3" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.42%)</title><rect x="113.3" y="1251.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="116.3" y="1262.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.83%)</title><rect x="118.2" y="1251.0" width="9.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="121.2" y="1262.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.42%)</title><rect x="123.1" y="1235.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="126.1" y="1246.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.42%)</title><rect x="128.0" y="1251.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="131.0" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (26 samples, 10.83%)</title><rect x="132.9" y="1283.0" width="127.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="135.9" y="1294.0">PhaseChaitin::Re..</text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.42%)</title><rect x="132.9" y="1267.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="135.9" y="1278.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.42%)</title><rect x="137.8" y="1267.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="140.8" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.83%)</title><rect x="142.8" y="1267.0" width="9.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="145.8" y="1278.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.42%)</title><rect x="142.8" y="1251.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="145.8" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.42%)</title><rect x="147.7" y="1251.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="150.7" y="1262.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.42%)</title><rect x="147.7" y="1235.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="150.7" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.42%)</title><rect x="152.6" y="1267.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="155.6" y="1278.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.42%)</title><rect x="152.6" y="1251.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="155.6" y="1262.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.42%)</title><rect x="152.6" y="1235.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="155.6" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.83%)</title><rect x="157.5" y="1267.0" width="9.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="160.5" y="1278.0"></text>
</g>
<g>
<title>loadConPNode::rule() const (1 samples, 0.42%)</title><rect x="157.5" y="1251.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="160.5" y="1262.0"></text>
</g>
<g>
<title>loadNNode::rule() const (1 samples, 0.42%)</title><rect x="162.4" y="1251.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="165.4" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 2.50%)</title><rect x="167.3" y="1267.0" width="29.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="170.3" y="1278.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.42%)</title><rect x="172.2" y="1251.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="175.2" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 1.25%)</title><rect x="177.2" y="1251.0" width="14.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="180.2" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.42%)</title><rect x="191.9" y="1251.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="194.9" y="1262.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.42%)</title><rect x="191.9" y="1235.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="194.9" y="1246.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.83%)</title><rect x="196.8" y="1267.0" width="9.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="199.8" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.83%)</title><rect x="196.8" y="1251.0" width="9.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="199.8" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 1.25%)</title><rect x="206.7" y="1267.0" width="14.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="209.7" y="1278.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.42%)</title><rect x="216.5" y="1251.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="219.5" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.42%)</title><rect x="221.4" y="1267.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="224.4" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 1.67%)</title><rect x="226.3" y="1267.0" width="19.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="229.3" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.83%)</title><rect x="236.2" y="1251.0" width="9.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="239.2" y="1262.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.42%)</title><rect x="246.0" y="1267.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="249.0" y="1278.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.42%)</title><rect x="250.9" y="1267.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="253.9" y="1278.0"></text>
</g>
<g>
<title>rolI_rReg_i8_0Node::out_RegMask() const (1 samples, 0.42%)</title><rect x="255.8" y="1267.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="258.8" y="1278.0"></text>
</g>
<g>
<title>Compile::Optimize() (9 samples, 3.75%)</title><rect x="260.8" y="1299.0" width="44.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="263.8" y="1310.0">Comp..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.344] (3 samples, 1.25%)</title><rect x="260.8" y="1283.0" width="14.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="263.8" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 1.25%)</title><rect x="260.8" y="1267.0" width="14.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="263.8" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.42%)</title><rect x="260.8" y="1251.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="263.8" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.42%)</title><rect x="260.8" y="1235.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="263.8" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.126] (1 samples, 0.42%)</title><rect x="260.8" y="1219.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="263.8" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.83%)</title><rect x="265.7" y="1251.0" width="9.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="268.7" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.42%)</title><rect x="270.6" y="1235.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="273.6" y="1246.0"></text>
</g>
<g>
<title>Compile::remove_range_check_casts(PhaseIterGVN&amp;) (1 samples, 0.42%)</title><rect x="275.5" y="1283.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="278.5" y="1294.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.42%)</title><rect x="275.5" y="1267.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="278.5" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.42%)</title><rect x="275.5" y="1251.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="278.5" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.83%)</title><rect x="280.4" y="1283.0" width="9.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="283.4" y="1294.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.42%)</title><rect x="280.4" y="1267.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="283.4" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.42%)</title><rect x="280.4" y="1251.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="283.4" y="1262.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.42%)</title><rect x="280.4" y="1235.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="283.4" y="1246.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.42%)</title><rect x="285.3" y="1267.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="288.3" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.42%)</title><rect x="285.3" y="1251.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="288.3" y="1262.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (2 samples, 0.83%)</title><rect x="290.2" y="1283.0" width="9.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="293.2" y="1294.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (2 samples, 0.83%)</title><rect x="290.2" y="1267.0" width="9.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="293.2" y="1278.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.42%)</title><rect x="300.1" y="1283.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="303.1" y="1294.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.42%)</title><rect x="300.1" y="1267.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="303.1" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.42%)</title><rect x="300.1" y="1251.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="303.1" y="1262.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.42%)</title><rect x="300.1" y="1235.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="303.1" y="1246.0"></text>
</g>
<g>
<title>PhiNode::Opcode() const (1 samples, 0.42%)</title><rect x="300.1" y="1219.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="303.1" y="1230.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.42%)</title><rect x="305.0" y="1299.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="308.0" y="1310.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.42%)</title><rect x="309.9" y="1299.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="312.9" y="1310.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.42%)</title><rect x="309.9" y="1283.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="312.9" y="1294.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.42%)</title><rect x="309.9" y="1267.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="312.9" y="1278.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.42%)</title><rect x="309.9" y="1251.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="312.9" y="1262.0"></text>
</g>
<g>
<title>CompileWrapper::~CompileWrapper() (1 samples, 0.42%)</title><rect x="314.8" y="1299.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="317.8" y="1310.0"></text>
</g>
<g>
<title>BufferBlob::free(BufferBlob*) (1 samples, 0.42%)</title><rect x="314.8" y="1283.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="317.8" y="1294.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.42%)</title><rect x="314.8" y="1267.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="317.8" y="1278.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.42%)</title><rect x="314.8" y="1251.0" width="5.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="317.8" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 2.08%)</title><rect x="319.8" y="1299.0" width="24.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="322.8" y="1310.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 2.08%)</title><rect x="319.8" y="1283.0" width="24.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="322.8" y="1294.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 2.08%)</title><rect x="319.8" y="1267.0" width="24.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="322.8" y="1278.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 2.08%)</title><rect x="319.8" y="1251.0" width="24.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="322.8" y="1262.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 2.08%)</title><rect x="319.8" y="1235.0" width="24.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="322.8" y="1246.0">P..</text>
</g>
<g>
<title>Parse::do_call() (5 samples, 2.08%)</title><rect x="319.8" y="1219.0" width="24.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="322.8" y="1230.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 1.25%)</title><rect x="319.8" y="1203.0" width="14.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="322.8" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 1.25%)</title><rect x="319.8" y="1187.0" width="14.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="322.8" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 1.25%)</title><rect x="319.8" y="1171.0" width="14.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="322.8" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 1.25%)</title><rect x="319.8" y="1155.0" width="14.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="322.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 1.25%)</title><rect x="319.8" y="1139.0" width="14.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="322.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 1.25%)</title><rect x="319.8" y="1123.0" width="14.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="322.8" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="319.8" y="1107.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="322.8" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="319.8" y="1091.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="322.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="319.8" y="1075.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="322.8" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="319.8" y="1059.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="322.8" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="319.8" y="1043.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="322.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="319.8" y="1027.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="322.8" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="319.8" y="1011.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="322.8" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="319.8" y="995.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="322.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="319.8" y="979.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="322.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="319.8" y="963.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="322.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="319.8" y="947.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="322.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.42%)</title><rect x="319.8" y="931.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="322.8" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="319.8" y="915.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="322.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="319.8" y="899.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="322.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="319.8" y="883.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="322.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="319.8" y="867.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="322.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.42%)</title><rect x="319.8" y="851.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="322.8" y="862.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.42%)</title><rect x="319.8" y="835.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="322.8" y="846.0"></text>
</g>
<g>
<title>AddINode::Identity(PhaseGVN*) (1 samples, 0.42%)</title><rect x="319.8" y="819.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="322.8" y="830.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.42%)</title><rect x="319.8" y="803.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="322.8" y="814.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.83%)</title><rect x="324.7" y="1107.0" width="9.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="327.7" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.83%)</title><rect x="324.7" y="1091.0" width="9.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="327.7" y="1102.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.83%)</title><rect x="324.7" y="1075.0" width="9.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="327.7" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.42%)</title><rect x="324.7" y="1059.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="327.7" y="1070.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.42%)</title><rect x="324.7" y="1043.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="327.7" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.42%)</title><rect x="324.7" y="1027.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="327.7" y="1038.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.42%)</title><rect x="324.7" y="1011.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="327.7" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.42%)</title><rect x="324.7" y="995.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="327.7" y="1006.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.42%)</title><rect x="329.6" y="1059.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="332.6" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_interface_method_or_null(LinkInfo const&amp;) (1 samples, 0.42%)</title><rect x="329.6" y="1043.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="332.6" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="329.6" y="1027.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="332.6" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.42%)</title><rect x="329.6" y="1011.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="332.6" y="1022.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::loader_data(oopDesc*) (1 samples, 0.42%)</title><rect x="329.6" y="995.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="332.6" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.83%)</title><rect x="334.5" y="1203.0" width="9.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="337.5" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.83%)</title><rect x="334.5" y="1187.0" width="9.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="337.5" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.83%)</title><rect x="334.5" y="1171.0" width="9.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="337.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.83%)</title><rect x="334.5" y="1155.0" width="9.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="337.5" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.83%)</title><rect x="334.5" y="1139.0" width="9.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="337.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.83%)</title><rect x="334.5" y="1123.0" width="9.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="337.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.83%)</title><rect x="334.5" y="1107.0" width="9.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="337.5" y="1118.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.83%)</title><rect x="334.5" y="1091.0" width="9.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="337.5" y="1102.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.42%)</title><rect x="334.5" y="1075.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="337.5" y="1086.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.42%)</title><rect x="334.5" y="1059.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="337.5" y="1070.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.42%)</title><rect x="334.5" y="1043.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="337.5" y="1054.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.42%)</title><rect x="334.5" y="1027.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="337.5" y="1038.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="339.4" y="1075.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="342.4" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.42%)</title><rect x="339.4" y="1059.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="342.4" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.42%)</title><rect x="339.4" y="1043.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="342.4" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.42%)</title><rect x="339.4" y="1027.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="342.4" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.42%)</title><rect x="339.4" y="1011.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="342.4" y="1022.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.42%)</title><rect x="339.4" y="995.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="342.4" y="1006.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 1.25%)</title><rect x="344.3" y="1299.0" width="14.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="347.3" y="1310.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 1.25%)</title><rect x="344.3" y="1283.0" width="14.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="347.3" y="1294.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (55 samples, 22.92%)</title><rect x="359.1" y="1331.0" width="270.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="362.1" y="1342.0">Compiler::compile_method(ciEnv*, ciM..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (55 samples, 22.92%)</title><rect x="359.1" y="1315.0" width="270.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="362.1" y="1326.0">Compilation::Compilation(AbstractCom..</text>
</g>
<g>
<title>Compilation::compile_method() (55 samples, 22.92%)</title><rect x="359.1" y="1299.0" width="270.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="362.1" y="1310.0">Compilation::compile_method()</text>
</g>
<g>
<title>Compilation::compile_java_method() (51 samples, 21.25%)</title><rect x="359.1" y="1283.0" width="250.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="362.1" y="1294.0">Compilation::compile_java_method()</text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (26 samples, 10.83%)</title><rect x="359.1" y="1267.0" width="127.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="362.1" y="1278.0">Compilation::bui..</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (2 samples, 0.83%)</title><rect x="359.1" y="1251.0" width="9.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="362.1" y="1262.0"></text>
</g>
<g>
<title>Instruction::hash() const (1 samples, 0.42%)</title><rect x="359.1" y="1235.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="362.1" y="1246.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.42%)</title><rect x="364.0" y="1235.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="367.0" y="1246.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (21 samples, 8.75%)</title><rect x="368.9" y="1251.0" width="103.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="371.9" y="1262.0">IR::IR(Compi..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (21 samples, 8.75%)</title><rect x="368.9" y="1235.0" width="103.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="371.9" y="1246.0">IRScope::IRS..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (21 samples, 8.75%)</title><rect x="368.9" y="1219.0" width="103.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="371.9" y="1230.0">GraphBuilder..</text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.42%)</title><rect x="368.9" y="1203.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="371.9" y="1214.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.42%)</title><rect x="368.9" y="1187.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="371.9" y="1198.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.42%)</title><rect x="368.9" y="1171.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="371.9" y="1182.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.42%)</title><rect x="368.9" y="1155.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="371.9" y="1166.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (1 samples, 0.42%)</title><rect x="373.8" y="1203.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="376.8" y="1214.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.42%)</title><rect x="373.8" y="1187.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="376.8" y="1198.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.42%)</title><rect x="373.8" y="1171.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="376.8" y="1182.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.42%)</title><rect x="373.8" y="1155.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="376.8" y="1166.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.42%)</title><rect x="373.8" y="1139.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="376.8" y="1150.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.42%)</title><rect x="373.8" y="1123.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="376.8" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (18 samples, 7.50%)</title><rect x="378.8" y="1203.0" width="88.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="381.8" y="1214.0">GraphBuild..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (18 samples, 7.50%)</title><rect x="378.8" y="1187.0" width="88.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="381.8" y="1198.0">GraphBuild..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (4 samples, 1.67%)</title><rect x="378.8" y="1171.0" width="19.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="381.8" y="1182.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (3 samples, 1.25%)</title><rect x="378.8" y="1155.0" width="14.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="381.8" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.83%)</title><rect x="378.8" y="1139.0" width="9.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="381.8" y="1150.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.83%)</title><rect x="378.8" y="1123.0" width="9.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="381.8" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.83%)</title><rect x="378.8" y="1107.0" width="9.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="381.8" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.42%)</title><rect x="378.8" y="1091.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="381.8" y="1102.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.42%)</title><rect x="378.8" y="1075.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="381.8" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.42%)</title><rect x="383.7" y="1091.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="386.7" y="1102.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.42%)</title><rect x="383.7" y="1075.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="386.7" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.42%)</title><rect x="383.7" y="1059.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="386.7" y="1070.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.42%)</title><rect x="388.6" y="1139.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="391.6" y="1150.0"></text>
</g>
<g>
<title>ciInstanceKlass::java_mirror() (1 samples, 0.42%)</title><rect x="393.5" y="1155.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="396.5" y="1166.0"></text>
</g>
<g>
<title>ciKlass::java_mirror() (1 samples, 0.42%)</title><rect x="393.5" y="1139.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="396.5" y="1150.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.42%)</title><rect x="393.5" y="1123.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="396.5" y="1134.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.42%)</title><rect x="393.5" y="1107.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="396.5" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (14 samples, 5.83%)</title><rect x="398.4" y="1171.0" width="68.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="401.4" y="1182.0">GraphBu..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (13 samples, 5.42%)</title><rect x="398.4" y="1155.0" width="63.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="401.4" y="1166.0">GraphBu..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (13 samples, 5.42%)</title><rect x="398.4" y="1139.0" width="63.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="401.4" y="1150.0">GraphBu..</text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.42%)</title><rect x="398.4" y="1123.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="401.4" y="1134.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.42%)</title><rect x="398.4" y="1107.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="401.4" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (10 samples, 4.17%)</title><rect x="403.3" y="1123.0" width="49.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="406.3" y="1134.0">Graph..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (10 samples, 4.17%)</title><rect x="403.3" y="1107.0" width="49.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="406.3" y="1118.0">Graph..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.83%)</title><rect x="403.3" y="1091.0" width="9.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="406.3" y="1102.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.83%)</title><rect x="403.3" y="1075.0" width="9.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="406.3" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.83%)</title><rect x="403.3" y="1059.0" width="9.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="406.3" y="1070.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.83%)</title><rect x="403.3" y="1043.0" width="9.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="406.3" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.42%)</title><rect x="403.3" y="1027.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="406.3" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::find_interface_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.42%)</title><rect x="403.3" y="1011.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="406.3" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.42%)</title><rect x="403.3" y="995.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="406.3" y="1006.0"></text>
</g>
<g>
<title>JavaFieldStream::JavaFieldStream(InstanceKlass const*) (1 samples, 0.42%)</title><rect x="403.3" y="979.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="406.3" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.42%)</title><rect x="408.3" y="1027.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="411.3" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.42%)</title><rect x="408.3" y="1011.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="411.3" y="1022.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.42%)</title><rect x="408.3" y="995.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="411.3" y="1006.0"></text>
</g>
<g>
<title>os::current_thread_id() (1 samples, 0.42%)</title><rect x="408.3" y="979.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="411.3" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (1 samples, 0.42%)</title><rect x="413.2" y="1091.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="416.2" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.42%)</title><rect x="413.2" y="1075.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="416.2" y="1086.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.42%)</title><rect x="413.2" y="1059.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="416.2" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (7 samples, 2.92%)</title><rect x="418.1" y="1091.0" width="34.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="421.1" y="1102.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 2.92%)</title><rect x="418.1" y="1075.0" width="34.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="421.1" y="1086.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 2.50%)</title><rect x="418.1" y="1059.0" width="29.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="421.1" y="1070.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 2.50%)</title><rect x="418.1" y="1043.0" width="29.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="421.1" y="1054.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 2.50%)</title><rect x="418.1" y="1027.0" width="29.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="421.1" y="1038.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.42%)</title><rect x="418.1" y="1011.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="421.1" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.42%)</title><rect x="418.1" y="995.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="421.1" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.42%)</title><rect x="418.1" y="979.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="421.1" y="990.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.42%)</title><rect x="418.1" y="963.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="421.1" y="974.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.42%)</title><rect x="418.1" y="947.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="421.1" y="958.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_in_package(char const*, int) (1 samples, 0.42%)</title><rect x="418.1" y="931.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="421.1" y="942.0"></text>
</g>
<g>
<title>ciSymbol::starts_with(char const*, int) const (1 samples, 0.42%)</title><rect x="418.1" y="915.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="421.1" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.42%)</title><rect x="418.1" y="899.0" width="4.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="421.1" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.42%)</title><rect x="423.0" y="1011.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="426.0" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 1.25%)</title><rect x="427.9" y="1011.0" width="14.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="430.9" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 1.25%)</title><rect x="427.9" y="995.0" width="14.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="430.9" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 1.25%)</title><rect x="427.9" y="979.0" width="14.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="430.9" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.83%)</title><rect x="427.9" y="963.0" width="9.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="430.9" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.83%)</title><rect x="427.9" y="947.0" width="9.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="430.9" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.83%)</title><rect x="427.9" y="931.0" width="9.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="430.9" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="427.9" y="915.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="430.9" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="427.9" y="899.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="430.9" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.42%)</title><rect x="427.9" y="883.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="430.9" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.42%)</title><rect x="427.9" y="867.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="430.9" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.42%)</title><rect x="427.9" y="851.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="430.9" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="427.9" y="835.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="430.9" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="427.9" y="819.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="430.9" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.42%)</title><rect x="427.9" y="803.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="430.9" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.42%)</title><rect x="427.9" y="787.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="430.9" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.42%)</title><rect x="427.9" y="771.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="430.9" y="782.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.42%)</title><rect x="427.9" y="755.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="430.9" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.42%)</title><rect x="427.9" y="739.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="430.9" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.42%)</title><rect x="427.9" y="723.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="430.9" y="734.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.42%)</title><rect x="427.9" y="707.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="430.9" y="718.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.42%)</title><rect x="427.9" y="691.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="430.9" y="702.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.42%)</title><rect x="427.9" y="675.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="430.9" y="686.0"></text>
</g>
<g>
<title>Dependencies::check_evol_method(Method*) (1 samples, 0.42%)</title><rect x="427.9" y="659.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="430.9" y="670.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.42%)</title><rect x="432.8" y="915.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="435.8" y="926.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.42%)</title><rect x="432.8" y="899.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="435.8" y="910.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.42%)</title><rect x="432.8" y="883.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="435.8" y="894.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.42%)</title><rect x="432.8" y="867.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="435.8" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (1 samples, 0.42%)</title><rect x="432.8" y="851.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="435.8" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.42%)</title><rect x="432.8" y="835.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="435.8" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.42%)</title><rect x="437.8" y="963.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="440.8" y="974.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.42%)</title><rect x="437.8" y="947.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="440.8" y="958.0"></text>
</g>
<g>
<title>ciMethod::load_code() (1 samples, 0.42%)</title><rect x="437.8" y="931.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="440.8" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::load_constant() (1 samples, 0.42%)</title><rect x="442.7" y="1011.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="445.7" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_constant() (1 samples, 0.42%)</title><rect x="442.7" y="995.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="445.7" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_constant_by_index(constantPoolHandle const&amp;, int, int, ciInstanceKlass*) (1 samples, 0.42%)</title><rect x="442.7" y="979.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="445.7" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 2670710ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.42%)</title><rect x="442.7" y="963.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="445.7" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (1 samples, 0.42%)</title><rect x="447.6" y="1059.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="450.6" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="447.6" y="1043.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.6" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="447.6" y="1027.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="450.6" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.42%)</title><rect x="447.6" y="1011.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="450.6" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.42%)</title><rect x="447.6" y="995.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="450.6" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.42%)</title><rect x="447.6" y="979.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="450.6" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="447.6" y="963.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="450.6" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.42%)</title><rect x="447.6" y="947.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="450.6" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.42%)</title><rect x="447.6" y="931.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.6" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.42%)</title><rect x="447.6" y="915.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="450.6" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.42%)</title><rect x="447.6" y="899.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="450.6" y="910.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.42%)</title><rect x="447.6" y="883.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="450.6" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.42%)</title><rect x="447.6" y="867.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="450.6" y="878.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.42%)</title><rect x="447.6" y="851.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.6" y="862.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.42%)</title><rect x="447.6" y="835.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="450.6" y="846.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.42%)</title><rect x="447.6" y="819.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="450.6" y="830.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.42%)</title><rect x="447.6" y="803.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="450.6" y="814.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.42%)</title><rect x="447.6" y="787.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="450.6" y="798.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.42%)</title><rect x="452.5" y="1123.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="455.5" y="1134.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="452.5" y="1107.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="455.5" y="1118.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="452.5" y="1091.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="455.5" y="1102.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="452.5" y="1075.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="455.5" y="1086.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 0.42%)</title><rect x="452.5" y="1059.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="455.5" y="1070.0"></text>
</g>
<g>
<title>MethodData::post_initialize(BytecodeStream*) (1 samples, 0.42%)</title><rect x="452.5" y="1043.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="455.5" y="1054.0"></text>
</g>
<g>
<title>MultiBranchData::post_initialize(BytecodeStream*, MethodData*) (1 samples, 0.42%)</title><rect x="452.5" y="1027.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="455.5" y="1038.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.42%)</title><rect x="452.5" y="1011.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="455.5" y="1022.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.42%)</title><rect x="452.5" y="995.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="455.5" y="1006.0"></text>
</g>
<g>
<title>ciMethod::has_balanced_monitors() (1 samples, 0.42%)</title><rect x="457.4" y="1123.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="460.4" y="1134.0"></text>
</g>
<g>
<title>GenerateOopMap::compute_map(Thread*) (1 samples, 0.42%)</title><rect x="457.4" y="1107.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="460.4" y="1118.0"></text>
</g>
<g>
<title>GenerateOopMap::do_interpretation() (1 samples, 0.42%)</title><rect x="457.4" y="1091.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="460.4" y="1102.0"></text>
</g>
<g>
<title>GenerateOopMap::init_basic_blocks() (1 samples, 0.42%)</title><rect x="457.4" y="1075.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="460.4" y="1086.0"></text>
</g>
<g>
<title>GenerateOopMap::mark_reachable_code() (1 samples, 0.42%)</title><rect x="457.4" y="1059.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="460.4" y="1070.0"></text>
</g>
<g>
<title>Instruction::exact_type() const (1 samples, 0.42%)</title><rect x="462.3" y="1155.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="465.3" y="1166.0"></text>
</g>
<g>
<title>Invoke::declared_type() const (1 samples, 0.42%)</title><rect x="462.3" y="1139.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="465.3" y="1150.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.42%)</title><rect x="462.3" y="1123.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="465.3" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::state_at_entry() (1 samples, 0.42%)</title><rect x="467.3" y="1203.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="470.3" y="1214.0"></text>
</g>
<g>
<title>IR::compute_code() (2 samples, 0.83%)</title><rect x="472.2" y="1251.0" width="9.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="475.2" y="1262.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (2 samples, 0.83%)</title><rect x="472.2" y="1235.0" width="9.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="475.2" y="1246.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_dominator_impl(BlockBegin*, BlockBegin*) (1 samples, 0.42%)</title><rect x="472.2" y="1219.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="475.2" y="1230.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_order(BlockBegin*) (1 samples, 0.42%)</title><rect x="477.1" y="1219.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="480.1" y="1230.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::sort_into_work_list(BlockBegin*) (1 samples, 0.42%)</title><rect x="477.1" y="1203.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="480.1" y="1214.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (1 samples, 0.42%)</title><rect x="482.0" y="1251.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="485.0" y="1262.0"></text>
</g>
<g>
<title>ValueStack::pin_stack_for_linear_scan() (1 samples, 0.42%)</title><rect x="482.0" y="1235.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="485.0" y="1246.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (4 samples, 1.67%)</title><rect x="486.9" y="1267.0" width="19.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="489.9" y="1278.0"></text>
</g>
<g>
<title>AbstractAssembler::bind(Label&amp;) (1 samples, 0.42%)</title><rect x="486.9" y="1251.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="489.9" y="1262.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.83%)</title><rect x="491.8" y="1251.0" width="9.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="494.8" y="1262.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (1 samples, 0.42%)</title><rect x="491.8" y="1235.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="494.8" y="1246.0"></text>
</g>
<g>
<title>LIR_OprDesc::as_register() const (1 samples, 0.42%)</title><rect x="491.8" y="1219.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="494.8" y="1230.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.42%)</title><rect x="496.8" y="1235.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="499.8" y="1246.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.42%)</title><rect x="496.8" y="1219.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="499.8" y="1230.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.42%)</title><rect x="496.8" y="1203.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="499.8" y="1214.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.42%)</title><rect x="496.8" y="1187.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="499.8" y="1198.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.42%)</title><rect x="501.7" y="1251.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="504.7" y="1262.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.42%)</title><rect x="501.7" y="1235.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="504.7" y="1246.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.42%)</title><rect x="501.7" y="1219.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="504.7" y="1230.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.42%)</title><rect x="501.7" y="1203.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="504.7" y="1214.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.42%)</title><rect x="501.7" y="1187.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="504.7" y="1198.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.42%)</title><rect x="501.7" y="1171.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="504.7" y="1182.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (21 samples, 8.75%)</title><rect x="506.6" y="1267.0" width="103.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="509.6" y="1278.0">Compilation:..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (5 samples, 2.08%)</title><rect x="506.6" y="1251.0" width="24.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="509.6" y="1262.0">B..</text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (5 samples, 2.08%)</title><rect x="506.6" y="1235.0" width="24.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="509.6" y="1246.0">n..</text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (2 samples, 0.83%)</title><rect x="506.6" y="1219.0" width="9.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="509.6" y="1230.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (2 samples, 0.83%)</title><rect x="506.6" y="1203.0" width="9.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="509.6" y="1214.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (1 samples, 0.42%)</title><rect x="506.6" y="1187.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="509.6" y="1198.0"></text>
</g>
<g>
<title>PhiResolver::create_node(LIR_OprDesc*, bool) (1 samples, 0.42%)</title><rect x="506.6" y="1171.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="509.6" y="1182.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.42%)</title><rect x="511.5" y="1187.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="514.5" y="1198.0"></text>
</g>
<g>
<title>LIRGenerator::do_Intrinsic(Intrinsic*) (1 samples, 0.42%)</title><rect x="516.4" y="1219.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="519.4" y="1230.0"></text>
</g>
<g>
<title>LIRGenerator::do_CompareAndSwap(Intrinsic*, ValueType*) (1 samples, 0.42%)</title><rect x="516.4" y="1203.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="519.4" y="1214.0"></text>
</g>
<g>
<title>LIRItem::set_instruction(Instruction*) (1 samples, 0.42%)</title><rect x="516.4" y="1187.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="519.4" y="1198.0"></text>
</g>
<g>
<title>LIRGenerator::walk(Instruction*) (1 samples, 0.42%)</title><rect x="516.4" y="1171.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="519.4" y="1182.0"></text>
</g>
<g>
<title>LIRGenerator::do_ArithmeticOp_Long(ArithmeticOp*) (1 samples, 0.42%)</title><rect x="516.4" y="1155.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="519.4" y="1166.0"></text>
</g>
<g>
<title>LIRGenerator::walk(Instruction*) (1 samples, 0.42%)</title><rect x="516.4" y="1139.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="519.4" y="1150.0"></text>
</g>
<g>
<title>LIRGenerator::do_ShiftOp(ShiftOp*) (1 samples, 0.42%)</title><rect x="516.4" y="1123.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="519.4" y="1134.0"></text>
</g>
<g>
<title>LIRGenerator::walk(Instruction*) (1 samples, 0.42%)</title><rect x="516.4" y="1107.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="519.4" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::do_Constant(Constant*) (1 samples, 0.42%)</title><rect x="516.4" y="1091.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="519.4" y="1102.0"></text>
</g>
<g>
<title>LIR_OprFact::value_type(ValueType*) (1 samples, 0.42%)</title><rect x="516.4" y="1075.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="519.4" y="1086.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (2 samples, 0.83%)</title><rect x="521.3" y="1219.0" width="9.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="524.3" y="1230.0"></text>
</g>
<g>
<title>LIRGenerator::invoke_load_arguments(Invoke*, GrowableArray&lt;LIRItem*&gt;*, GrowableArray&lt;LIR_OprDesc*&gt; const*) (1 samples, 0.42%)</title><rect x="521.3" y="1203.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="524.3" y="1214.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.42%)</title><rect x="526.2" y="1203.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="529.2" y="1214.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.42%)</title><rect x="526.2" y="1187.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="529.2" y="1198.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.42%)</title><rect x="526.2" y="1171.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="529.2" y="1182.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (16 samples, 6.67%)</title><rect x="531.2" y="1251.0" width="78.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="534.2" y="1262.0">LinearSca..</text>
</g>
<g>
<title>Instruction::as_Constant() (1 samples, 0.42%)</title><rect x="531.2" y="1235.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="534.2" y="1246.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (4 samples, 1.67%)</title><rect x="536.1" y="1235.0" width="19.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="539.1" y="1246.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (4 samples, 1.67%)</title><rect x="536.1" y="1219.0" width="19.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="539.1" y="1230.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (4 samples, 1.67%)</title><rect x="536.1" y="1203.0" width="19.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="539.1" y="1214.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.83%)</title><rect x="536.1" y="1187.0" width="9.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="539.1" y="1198.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (2 samples, 0.83%)</title><rect x="536.1" y="1171.0" width="9.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="539.1" y="1182.0"></text>
</g>
<g>
<title>LinearScanWalker::combine_spilled_intervals(Interval*) (1 samples, 0.42%)</title><rect x="545.9" y="1187.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="548.9" y="1198.0"></text>
</g>
<g>
<title>LinearScanWalker::split_and_spill_interval(Interval*) (1 samples, 0.42%)</title><rect x="550.8" y="1187.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="553.8" y="1198.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (1 samples, 0.42%)</title><rect x="550.8" y="1171.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="553.8" y="1182.0"></text>
</g>
<g>
<title>Interval::split(int) (1 samples, 0.42%)</title><rect x="550.8" y="1155.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="553.8" y="1166.0"></text>
</g>
<g>
<title>Interval::new_split_child() (1 samples, 0.42%)</title><rect x="550.8" y="1139.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="553.8" y="1150.0"></text>
</g>
<g>
<title>Interval::Interval(int) (1 samples, 0.42%)</title><rect x="550.8" y="1123.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="553.8" y="1134.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (3 samples, 1.25%)</title><rect x="555.8" y="1235.0" width="14.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="558.8" y="1246.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (3 samples, 1.25%)</title><rect x="555.8" y="1219.0" width="14.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="558.8" y="1230.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.42%)</title><rect x="555.8" y="1203.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="558.8" y="1214.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.42%)</title><rect x="560.7" y="1203.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="563.7" y="1214.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.42%)</title><rect x="560.7" y="1187.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="563.7" y="1198.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.42%)</title><rect x="560.7" y="1171.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="563.7" y="1182.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 0.42%)</title><rect x="565.6" y="1203.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="568.6" y="1214.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.42%)</title><rect x="565.6" y="1187.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="568.6" y="1198.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.42%)</title><rect x="565.6" y="1171.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="568.6" y="1182.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (5 samples, 2.08%)</title><rect x="570.5" y="1235.0" width="24.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="573.5" y="1246.0">L..</text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.42%)</title><rect x="575.4" y="1219.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="578.4" y="1230.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.42%)</title><rect x="575.4" y="1203.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="578.4" y="1214.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_input_operand(LIR_Op*, LIR_OprDesc*) (2 samples, 0.83%)</title><rect x="580.3" y="1219.0" width="9.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="583.3" y="1230.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_output_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.42%)</title><rect x="590.2" y="1219.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="593.2" y="1230.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 0.42%)</title><rect x="595.1" y="1235.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="598.1" y="1246.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.42%)</title><rect x="595.1" y="1219.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="598.1" y="1230.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (2 samples, 0.83%)</title><rect x="600.0" y="1235.0" width="9.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="603.0" y="1246.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (1 samples, 0.42%)</title><rect x="600.0" y="1219.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="603.0" y="1230.0"></text>
</g>
<g>
<title>MoveResolver::MoveResolver(LinearScan*) (1 samples, 0.42%)</title><rect x="604.9" y="1219.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="607.9" y="1230.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (4 samples, 1.67%)</title><rect x="609.8" y="1283.0" width="19.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="612.8" y="1294.0"></text>
</g>
<g>
<title>Dependencies::DepStream::next() (1 samples, 0.42%)</title><rect x="609.8" y="1267.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="612.8" y="1278.0"></text>
</g>
<g>
<title>Dependencies::validate_dependencies(CompileTask*, bool, char**) (1 samples, 0.42%)</title><rect x="614.8" y="1267.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="617.8" y="1278.0"></text>
</g>
<g>
<title>Dependencies::DepStream::check_klass_dependency(KlassDepChange*) (1 samples, 0.42%)</title><rect x="614.8" y="1251.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="617.8" y="1262.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.83%)</title><rect x="619.7" y="1267.0" width="9.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="622.7" y="1278.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.83%)</title><rect x="619.7" y="1251.0" width="9.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="622.7" y="1262.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.42%)</title><rect x="619.7" y="1235.0" width="4.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="622.7" y="1246.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.42%)</title><rect x="624.6" y="1235.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="627.6" y="1246.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.42%)</title><rect x="629.5" y="1331.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="632.5" y="1342.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.42%)</title><rect x="629.5" y="1315.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="632.5" y="1326.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.42%)</title><rect x="629.5" y="1299.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="632.5" y="1310.0"></text>
</g>
<g>
<title>ciObject::ciObject(Handle) (1 samples, 0.42%)</title><rect x="629.5" y="1283.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="632.5" y="1294.0"></text>
</g>
<g>
<title>JNIHandles::make_local(oopDesc*) (1 samples, 0.42%)</title><rect x="629.5" y="1267.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="632.5" y="1278.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (1 samples, 0.42%)</title><rect x="634.4" y="1331.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="637.4" y="1342.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.42%)</title><rect x="634.4" y="1315.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="637.4" y="1326.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.42%)</title><rect x="639.3" y="1347.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="642.3" y="1358.0"></text>
</g>
<g>
<title>__GI_sysinfo (1 samples, 0.42%)</title><rect x="639.3" y="1331.0" width="5.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="642.3" y="1342.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 1.25%)</title><rect x="644.2" y="1363.0" width="14.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="647.2" y="1374.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (3 samples, 1.25%)</title><rect x="644.2" y="1347.0" width="14.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="647.2" y="1358.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (3 samples, 1.25%)</title><rect x="644.2" y="1331.0" width="14.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="647.2" y="1342.0"></text>
</g>
<g>
<title>PcDesc::real_pc(CompiledMethod const*) const (1 samples, 0.42%)</title><rect x="644.2" y="1315.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="647.2" y="1326.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.83%)</title><rect x="649.2" y="1315.0" width="9.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="652.2" y="1326.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 0.42%)</title><rect x="649.2" y="1299.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="652.2" y="1310.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.42%)</title><rect x="654.1" y="1299.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="657.1" y="1310.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.42%)</title><rect x="654.1" y="1283.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="657.1" y="1294.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.42%)</title><rect x="659.0" y="1379.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="662.0" y="1390.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.42%)</title><rect x="659.0" y="1363.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="662.0" y="1374.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.67] (1 samples, 0.42%)</title><rect x="659.0" y="1347.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="662.0" y="1358.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.42%)</title><rect x="659.0" y="1331.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="662.0" y="1342.0"></text>
</g>
<g>
<title>VM_RedefineClasses::doit() (1 samples, 0.42%)</title><rect x="659.0" y="1315.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="662.0" y="1326.0"></text>
</g>
<g>
<title>VM_RedefineClasses::redefine_single_class(_jclass*, InstanceKlass*, Thread*) (1 samples, 0.42%)</title><rect x="659.0" y="1299.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="662.0" y="1310.0"></text>
</g>
<g>
<title>CodeCache::flush_evol_dependents_on(InstanceKlass*) (1 samples, 0.42%)</title><rect x="659.0" y="1283.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="662.0" y="1294.0"></text>
</g>
<g>
<title>CodeCache::mark_for_evol_deoptimization(InstanceKlass*) (1 samples, 0.42%)</title><rect x="659.0" y="1267.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="662.0" y="1278.0"></text>
</g>
<g>
<title>CompiledMethod::clear_inline_caches() (1 samples, 0.42%)</title><rect x="659.0" y="1251.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="662.0" y="1262.0"></text>
</g>
<g>
<title>opt_virtual_call_Relocation::clear_inline_cache() (1 samples, 0.42%)</title><rect x="659.0" y="1235.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="662.0" y="1246.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(CompiledMethod*, NativeCall*) (1 samples, 0.42%)</title><rect x="659.0" y="1219.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="662.0" y="1230.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.42%)</title><rect x="659.0" y="1203.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="662.0" y="1214.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (107 samples, 44.58%)</title><rect x="663.9" y="1427.0" width="526.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.9" y="1438.0">sun/instrument/InstrumentationImpl.loadClassAndCallPremain</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (107 samples, 44.58%)</title><rect x="663.9" y="1411.0" width="526.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.9" y="1422.0">sun/instrument/InstrumentationImpl.loadClassAndStartAgent</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.83%)</title><rect x="663.9" y="1395.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 0.83%)</title><rect x="663.9" y="1379.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.9" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.83%)</title><rect x="663.9" y="1363.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.9" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.83%)</title><rect x="663.9" y="1347.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.9" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 0.83%)</title><rect x="663.9" y="1331.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 0.83%)</title><rect x="663.9" y="1315.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.83%)</title><rect x="663.9" y="1299.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 0.83%)</title><rect x="663.9" y="1283.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.9" y="1294.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.83%)</title><rect x="663.9" y="1267.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.83%)</title><rect x="663.9" y="1251.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 0.83%)</title><rect x="663.9" y="1235.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (2 samples, 0.83%)</title><rect x="663.9" y="1219.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (2 samples, 0.83%)</title><rect x="663.9" y="1203.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.9" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.83%)</title><rect x="663.9" y="1187.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.83%)</title><rect x="663.9" y="1171.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 0.83%)</title><rect x="663.9" y="1155.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (1 samples, 0.42%)</title><rect x="663.9" y="1139.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.9" y="1150.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 0.42%)</title><rect x="663.9" y="1123.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.9" y="1134.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.42%)</title><rect x="663.9" y="1107.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.9" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 0.42%)</title><rect x="663.9" y="1091.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.9" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.get (1 samples, 0.42%)</title><rect x="663.9" y="1075.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.9" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 0.42%)</title><rect x="663.9" y="1059.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.9" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 0.42%)</title><rect x="663.9" y="1043.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.9" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.&lt;init&gt; (1 samples, 0.42%)</title><rect x="663.9" y="1027.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.9" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.initCEN (1 samples, 0.42%)</title><rect x="663.9" y="1011.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/util/jar/JarIndex.getJarIndex (1 samples, 0.42%)</title><rect x="668.8" y="1139.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.8" y="1150.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 0.42%)</title><rect x="668.8" y="1123.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.8" y="1134.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 0.42%)</title><rect x="668.8" y="1107.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.8" y="1118.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.isMultiRelease (1 samples, 0.42%)</title><rect x="668.8" y="1091.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.8" y="1102.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.checkForSpecialAttributes (1 samples, 0.42%)</title><rect x="668.8" y="1075.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.8" y="1086.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getBytes (1 samples, 0.42%)</title><rect x="668.8" y="1059.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.8" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.42%)</title><rect x="668.8" y="1043.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.8" y="1054.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 0.42%)</title><rect x="668.8" y="1027.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.8" y="1038.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.getInflater (1 samples, 0.42%)</title><rect x="668.8" y="1011.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.8" y="1022.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="668.8" y="995.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.8" y="1006.0"></text>
</g>
<g>
<title>java/util/zip/ZipUtils.loadLibrary (1 samples, 0.42%)</title><rect x="668.8" y="979.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.8" y="990.0"></text>
</g>
<g>
<title>java/lang/System.loadLibrary (1 samples, 0.42%)</title><rect x="668.8" y="963.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.8" y="974.0"></text>
</g>
<g>
<title>java/lang/Runtime.loadLibrary0 (1 samples, 0.42%)</title><rect x="668.8" y="947.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.8" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadLibrary (1 samples, 0.42%)</title><rect x="668.8" y="931.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.8" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadLibrary0 (1 samples, 0.42%)</title><rect x="668.8" y="915.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.8" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader$NativeLibrary.loadLibrary (1 samples, 0.42%)</title><rect x="668.8" y="899.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader$NativeLibrary.load (1 samples, 0.42%)</title><rect x="668.8" y="883.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.8" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader$NativeLibrary.load0 (1 samples, 0.42%)</title><rect x="668.8" y="867.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.8" y="878.0"></text>
</g>
<g>
<title>Profiler::NativeLibraryLoadTrap(JNIEnv_*, _jobject*, _jstring*, unsigned char) (1 samples, 0.42%)</title><rect x="668.8" y="851.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="671.8" y="862.0"></text>
</g>
<g>
<title>Symbols::parseLibraries(NativeCodeCache**, int volatile&amp;, int, bool) (1 samples, 0.42%)</title><rect x="668.8" y="835.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="671.8" y="846.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;void const*, void const*, std::_Identity&lt;void const*&gt;, std::less&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::insert_unique(void const* const&amp;) (1 samples, 0.42%)</title><rect x="668.8" y="819.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="671.8" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (105 samples, 43.75%)</title><rect x="673.8" y="1395.0" width="516.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.8" y="1406.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (105 samples, 43.75%)</title><rect x="673.8" y="1379.0" width="516.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.8" y="1390.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (105 samples, 43.75%)</title><rect x="673.8" y="1363.0" width="516.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.8" y="1374.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (105 samples, 43.75%)</title><rect x="673.8" y="1347.0" width="516.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.8" y="1358.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.premain (105 samples, 43.75%)</title><rect x="673.8" y="1331.0" width="516.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.8" y="1342.0">datadog/trace/bootstrap/AgentBootstrap.premain</text>
</g>
<g>
<title>datadog/trace/bootstrap/AgentBootstrap.agentmain (105 samples, 43.75%)</title><rect x="673.8" y="1315.0" width="516.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.8" y="1326.0">datadog/trace/bootstrap/AgentBootstrap.agentmain</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (105 samples, 43.75%)</title><rect x="673.8" y="1299.0" width="516.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.8" y="1310.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (105 samples, 43.75%)</title><rect x="673.8" y="1283.0" width="516.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.8" y="1294.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (105 samples, 43.75%)</title><rect x="673.8" y="1267.0" width="516.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.8" y="1278.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (105 samples, 43.75%)</title><rect x="673.8" y="1251.0" width="516.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.8" y="1262.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="673.8" y="1235.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.8" y="1246.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.42%)</title><rect x="673.8" y="1219.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.8" y="1230.0"></text>
</g>
<g>
<title>datadog/slf4j/LoggerFactory.getLogger (1 samples, 0.42%)</title><rect x="673.8" y="1203.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="1214.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getLogger (1 samples, 0.42%)</title><rect x="673.8" y="1187.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.8" y="1198.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/DDLoggerFactory.getHelperFactory (1 samples, 0.42%)</title><rect x="673.8" y="1171.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.8" y="1182.0"></text>
</g>
<g>
<title>datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.getSettingsDescription (1 samples, 0.42%)</title><rect x="673.8" y="1155.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.8" y="1166.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettingsDescription (1 samples, 0.42%)</title><rect x="673.8" y="1139.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.8" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatFactory.getSettings (1 samples, 0.42%)</title><rect x="673.8" y="1123.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.8" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.&lt;init&gt; (1 samples, 0.42%)</title><rect x="673.8" y="1107.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.8" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings.loadProperties (1 samples, 0.42%)</title><rect x="673.8" y="1091.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.8" y="1102.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="673.8" y="1075.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$ResourceStreamPrivilegedAction.run (1 samples, 0.42%)</title><rect x="673.8" y="1059.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.8" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/logging/simplelogger/SLCompatSettings$ResourceStreamPrivilegedAction.run (1 samples, 0.42%)</title><rect x="673.8" y="1043.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResourceAsStream (1 samples, 0.42%)</title><rect x="673.8" y="1027.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.42%)</title><rect x="673.8" y="1011.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.42%)</title><rect x="673.8" y="995.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findMiscResource (1 samples, 0.42%)</title><rect x="673.8" y="979.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.8" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="673.8" y="963.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.42%)</title><rect x="673.8" y="947.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader$2.run (1 samples, 0.42%)</title><rect x="673.8" y="931.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.42%)</title><rect x="673.8" y="915.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.8" y="926.0"></text>
</g>
<g>
<title>java/util/Optional.empty (1 samples, 0.42%)</title><rect x="673.8" y="899.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.8" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.42%)</title><rect x="673.8" y="883.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="676.8" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.42%)</title><rect x="673.8" y="867.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="676.8" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.42%)</title><rect x="673.8" y="851.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="676.8" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.42%)</title><rect x="673.8" y="835.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="676.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.start (104 samples, 43.33%)</title><rect x="678.7" y="1235.0" width="511.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.7" y="1246.0">datadog/trace/bootstrap/Agent.start</text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createParentClassloader (3 samples, 1.25%)</title><rect x="678.7" y="1219.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.7" y="1230.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.createDatadogClassLoader (2 samples, 0.83%)</title><rect x="678.7" y="1203.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.83%)</title><rect x="678.7" y="1187.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.83%)</title><rect x="678.7" y="1171.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (2 samples, 0.83%)</title><rect x="678.7" y="1155.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (2 samples, 0.83%)</title><rect x="678.7" y="1139.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.7" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.&lt;init&gt; (2 samples, 0.83%)</title><rect x="678.7" y="1123.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.&lt;init&gt; (2 samples, 0.83%)</title><rect x="678.7" y="1107.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.7" y="1118.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (2 samples, 0.83%)</title><rect x="678.7" y="1091.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.7" y="1102.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.nextElement (2 samples, 0.83%)</title><rect x="678.7" y="1075.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.7" y="1086.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipEntryIterator.next (2 samples, 0.83%)</title><rect x="678.7" y="1059.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.7" y="1070.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getZipEntry (2 samples, 0.83%)</title><rect x="678.7" y="1043.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.7" y="1054.0"></text>
</g>
<g>
<title>java/util/jar/JarFile$$Lambda$25/787604730.apply (1 samples, 0.42%)</title><rect x="683.6" y="1027.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.6" y="1038.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.lambda$entries$0 (1 samples, 0.42%)</title><rect x="683.6" y="1011.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.6" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.getPlatformClassLoader (1 samples, 0.42%)</title><rect x="688.5" y="1203.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.42%)</title><rect x="688.5" y="1187.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.42%)</title><rect x="688.5" y="1171.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.42%)</title><rect x="688.5" y="1155.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.42%)</title><rect x="688.5" y="1139.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.42%)</title><rect x="688.5" y="1123.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.42%)</title><rect x="688.5" y="1107.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.42%)</title><rect x="688.5" y="1091.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.42%)</title><rect x="688.5" y="1075.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.42%)</title><rect x="688.5" y="1059.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.42%)</title><rect x="688.5" y="1043.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.5" y="1054.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.42%)</title><rect x="688.5" y="1027.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.5" y="1038.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.42%)</title><rect x="688.5" y="1011.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.5" y="1022.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.42%)</title><rect x="688.5" y="995.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.5" y="1006.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.getInstance (1 samples, 0.42%)</title><rect x="688.5" y="979.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.5" y="990.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.&lt;init&gt; (1 samples, 0.42%)</title><rect x="688.5" y="963.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.5" y="974.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSelectAnnotations (1 samples, 0.42%)</title><rect x="688.5" y="947.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.5" y="958.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.42%)</title><rect x="688.5" y="931.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.5" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.42%)</title><rect x="688.5" y="915.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.5" y="926.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.42%)</title><rect x="688.5" y="899.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.5" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="688.5" y="883.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.5" y="894.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.42%)</title><rect x="688.5" y="867.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.5" y="878.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.42%)</title><rect x="688.5" y="851.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.5" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.42%)</title><rect x="688.5" y="835.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.5" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.42%)</title><rect x="688.5" y="819.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.42%)</title><rect x="688.5" y="803.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.42%)</title><rect x="688.5" y="787.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.5" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$19/1996181658.apply (1 samples, 0.42%)</title><rect x="688.5" y="771.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.5" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.42%)</title><rect x="688.5" y="755.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="691.5" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.42%)</title><rect x="688.5" y="739.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.5" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.42%)</title><rect x="688.5" y="723.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.5" y="734.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.referencedTypes (1 samples, 0.42%)</title><rect x="688.5" y="707.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Class.getMethods (1 samples, 0.42%)</title><rect x="688.5" y="691.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (1 samples, 0.42%)</title><rect x="688.5" y="675.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (1 samples, 0.42%)</title><rect x="688.5" y="659.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.5" y="670.0"></text>
</g>
<g>
<title>java/lang/PublicMethods.toArray (1 samples, 0.42%)</title><rect x="688.5" y="643.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.5" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedValueIterator.next (1 samples, 0.42%)</title><rect x="688.5" y="627.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedHashIterator.nextNode (1 samples, 0.42%)</title><rect x="688.5" y="611.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.5" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.installDatadogTracer (21 samples, 8.75%)</title><rect x="693.4" y="1219.0" width="103.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.4" y="1230.0">datadog/trac..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 8.75%)</title><rect x="693.4" y="1203.0" width="103.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.4" y="1214.0">java/lang/re..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 8.75%)</title><rect x="693.4" y="1187.0" width="103.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.4" y="1198.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (21 samples, 8.75%)</title><rect x="693.4" y="1171.0" width="103.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.4" y="1182.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (21 samples, 8.75%)</title><rect x="693.4" y="1155.0" width="103.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.4" y="1166.0">jdk/internal..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/TracerInstaller.installGlobalTracer (21 samples, 8.75%)</title><rect x="693.4" y="1139.0" width="103.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.4" y="1150.0">datadog/trac..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.build (20 samples, 8.33%)</title><rect x="693.4" y="1123.0" width="98.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.4" y="1134.0">datadog/trac..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (20 samples, 8.33%)</title><rect x="693.4" y="1107.0" width="98.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.4" y="1118.0">datadog/trac..</text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.&lt;init&gt; (20 samples, 8.33%)</title><rect x="693.4" y="1091.0" width="98.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.4" y="1102.0">datadog/trac..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (8 samples, 3.33%)</title><rect x="693.4" y="1075.0" width="39.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.4" y="1086.0">dat..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/WriterFactory.createWriter (8 samples, 3.33%)</title><rect x="693.4" y="1059.0" width="39.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.4" y="1070.0">dat..</text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter$DDAgentWriterBuilder.build (1 samples, 0.42%)</title><rect x="693.4" y="1043.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.4" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="693.4" y="1027.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.4" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/DDAgentWriter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="693.4" y="1011.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="693.4" y="995.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.4" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="693.4" y="979.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.4" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="693.4" y="963.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.4" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="693.4" y="947.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.4" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="693.4" y="931.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.4" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="693.4" y="915.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.4" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="693.4" y="899.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="693.4" y="883.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.4" y="894.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="693.4" y="867.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.4" y="878.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="693.4" y="851.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.4" y="862.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.42%)</title><rect x="693.4" y="835.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.4" y="846.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.42%)</title><rect x="693.4" y="819.0" width="4.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="696.4" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="698.3" y="1043.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.3" y="1054.0"></text>
</g>
<g>
<title>com/squareup/moshi/Types.newParameterizedType (1 samples, 0.42%)</title><rect x="698.3" y="1027.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.3" y="1038.0"></text>
</g>
<g>
<title>com/squareup/moshi/internal/Util$ParameterizedTypeImpl.&lt;init&gt; (1 samples, 0.42%)</title><rect x="698.3" y="1011.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="698.3" y="995.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.3" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="698.3" y="979.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.3" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="698.3" y="963.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.3" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="698.3" y="947.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.3" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="698.3" y="931.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="698.3" y="915.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.3" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="698.3" y="899.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.3" y="910.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="698.3" y="883.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.3" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="698.3" y="867.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="698.3" y="851.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.3" y="862.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="698.3" y="835.0" width="5.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="701.3" y="846.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="698.3" y="819.0" width="5.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="701.3" y="830.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="698.3" y="803.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="701.3" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="698.3" y="787.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="701.3" y="798.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="698.3" y="771.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="701.3" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="698.3" y="755.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="701.3" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="698.3" y="739.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="701.3" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.42%)</title><rect x="698.3" y="723.0" width="5.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="701.3" y="734.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.42%)</title><rect x="698.3" y="707.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="701.3" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/writer/ddagent/DDAgentFeaturesDiscovery.&lt;init&gt; (1 samples, 0.42%)</title><rect x="703.2" y="1043.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.2" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Monitoring.newTimer (1 samples, 0.42%)</title><rect x="703.2" y="1027.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.42%)</title><rect x="703.2" y="1011.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.2" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/monitor/Timer.&lt;init&gt; (1 samples, 0.42%)</title><rect x="703.2" y="995.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.2" y="1006.0"></text>
</g>
<g>
<title>org/HdrHistogram/PackedHistogram.&lt;init&gt; (1 samples, 0.42%)</title><rect x="703.2" y="979.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.2" y="990.0"></text>
</g>
<g>
<title>org/HdrHistogram/PackedHistogram.&lt;init&gt; (1 samples, 0.42%)</title><rect x="703.2" y="963.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.2" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="703.2" y="947.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.2" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="703.2" y="931.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.2" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="703.2" y="915.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.2" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="703.2" y="899.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.2" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="703.2" y="883.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.2" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="703.2" y="867.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.2" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="703.2" y="851.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.2" y="862.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="703.2" y="835.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="703.2" y="819.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.2" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="703.2" y="803.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.2" y="814.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="703.2" y="787.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.2" y="798.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="703.2" y="771.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.2" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="703.2" y="755.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.2" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="703.2" y="739.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.2" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="703.2" y="723.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.2" y="734.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="703.2" y="707.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.2" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="703.2" y="691.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="703.2" y="675.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.2" y="686.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="703.2" y="659.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.2" y="670.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="703.2" y="643.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.2" y="654.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.42%)</title><rect x="703.2" y="627.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.2" y="638.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.42%)</title><rect x="703.2" y="611.0" width="4.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="706.2" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.83%)</title><rect x="708.2" y="1043.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.2" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/http/OkHttpUtils.buildHttpClient (2 samples, 0.83%)</title><rect x="708.2" y="1027.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.2" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="708.2" y="1011.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="711.2" y="1022.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="708.2" y="995.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="711.2" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="708.2" y="979.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="711.2" y="990.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.42%)</title><rect x="708.2" y="963.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="711.2" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="708.2" y="947.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="711.2" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="708.2" y="931.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="711.2" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.42%)</title><rect x="708.2" y="915.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="711.2" y="926.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="708.2" y="899.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="711.2" y="910.0"></text>
</g>
<g>
<title>AbstractInterpreter::method_kind(methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="708.2" y="883.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="711.2" y="894.0"></text>
</g>
<g>
<title>okhttp3/OkHttpClient$Builder.&lt;init&gt; (1 samples, 0.42%)</title><rect x="713.1" y="1011.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="713.1" y="995.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="713.1" y="979.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.1" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="713.1" y="963.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.1" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="713.1" y="947.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.1" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="713.1" y="931.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.1" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="713.1" y="915.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.42%)</title><rect x="713.1" y="899.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.42%)</title><rect x="713.1" y="883.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.1" y="894.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.42%)</title><rect x="713.1" y="867.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.1" y="878.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.42%)</title><rect x="713.1" y="851.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.1" y="862.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbbaa000)@0x00007f4a708bf400 (1 samples, 0.42%)</title><rect x="713.1" y="835.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.1" y="846.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl.get (3 samples, 1.25%)</title><rect x="718.0" y="1043.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.0" y="1054.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.parse (3 samples, 1.25%)</title><rect x="718.0" y="1027.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="718.0" y="1011.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="718.0" y="995.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.0" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="718.0" y="979.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.0" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="718.0" y="963.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.0" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="718.0" y="947.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.0" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="718.0" y="931.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.0" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="718.0" y="915.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="718.0" y="899.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.0" y="910.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="718.0" y="883.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.0" y="894.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="718.0" y="867.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.0" y="878.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.42%)</title><rect x="718.0" y="851.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="718.0" y="835.0" width="4.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="721.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="718.0" y="819.0" width="4.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="721.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="718.0" y="803.0" width="4.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="721.0" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.42%)</title><rect x="718.0" y="787.0" width="4.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="721.0" y="798.0"></text>
</g>
<g>
<title>okhttp3/HttpUrl$Builder.canonicalizeHost (2 samples, 0.83%)</title><rect x="722.9" y="1011.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.9" y="1022.0"></text>
</g>
<g>
<title>okhttp3/internal/Util.canonicalizeHost (2 samples, 0.83%)</title><rect x="722.9" y="995.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="722.9" y="979.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="725.9" y="990.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.42%)</title><rect x="722.9" y="963.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="725.9" y="974.0"></text>
</g>
<g>
<title>java/net/IDN.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="727.8" y="979.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.8" y="990.0"></text>
</g>
<g>
<title>sun/net/idn/StringPrep.&lt;init&gt; (1 samples, 0.42%)</title><rect x="727.8" y="963.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.8" y="974.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacter.getUnicodeVersion (1 samples, 0.42%)</title><rect x="727.8" y="947.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.8" y="958.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="727.8" y="931.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.8" y="942.0"></text>
</g>
<g>
<title>sun/text/normalizer/UCharacterProperty.&lt;init&gt; (1 samples, 0.42%)</title><rect x="727.8" y="915.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.8" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.42%)</title><rect x="727.8" y="899.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.42%)</title><rect x="727.8" y="883.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.42%)</title><rect x="727.8" y="867.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.8" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.createStatsDClient (10 samples, 4.17%)</title><rect x="732.8" y="1075.0" width="49.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.8" y="1086.0">datad..</text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="732.8" y="1059.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.8" y="1070.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$3.&lt;init&gt; (1 samples, 0.42%)</title><rect x="732.8" y="1043.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.&lt;init&gt; (1 samples, 0.42%)</title><rect x="732.8" y="1027.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.nextHashCode (1 samples, 0.42%)</title><rect x="732.8" y="1011.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndAdd (1 samples, 0.42%)</title><rect x="732.8" y="995.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndAddInt (1 samples, 0.42%)</title><rect x="732.8" y="979.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.weakCompareAndSetInt (1 samples, 0.42%)</title><rect x="732.8" y="963.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.compareAndSetInt (1 samples, 0.42%)</title><rect x="732.8" y="947.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.8" y="958.0"></text>
</g>
<g>
<title>Unsafe_CompareAndSetInt (1 samples, 0.42%)</title><rect x="732.8" y="931.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="735.8" y="942.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (9 samples, 3.75%)</title><rect x="737.7" y="1059.0" width="44.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.7" y="1070.0">com/..</text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (9 samples, 3.75%)</title><rect x="737.7" y="1043.0" width="44.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.7" y="1054.0">com/..</text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.&lt;init&gt; (8 samples, 3.33%)</title><rect x="737.7" y="1027.0" width="39.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.7" y="1038.0">com..</text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.submit (3 samples, 1.25%)</title><rect x="737.7" y="1011.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (3 samples, 1.25%)</title><rect x="737.7" y="995.0" width="14.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (2 samples, 0.83%)</title><rect x="737.7" y="979.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.7" y="990.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (2 samples, 0.83%)</title><rect x="737.7" y="963.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.7" y="974.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (2 samples, 0.83%)</title><rect x="737.7" y="947.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.7" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (2 samples, 0.83%)</title><rect x="737.7" y="931.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.7" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.83%)</title><rect x="737.7" y="915.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.83%)</title><rect x="737.7" y="899.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.7" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.83%)</title><rect x="737.7" y="883.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (2 samples, 0.83%)</title><rect x="737.7" y="867.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (2 samples, 0.83%)</title><rect x="737.7" y="851.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (2 samples, 0.83%)</title><rect x="737.7" y="835.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (2 samples, 0.83%)</title><rect x="737.7" y="819.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (1 samples, 0.42%)</title><rect x="737.7" y="803.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (1 samples, 0.42%)</title><rect x="737.7" y="787.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (1 samples, 0.42%)</title><rect x="737.7" y="771.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (1 samples, 0.42%)</title><rect x="737.7" y="755.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.7" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.42%)</title><rect x="737.7" y="739.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.&lt;init&gt; (1 samples, 0.42%)</title><rect x="737.7" y="723.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.filter (1 samples, 0.42%)</title><rect x="737.7" y="707.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.42%)</title><rect x="737.7" y="691.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/DeclaringAnnotationMatcher.matches (1 samples, 0.42%)</title><rect x="737.7" y="675.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterDescription.getDeclaredAnnotations (1 samples, 0.42%)</title><rect x="737.7" y="659.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asListOfNullable (1 samples, 0.42%)</title><rect x="737.7" y="643.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.asList (1 samples, 0.42%)</title><rect x="737.7" y="627.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.7" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.access$2000 (1 samples, 0.42%)</title><rect x="737.7" y="611.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$AnnotationToken.toAnnotationDescription (1 samples, 0.42%)</title><rect x="737.7" y="595.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.7" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.42%)</title><rect x="737.7" y="579.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.7" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.42%)</title><rect x="737.7" y="563.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.42%)</title><rect x="737.7" y="547.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.7" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.42%)</title><rect x="737.7" y="531.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.7" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.42%)</title><rect x="737.7" y="515.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.7" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.42%)</title><rect x="737.7" y="499.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.7" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.42%)</title><rect x="737.7" y="483.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.7" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.42%)</title><rect x="737.7" y="467.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.7" y="478.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.42%)</title><rect x="737.7" y="451.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.7" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.42%)</title><rect x="737.7" y="435.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.7" y="446.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getResource (1 samples, 0.42%)</title><rect x="737.7" y="419.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.7" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.42%)</title><rect x="737.7" y="403.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.7" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findResource (1 samples, 0.42%)</title><rect x="737.7" y="387.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.7" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="737.7" y="371.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.42%)</title><rect x="737.7" y="355.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.7" y="366.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$2.run (1 samples, 0.42%)</title><rect x="737.7" y="339.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.findResource (1 samples, 0.42%)</title><rect x="737.7" y="323.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.findResource (1 samples, 0.42%)</title><rect x="737.7" y="307.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="318.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.42%)</title><rect x="737.7" y="291.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.7" y="302.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.42%)</title><rect x="737.7" y="275.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.7" y="286.0"></text>
</g>
<g>
<title>java/net/URLStreamHandler.parseURL (1 samples, 0.42%)</title><rect x="737.7" y="259.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.42%)</title><rect x="737.7" y="243.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.42%)</title><rect x="737.7" y="227.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.42%)</title><rect x="737.7" y="211.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.7" y="222.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.42%)</title><rect x="742.6" y="803.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.42%)</title><rect x="742.6" y="787.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.42%)</title><rect x="742.6" y="771.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.6" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="742.6" y="755.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.6" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="742.6" y="739.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.6" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.42%)</title><rect x="742.6" y="723.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.6" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.42%)</title><rect x="742.6" y="707.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.6" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Label.accept (1 samples, 0.42%)</title><rect x="742.6" y="691.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.6" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.visitLabel (1 samples, 0.42%)</title><rect x="742.6" y="675.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.6" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/ExceptionTableSensitiveMethodVisitor.considerEndOfExceptionTable (1 samples, 0.42%)</title><rect x="742.6" y="659.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.6" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.onAfterExceptionTable (1 samples, 0.42%)</title><rect x="742.6" y="643.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.6" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.42%)</title><rect x="742.6" y="627.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.6" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="742.6" y="611.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="742.6" y="595.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.6" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.42%)</title><rect x="742.6" y="579.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.6" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.42%)</title><rect x="742.6" y="563.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.6" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.apply (1 samples, 0.42%)</title><rect x="742.6" y="547.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.6" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.doApply (1 samples, 0.42%)</title><rect x="742.6" y="531.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.6" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForThisReference.resolve (1 samples, 0.42%)</title><rect x="742.6" y="515.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.6" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/primitive/VoidAwareAssigner.assign (1 samples, 0.42%)</title><rect x="742.6" y="499.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.6" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/primitive/PrimitiveTypeAwareAssigner.assign (1 samples, 0.42%)</title><rect x="742.6" y="483.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/bytecode/assign/reference/ReferenceTypeAwareAssigner.assign (1 samples, 0.42%)</title><rect x="742.6" y="467.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.6" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableTo (1 samples, 0.42%)</title><rect x="742.6" y="451.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.6" y="462.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.42%)</title><rect x="742.6" y="435.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.6" y="446.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignableFrom (1 samples, 0.42%)</title><rect x="742.6" y="419.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.6" y="430.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isAssignable (1 samples, 0.42%)</title><rect x="742.6" y="403.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.6" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.isInterface (1 samples, 0.42%)</title><rect x="742.6" y="387.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.6" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/description/ModifierReviewable$AbstractBase.matchesMask (1 samples, 0.42%)</title><rect x="742.6" y="371.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.6" y="382.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (1 samples, 0.42%)</title><rect x="742.6" y="355.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.6" y="366.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.42%)</title><rect x="742.6" y="339.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.6" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.42%)</title><rect x="742.6" y="323.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.6" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.42%)</title><rect x="742.6" y="307.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.6" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.42%)</title><rect x="742.6" y="291.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.6" y="302.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.42%)</title><rect x="742.6" y="275.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.6" y="286.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.42%)</title><rect x="742.6" y="259.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.6" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$ForClassLoader.locate (1 samples, 0.42%)</title><rect x="742.6" y="243.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.6" y="254.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.42%)</title><rect x="742.6" y="227.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.6" y="238.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.42%)</title><rect x="742.6" y="211.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.6" y="222.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.42%)</title><rect x="742.6" y="195.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="745.6" y="206.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.42%)</title><rect x="742.6" y="179.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.6" y="190.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.toJrtURL (1 samples, 0.42%)</title><rect x="742.6" y="163.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.6" y="174.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 0.42%)</title><rect x="742.6" y="147.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.42%)</title><rect x="747.5" y="979.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.42%)</title><rect x="747.5" y="963.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.5" y="974.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.42%)</title><rect x="747.5" y="947.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.5" y="958.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.42%)</title><rect x="747.5" y="931.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.5" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.42%)</title><rect x="747.5" y="915.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.5" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="747.5" y="899.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.5" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="747.5" y="883.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="747.5" y="867.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="747.5" y="851.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.42%)</title><rect x="747.5" y="835.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="747.5" y="819.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.42%)</title><rect x="747.5" y="803.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.42%)</title><rect x="747.5" y="787.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.5" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.42%)</title><rect x="747.5" y="771.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.42%)</title><rect x="747.5" y="755.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="747.5" y="739.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="747.5" y="723.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.42%)</title><rect x="747.5" y="707.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$Compound.wrap (1 samples, 0.42%)</title><rect x="747.5" y="691.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.5" y="702.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector.wrap (1 samples, 0.42%)</title><rect x="747.5" y="675.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.5" y="686.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/context/FieldBackedContextInjector$1.&lt;init&gt; (1 samples, 0.42%)</title><rect x="747.5" y="659.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion.isAtLeast (1 samples, 0.42%)</title><rect x="747.5" y="643.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/ClassFileVersion.compareTo (1 samples, 0.42%)</title><rect x="747.5" y="627.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.signum (1 samples, 0.42%)</title><rect x="747.5" y="611.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.5" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.42%)</title><rect x="747.5" y="595.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="750.5" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.42%)</title><rect x="747.5" y="579.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="750.5" y="590.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.42%)</title><rect x="747.5" y="563.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="750.5" y="574.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.42%)</title><rect x="747.5" y="547.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="750.5" y="558.0"></text>
</g>
<g>
<title>Method::backedge_count() (1 samples, 0.42%)</title><rect x="747.5" y="531.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="750.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.newSingleThreadExecutor (5 samples, 2.08%)</title><rect x="752.4" y="1011.0" width="24.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.4" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="752.4" y="995.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.4" y="1006.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.42%)</title><rect x="752.4" y="979.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.4" y="990.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.42%)</title><rect x="752.4" y="963.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.4" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.42%)</title><rect x="752.4" y="947.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.4" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="752.4" y="931.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.4" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="752.4" y="915.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="752.4" y="899.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="752.4" y="883.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.4" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.42%)</title><rect x="752.4" y="867.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.4" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="752.4" y="851.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.4" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.42%)</title><rect x="752.4" y="835.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="755.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (1 samples, 0.42%)</title><rect x="752.4" y="819.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.42%)</title><rect x="752.4" y="803.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (1 samples, 0.42%)</title><rect x="752.4" y="787.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.4" y="798.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (4 samples, 1.67%)</title><rect x="757.3" y="995.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.3" y="1006.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (4 samples, 1.67%)</title><rect x="757.3" y="979.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (4 samples, 1.67%)</title><rect x="757.3" y="963.0" width="19.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.3" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (4 samples, 1.67%)</title><rect x="757.3" y="947.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.3" y="958.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 1.67%)</title><rect x="757.3" y="931.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.3" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (4 samples, 1.67%)</title><rect x="757.3" y="915.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.3" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (4 samples, 1.67%)</title><rect x="757.3" y="899.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.3" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (4 samples, 1.67%)</title><rect x="757.3" y="883.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.3" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (4 samples, 1.67%)</title><rect x="757.3" y="867.0" width="19.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (4 samples, 1.67%)</title><rect x="757.3" y="851.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.42%)</title><rect x="757.3" y="835.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.42%)</title><rect x="757.3" y="819.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.3" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (1 samples, 0.42%)</title><rect x="757.3" y="803.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.3" y="814.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.42%)</title><rect x="757.3" y="787.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.3" y="798.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.42%)</title><rect x="757.3" y="771.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.3" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.42%)</title><rect x="757.3" y="755.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.3" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.42%)</title><rect x="757.3" y="739.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.42%)</title><rect x="757.3" y="723.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.3" y="734.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.42%)</title><rect x="757.3" y="707.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.3" y="718.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.42%)</title><rect x="757.3" y="691.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyResolution.isResolved (1 samples, 0.42%)</title><rect x="757.3" y="675.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.42%)</title><rect x="757.3" y="659.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.42%)</title><rect x="757.3" y="643.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.42%)</title><rect x="757.3" y="627.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (1 samples, 0.42%)</title><rect x="757.3" y="611.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.3" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.42%)</title><rect x="757.3" y="595.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.42%)</title><rect x="757.3" y="579.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/Type.getDescriptor (1 samples, 0.42%)</title><rect x="757.3" y="563.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.42%)</title><rect x="757.3" y="547.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.3" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.42%)</title><rect x="757.3" y="531.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.42%)</title><rect x="757.3" y="515.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (3 samples, 1.25%)</title><rect x="762.2" y="835.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.42%)</title><rect x="762.2" y="819.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.42%)</title><rect x="762.2" y="803.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.42%)</title><rect x="762.2" y="787.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="762.2" y="771.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.42%)</title><rect x="762.2" y="755.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.42%)</title><rect x="762.2" y="739.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="762.2" y="723.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.42%)</title><rect x="762.2" y="707.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="762.2" y="691.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.42%)</title><rect x="762.2" y="675.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.42%)</title><rect x="762.2" y="659.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.42%)</title><rect x="762.2" y="643.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$AbstractBase.asErasures (1 samples, 0.42%)</title><rect x="762.2" y="627.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.asErasure (1 samples, 0.42%)</title><rect x="762.2" y="611.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$AnnotatedTypeVariable.getUpperBounds (1 samples, 0.42%)</title><rect x="762.2" y="595.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$ForTypeVariable$Formal$LazyTypeVariable.getUpperBounds (1 samples, 0.42%)</title><rect x="762.2" y="579.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="762.2" y="563.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.2" y="574.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="762.2" y="547.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.2" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="762.2" y="531.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.2" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="762.2" y="515.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.2" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="762.2" y="499.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.2" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="762.2" y="483.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.2" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="762.2" y="467.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.2" y="478.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="762.2" y="451.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.2" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="762.2" y="435.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.2" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="762.2" y="419.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.2" y="430.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="762.2" y="403.0" width="4.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="765.2" y="414.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="762.2" y="387.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="765.2" y="398.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="762.2" y="371.0" width="4.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="765.2" y="382.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="762.2" y="355.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="765.2" y="366.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="762.2" y="339.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="765.2" y="350.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="762.2" y="323.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="765.2" y="334.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="762.2" y="307.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="765.2" y="318.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.42%)</title><rect x="762.2" y="291.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="765.2" y="302.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.42%)</title><rect x="762.2" y="275.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="765.2" y="286.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.42%)</title><rect x="762.2" y="259.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="765.2" y="270.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.83%)</title><rect x="767.2" y="819.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (2 samples, 0.83%)</title><rect x="767.2" y="803.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.83%)</title><rect x="767.2" y="787.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (2 samples, 0.83%)</title><rect x="767.2" y="771.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.42%)</title><rect x="767.2" y="755.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.42%)</title><rect x="767.2" y="739.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.42%)</title><rect x="767.2" y="723.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.42%)</title><rect x="767.2" y="707.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visitMethod (1 samples, 0.42%)</title><rect x="767.2" y="691.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="770.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.42%)</title><rect x="767.2" y="675.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.42%)</title><rect x="767.2" y="659.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.42%)</title><rect x="767.2" y="643.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.42%)</title><rect x="767.2" y="627.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitInnerClass (1 samples, 0.42%)</title><rect x="772.1" y="755.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitInnerClass (1 samples, 0.42%)</title><rect x="772.1" y="739.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.isMemberType (1 samples, 0.42%)</title><rect x="772.1" y="723.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.isLocalType (1 samples, 0.42%)</title><rect x="772.1" y="707.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.1" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.42%)</title><rect x="772.1" y="691.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.1" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.42%)</title><rect x="772.1" y="675.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.1" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.42%)</title><rect x="772.1" y="659.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.1" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.42%)</title><rect x="772.1" y="643.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/ClassFileLocator$Compound.locate (1 samples, 0.42%)</title><rect x="772.1" y="627.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.1" y="638.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.42%)</title><rect x="772.1" y="611.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.1" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.42%)</title><rect x="772.1" y="595.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.1" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.42%)</title><rect x="772.1" y="579.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.1" y="590.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.getInputStream (1 samples, 0.42%)</title><rect x="772.1" y="563.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.1" y="574.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.connect (1 samples, 0.42%)</title><rect x="772.1" y="547.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.1" y="558.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jrt/JavaRuntimeURLConnection.findResource (1 samples, 0.42%)</title><rect x="772.1" y="531.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.42%)</title><rect x="772.1" y="515.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.42%)</title><rect x="772.1" y="499.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.1" y="510.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticStatsDAddressResolution (1 samples, 0.42%)</title><rect x="777.0" y="1027.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.0" y="1038.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient.staticAddressResolution (1 samples, 0.42%)</title><rect x="777.0" y="1011.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.0" y="1022.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.42%)</title><rect x="777.0" y="995.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.0" y="1006.0"></text>
</g>
<g>
<title>com/timgroup/statsd/NonBlockingStatsDClient$5.call (1 samples, 0.42%)</title><rect x="777.0" y="979.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.0" y="990.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.42%)</title><rect x="777.0" y="963.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.0" y="974.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.42%)</title><rect x="777.0" y="947.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.0" y="958.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.42%)</title><rect x="777.0" y="931.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.0" y="942.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.42%)</title><rect x="777.0" y="915.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.0" y="926.0"></text>
</g>
<g>
<title>java/net/InetAddress$NameServiceAddresses.get (1 samples, 0.42%)</title><rect x="777.0" y="899.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.add (1 samples, 0.42%)</title><rect x="777.0" y="883.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.putIfAbsent (1 samples, 0.42%)</title><rect x="777.0" y="867.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.42%)</title><rect x="777.0" y="851.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.42%)</title><rect x="777.0" y="835.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="777.0" y="819.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.0" y="830.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (1 samples, 0.42%)</title><rect x="777.0" y="803.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.0" y="814.0"></text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (1 samples, 0.42%)</title><rect x="777.0" y="787.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (1 samples, 0.42%)</title><rect x="777.0" y="771.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="777.0" y="755.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.0" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="777.0" y="739.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="777.0" y="723.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (1 samples, 0.42%)</title><rect x="777.0" y="707.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (1 samples, 0.42%)</title><rect x="777.0" y="691.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (1 samples, 0.42%)</title><rect x="777.0" y="675.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (1 samples, 0.42%)</title><rect x="777.0" y="659.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.0" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.42%)</title><rect x="777.0" y="643.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.0" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.42%)</title><rect x="777.0" y="627.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (1 samples, 0.42%)</title><rect x="777.0" y="611.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.0" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (1 samples, 0.42%)</title><rect x="777.0" y="595.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.0" y="606.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (1 samples, 0.42%)</title><rect x="777.0" y="579.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.0" y="590.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.42%)</title><rect x="777.0" y="563.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="780.0" y="574.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/StatusLogger.logStatus (1 samples, 0.42%)</title><rect x="781.9" y="1075.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.9" y="1086.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.42%)</title><rect x="781.9" y="1059.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.9" y="1070.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonAdapter.toJson (1 samples, 0.42%)</title><rect x="781.9" y="1043.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.9" y="1054.0"></text>
</g>
<g>
<title>com/squareup/moshi/JsonWriter.of (1 samples, 0.42%)</title><rect x="781.9" y="1027.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.9" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.42%)</title><rect x="781.9" y="1011.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="784.9" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="781.9" y="995.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="784.9" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="781.9" y="979.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="784.9" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.42%)</title><rect x="781.9" y="963.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="784.9" y="974.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="781.9" y="947.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="784.9" y="958.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="781.9" y="931.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="784.9" y="942.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="781.9" y="915.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="784.9" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="786.8" y="1075.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.8" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="786.8" y="1059.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.8" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="786.8" y="1043.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.8" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="786.8" y="1027.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.8" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="786.8" y="1011.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="786.8" y="995.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.42%)</title><rect x="786.8" y="979.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.42%)</title><rect x="786.8" y="963.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.8" y="974.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.42%)</title><rect x="786.8" y="947.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.8" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.42%)</title><rect x="786.8" y="931.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.42%)</title><rect x="786.8" y="915.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.8" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.42%)</title><rect x="786.8" y="899.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.8" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.42%)</title><rect x="786.8" y="883.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="789.8" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.42%)</title><rect x="786.8" y="867.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="789.8" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.42%)</title><rect x="786.8" y="851.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="789.8" y="862.0"></text>
</g>
<g>
<title>DirectNativeCallWrapper::destination() const (1 samples, 0.42%)</title><rect x="786.8" y="835.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="789.8" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer.builder (1 samples, 0.42%)</title><rect x="791.8" y="1123.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.8" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.&lt;init&gt; (1 samples, 0.42%)</title><rect x="791.8" y="1107.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.8" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/core/CoreTracer$CoreTracerBuilder.config (1 samples, 0.42%)</title><rect x="791.8" y="1091.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.8" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/common/sampling/Sampler$Builder.forConfig (1 samples, 0.42%)</title><rect x="791.8" y="1075.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="791.8" y="1059.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.8" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="791.8" y="1043.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.8" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.getPackageName (1 samples, 0.42%)</title><rect x="791.8" y="1027.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.42%)</title><rect x="791.8" y="1011.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.42%)</title><rect x="791.8" y="995.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (1 samples, 0.42%)</title><rect x="791.8" y="979.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.8" y="990.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startDatadogAgent (76 samples, 31.67%)</title><rect x="796.7" y="1219.0" width="373.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.7" y="1230.0">datadog/trace/bootstrap/Agent.startDatadogAgent</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (76 samples, 31.67%)</title><rect x="796.7" y="1203.0" width="373.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.7" y="1214.0">java/lang/reflect/Method.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (76 samples, 31.67%)</title><rect x="796.7" y="1187.0" width="373.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="1198.0">jdk/internal/reflect/DelegatingMethodAccessorImpl.i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (76 samples, 31.67%)</title><rect x="796.7" y="1171.0" width="373.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="1182.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (76 samples, 31.67%)</title><rect x="796.7" y="1155.0" width="373.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.7" y="1166.0">jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.&lt;clinit&gt; (4 samples, 1.67%)</title><rect x="796.7" y="1139.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.&lt;clinit&gt; (4 samples, 1.67%)</title><rect x="796.7" y="1123.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.7" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.&lt;init&gt; (4 samples, 1.67%)</title><rect x="796.7" y="1107.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.7" y="1118.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.&lt;init&gt; (1 samples, 0.42%)</title><rect x="796.7" y="1091.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="796.7" y="1075.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.7" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="796.7" y="1059.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="796.7" y="1043.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="796.7" y="1027.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="796.7" y="1011.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.7" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="796.7" y="995.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="796.7" y="979.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="796.7" y="963.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.7" y="974.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="796.7" y="947.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.7" y="958.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="796.7" y="931.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.7" y="942.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build (1 samples, 0.42%)</title><rect x="801.6" y="1091.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.6" y="1102.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.42%)</title><rect x="801.6" y="1075.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.6" y="1086.0"></text>
</g>
<g>
<title>com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap.&lt;init&gt; (1 samples, 0.42%)</title><rect x="801.6" y="1059.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="804.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="801.6" y="1043.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.6" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="801.6" y="1027.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.6" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="801.6" y="1011.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.6" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="801.6" y="995.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.6" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="801.6" y="979.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.6" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="801.6" y="963.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.6" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="801.6" y="947.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.6" y="958.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="801.6" y="931.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.6" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="801.6" y="915.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.6" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="801.6" y="899.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.6" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="801.6" y="883.0" width="4.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="804.6" y="894.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="801.6" y="867.0" width="4.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="804.6" y="878.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="801.6" y="851.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="804.6" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="801.6" y="835.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="804.6" y="846.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="801.6" y="819.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="804.6" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="801.6" y="803.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="804.6" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="801.6" y="787.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="804.6" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.42%)</title><rect x="801.6" y="771.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="804.6" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentTooling.newWeakCache (2 samples, 0.83%)</title><rect x="806.5" y="1091.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.5" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache$Provider.newWeakCache (2 samples, 0.83%)</title><rect x="806.5" y="1075.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.5" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.&lt;init&gt; (2 samples, 0.83%)</title><rect x="806.5" y="1059.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.5" y="1070.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/Caffeine.build (2 samples, 0.83%)</title><rect x="806.5" y="1043.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.5" y="1054.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (1 samples, 0.42%)</title><rect x="806.5" y="1027.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.5" y="1038.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache$BoundedLocalManualCache.&lt;init&gt; (1 samples, 0.42%)</title><rect x="806.5" y="1011.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.5" y="1022.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/LocalCacheFactory.newBoundedLocalCache (1 samples, 0.42%)</title><rect x="806.5" y="995.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.42%)</title><rect x="806.5" y="979.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.42%)</title><rect x="806.5" y="963.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.42%)</title><rect x="806.5" y="947.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.42%)</title><rect x="806.5" y="931.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.5" y="942.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMSA.&lt;init&gt; (1 samples, 0.42%)</title><rect x="806.5" y="915.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.5" y="926.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WSMS.&lt;init&gt; (1 samples, 0.42%)</title><rect x="806.5" y="899.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.5" y="910.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/WS.&lt;init&gt; (1 samples, 0.42%)</title><rect x="806.5" y="883.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.5" y="894.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/BoundedLocalCache.&lt;init&gt; (1 samples, 0.42%)</title><rect x="806.5" y="867.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.5" y="878.0"></text>
</g>
<g>
<title>com/github/benmanes/caffeine/cache/NodeFactory.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="806.5" y="851.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.5" y="862.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="806.5" y="835.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.5" y="846.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="806.5" y="819.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.5" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="806.5" y="803.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.5" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="806.5" y="787.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.5" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="806.5" y="771.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.5" y="782.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="806.5" y="755.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.42%)</title><rect x="806.5" y="739.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.42%)</title><rect x="806.5" y="723.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.5" y="734.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.42%)</title><rect x="806.5" y="707.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.5" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.42%)</title><rect x="806.5" y="691.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.5" y="702.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getInputStream (1 samples, 0.42%)</title><rect x="806.5" y="675.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.5" y="686.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 0.42%)</title><rect x="806.5" y="659.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.5" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.add (1 samples, 0.42%)</title><rect x="806.5" y="643.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.5" y="654.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.put (1 samples, 0.42%)</title><rect x="806.5" y="627.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="811.4" y="1027.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.4" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="811.4" y="1011.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.4" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="811.4" y="995.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.4" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="811.4" y="979.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.4" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="811.4" y="963.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.4" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="811.4" y="947.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.4" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="811.4" y="931.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.4" y="942.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="811.4" y="915.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.4" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="811.4" y="899.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.4" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="811.4" y="883.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.4" y="894.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="811.4" y="867.0" width="4.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="814.4" y="878.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="811.4" y="851.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="814.4" y="862.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="811.4" y="835.0" width="4.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="814.4" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="811.4" y="819.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="814.4" y="830.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="811.4" y="803.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="814.4" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="811.4" y="787.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="814.4" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="811.4" y="771.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="814.4" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.42%)</title><rect x="811.4" y="755.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="814.4" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.42%)</title><rect x="811.4" y="739.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="814.4" y="750.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (72 samples, 30.00%)</title><rect x="816.3" y="1139.0" width="354.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.3" y="1150.0">datadog/trace/agent/tooling/AgentInstaller.insta..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/AgentInstaller.installBytebuddyAgent (72 samples, 30.00%)</title><rect x="816.3" y="1123.0" width="354.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.3" y="1134.0">datadog/trace/agent/tooling/AgentInstaller.insta..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.instrument (4 samples, 1.67%)</title><rect x="816.3" y="1107.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.3" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.applyInstrumentationTransformers (1 samples, 0.42%)</title><rect x="816.3" y="1091.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.3" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.&lt;init&gt; (1 samples, 0.42%)</title><rect x="816.3" y="1075.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="816.3" y="1059.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="816.3" y="1043.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.3" y="1054.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="816.3" y="1027.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.3" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="816.3" y="1011.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.3" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="816.3" y="995.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.3" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="816.3" y="979.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.3" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="816.3" y="963.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="816.3" y="947.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.42%)</title><rect x="816.3" y="931.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.42%)</title><rect x="816.3" y="915.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.3" y="926.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.42%)</title><rect x="816.3" y="899.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.3" y="910.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.42%)</title><rect x="816.3" y="883.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.42%)</title><rect x="816.3" y="867.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.42%)</title><rect x="816.3" y="851.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.3" y="862.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="816.3" y="835.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.3" y="846.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="816.3" y="819.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.3" y="830.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="816.3" y="803.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.42%)</title><rect x="816.3" y="787.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.42%)</title><rect x="816.3" y="771.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.42%)</title><rect x="816.3" y="755.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.42%)</title><rect x="816.3" y="739.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.3" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.42%)</title><rect x="816.3" y="723.0" width="5.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="819.3" y="734.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.42%)</title><rect x="816.3" y="707.0" width="5.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="819.3" y="718.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="816.3" y="691.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="819.3" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="816.3" y="675.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="819.3" y="686.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.42%)</title><rect x="816.3" y="659.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="819.3" y="670.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.injectHelperClasses (1 samples, 0.42%)</title><rect x="821.2" y="1091.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.2" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/HelperInjector.&lt;init&gt; (1 samples, 0.42%)</title><rect x="821.2" y="1075.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.2" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedHashSet.&lt;init&gt; (1 samples, 0.42%)</title><rect x="821.2" y="1059.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.42%)</title><rect x="821.2" y="1043.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.2" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/rediscala/RediscalaInstrumentation.typeMatcher (1 samples, 0.42%)</title><rect x="826.2" y="1091.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.2" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers.namedOneOf (1 samples, 0.42%)</title><rect x="826.2" y="1075.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.2" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.&lt;init&gt; (1 samples, 0.42%)</title><rect x="826.2" y="1059.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.2" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/NameMatchers$SetMatcher.&lt;init&gt; (1 samples, 0.42%)</title><rect x="826.2" y="1043.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.42%)</title><rect x="826.2" y="1027.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.2" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.type (1 samples, 0.42%)</title><rect x="831.1" y="1091.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.1" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transforming.materialize (1 samples, 0.42%)</title><rect x="831.1" y="1075.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.1" y="1086.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/CompoundList.of (1 samples, 0.42%)</title><rect x="831.1" y="1059.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="836.0" y="1107.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.0" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="836.0" y="1091.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.0" y="1102.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="836.0" y="1075.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.0" y="1086.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="836.0" y="1059.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.0" y="1070.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="836.0" y="1043.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.0" y="1054.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="836.0" y="1027.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.0" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="836.0" y="1011.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.0" y="1022.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="836.0" y="995.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="836.0" y="979.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.0" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="836.0" y="963.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.0" y="974.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="836.0" y="947.0" width="4.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="839.0" y="958.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="836.0" y="931.0" width="4.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="839.0" y="942.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="836.0" y="915.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="839.0" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="836.0" y="899.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="839.0" y="910.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="836.0" y="883.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="839.0" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="836.0" y="867.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="839.0" y="878.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="836.0" y="851.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="839.0" y="862.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.42%)</title><rect x="836.0" y="835.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="839.0" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.42%)</title><rect x="836.0" y="819.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="839.0" y="830.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (14 samples, 5.83%)</title><rect x="840.9" y="1107.0" width="68.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.9" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (14 samples, 5.83%)</title><rect x="840.9" y="1091.0" width="68.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.9" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNext (14 samples, 5.83%)</title><rect x="840.9" y="1075.0" width="68.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.9" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.hasNextService (14 samples, 5.83%)</title><rect x="840.9" y="1059.0" width="68.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.9" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.nextProviderClass (5 samples, 2.08%)</title><rect x="840.9" y="1043.0" width="24.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.9" y="1054.0">j..</text>
</g>
<g>
<title>java/lang/Class.forName (4 samples, 1.67%)</title><rect x="840.9" y="1027.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (4 samples, 1.67%)</title><rect x="840.9" y="1011.0" width="19.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.9" y="1022.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.42%)</title><rect x="840.9" y="995.0" width="4.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="843.9" y="1006.0"></text>
</g>
<g>
<title>VerifyFixClassname (1 samples, 0.42%)</title><rect x="840.9" y="979.0" width="4.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="843.9" y="990.0"></text>
</g>
<g>
<title>next_utf2unicode (1 samples, 0.42%)</title><rect x="840.9" y="963.0" width="4.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="843.9" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 1.25%)</title><rect x="845.8" y="995.0" width="14.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.8" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (3 samples, 1.25%)</title><rect x="845.8" y="979.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.8" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (3 samples, 1.25%)</title><rect x="845.8" y="963.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.8" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 1.25%)</title><rect x="845.8" y="947.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.8" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (3 samples, 1.25%)</title><rect x="845.8" y="931.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.8" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (3 samples, 1.25%)</title><rect x="845.8" y="915.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.8" y="926.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (3 samples, 1.25%)</title><rect x="845.8" y="899.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.8" y="910.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.83%)</title><rect x="845.8" y="883.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.8" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.83%)</title><rect x="845.8" y="867.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.8" y="878.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 0.83%)</title><rect x="845.8" y="851.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.8" y="862.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (2 samples, 0.83%)</title><rect x="845.8" y="835.0" width="9.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="848.8" y="846.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 0.83%)</title><rect x="845.8" y="819.0" width="9.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="848.8" y="830.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (2 samples, 0.83%)</title><rect x="845.8" y="803.0" width="9.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="848.8" y="814.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (2 samples, 0.83%)</title><rect x="845.8" y="787.0" width="9.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="848.8" y="798.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 0.83%)</title><rect x="845.8" y="771.0" width="9.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="848.8" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (2 samples, 0.83%)</title><rect x="845.8" y="755.0" width="9.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="848.8" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (2 samples, 0.83%)</title><rect x="845.8" y="739.0" width="9.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="848.8" y="750.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (2 samples, 0.83%)</title><rect x="845.8" y="723.0" width="9.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="848.8" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (2 samples, 0.83%)</title><rect x="845.8" y="707.0" width="9.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="848.8" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.42%)</title><rect x="845.8" y="691.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="848.8" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.42%)</title><rect x="845.8" y="675.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="848.8" y="686.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.42%)</title><rect x="850.7" y="691.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="853.7" y="702.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.42%)</title><rect x="850.7" y="675.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="853.7" y="686.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.42%)</title><rect x="850.7" y="659.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="853.7" y="670.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.42%)</title><rect x="850.7" y="643.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="853.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="855.7" y="883.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.7" y="894.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="855.7" y="867.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.7" y="878.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="855.7" y="851.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.7" y="862.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.42%)</title><rect x="855.7" y="835.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="855.7" y="819.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="858.7" y="830.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.42%)</title><rect x="855.7" y="803.0" width="4.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="858.7" y="814.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.parse (1 samples, 0.42%)</title><rect x="860.6" y="1027.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.6" y="1038.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LazyClassPathLookupIterator.parseLine (1 samples, 0.42%)</title><rect x="860.6" y="1011.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.6" y="1022.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.getConstructor (9 samples, 3.75%)</title><rect x="865.5" y="1043.0" width="44.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.5" y="1054.0">java..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 3.75%)</title><rect x="865.5" y="1027.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.5" y="1038.0">java..</text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 3.75%)</title><rect x="865.5" y="1011.0" width="44.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.5" y="1022.0">java..</text>
</g>
<g>
<title>java/util/ServiceLoader$1.run (9 samples, 3.75%)</title><rect x="865.5" y="995.0" width="44.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.5" y="1006.0">java..</text>
</g>
<g>
<title>java/lang/Class.getConstructor (9 samples, 3.75%)</title><rect x="865.5" y="979.0" width="44.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.5" y="990.0">java..</text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (9 samples, 3.75%)</title><rect x="865.5" y="963.0" width="44.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.5" y="974.0">java..</text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (9 samples, 3.75%)</title><rect x="865.5" y="947.0" width="44.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="868.5" y="958.0">java..</text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructors0 (9 samples, 3.75%)</title><rect x="865.5" y="931.0" width="44.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.5" y="942.0">java..</text>
</g>
<g>
<title>JVM_GetClassDeclaredConstructors (9 samples, 3.75%)</title><rect x="865.5" y="915.0" width="44.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="868.5" y="926.0">JVM_..</text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (9 samples, 3.75%)</title><rect x="865.5" y="899.0" width="44.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="868.5" y="910.0">get_..</text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (9 samples, 3.75%)</title><rect x="865.5" y="883.0" width="44.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="868.5" y="894.0">Inst..</text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.42%)</title><rect x="865.5" y="867.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="868.5" y="878.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 0.42%)</title><rect x="865.5" y="851.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="868.5" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.168] (1 samples, 0.42%)</title><rect x="865.5" y="835.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="868.5" y="846.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (8 samples, 3.33%)</title><rect x="870.4" y="867.0" width="39.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="873.4" y="878.0">Ver..</text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (7 samples, 2.92%)</title><rect x="870.4" y="851.0" width="34.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="873.4" y="862.0">Cl..</text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.42%)</title><rect x="870.4" y="835.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="873.4" y="846.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (6 samples, 2.50%)</title><rect x="875.3" y="835.0" width="29.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="878.3" y="846.0">Cl..</text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 0.42%)</title><rect x="875.3" y="819.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="878.3" y="830.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (1 samples, 0.42%)</title><rect x="875.3" y="803.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="878.3" y="814.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.42%)</title><rect x="875.3" y="787.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="878.3" y="798.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.42%)</title><rect x="875.3" y="771.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="878.3" y="782.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (2 samples, 0.83%)</title><rect x="880.2" y="819.0" width="9.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="883.2" y="830.0"></text>
</g>
<g>
<title>ClassVerifier::change_sig_to_verificationType(SignatureStream*, VerificationType*, Thread*) (2 samples, 0.83%)</title><rect x="880.2" y="803.0" width="9.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="883.2" y="814.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (2 samples, 0.83%)</title><rect x="880.2" y="787.0" width="9.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="883.2" y="798.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (2 samples, 0.83%)</title><rect x="880.2" y="771.0" width="9.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="883.2" y="782.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (2 samples, 0.83%)</title><rect x="880.2" y="755.0" width="9.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="883.2" y="766.0"></text>
</g>
<g>
<title>ClassVerifier::verify_ldc(int, unsigned short, StackMapFrame*, constantPoolHandle const&amp;, unsigned short, Thread*) (1 samples, 0.42%)</title><rect x="890.1" y="819.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="893.1" y="830.0"></text>
</g>
<g>
<title>ClassVerifier::verify_cp_type(unsigned short, int, constantPoolHandle const&amp;, unsigned int, Thread*) (1 samples, 0.42%)</title><rect x="890.1" y="803.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="893.1" y="814.0"></text>
</g>
<g>
<title>ClassVerifier::verify_stackmap_table(unsigned short, unsigned short, StackMapFrame*, StackMapTable*, bool, Thread*) (1 samples, 0.42%)</title><rect x="895.0" y="819.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="898.0" y="830.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_method_signature(Symbol*) (1 samples, 0.42%)</title><rect x="899.9" y="819.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="902.9" y="830.0"></text>
</g>
<g>
<title>oopDesc::slow_identity_hash() (1 samples, 0.42%)</title><rect x="904.8" y="851.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="907.8" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::identity_hash_value_for(Handle) (1 samples, 0.42%)</title><rect x="904.8" y="835.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="907.8" y="846.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (5 samples, 2.08%)</title><rect x="909.8" y="1107.0" width="24.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.8" y="1118.0">j..</text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (5 samples, 2.08%)</title><rect x="909.8" y="1091.0" width="24.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.8" y="1102.0">j..</text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (5 samples, 2.08%)</title><rect x="909.8" y="1075.0" width="24.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.8" y="1086.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (5 samples, 2.08%)</title><rect x="909.8" y="1059.0" width="24.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="912.8" y="1070.0">j..</text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.42%)</title><rect x="909.8" y="1043.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.42%)</title><rect x="909.8" y="1027.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.42%)</title><rect x="909.8" y="1011.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.42%)</title><rect x="909.8" y="995.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (4 samples, 1.67%)</title><rect x="914.7" y="1043.0" width="19.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (4 samples, 1.67%)</title><rect x="914.7" y="1027.0" width="19.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (4 samples, 1.67%)</title><rect x="914.7" y="1011.0" width="19.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="917.7" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/apachehttpasyncclient/ApacheHttpClientRedirectInstrumentation.&lt;init&gt; (1 samples, 0.42%)</title><rect x="914.7" y="995.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.7" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.42%)</title><rect x="914.7" y="979.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.7" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.42%)</title><rect x="914.7" y="963.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.7" y="974.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.42%)</title><rect x="914.7" y="947.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.7" y="958.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.42%)</title><rect x="914.7" y="931.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.7" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.42%)</title><rect x="914.7" y="915.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.7" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.42%)</title><rect x="914.7" y="899.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.7" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.42%)</title><rect x="914.7" y="883.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.42%)</title><rect x="914.7" y="867.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.7" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.propertyNameToEnvironmentVariableName (1 samples, 0.42%)</title><rect x="914.7" y="851.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.7" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.replaceAll (1 samples, 0.42%)</title><rect x="914.7" y="835.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.7" y="846.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.42%)</title><rect x="914.7" y="819.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.7" y="830.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.42%)</title><rect x="914.7" y="803.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.7" y="814.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.42%)</title><rect x="914.7" y="787.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.7" y="798.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharProperty.match (1 samples, 0.42%)</title><rect x="914.7" y="771.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.codePointAt (1 samples, 0.42%)</title><rect x="914.7" y="755.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.isHighSurrogate (1 samples, 0.42%)</title><rect x="914.7" y="739.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.7" y="750.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/grizzlyhttp232/DefaultFilterChainInstrumentation.&lt;init&gt; (1 samples, 0.42%)</title><rect x="919.6" y="995.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.6" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.42%)</title><rect x="919.6" y="979.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="922.6" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.42%)</title><rect x="919.6" y="963.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.6" y="974.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.42%)</title><rect x="919.6" y="947.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.42%)</title><rect x="919.6" y="931.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.6" y="942.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.42%)</title><rect x="919.6" y="915.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.6" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.42%)</title><rect x="919.6" y="899.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.42%)</title><rect x="919.6" y="883.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.6" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.&lt;init&gt; (1 samples, 0.42%)</title><rect x="919.6" y="867.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.6" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (1 samples, 0.42%)</title><rect x="919.6" y="851.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.6" y="862.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/netty38/NettyChannelPipelineInstrumentation.&lt;init&gt; (1 samples, 0.42%)</title><rect x="924.5" y="995.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.5" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.42%)</title><rect x="924.5" y="979.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.5" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.42%)</title><rect x="924.5" y="963.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.5" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.getClass (1 samples, 0.42%)</title><rect x="924.5" y="947.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.5" y="958.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/rmi/client/RmiClientInstrumentation.&lt;init&gt; (1 samples, 0.42%)</title><rect x="929.4" y="995.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.4" y="1006.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Tracing.&lt;init&gt; (1 samples, 0.42%)</title><rect x="929.4" y="979.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.4" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.&lt;init&gt; (1 samples, 0.42%)</title><rect x="929.4" y="963.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.4" y="974.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isIntegrationEnabled (1 samples, 0.42%)</title><rect x="929.4" y="947.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.4" y="958.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.isEnabled (1 samples, 0.42%)</title><rect x="929.4" y="931.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="932.4" y="942.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getBoolean (1 samples, 0.42%)</title><rect x="929.4" y="915.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.get (1 samples, 0.42%)</title><rect x="929.4" y="899.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.4" y="910.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.42%)</title><rect x="929.4" y="883.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.4" y="894.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.42%)</title><rect x="929.4" y="867.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.propertyNameToEnvironmentVariableName (1 samples, 0.42%)</title><rect x="929.4" y="851.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.4" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.replaceAll (1 samples, 0.42%)</title><rect x="929.4" y="835.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.4" y="846.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.42%)</title><rect x="929.4" y="819.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.4" y="830.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.42%)</title><rect x="929.4" y="803.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.4" y="814.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.42%)</title><rect x="929.4" y="787.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.4" y="798.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharProperty.match (1 samples, 0.42%)</title><rect x="929.4" y="771.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.4" y="782.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharPredicate$$Lambda$31/752848266.is (1 samples, 0.42%)</title><rect x="929.4" y="755.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.4" y="766.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharPredicate.lambda$negate$3 (1 samples, 0.42%)</title><rect x="929.4" y="739.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.4" y="750.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$29/501263526.is (1 samples, 0.42%)</title><rect x="929.4" y="723.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Delegator.installOn (30 samples, 12.50%)</title><rect x="934.3" y="1107.0" width="147.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.3" y="1118.0">net/bytebuddy/agent..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.installOn (30 samples, 12.50%)</title><rect x="934.3" y="1091.0" width="147.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.3" y="1102.0">net/bytebuddy/agent..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.doInstall (30 samples, 12.50%)</title><rect x="934.3" y="1075.0" width="147.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.3" y="1086.0">net/bytebuddy/agent..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.makeRaw (4 samples, 1.67%)</title><rect x="934.3" y="1059.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.3" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.&lt;clinit&gt; (4 samples, 1.67%)</title><rect x="934.3" y="1043.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.3" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 1.67%)</title><rect x="934.3" y="1027.0" width="19.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.3" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (4 samples, 1.67%)</title><rect x="934.3" y="1011.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.3" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Factory$CreationAction.run (4 samples, 1.67%)</title><rect x="934.3" y="995.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.3" y="1006.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter.intercept (1 samples, 0.42%)</title><rect x="934.3" y="979.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.3" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodMatchAdapter.materialize (1 samples, 0.42%)</title><rect x="934.3" y="963.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.3" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="934.3" y="947.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.3" y="958.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="934.3" y="931.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.3" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="934.3" y="915.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.3" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="934.3" y="899.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.3" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="934.3" y="883.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.3" y="894.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="934.3" y="867.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.3" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="934.3" y="851.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="934.3" y="835.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.3" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.42%)</title><rect x="934.3" y="819.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="937.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (2 samples, 0.83%)</title><rect x="939.2" y="979.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.2" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (2 samples, 0.83%)</title><rect x="939.2" y="963.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.2" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.83%)</title><rect x="939.2" y="947.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="942.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (2 samples, 0.83%)</title><rect x="939.2" y="931.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (1 samples, 0.42%)</title><rect x="939.2" y="915.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.42%)</title><rect x="939.2" y="899.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.42%)</title><rect x="939.2" y="883.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="942.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="939.2" y="867.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.42%)</title><rect x="939.2" y="851.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.42%)</title><rect x="939.2" y="835.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="939.2" y="819.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.42%)</title><rect x="939.2" y="803.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.42%)</title><rect x="939.2" y="787.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="942.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="939.2" y="771.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="942.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.42%)</title><rect x="939.2" y="755.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="942.2" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.&lt;init&gt; (1 samples, 0.42%)</title><rect x="939.2" y="739.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putMapEntries (1 samples, 0.42%)</title><rect x="939.2" y="723.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (1 samples, 0.42%)</title><rect x="944.2" y="915.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (1 samples, 0.42%)</title><rect x="944.2" y="899.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.42%)</title><rect x="944.2" y="883.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getGenericSignature (1 samples, 0.42%)</title><rect x="944.2" y="867.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.accept (1 samples, 0.42%)</title><rect x="944.2" y="851.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor.onNonGenericType (1 samples, 0.42%)</title><rect x="944.2" y="835.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$ForSignatureVisitor.onNonGenericType (1 samples, 0.42%)</title><rect x="944.2" y="819.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType$ForLoadedType.getComponentType (1 samples, 0.42%)</title><rect x="944.2" y="803.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator.ofComponentType (1 samples, 0.42%)</title><rect x="944.2" y="787.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$ForComponentType.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="944.2" y="771.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$AnnotationReader$Delegator$Chained.of (1 samples, 0.42%)</title><rect x="944.2" y="755.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.2" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.42%)</title><rect x="944.2" y="739.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.42%)</title><rect x="944.2" y="723.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.2" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="944.2" y="707.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.2" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="944.2" y="691.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.2" y="702.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader.loadFromPackage (1 samples, 0.42%)</title><rect x="944.2" y="675.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="944.2" y="659.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="944.2" y="643.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.42%)</title><rect x="944.2" y="627.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.42%)</title><rect x="944.2" y="611.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.42%)</title><rect x="944.2" y="595.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.2" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.42%)</title><rect x="944.2" y="579.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.42%)</title><rect x="944.2" y="563.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.42%)</title><rect x="944.2" y="547.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.2" y="558.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.42%)</title><rect x="944.2" y="531.0" width="4.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="947.2" y="542.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.42%)</title><rect x="944.2" y="515.0" width="4.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="947.2" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.42%)</title><rect x="944.2" y="499.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="947.2" y="510.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.42%)</title><rect x="944.2" y="483.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="947.2" y="494.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.42%)</title><rect x="944.2" y="467.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.2" y="478.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="944.2" y="451.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.2" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.42%)</title><rect x="944.2" y="435.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="947.2" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.42%)</title><rect x="944.2" y="419.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="947.2" y="430.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.42%)</title><rect x="944.2" y="403.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="947.2" y="414.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Default$Unloaded.load (1 samples, 0.42%)</title><rect x="949.1" y="979.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.1" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/TypeResolutionStrategy$Passive.initialize (1 samples, 0.42%)</title><rect x="949.1" y="963.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.1" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassLoadingStrategy$Default$WrappingDispatcher.load (1 samples, 0.42%)</title><rect x="949.1" y="947.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.1" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="949.1" y="931.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.1" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="949.1" y="915.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.1" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$CreationAction.run (1 samples, 0.42%)</title><rect x="949.1" y="899.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.1" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ByteArrayClassLoader$PackageLookupStrategy$CreationAction.run (1 samples, 0.42%)</title><rect x="949.1" y="883.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.1" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.42%)</title><rect x="949.1" y="867.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="952.1" y="878.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.42%)</title><rect x="949.1" y="851.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="952.1" y="862.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.42%)</title><rect x="949.1" y="835.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="952.1" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.42%)</title><rect x="949.1" y="819.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="952.1" y="830.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.42%)</title><rect x="949.1" y="803.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="952.1" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy.apply (26 samples, 10.83%)</title><rect x="954.0" y="1059.0" width="127.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.0" y="1070.0">net/bytebuddy/ag..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.typePool (1 samples, 0.42%)</title><rect x="954.0" y="1043.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.0" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.createCachingTypePool (1 samples, 0.42%)</title><rect x="954.0" y="1027.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="954.0" y="1011.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.0" y="1022.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="954.0" y="995.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.0" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="954.0" y="979.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.0" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="954.0" y="963.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.0" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="954.0" y="947.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.0" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="954.0" y="931.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.0" y="942.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="954.0" y="915.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.0" y="926.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="954.0" y="899.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.0" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="954.0" y="883.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.0" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="954.0" y="867.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.0" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="954.0" y="851.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="957.0" y="862.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="954.0" y="835.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="957.0" y="846.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="954.0" y="819.0" width="4.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="957.0" y="830.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="954.0" y="803.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="957.0" y="814.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="954.0" y="787.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="957.0" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="954.0" y="771.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="957.0" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="954.0" y="755.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="957.0" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.42%)</title><rect x="954.0" y="739.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="957.0" y="750.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.42%)</title><rect x="954.0" y="723.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="957.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$DescriptionStrategy$Default$2.apply (1 samples, 0.42%)</title><rect x="958.9" y="1043.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.9" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase$Hierarchical.describe (1 samples, 0.42%)</title><rect x="958.9" y="1027.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$AbstractBase.describe (1 samples, 0.42%)</title><rect x="958.9" y="1011.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.9" y="1022.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.apply (11 samples, 4.58%)</title><rect x="963.8" y="1043.0" width="54.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.8" y="1054.0">net/b..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="963.8" y="1027.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.8" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="963.8" y="1011.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="963.8" y="995.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.8" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="963.8" y="979.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.8" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="963.8" y="963.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.8" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="963.8" y="947.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.8" y="958.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="963.8" y="931.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.8" y="942.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="963.8" y="915.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.8" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="963.8" y="899.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.8" y="910.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="963.8" y="883.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.8" y="894.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="963.8" y="867.0" width="4.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="966.8" y="878.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="963.8" y="851.0" width="4.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="966.8" y="862.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="963.8" y="835.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="966.8" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="963.8" y="819.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="966.8" y="830.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="963.8" y="803.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="966.8" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="963.8" y="787.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="966.8" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="963.8" y="771.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="966.8" y="782.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.42%)</title><rect x="963.8" y="755.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="966.8" y="766.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.42%)</title><rect x="963.8" y="739.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="966.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector$ForRetransformation.doApply (10 samples, 4.17%)</title><rect x="968.7" y="1027.0" width="49.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.7" y="1038.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Dispatcher$ForJava6CapableVm.retransformClasses (10 samples, 4.17%)</title><rect x="968.7" y="1011.0" width="49.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.7" y="1022.0">net/b..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (10 samples, 4.17%)</title><rect x="968.7" y="995.0" width="49.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.7" y="1006.0">java/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (10 samples, 4.17%)</title><rect x="968.7" y="979.0" width="49.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.7" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (10 samples, 4.17%)</title><rect x="968.7" y="963.0" width="49.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.7" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (10 samples, 4.17%)</title><rect x="968.7" y="947.0" width="49.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.7" y="958.0">jdk/i..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses (10 samples, 4.17%)</title><rect x="968.7" y="931.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.7" y="942.0">sun/i..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.retransformClasses0 (10 samples, 4.17%)</title><rect x="968.7" y="915.0" width="49.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.7" y="926.0">sun/i..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.transform (10 samples, 4.17%)</title><rect x="968.7" y="899.0" width="49.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.7" y="910.0">sun/i..</text>
</g>
<g>
<title>sun/instrument/TransformerManager.transform (10 samples, 4.17%)</title><rect x="968.7" y="883.0" width="49.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.7" y="894.0">sun/i..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$ByteBuddy$ModuleSupport.transform (10 samples, 4.17%)</title><rect x="968.7" y="867.0" width="49.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.7" y="878.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (10 samples, 4.17%)</title><rect x="968.7" y="851.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.7" y="862.0">net/b..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 4.17%)</title><rect x="968.7" y="835.0" width="49.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.7" y="846.0">java/..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (10 samples, 4.17%)</title><rect x="968.7" y="819.0" width="49.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.7" y="830.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer$Java9CapableVmDispatcher.run (10 samples, 4.17%)</title><rect x="968.7" y="803.0" width="49.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.7" y="814.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.access$1600 (10 samples, 4.17%)</title><rect x="968.7" y="787.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.7" y="798.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.transform (10 samples, 4.17%)</title><rect x="968.7" y="771.0" width="49.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.7" y="782.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$ExecutingTransformer.doTransform (10 samples, 4.17%)</title><rect x="968.7" y="755.0" width="49.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.7" y="766.0">net/b..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onTransformation (1 samples, 0.42%)</title><rect x="968.7" y="739.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$ModuleReadEdgeCompleting.onTransformation (1 samples, 0.42%)</title><rect x="968.7" y="723.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule.canRead (1 samples, 0.42%)</title><rect x="968.7" y="707.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/JavaModule$Dispatcher$Enabled.canRead (1 samples, 0.42%)</title><rect x="968.7" y="691.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.7" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.42%)</title><rect x="968.7" y="675.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.42%)</title><rect x="968.7" y="659.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.42%)</title><rect x="968.7" y="643.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 0.42%)</title><rect x="968.7" y="627.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Module.canRead (1 samples, 0.42%)</title><rect x="968.7" y="611.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.7" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice.transform (3 samples, 1.25%)</title><rect x="973.7" y="739.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.7" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Transformer$ForAdvice$Entry$ForUnifiedAdvice.resolve (3 samples, 1.25%)</title><rect x="973.7" y="723.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.7" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$WithCustomMapping.to (3 samples, 1.25%)</title><rect x="973.7" y="707.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.7" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.to (3 samples, 1.25%)</title><rect x="973.7" y="691.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.7" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining.asMethodEnter (2 samples, 0.83%)</title><rect x="973.7" y="675.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.of (2 samples, 0.83%)</title><rect x="973.7" y="659.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.7" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter$WithRetainedEnterType.&lt;init&gt; (2 samples, 0.83%)</title><rect x="973.7" y="643.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.7" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodEnter.&lt;init&gt; (2 samples, 0.83%)</title><rect x="973.7" y="627.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.7" y="638.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="973.7" y="611.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="976.7" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="973.7" y="595.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="976.7" y="606.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="973.7" y="579.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.7" y="590.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.42%)</title><rect x="973.7" y="563.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="976.7" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="973.7" y="547.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="976.7" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="973.7" y="531.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="976.7" y="542.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.42%)</title><rect x="973.7" y="515.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="976.7" y="526.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.42%)</title><rect x="973.7" y="499.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="976.7" y="510.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.42%)</title><rect x="973.7" y="483.0" width="4.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="976.7" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved.&lt;init&gt; (1 samples, 0.42%)</title><rect x="978.6" y="611.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.6" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Resolved$AbstractBase.&lt;init&gt; (1 samples, 0.42%)</title><rect x="978.6" y="595.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.6" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="978.6" y="579.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.6" y="590.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="978.6" y="563.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.6" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="978.6" y="547.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.6" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="978.6" y="531.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.6" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="978.6" y="515.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.6" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="978.6" y="499.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.6" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="978.6" y="483.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="978.6" y="467.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.6" y="478.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="978.6" y="451.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.6" y="462.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="978.6" y="435.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.6" y="446.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.42%)</title><rect x="978.6" y="419.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="978.6" y="403.0" width="4.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="981.6" y="414.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.42%)</title><rect x="978.6" y="387.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="981.6" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.locate (1 samples, 0.42%)</title><rect x="983.5" y="675.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.5" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyAnnotationDescription.getValue (1 samples, 0.42%)</title><rect x="983.5" y="659.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.5" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.is (1 samples, 0.42%)</title><rect x="983.5" y="643.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.5" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatchers.definedMethod (1 samples, 0.42%)</title><rect x="983.5" y="627.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="983.5" y="611.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.5" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="983.5" y="595.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.5" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="983.5" y="579.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.5" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="983.5" y="563.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.5" y="574.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="983.5" y="547.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.5" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="983.5" y="531.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.5" y="542.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="983.5" y="515.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.5" y="526.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="983.5" y="499.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.5" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="983.5" y="483.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.5" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.42%)</title><rect x="983.5" y="467.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.42%)</title><rect x="983.5" y="451.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.42%)</title><rect x="983.5" y="435.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="986.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.42%)</title><rect x="983.5" y="419.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="986.5" y="430.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.42%)</title><rect x="983.5" y="403.0" width="4.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="986.5" y="414.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.42%)</title><rect x="983.5" y="387.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="986.5" y="398.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.42%)</title><rect x="983.5" y="371.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="986.5" y="382.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.42%)</title><rect x="983.5" y="355.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="986.5" y="366.0"></text>
</g>
<g>
<title>java_lang_String::create_from_unicode(unsigned short*, int, Thread*) (1 samples, 0.42%)</title><rect x="983.5" y="339.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="986.5" y="350.0"></text>
</g>
<g>
<title>UNICODE::is_latin1(unsigned short*, int) (1 samples, 0.42%)</title><rect x="983.5" y="323.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="986.5" y="334.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/RedefinitionDynamicTypeBuilder.make (6 samples, 2.50%)</title><rect x="988.4" y="739.0" width="29.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.4" y="750.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (2 samples, 0.83%)</title><rect x="988.4" y="723.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.42%)</title><rect x="988.4" y="707.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.42%)</title><rect x="988.4" y="691.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="988.4" y="675.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.42%)</title><rect x="988.4" y="659.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.42%)</title><rect x="988.4" y="643.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="988.4" y="627.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="991.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.42%)</title><rect x="988.4" y="611.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.4" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Initial.extendBy (1 samples, 0.42%)</title><rect x="988.4" y="595.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.4" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved.&lt;init&gt; (1 samples, 0.42%)</title><rect x="988.4" y="579.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.4" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.42%)</title><rect x="993.3" y="707.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.3" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.42%)</title><rect x="993.3" y="691.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.3" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.42%)</title><rect x="993.3" y="675.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.3" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/MethodParametersMatcher.matches (1 samples, 0.42%)</title><rect x="993.3" y="659.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.3" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (1 samples, 0.42%)</title><rect x="993.3" y="643.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.3" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.42%)</title><rect x="993.3" y="627.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.3" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/CollectionItemMatcher.matches (1 samples, 0.42%)</title><rect x="993.3" y="611.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.3" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.42%)</title><rect x="993.3" y="595.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$TypeSubstituting.size (1 samples, 0.42%)</title><rect x="993.3" y="579.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.3" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription$LazyParameterList.size (1 samples, 0.42%)</title><rect x="993.3" y="563.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.3" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (3 samples, 1.25%)</title><rect x="998.2" y="723.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining.create (3 samples, 1.25%)</title><rect x="998.2" y="707.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 1.25%)</title><rect x="998.2" y="691.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.2" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 1.25%)</title><rect x="998.2" y="675.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1001.2" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.visit (1 samples, 0.42%)</title><rect x="998.2" y="659.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.42%)</title><rect x="998.2" y="643.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.42%)</title><rect x="998.2" y="627.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/TypeConstantAdjustment$TypeConstantDissolvingClassVisitor.visit (1 samples, 0.42%)</title><rect x="998.2" y="611.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassVisitor.visit (1 samples, 0.42%)</title><rect x="998.2" y="595.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ValidatingClassVisitor.visit (1 samples, 0.42%)</title><rect x="998.2" y="579.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.2" y="590.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.42%)</title><rect x="998.2" y="563.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1001.2" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="998.2" y="547.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1001.2" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="998.2" y="531.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1001.2" y="542.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.42%)</title><rect x="998.2" y="515.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1001.2" y="526.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="998.2" y="499.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1001.2" y="510.0"></text>
</g>
<g>
<title>ConstantPoolCache::allocate(ClassLoaderData*, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="998.2" y="483.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1001.2" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.83%)</title><rect x="1003.2" y="659.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.2" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readCode (1 samples, 0.42%)</title><rect x="1003.2" y="643.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.2" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.visitMaxs (1 samples, 0.42%)</title><rect x="1003.2" y="627.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.2" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.onUserEnd (1 samples, 0.42%)</title><rect x="1003.2" y="611.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.2" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply (1 samples, 0.42%)</title><rect x="1003.2" y="595.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.2" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="1003.2" y="579.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.2" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (1 samples, 0.42%)</title><rect x="1003.2" y="563.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.2" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (1 samples, 0.42%)</title><rect x="1003.2" y="547.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.2" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod (1 samples, 0.42%)</title><rect x="1003.2" y="531.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1006.2" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.apply (1 samples, 0.42%)</title><rect x="1003.2" y="515.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.2" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.doApply (1 samples, 0.42%)</title><rect x="1003.2" y="499.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.2" y="510.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForField.resolve (1 samples, 0.42%)</title><rect x="1003.2" y="483.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.2" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved.resolve (1 samples, 0.42%)</title><rect x="1003.2" y="467.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.2" y="478.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$OffsetMapping$ForField$Unresolved$WithImplicitType.fieldLocator (1 samples, 0.42%)</title><rect x="1003.2" y="451.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.2" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1003.2" y="435.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.2" y="446.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1003.2" y="419.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.2" y="430.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1003.2" y="403.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.2" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1003.2" y="387.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.2" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1003.2" y="371.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.2" y="382.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1003.2" y="355.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.2" y="366.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1003.2" y="339.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.2" y="350.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1003.2" y="323.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.2" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1003.2" y="307.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.2" y="318.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1003.2" y="291.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.2" y="302.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1003.2" y="275.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.2" y="286.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1003.2" y="259.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.2" y="270.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1003.2" y="243.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.2" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1003.2" y="227.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.2" y="238.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1003.2" y="211.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.2" y="222.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1003.2" y="195.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 0.42%)</title><rect x="1003.2" y="179.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader.getResource (1 samples, 0.42%)</title><rect x="1003.2" y="163.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.2" y="174.0"></text>
</g>
<g>
<title>java/net/URL.openConnection (1 samples, 0.42%)</title><rect x="1003.2" y="147.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.2" y="158.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler.openConnection (1 samples, 0.42%)</title><rect x="1003.2" y="131.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.2" y="142.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler$InternalJarURLConnection.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1003.2" y="115.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.2" y="126.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/InternalJarURLHandler$InternalJarURLConnection.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1003.2" y="99.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.2" y="110.0"></text>
</g>
<g>
<title>java/net/URLConnection.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1003.2" y="83.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.2" y="94.0"></text>
</g>
<g>
<title>java/net/URLConnection.getDefaultUseCaches (1 samples, 0.42%)</title><rect x="1003.2" y="67.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.2" y="78.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.42%)</title><rect x="1003.2" y="51.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.2" y="62.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.42%)</title><rect x="1003.2" y="35.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.2" y="46.0"></text>
</g>
<g>
<title>net/bytebuddy/utility/visitor/MetadataAwareClassVisitor.visitMethod (1 samples, 0.42%)</title><rect x="1008.1" y="643.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.1" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForInlining$WithFullProcessing$RedefinitionClassVisitor.onVisitMethod (1 samples, 0.42%)</title><rect x="1008.1" y="627.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.1" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$DispatchingVisitor.visitMethod (1 samples, 0.42%)</title><rect x="1008.1" y="611.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.1" y="622.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/AsmVisitorWrapper$ForDeclaredMethods$Entry.wrap (1 samples, 0.42%)</title><rect x="1008.1" y="595.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.1" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.wrap (1 samples, 0.42%)</title><rect x="1008.1" y="579.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1011.1" y="590.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice.doWrap (1 samples, 0.42%)</title><rect x="1008.1" y="563.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.1" y="574.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice$WithExceptionHandling.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1008.1" y="547.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1011.1" y="558.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor$WithExitAdvice.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1008.1" y="531.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.1" y="542.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$AdviceVisitor.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1008.1" y="515.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.1" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/asm/Advice$Dispatcher$Inlining$Resolved$ForMethodExit.getArgumentHandlerFactory (1 samples, 0.42%)</title><rect x="1008.1" y="499.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.1" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1008.1" y="483.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.1" y="494.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1008.1" y="467.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.1" y="478.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1008.1" y="451.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1011.1" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1008.1" y="435.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1011.1" y="446.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1008.1" y="419.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.1" y="430.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1008.1" y="403.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.1" y="414.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1008.1" y="387.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.1" y="398.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1008.1" y="371.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.1" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1008.1" y="355.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1011.1" y="366.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1008.1" y="339.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.1" y="350.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="1008.1" y="323.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1011.1" y="334.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="1008.1" y="307.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1011.1" y="318.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="1008.1" y="291.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1011.1" y="302.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="1008.1" y="275.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.1" y="286.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="1008.1" y="259.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1011.1" y="270.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="1008.1" y="243.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1011.1" y="254.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="1008.1" y="227.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1011.1" y="238.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.42%)</title><rect x="1008.1" y="211.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1011.1" y="222.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.42%)</title><rect x="1008.1" y="195.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1011.1" y="206.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/inline/InliningImplementationMatcher.of (1 samples, 0.42%)</title><rect x="1013.0" y="723.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.0" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$LazyMethodDescription.getReturnType (1 samples, 0.42%)</title><rect x="1013.0" y="707.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1016.0" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw.resolveReturnType (1 samples, 0.42%)</title><rect x="1013.0" y="691.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.0" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$GenericTypeToken$Resolution$Raw$RawAnnotatedType.of (1 samples, 0.42%)</title><rect x="1013.0" y="675.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.0" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.42%)</title><rect x="1013.0" y="659.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.0" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.42%)</title><rect x="1013.0" y="643.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1016.0" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.42%)</title><rect x="1013.0" y="627.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1016.0" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$Collector.consider (13 samples, 5.42%)</title><rect x="1017.9" y="1043.0" width="63.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.9" y="1054.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default$Transformation$SimpleMatcher.matches (12 samples, 5.00%)</title><rect x="1017.9" y="1027.0" width="59.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.9" y="1038.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (12 samples, 5.00%)</title><rect x="1017.9" y="1011.0" width="59.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.9" y="1022.0">net/by..</text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (12 samples, 5.00%)</title><rect x="1017.9" y="995.0" width="59.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.9" y="1006.0">net/by..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default$MuzzleMatcher.matches (2 samples, 0.83%)</title><rect x="1017.9" y="979.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.9" y="990.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.matches (1 samples, 0.42%)</title><rect x="1017.9" y="963.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.9" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/CaffeineWeakCache.computeIfAbsent (1 samples, 0.42%)</title><rect x="1017.9" y="947.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.9" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.42%)</title><rect x="1017.9" y="931.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.9" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher$1.apply (1 samples, 0.42%)</title><rect x="1017.9" y="915.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.9" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.access$000 (1 samples, 0.42%)</title><rect x="1017.9" y="899.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.9" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.doesMatch (1 samples, 0.42%)</title><rect x="1017.9" y="883.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.9" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.42%)</title><rect x="1017.9" y="867.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.9" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.checkMatch (1 samples, 0.42%)</title><rect x="1017.9" y="851.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.9" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.traverseHierarchy (1 samples, 0.42%)</title><rect x="1017.9" y="835.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.9" y="846.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/muzzle/ReferenceMatcher.findFieldsForType (1 samples, 0.42%)</title><rect x="1017.9" y="819.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.9" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.42%)</title><rect x="1017.9" y="803.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.9" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldTokenList.get (1 samples, 0.42%)</title><rect x="1017.9" y="787.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1020.9" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldTokenList.get (1 samples, 0.42%)</title><rect x="1017.9" y="771.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.access$1000 (1 samples, 0.42%)</title><rect x="1017.9" y="755.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$FieldToken.toFieldDescription (1 samples, 0.42%)</title><rect x="1017.9" y="739.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1017.9" y="723.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.9" y="734.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1017.9" y="707.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.9" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1017.9" y="691.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.9" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1017.9" y="675.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.9" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1017.9" y="659.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.9" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1017.9" y="643.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.9" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="627.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.9" y="638.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="611.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1020.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="595.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.9" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1017.9" y="579.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.9" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1017.9" y="563.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.9" y="574.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1017.9" y="547.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.9" y="558.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1017.9" y="531.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.9" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1017.9" y="515.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.9" y="526.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1017.9" y="499.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.9" y="510.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1017.9" y="483.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1020.9" y="494.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="467.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.9" y="478.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="451.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.9" y="462.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="435.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.9" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1017.9" y="419.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.9" y="430.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1017.9" y="403.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.9" y="414.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1017.9" y="387.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.9" y="398.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1017.9" y="371.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.9" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1017.9" y="355.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.9" y="366.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1017.9" y="339.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.9" y="350.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1017.9" y="323.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.9" y="334.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="307.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.9" y="318.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="291.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.9" y="302.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1017.9" y="275.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.9" y="286.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1017.9" y="259.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1020.9" y="270.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="1017.9" y="243.0" width="4.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1020.9" y="254.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="1017.9" y="227.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1020.9" y="238.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="1017.9" y="211.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1020.9" y="222.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="1017.9" y="195.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1020.9" y="206.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="1017.9" y="179.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1020.9" y="190.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.42%)</title><rect x="1017.9" y="163.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1020.9" y="174.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;Klass*&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="1017.9" y="147.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.9" y="158.0"></text>
</g>
<g>
<title>klassVtable::add_new_mirandas_to_lists(GrowableArray&lt;Method*&gt;*, GrowableArray&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.42%)</title><rect x="1017.9" y="131.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.9" y="142.0"></text>
</g>
<g>
<title>klassVtable::is_miranda(Method*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) [clone .part.29] (1 samples, 0.42%)</title><rect x="1017.9" y="115.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1020.9" y="126.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.42%)</title><rect x="1017.9" y="99.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.9" y="110.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.42%)</title><rect x="1017.9" y="83.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.9" y="94.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.42%)</title><rect x="1017.9" y="67.0" width="4.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1020.9" y="78.0"></text>
</g>
<g>
<title>datadog/trace/instrumentation/http_url_connection/UrlInstrumentation.getInstrumentationMuzzle (1 samples, 0.42%)</title><rect x="1022.8" y="963.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.8" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/Instrumenter$Default.helperClassNames (1 samples, 0.42%)</title><rect x="1022.8" y="947.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1025.8" y="958.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.42%)</title><rect x="1022.8" y="931.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1025.8" y="942.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.42%)</title><rect x="1022.8" y="915.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$Conjunction.matches (2 samples, 0.83%)</title><rect x="1027.8" y="979.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.8" y="990.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (2 samples, 0.83%)</title><rect x="1027.8" y="963.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.8" y="974.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/LoggingFailSafeMatcher.matches (2 samples, 0.83%)</title><rect x="1027.8" y="947.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.8" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (2 samples, 0.83%)</title><rect x="1027.8" y="931.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.8" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.42%)</title><rect x="1027.8" y="915.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1030.8" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (1 samples, 0.42%)</title><rect x="1032.7" y="915.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.7" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.42%)</title><rect x="1032.7" y="899.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.7" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeExtendsClassMatcher.matches (1 samples, 0.42%)</title><rect x="1032.7" y="883.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.7" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetSuperClass (1 samples, 0.42%)</title><rect x="1032.7" y="867.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.7" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getSuperClass (1 samples, 0.42%)</title><rect x="1032.7" y="851.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.7" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.42%)</title><rect x="1032.7" y="835.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.7" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.42%)</title><rect x="1032.7" y="819.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.7" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.42%)</title><rect x="1032.7" y="803.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.7" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.42%)</title><rect x="1032.7" y="787.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.7" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.42%)</title><rect x="1032.7" y="771.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.7" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$RawMatcher$ForElementMatchers.matches (8 samples, 3.33%)</title><rect x="1037.6" y="979.0" width="39.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.6" y="990.0">net..</text>
</g>
<g>
<title>net/bytebuddy/matcher/ElementMatcher$Junction$Conjunction.matches (8 samples, 3.33%)</title><rect x="1037.6" y="963.0" width="39.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.6" y="974.0">net..</text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (4 samples, 1.67%)</title><rect x="1037.6" y="947.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.6" y="958.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.matches (4 samples, 1.67%)</title><rect x="1037.6" y="931.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.6" y="942.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.42%)</title><rect x="1037.6" y="915.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.6" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.matches (1 samples, 0.42%)</title><rect x="1037.6" y="899.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.6" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeErasureMatcher.safeAsErasure (1 samples, 0.42%)</title><rect x="1037.6" y="883.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.6" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.asErasure (1 samples, 0.42%)</title><rect x="1037.6" y="867.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.6" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType.toErasure (1 samples, 0.42%)</title><rect x="1037.6" y="851.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.6" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.42%)</title><rect x="1037.6" y="835.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1040.6" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.42%)</title><rect x="1037.6" y="819.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1040.6" y="830.0"></text>
</g>
<g>
<title>CompiledIC::set_to_megamorphic(CallInfo*, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="1037.6" y="803.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.6" y="814.0"></text>
</g>
<g>
<title>InlineCacheBuffer::create_transition_stub(CompiledIC*, void*, unsigned char*) (1 samples, 0.42%)</title><rect x="1037.6" y="787.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1040.6" y="798.0"></text>
</g>
<g>
<title>InlineCacheBuffer::assemble_ic_buffer_code(unsigned char*, void*, unsigned char*) (1 samples, 0.42%)</title><rect x="1037.6" y="771.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1040.6" y="782.0"></text>
</g>
<g>
<title>AddressLiteral::AddressLiteral(unsigned char*, relocInfo::relocType) (1 samples, 0.42%)</title><rect x="1037.6" y="755.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1040.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (3 samples, 1.25%)</title><rect x="1042.5" y="915.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.5" y="926.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.hasNext (1 samples, 0.42%)</title><rect x="1042.5" y="899.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.5" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.42%)</title><rect x="1042.5" y="883.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.5" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.42%)</title><rect x="1042.5" y="867.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.5" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeList$Generic$ForDetachedTypes$WithResolvedErasure.get (1 samples, 0.42%)</title><rect x="1042.5" y="851.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.5" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList.get (1 samples, 0.42%)</title><rect x="1042.5" y="835.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.5" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription$TokenizedGenericType$TokenList.get (1 samples, 0.42%)</title><rect x="1042.5" y="819.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.5" y="830.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.42%)</title><rect x="1047.4" y="899.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.4" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.hasInterface (1 samples, 0.42%)</title><rect x="1047.4" y="883.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.4" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.42%)</title><rect x="1047.4" y="867.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1047.4" y="851.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.4" y="862.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1047.4" y="835.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.4" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithEagerNavigation.getInterfaces (1 samples, 0.42%)</title><rect x="1047.4" y="819.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.4" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection$WithResolvedErasure.resolve (1 samples, 0.42%)</title><rect x="1047.4" y="803.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.4" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$LazyProjection.accept (1 samples, 0.42%)</title><rect x="1047.4" y="787.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.4" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.accept (1 samples, 0.42%)</title><rect x="1047.4" y="771.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.4" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$WithoutTypeSubstitution.onParameterizedType (1 samples, 0.42%)</title><rect x="1047.4" y="755.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.4" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor.onParameterizedType (1 samples, 0.42%)</title><rect x="1047.4" y="739.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.4" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfTypeVariable.accept (1 samples, 0.42%)</title><rect x="1047.4" y="723.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.4" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.42%)</title><rect x="1047.4" y="707.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.4" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding.onTypeVariable (1 samples, 0.42%)</title><rect x="1047.4" y="691.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.4" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase.accept (1 samples, 0.42%)</title><rect x="1047.4" y="675.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1050.4" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.42%)</title><rect x="1047.4" y="659.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.4" y="670.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$Visitor$Substitutor$ForTypeVariableBinding$TypeVariableSubstitutor.onType (1 samples, 0.42%)</title><rect x="1047.4" y="643.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.4" y="654.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfParameterizedType.findBindingOf (1 samples, 0.42%)</title><rect x="1047.4" y="627.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.4" y="638.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getTypeVariables (1 samples, 0.42%)</title><rect x="1047.4" y="611.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.4" y="622.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher.safeGetInterfaces (1 samples, 0.42%)</title><rect x="1052.3" y="899.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.3" y="910.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1052.3" y="883.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.3" y="894.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/matcher/SafeHasSuperTypeMatcher$SafeInterfaceIterator.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1052.3" y="867.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.3" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$Generic$OfNonGenericType.getInterfaces (1 samples, 0.42%)</title><rect x="1052.3" y="851.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.3" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getInterfaces (1 samples, 0.42%)</title><rect x="1052.3" y="835.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.3" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (1 samples, 0.42%)</title><rect x="1052.3" y="819.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.3" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (1 samples, 0.42%)</title><rect x="1052.3" y="803.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.3" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (1 samples, 0.42%)</title><rect x="1052.3" y="787.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.3" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (1 samples, 0.42%)</title><rect x="1052.3" y="771.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.3" y="782.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.locate (1 samples, 0.42%)</title><rect x="1052.3" y="755.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.3" y="766.0"></text>
</g>
<g>
<title>datadog/trace/agent/tooling/bytebuddy/DDClassFileLocator.loadClassResource (1 samples, 0.42%)</title><rect x="1052.3" y="739.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.3" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.getResourceAsStream (1 samples, 0.42%)</title><rect x="1052.3" y="723.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getResource (1 samples, 0.42%)</title><rect x="1052.3" y="707.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.findResource (1 samples, 0.42%)</title><rect x="1052.3" y="691.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.42%)</title><rect x="1052.3" y="675.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.42%)</title><rect x="1052.3" y="659.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findResource (1 samples, 0.42%)</title><rect x="1052.3" y="643.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.find (1 samples, 0.42%)</title><rect x="1052.3" y="627.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.42%)</title><rect x="1052.3" y="611.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.42%)</title><rect x="1052.3" y="595.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.42%)</title><rect x="1052.3" y="579.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.42%)</title><rect x="1052.3" y="563.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.42%)</title><rect x="1052.3" y="547.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.42%)</title><rect x="1052.3" y="531.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.3" y="542.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x00007f4a708b7080 (1 samples, 0.42%)</title><rect x="1052.3" y="515.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.3" y="526.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/NegatingMatcher.matches (4 samples, 1.67%)</title><rect x="1057.2" y="947.0" width="19.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.2" y="958.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (4 samples, 1.67%)</title><rect x="1057.2" y="931.0" width="19.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.2" y="942.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/ModifierMatcher.matches (4 samples, 1.67%)</title><rect x="1057.2" y="915.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/description/type/TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers (4 samples, 1.67%)</title><rect x="1057.2" y="899.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.2" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate (4 samples, 1.67%)</title><rect x="1057.2" y="883.0" width="19.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.2" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.doResolve (4 samples, 1.67%)</title><rect x="1057.2" y="867.0" width="19.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.2" y="878.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$WithLazyResolution.access$001 (4 samples, 1.67%)</title><rect x="1057.2" y="851.0" width="19.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.2" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.doDescribe (4 samples, 1.67%)</title><rect x="1057.2" y="835.0" width="19.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.2" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default.parse (4 samples, 1.67%)</title><rect x="1057.2" y="819.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.2" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 1.25%)</title><rect x="1057.2" y="803.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.2" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.accept (3 samples, 1.25%)</title><rect x="1057.2" y="787.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.2" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readField (1 samples, 0.42%)</title><rect x="1057.2" y="771.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.visitField (1 samples, 0.42%)</title><rect x="1057.2" y="755.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$FieldExtractor.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1057.2" y="739.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/FieldVisitor.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1057.2" y="723.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/FieldVisitor.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1057.2" y="707.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readMethod (2 samples, 0.83%)</title><rect x="1062.2" y="771.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.2" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValues (1 samples, 0.42%)</title><rect x="1062.2" y="755.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1065.2" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readElementValue (1 samples, 0.42%)</title><rect x="1062.2" y="739.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor$AnnotationExtractor.visit (1 samples, 0.42%)</title><rect x="1062.2" y="723.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.2" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.42%)</title><rect x="1062.2" y="707.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.2" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/annotation/AnnotationValue$ForConstant.of (1 samples, 0.42%)</title><rect x="1062.2" y="691.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.2" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1062.2" y="675.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.2" y="686.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1062.2" y="659.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.2" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1062.2" y="643.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.2" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1062.2" y="627.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.2" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1062.2" y="611.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.2" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1062.2" y="595.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.2" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1062.2" y="579.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.2" y="590.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1062.2" y="563.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1062.2" y="547.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.2" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1062.2" y="531.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.2" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="1062.2" y="515.0" width="4.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1065.2" y="526.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="1062.2" y="499.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1065.2" y="510.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="1062.2" y="483.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1065.2" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="1062.2" y="467.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1065.2" y="478.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="1062.2" y="451.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1065.2" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="1062.2" y="435.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1065.2" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="1062.2" y="419.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.2" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) [clone .part.120] (1 samples, 0.42%)</title><rect x="1062.2" y="403.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1065.2" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_class_name(Symbol const*, Thread*) const (1 samples, 0.42%)</title><rect x="1062.2" y="387.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1065.2" y="398.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUTF8 (1 samples, 0.42%)</title><rect x="1067.1" y="755.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.42%)</title><rect x="1067.1" y="739.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.1" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassReader.readUtf (1 samples, 0.42%)</title><rect x="1067.1" y="723.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.1" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$TypeExtractor.toTypeDescription (1 samples, 0.42%)</title><rect x="1072.0" y="803.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.0" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$LazyTypeDescription.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1072.0" y="787.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature$OfType.extract (1 samples, 0.42%)</title><rect x="1072.0" y="771.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.extract (1 samples, 0.42%)</title><rect x="1072.0" y="755.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1075.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/signature/SignatureReader.accept (1 samples, 0.42%)</title><rect x="1072.0" y="739.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.0" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/pool/TypePool$Default$GenericTypeExtractor$ForSignature.visitClassBound (1 samples, 0.42%)</title><rect x="1072.0" y="723.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1072.0" y="707.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.0" y="718.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1072.0" y="691.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.0" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1072.0" y="675.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.0" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1072.0" y="659.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.0" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1072.0" y="643.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.0" y="654.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1072.0" y="627.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.0" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1072.0" y="611.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="1072.0" y="595.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$Loader$1.getContentLength (1 samples, 0.42%)</title><rect x="1072.0" y="579.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1075.0" y="590.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLength (1 samples, 0.42%)</title><rect x="1072.0" y="563.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1075.0" y="574.0"></text>
</g>
<g>
<title>java/net/URLConnection.getContentLengthLong (1 samples, 0.42%)</title><rect x="1072.0" y="547.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.0" y="558.0"></text>
</g>
<g>
<title>java/net/URLConnection.getHeaderFieldLong (1 samples, 0.42%)</title><rect x="1072.0" y="531.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.42%)</title><rect x="1072.0" y="515.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.42%)</title><rect x="1072.0" y="499.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1075.0" y="510.0"></text>
</g>
<g>
<title>java/lang/NumberFormatException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1072.0" y="483.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.0" y="494.0"></text>
</g>
<g>
<title>java/lang/IllegalArgumentException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1072.0" y="467.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.0" y="478.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1072.0" y="451.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1072.0" y="435.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.0" y="446.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1072.0" y="419.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.42%)</title><rect x="1072.0" y="403.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.42%)</title><rect x="1072.0" y="387.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.0" y="398.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.42%)</title><rect x="1072.0" y="371.0" width="4.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1075.0" y="382.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.42%)</title><rect x="1072.0" y="355.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1075.0" y="366.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="1072.0" y="339.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1075.0" y="350.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="1072.0" y="323.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.0" y="334.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.42%)</title><rect x="1072.0" y="307.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1075.0" y="318.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Listener$Compound.onIgnored (1 samples, 0.42%)</title><rect x="1076.9" y="1027.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.9" y="1038.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (18 samples, 7.50%)</title><rect x="1081.8" y="1107.0" width="88.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.8" y="1118.0">net/bytebu..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1081.8" y="1091.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.8" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1081.8" y="1075.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.8" y="1086.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1081.8" y="1059.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.8" y="1070.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1081.8" y="1043.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.8" y="1054.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1081.8" y="1027.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.8" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1081.8" y="1011.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.8" y="1022.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1081.8" y="995.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="1081.8" y="979.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1084.8" y="990.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.close (1 samples, 0.42%)</title><rect x="1081.8" y="963.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.clean (1 samples, 0.42%)</title><rect x="1081.8" y="947.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.performCleanup (1 samples, 0.42%)</title><rect x="1081.8" y="931.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.8" y="942.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$InflaterCleanupAction.run (1 samples, 0.42%)</title><rect x="1081.8" y="915.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.8" y="926.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.releaseInflater (1 samples, 0.42%)</title><rect x="1081.8" y="899.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.83%)</title><rect x="1086.8" y="1091.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.8" y="1102.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.&lt;init&gt; (2 samples, 0.83%)</title><rect x="1086.8" y="1075.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.8" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1086.8" y="1059.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.8" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1086.8" y="1043.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.8" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="1086.8" y="1027.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.8" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.42%)</title><rect x="1086.8" y="1011.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1089.8" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="1086.8" y="995.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.8" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="1086.8" y="979.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.8" y="990.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.42%)</title><rect x="1086.8" y="963.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1089.8" y="974.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.42%)</title><rect x="1086.8" y="947.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1089.8" y="958.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.42%)</title><rect x="1086.8" y="931.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1089.8" y="942.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.42%)</title><rect x="1086.8" y="915.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1089.8" y="926.0"></text>
</g>
<g>
<title>signature_to_fieldtype (1 samples, 0.42%)</title><rect x="1086.8" y="899.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1089.8" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="1091.7" y="1059.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.7" y="1070.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.forJavaHierarchy (1 samples, 0.42%)</title><rect x="1091.7" y="1043.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.7" y="1054.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.of (1 samples, 0.42%)</title><rect x="1091.7" y="1027.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.7" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1091.7" y="1011.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1094.7" y="1022.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1091.7" y="995.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1094.7" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="1091.7" y="979.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1094.7" y="990.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.42%)</title><rect x="1091.7" y="963.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1094.7" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="1091.7" y="947.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1094.7" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="1091.7" y="931.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.7" y="942.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.42%)</title><rect x="1091.7" y="915.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1094.7" y="926.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.42%)</title><rect x="1091.7" y="899.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1094.7" y="910.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.42%)</title><rect x="1091.7" y="883.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1094.7" y="894.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$Default.&lt;init&gt; (15 samples, 6.25%)</title><rect x="1096.6" y="1091.0" width="73.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.6" y="1102.0">net/byte..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.42%)</title><rect x="1096.6" y="1075.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1099.6" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="1096.6" y="1059.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1099.6" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="1096.6" y="1043.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.6" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.42%)</title><rect x="1096.6" y="1027.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1099.6" y="1038.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 0.42%)</title><rect x="1096.6" y="1011.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1099.6" y="1022.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="1096.6" y="995.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1099.6" y="1006.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.42%)</title><rect x="1096.6" y="979.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.6" y="990.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.42%)</title><rect x="1096.6" y="963.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1099.6" y="974.0"></text>
</g>
<g>
<title>net/bytebuddy/agent/builder/AgentBuilder$InitializationStrategy$SelfInjection$Split.&lt;init&gt; (14 samples, 5.83%)</title><rect x="1101.5" y="1075.0" width="68.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.5" y="1086.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor.&lt;clinit&gt; (14 samples, 5.83%)</title><rect x="1101.5" y="1059.0" width="68.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1104.5" y="1070.0">net/byt..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1101.5" y="1043.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.5" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1101.5" y="1027.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.5" y="1038.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1101.5" y="1011.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.5" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1101.5" y="995.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.5" y="1006.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1101.5" y="979.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.5" y="990.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1101.5" y="963.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.5" y="974.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1101.5" y="947.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.5" y="958.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1101.5" y="931.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.5" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1101.5" y="915.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.5" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1101.5" y="899.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1104.5" y="910.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="1101.5" y="883.0" width="4.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1104.5" y="894.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="1101.5" y="867.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1104.5" y="878.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="1101.5" y="851.0" width="4.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1104.5" y="862.0"></text>
</g>
<g>
<title>ObjectLocker::~ObjectLocker() (1 samples, 0.42%)</title><rect x="1101.5" y="835.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1104.5" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 5.42%)</title><rect x="1106.4" y="1043.0" width="63.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1109.4" y="1054.0">java/se..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 5.42%)</title><rect x="1106.4" y="1027.0" width="63.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.4" y="1038.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/NexusAccessor$Dispatcher$CreationAction.run (13 samples, 5.42%)</title><rect x="1106.4" y="1011.0" width="63.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.4" y="1022.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection.&lt;clinit&gt; (13 samples, 5.42%)</title><rect x="1106.4" y="995.0" width="63.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.4" y="1006.0">net/byt..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 5.42%)</title><rect x="1106.4" y="979.0" width="63.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1109.4" y="990.0">java/se..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 5.42%)</title><rect x="1106.4" y="963.0" width="63.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1109.4" y="974.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$CreationAction.run (13 samples, 5.42%)</title><rect x="1106.4" y="947.0" width="63.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.4" y="958.0">net/byt..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/loading/ClassInjector$UsingReflection$Dispatcher$UsingUnsafeInjection.make (13 samples, 5.42%)</title><rect x="1106.4" y="931.0" width="63.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.4" y="942.0">net/byt..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.83%)</title><rect x="1106.4" y="915.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.4" y="926.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (2 samples, 0.83%)</title><rect x="1106.4" y="899.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.4" y="910.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (2 samples, 0.83%)</title><rect x="1106.4" y="883.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.83%)</title><rect x="1106.4" y="867.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.4" y="878.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.83%)</title><rect x="1106.4" y="851.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1109.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (2 samples, 0.83%)</title><rect x="1106.4" y="835.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1109.4" y="846.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (2 samples, 0.83%)</title><rect x="1106.4" y="819.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (2 samples, 0.83%)</title><rect x="1106.4" y="803.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.4" y="814.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (2 samples, 0.83%)</title><rect x="1106.4" y="787.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.4" y="798.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (2 samples, 0.83%)</title><rect x="1106.4" y="771.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.4" y="782.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInputStream.read (2 samples, 0.83%)</title><rect x="1106.4" y="755.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.4" y="766.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.readAt (2 samples, 0.83%)</title><rect x="1106.4" y="739.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.4" y="750.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.read (2 samples, 0.83%)</title><rect x="1106.4" y="723.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.4" y="734.0"></text>
</g>
<g>
<title>java/io/RandomAccessFile.readBytes (2 samples, 0.83%)</title><rect x="1106.4" y="707.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.4" y="718.0"></text>
</g>
<g>
<title>readBytes (2 samples, 0.83%)</title><rect x="1106.4" y="691.0" width="9.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1109.4" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.42%)</title><rect x="1106.4" y="675.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1109.4" y="686.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.42%)</title><rect x="1111.3" y="675.0" width="5.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1114.3" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.42%)</title><rect x="1111.3" y="659.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1114.3" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.42%)</title><rect x="1116.3" y="915.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.3" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.acquireMethodAccessor (1 samples, 0.42%)</title><rect x="1116.3" y="899.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.newMethodAccessor (1 samples, 0.42%)</title><rect x="1116.3" y="883.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isCallerSensitive (1 samples, 0.42%)</title><rect x="1116.3" y="867.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.3" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.isAnnotationPresent (1 samples, 0.42%)</title><rect x="1116.3" y="851.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.3" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/AnnotatedElement.isAnnotationPresent (1 samples, 0.42%)</title><rect x="1116.3" y="835.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.3" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.42%)</title><rect x="1116.3" y="819.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.3" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.42%)</title><rect x="1116.3" y="803.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.3" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.42%)</title><rect x="1116.3" y="787.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.3" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.42%)</title><rect x="1116.3" y="771.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.3" y="782.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.42%)</title><rect x="1116.3" y="755.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.3" y="766.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.42%)</title><rect x="1116.3" y="739.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.3" y="750.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.42%)</title><rect x="1116.3" y="723.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.3" y="734.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.42%)</title><rect x="1116.3" y="707.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.3" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1116.3" y="691.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.3" y="702.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.42%)</title><rect x="1116.3" y="675.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.3" y="686.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.42%)</title><rect x="1116.3" y="659.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.3" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.42%)</title><rect x="1116.3" y="643.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.3" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.42%)</title><rect x="1116.3" y="627.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.sub (1 samples, 0.42%)</title><rect x="1116.3" y="611.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Sub.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1116.3" y="595.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.3" y="606.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.83%)</title><rect x="1121.2" y="915.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.2" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/ByteBuddy.subclass (2 samples, 0.83%)</title><rect x="1121.2" y="899.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.2" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.42%)</title><rect x="1121.2" y="883.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.2" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="1121.2" y="867.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1124.2" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="1121.2" y="851.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1124.2" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="1121.2" y="835.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1124.2" y="846.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.42%)</title><rect x="1121.2" y="819.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1124.2" y="830.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.42%)</title><rect x="1121.2" y="803.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.2" y="814.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.42%)</title><rect x="1121.2" y="787.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1124.2" y="798.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.42%)</title><rect x="1121.2" y="771.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1124.2" y="782.0"></text>
</g>
<g>
<title>JVM_GetCPMethodSignatureUTF (1 samples, 0.42%)</title><rect x="1121.2" y="755.0" width="4.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1124.2" y="766.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.42%)</title><rect x="1121.2" y="739.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.2" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1126.1" y="883.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.1" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.42%)</title><rect x="1126.1" y="867.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.1" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="1126.1" y="851.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1129.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="1126.1" y="835.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1129.1" y="846.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.42%)</title><rect x="1126.1" y="819.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.1" y="830.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.42%)</title><rect x="1126.1" y="803.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1129.1" y="814.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.42%)</title><rect x="1126.1" y="787.0" width="4.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1129.1" y="798.0"></text>
</g>
<g>
<title>JVM_GetCPMethodSignatureUTF (1 samples, 0.42%)</title><rect x="1126.1" y="771.0" width="4.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1129.1" y="782.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.42%)</title><rect x="1126.1" y="755.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.1" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Delegator.make (7 samples, 2.92%)</title><rect x="1131.0" y="915.0" width="34.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.0" y="926.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase.make (7 samples, 2.92%)</title><rect x="1131.0" y="899.0" width="34.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.0" y="910.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 2.92%)</title><rect x="1131.0" y="883.0" width="34.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.0" y="894.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/subclass/SubclassDynamicTypeBuilder.make (7 samples, 2.92%)</title><rect x="1131.0" y="867.0" width="34.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1134.0" y="878.0">ne..</text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Prepared.compile (1 samples, 0.42%)</title><rect x="1131.0" y="851.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.0" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default$Prepared$Entry.resolveBridgeTypes (1 samples, 0.42%)</title><rect x="1131.0" y="835.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.0" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.asTypeToken (1 samples, 0.42%)</title><rect x="1131.0" y="819.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.0" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.42%)</title><rect x="1131.0" y="803.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1134.0" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.42%)</title><rect x="1131.0" y="787.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.0" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.42%)</title><rect x="1131.0" y="771.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.0" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.42%)</title><rect x="1131.0" y="755.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.0" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Default.prepare (4 samples, 1.67%)</title><rect x="1135.9" y="851.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1135.9" y="835.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.9" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.42%)</title><rect x="1135.9" y="819.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.42%)</title><rect x="1135.9" y="803.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.42%)</title><rect x="1135.9" y="787.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.42%)</title><rect x="1135.9" y="771.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.9" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.42%)</title><rect x="1135.9" y="755.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.9" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$Latent.getParameters (1 samples, 0.42%)</title><rect x="1135.9" y="739.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="1135.9" y="723.0" width="4.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1138.9" y="734.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.42%)</title><rect x="1135.9" y="707.0" width="4.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1138.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.42%)</title><rect x="1140.8" y="835.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.42%)</title><rect x="1140.8" y="819.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.42%)</title><rect x="1140.8" y="803.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodRegistry$Handler$ForImplementation.hashCode (1 samples, 0.42%)</title><rect x="1140.8" y="787.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall.hashCode (1 samples, 0.42%)</title><rect x="1140.8" y="771.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/implementation/MethodCall$MethodLocator$ForExplicitMethod.hashCode (1 samples, 0.42%)</title><rect x="1140.8" y="755.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.hashCode (1 samples, 0.42%)</title><rect x="1140.8" y="739.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.42%)</title><rect x="1140.8" y="723.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.8" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.hasNext (1 samples, 0.42%)</title><rect x="1140.8" y="707.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable.size (1 samples, 0.42%)</title><rect x="1140.8" y="691.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.8" y="702.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForLoadedExecutable$Dispatcher$ForJava8CapableVm.getParameterCount (1 samples, 0.42%)</title><rect x="1140.8" y="675.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.8" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.42%)</title><rect x="1140.8" y="659.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.42%)</title><rect x="1140.8" y="643.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 0.42%)</title><rect x="1140.8" y="627.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generateMethod (1 samples, 0.42%)</title><rect x="1140.8" y="611.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generate (1 samples, 0.42%)</title><rect x="1140.8" y="595.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.8" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1140.8" y="579.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.42%)</title><rect x="1140.8" y="563.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.42%)</title><rect x="1140.8" y="547.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.8" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1140.8" y="531.0" width="5.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.8" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1140.8" y="515.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1143.8" y="526.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="499.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.8" y="510.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="483.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.8" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="467.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.8" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="451.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1143.8" y="462.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="435.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.8" y="446.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="419.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.8" y="430.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="403.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.8" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="387.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.8" y="398.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="1140.8" y="371.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.8" y="382.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.42%)</title><rect x="1140.8" y="355.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.8" y="366.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) [clone .part.48] (1 samples, 0.42%)</title><rect x="1140.8" y="339.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1143.8" y="350.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$AbstractBase.compile (1 samples, 0.42%)</title><rect x="1145.8" y="835.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.8" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.compile (1 samples, 0.42%)</title><rect x="1145.8" y="819.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.8" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="1145.8" y="803.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.8" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyzeNullable (1 samples, 0.42%)</title><rect x="1145.8" y="787.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.8" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.analyze (1 samples, 0.42%)</title><rect x="1145.8" y="771.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.8" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default.doAnalyze (1 samples, 0.42%)</title><rect x="1145.8" y="755.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.8" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store.registerTopLevel (1 samples, 0.42%)</title><rect x="1145.8" y="739.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.8" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Harmonized.of (1 samples, 0.42%)</title><rect x="1145.8" y="723.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.8" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod.harmonize (1 samples, 0.42%)</title><rect x="1145.8" y="707.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.8" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Harmonizer$ForJavaMethod.harmonize (1 samples, 0.42%)</title><rect x="1145.8" y="691.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1145.8" y="675.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.8" y="686.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1145.8" y="659.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.8" y="670.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1145.8" y="643.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.8" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1145.8" y="627.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.8" y="638.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1145.8" y="611.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.8" y="622.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1145.8" y="595.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.8" y="606.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1145.8" y="579.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 0.42%)</title><rect x="1145.8" y="563.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.8" y="574.0"></text>
</g>
<g>
<title>java/util/zip/InflaterInputStream.read (1 samples, 0.42%)</title><rect x="1145.8" y="547.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.8" y="558.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflate (1 samples, 0.42%)</title><rect x="1145.8" y="531.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.8" y="542.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.inflateBytesBytes (1 samples, 0.42%)</title><rect x="1145.8" y="515.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1148.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.42%)</title><rect x="1145.8" y="499.0" width="4.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1148.8" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libz.so.1.2.11 (1 samples, 0.42%)</title><rect x="1145.8" y="483.0" width="4.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1148.8" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/MethodGraph$Compiler$Default$Key$Store$Entry$Resolved$Node.getSort (1 samples, 0.42%)</title><rect x="1150.7" y="835.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.7" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1150.7" y="819.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.7" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.42%)</title><rect x="1150.7" y="803.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.7" y="814.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.42%)</title><rect x="1150.7" y="787.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.7" y="798.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.42%)</title><rect x="1150.7" y="771.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.7" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.42%)</title><rect x="1150.7" y="755.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.7" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.42%)</title><rect x="1150.7" y="739.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.7" y="750.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.42%)</title><rect x="1150.7" y="723.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1153.7" y="734.0"></text>
</g>
<g>
<title>Verifier::inference_verify(InstanceKlass*, char*, unsigned long, Thread*) (1 samples, 0.42%)</title><rect x="1150.7" y="707.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.7" y="718.0"></text>
</g>
<g>
<title>VerifyClassForMajorVersion (1 samples, 0.42%)</title><rect x="1150.7" y="691.0" width="4.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1153.7" y="702.0"></text>
</g>
<g>
<title>pop_stack (1 samples, 0.42%)</title><rect x="1150.7" y="675.0" width="4.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1153.7" y="686.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default.make (2 samples, 0.83%)</title><rect x="1155.6" y="851.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1158.6" y="862.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$Default$ForCreation.create (2 samples, 0.83%)</title><rect x="1155.6" y="835.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.6" y="846.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$Default.resolve (1 samples, 0.42%)</title><rect x="1155.6" y="819.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.6" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/ClassWriterStrategy$FrameComputingClassWriter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1155.6" y="803.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.6" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1155.6" y="787.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.6" y="798.0"></text>
</g>
<g>
<title>net/bytebuddy/jar/asm/ClassWriter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1155.6" y="771.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1155.6" y="755.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.6" y="766.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1155.6" y="739.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.6" y="750.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1155.6" y="723.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1155.6" y="707.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.6" y="718.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1155.6" y="691.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.6" y="702.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1155.6" y="675.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.6" y="686.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1155.6" y="659.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.6" y="670.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1155.6" y="643.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1158.6" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1155.6" y="627.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1155.6" y="611.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.6" y="622.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="1155.6" y="595.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1158.6" y="606.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="1155.6" y="579.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1158.6" y="590.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="1155.6" y="563.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1158.6" y="574.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="1155.6" y="547.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.6" y="558.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="1155.6" y="531.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.6" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.42%)</title><rect x="1155.6" y="515.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.6" y="526.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.42%)</title><rect x="1155.6" y="499.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1158.6" y="510.0"></text>
</g>
<g>
<title>ClassLoadingService::notify_class_loaded(InstanceKlass*, bool) (1 samples, 0.42%)</title><rect x="1155.6" y="483.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.6" y="494.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/scaffold/TypeWriter$MethodPool$Record$ForDefinedMethod.apply (1 samples, 0.42%)</title><rect x="1160.5" y="819.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.5" y="830.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/MethodDescription$AbstractBase.getGenericSignature (1 samples, 0.42%)</title><rect x="1160.5" y="803.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.5" y="814.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$AbstractBase.asTypeList (1 samples, 0.42%)</title><rect x="1160.5" y="787.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.5" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.42%)</title><rect x="1160.5" y="771.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.5" y="782.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.42%)</title><rect x="1160.5" y="755.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.5" y="766.0"></text>
</g>
<g>
<title>net/bytebuddy/description/method/ParameterList$ForTokens.get (1 samples, 0.42%)</title><rect x="1160.5" y="739.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.5" y="750.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.subList (1 samples, 0.42%)</title><rect x="1160.5" y="723.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1163.5" y="734.0"></text>
</g>
<g>
<title>net/bytebuddy/matcher/FilterableList$AbstractBase.subList (1 samples, 0.42%)</title><rect x="1160.5" y="707.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1163.5" y="718.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$MethodDefinition$ParameterDefinition$Simple$Annotatable$AbstractBase$Adapter.intercept (1 samples, 0.42%)</title><rect x="1165.4" y="915.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1168.4" y="926.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter.intercept (1 samples, 0.42%)</title><rect x="1165.4" y="899.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.4" y="910.0"></text>
</g>
<g>
<title>net/bytebuddy/dynamic/DynamicType$Builder$AbstractBase$Adapter$MethodDefinitionAdapter.materialize (1 samples, 0.42%)</title><rect x="1165.4" y="883.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.4" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1165.4" y="867.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.4" y="878.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/DatadogClassLoader$DelegateClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1165.4" y="851.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.4" y="862.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.findClass (1 samples, 0.42%)</title><rect x="1165.4" y="835.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1168.4" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1165.4" y="819.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.4" y="830.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1165.4" y="803.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1168.4" y="814.0"></text>
</g>
<g>
<title>java/net/URLClassLoader$1.run (1 samples, 0.42%)</title><rect x="1165.4" y="787.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.4" y="798.0"></text>
</g>
<g>
<title>java/net/URLClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1165.4" y="771.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1168.4" y="782.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1165.4" y="755.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1165.4" y="739.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.42%)</title><rect x="1165.4" y="723.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.4" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.42%)</title><rect x="1165.4" y="707.0" width="4.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1168.4" y="718.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.42%)</title><rect x="1165.4" y="691.0" width="4.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1168.4" y="702.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.42%)</title><rect x="1165.4" y="675.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1168.4" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.42%)</title><rect x="1165.4" y="659.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.4" y="670.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.42%)</title><rect x="1165.4" y="643.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.4" y="654.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.42%)</title><rect x="1165.4" y="627.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.4" y="638.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) [clone .part.140] (1 samples, 0.42%)</title><rect x="1165.4" y="611.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.4" y="622.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/Agent.startProfilingAgent (4 samples, 1.67%)</title><rect x="1170.3" y="1219.0" width="19.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 1.67%)</title><rect x="1170.3" y="1203.0" width="19.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 1.67%)</title><rect x="1170.3" y="1187.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (4 samples, 1.67%)</title><rect x="1170.3" y="1171.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (4 samples, 1.67%)</title><rect x="1170.3" y="1155.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1173.3" y="1166.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="1170.3" y="1139.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.3" y="1150.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.42%)</title><rect x="1170.3" y="1123.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1173.3" y="1134.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1170.3" y="1107.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1173.3" y="1118.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.compile (1 samples, 0.42%)</title><rect x="1170.3" y="1091.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1173.3" y="1102.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.expr (1 samples, 0.42%)</title><rect x="1170.3" y="1075.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.3" y="1086.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.sequence (1 samples, 0.42%)</title><rect x="1170.3" y="1059.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1173.3" y="1070.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.clazz (1 samples, 0.42%)</title><rect x="1170.3" y="1043.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.3" y="1054.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.union (1 samples, 0.42%)</title><rect x="1170.3" y="1027.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1173.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.42%)</title><rect x="1170.3" y="1011.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1173.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.42%)</title><rect x="1170.3" y="995.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.42%)</title><rect x="1170.3" y="979.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.42%)</title><rect x="1170.3" y="963.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1173.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.42%)</title><rect x="1170.3" y="947.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.42%)</title><rect x="1170.3" y="931.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1173.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.42%)</title><rect x="1170.3" y="915.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.3" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.42%)</title><rect x="1170.3" y="899.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.42%)</title><rect x="1170.3" y="883.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1170.3" y="867.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.42%)</title><rect x="1170.3" y="851.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.3" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.42%)</title><rect x="1170.3" y="835.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>com/datadog/profiling/agent/ProfilingAgent.run (3 samples, 1.25%)</title><rect x="1175.3" y="1139.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.3" y="1150.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;clinit&gt; (3 samples, 1.25%)</title><rect x="1175.3" y="1123.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1178.3" y="1134.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (3 samples, 1.25%)</title><rect x="1175.3" y="1107.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.3" y="1118.0"></text>
</g>
<g>
<title>datadog/trace/api/Config.&lt;init&gt; (2 samples, 0.83%)</title><rect x="1175.3" y="1091.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.3" y="1102.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getString (1 samples, 0.42%)</title><rect x="1175.3" y="1075.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.3" y="1086.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider.getString (1 samples, 0.42%)</title><rect x="1175.3" y="1059.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.3" y="1070.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/ConfigProvider$Source.get (1 samples, 0.42%)</title><rect x="1175.3" y="1043.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.3" y="1054.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.get (1 samples, 0.42%)</title><rect x="1175.3" y="1027.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.3" y="1038.0"></text>
</g>
<g>
<title>datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.propertyNameToEnvironmentVariableName (1 samples, 0.42%)</title><rect x="1175.3" y="1011.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.3" y="1022.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.replaceAll (1 samples, 0.42%)</title><rect x="1175.3" y="995.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.3" y="1006.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.42%)</title><rect x="1175.3" y="979.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.3" y="990.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.42%)</title><rect x="1175.3" y="963.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1178.3" y="974.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.42%)</title><rect x="1175.3" y="947.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.3" y="958.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharProperty.match (1 samples, 0.42%)</title><rect x="1175.3" y="931.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.3" y="942.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharPredicate$$Lambda$31/752848266.is (1 samples, 0.42%)</title><rect x="1175.3" y="915.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.3" y="926.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$CharPredicate.lambda$negate$3 (1 samples, 0.42%)</title><rect x="1175.3" y="899.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.3" y="910.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$29/501263526.is (1 samples, 0.42%)</title><rect x="1175.3" y="883.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.3" y="894.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.lambda$union$2 (1 samples, 0.42%)</title><rect x="1175.3" y="867.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1178.3" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.42%)</title><rect x="1175.3" y="851.0" width="4.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1178.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.42%)</title><rect x="1180.2" y="1075.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.2" y="1086.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1180.2" y="1059.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.2" y="1070.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1180.2" y="1043.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1183.2" y="1054.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.42%)</title><rect x="1180.2" y="1027.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.2" y="1038.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.42%)</title><rect x="1180.2" y="1011.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.2" y="1022.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.42%)</title><rect x="1180.2" y="995.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.2" y="1006.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.findAdapter (1 samples, 0.42%)</title><rect x="1180.2" y="979.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.2" y="990.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.forType (1 samples, 0.42%)</title><rect x="1180.2" y="963.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Class.newInstance (1 samples, 0.42%)</title><rect x="1180.2" y="947.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.2" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.42%)</title><rect x="1180.2" y="931.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1183.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.42%)</title><rect x="1180.2" y="915.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.42%)</title><rect x="1180.2" y="899.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.42%)</title><rect x="1180.2" y="883.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.2" y="894.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1180.2" y="867.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.2" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.42%)</title><rect x="1180.2" y="851.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.2" y="862.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.42%)</title><rect x="1180.2" y="835.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.2" y="846.0"></text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 0.42%)</title><rect x="1180.2" y="819.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.2" y="830.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (1 samples, 0.42%)</title><rect x="1180.2" y="803.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="814.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (1 samples, 0.42%)</title><rect x="1180.2" y="787.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="798.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (1 samples, 0.42%)</title><rect x="1180.2" y="771.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.2" y="782.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (1 samples, 0.42%)</title><rect x="1180.2" y="755.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.42%)</title><rect x="1180.2" y="739.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1180.2" y="723.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClass (1 samples, 0.42%)</title><rect x="1180.2" y="707.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.42%)</title><rect x="1180.2" y="691.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1180.2" y="675.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="686.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1180.2" y="659.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.42%)</title><rect x="1180.2" y="643.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.42%)</title><rect x="1180.2" y="627.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1180.2" y="611.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.42%)</title><rect x="1180.2" y="595.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.42%)</title><rect x="1180.2" y="579.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.42%)</title><rect x="1180.2" y="563.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1183.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkName (1 samples, 0.42%)</title><rect x="1180.2" y="547.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1183.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.42%)</title><rect x="1180.2" y="531.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.42%)</title><rect x="1180.2" y="515.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.42%)</title><rect x="1180.2" y="499.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.42%)</title><rect x="1180.2" y="483.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.2" y="494.0"></text>
</g>
<g>
<title>java/util/UUID.randomUUID (1 samples, 0.42%)</title><rect x="1185.1" y="1091.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.1" y="1102.0"></text>
</g>
<g>
<title>java/util/UUID$Holder.&lt;clinit&gt; (1 samples, 0.42%)</title><rect x="1185.1" y="1075.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.1" y="1086.0"></text>
</g>
<g>
<title>java/security/SecureRandom.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1185.1" y="1059.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.1" y="1070.0"></text>
</g>
<g>
<title>java/security/SecureRandom.getDefaultPRNG (1 samples, 0.42%)</title><rect x="1185.1" y="1043.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.1" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractList$Itr.next (1 samples, 0.42%)</title><rect x="1185.1" y="1027.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1188.1" y="1038.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.42%)</title><rect x="1185.1" y="1011.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.1" y="1022.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList$3.get (1 samples, 0.42%)</title><rect x="1185.1" y="995.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.1" y="1006.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderList.getProvider (1 samples, 0.42%)</title><rect x="1185.1" y="979.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.1" y="990.0"></text>
</g>
<g>
<title>sun/security/jca/ProviderConfig.getProvider (1 samples, 0.42%)</title><rect x="1185.1" y="963.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.1" y="974.0"></text>
</g>
<g>
<title>sun/security/provider/Sun.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1185.1" y="947.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.1" y="958.0"></text>
</g>
<g>
<title>sun/security/provider/Sun.putEntries (1 samples, 0.42%)</title><rect x="1185.1" y="931.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.1" y="942.0"></text>
</g>
<g>
<title>java/security/Provider.putService (1 samples, 0.42%)</title><rect x="1185.1" y="915.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.1" y="926.0"></text>
</g>
<g>
<title>java/security/Provider$ServiceKey.&lt;init&gt; (1 samples, 0.42%)</title><rect x="1185.1" y="899.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.42%)</title><rect x="1185.1" y="883.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.1" y="894.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.42%)</title><rect x="1185.1" y="867.0" width="4.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1188.1" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.42%)</title><rect x="1185.1" y="851.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.1" y="862.0"></text>
</g>
</g>
</svg>
